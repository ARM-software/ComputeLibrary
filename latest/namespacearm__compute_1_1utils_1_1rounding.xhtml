<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: arm_compute::utils::rounding Namespace Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('namespacearm__compute_1_1utils_1_1rounding.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">arm_compute::utils::rounding Namespace Reference</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr class="memitem:a5959c934b204c7bcb6766cfaea8ae101"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1utils_1_1rounding.xhtml#a5959c934b204c7bcb6766cfaea8ae101">RoundingMode</a> { <br />
&#160;&#160;<a class="el" href="namespacearm__compute_1_1utils_1_1rounding.xhtml#a5959c934b204c7bcb6766cfaea8ae101a5631ad8e27788edfca7e13535d862c06">TO_ZERO</a>, 
<a class="el" href="namespacearm__compute_1_1utils_1_1rounding.xhtml#a5959c934b204c7bcb6766cfaea8ae101a1ff3077771e77d24ec18776e2ed9edc7">AWAY_FROM_ZERO</a>, 
<a class="el" href="namespacearm__compute_1_1utils_1_1rounding.xhtml#a5959c934b204c7bcb6766cfaea8ae101afe7ff9704b5494f69cd7ccd330bc3969">HALF_TO_ZERO</a>, 
<a class="el" href="namespacearm__compute_1_1utils_1_1rounding.xhtml#a5959c934b204c7bcb6766cfaea8ae101a0af811513148901478bd420235c48c6b">HALF_AWAY_FROM_ZERO</a>, 
<br />
&#160;&#160;<a class="el" href="namespacearm__compute_1_1utils_1_1rounding.xhtml#a5959c934b204c7bcb6766cfaea8ae101ae184ac539927e7effd9eae762e9f1904">HALF_UP</a>, 
<a class="el" href="namespacearm__compute_1_1utils_1_1rounding.xhtml#a5959c934b204c7bcb6766cfaea8ae101a8f7b877b609236c678a778dd131ebcb6">HALF_DOWN</a>, 
<a class="el" href="namespacearm__compute_1_1utils_1_1rounding.xhtml#a5959c934b204c7bcb6766cfaea8ae101a29746b187c41c8e51b96a3104cbda3b6">HALF_EVEN</a>
<br />
 }<tr class="memdesc:a5959c934b204c7bcb6766cfaea8ae101"><td class="mdescLeft">&#160;</td><td class="mdescRight">Rounding mode.  <a href="namespacearm__compute_1_1utils_1_1rounding.xhtml#a5959c934b204c7bcb6766cfaea8ae101">More...</a><br /></td></tr>
</td></tr>
<tr class="separator:a5959c934b204c7bcb6766cfaea8ae101"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a02f57d08fe3b3f4efd408fb4875c0789"><td class="memTemplParams" colspan="2">template&lt;typename T , ARM_COMPUTE_REQUIRES_TA(traits::is_floating_point&lt; T &gt;::value) &gt; </td></tr>
<tr class="memitem:a02f57d08fe3b3f4efd408fb4875c0789"><td class="memTemplItemLeft" align="right" valign="top">T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1utils_1_1rounding.xhtml#a02f57d08fe3b3f4efd408fb4875c0789">round_to_zero</a> (T value)</td></tr>
<tr class="memdesc:a02f57d08fe3b3f4efd408fb4875c0789"><td class="mdescLeft">&#160;</td><td class="mdescRight">Round floating-point value with round to zero.  <a href="#a02f57d08fe3b3f4efd408fb4875c0789">More...</a><br /></td></tr>
<tr class="separator:a02f57d08fe3b3f4efd408fb4875c0789"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4d6feea06f0c1ad779760e477348db6b"><td class="memTemplParams" colspan="2">template&lt;typename T , ARM_COMPUTE_REQUIRES_TA(traits::is_floating_point&lt; T &gt;::value) &gt; </td></tr>
<tr class="memitem:a4d6feea06f0c1ad779760e477348db6b"><td class="memTemplItemLeft" align="right" valign="top">T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1utils_1_1rounding.xhtml#a4d6feea06f0c1ad779760e477348db6b">round_away_from_zero</a> (T value)</td></tr>
<tr class="memdesc:a4d6feea06f0c1ad779760e477348db6b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Round floating-point value with round away from zero.  <a href="#a4d6feea06f0c1ad779760e477348db6b">More...</a><br /></td></tr>
<tr class="separator:a4d6feea06f0c1ad779760e477348db6b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2b38aea22003d34e97d6678f329896d9"><td class="memTemplParams" colspan="2">template&lt;typename T , ARM_COMPUTE_REQUIRES_TA(traits::is_floating_point&lt; T &gt;::value) &gt; </td></tr>
<tr class="memitem:a2b38aea22003d34e97d6678f329896d9"><td class="memTemplItemLeft" align="right" valign="top">T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1utils_1_1rounding.xhtml#a2b38aea22003d34e97d6678f329896d9">round_half_to_zero</a> (T value)</td></tr>
<tr class="memdesc:a2b38aea22003d34e97d6678f329896d9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Round floating-point value with half value rounding towards zero.  <a href="#a2b38aea22003d34e97d6678f329896d9">More...</a><br /></td></tr>
<tr class="separator:a2b38aea22003d34e97d6678f329896d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeecc6e8935077dc93cc5079fe98d3adc"><td class="memTemplParams" colspan="2">template&lt;typename T , ARM_COMPUTE_REQUIRES_TA(traits::is_floating_point&lt; T &gt;::value) &gt; </td></tr>
<tr class="memitem:aeecc6e8935077dc93cc5079fe98d3adc"><td class="memTemplItemLeft" align="right" valign="top">T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1utils_1_1rounding.xhtml#aeecc6e8935077dc93cc5079fe98d3adc">round_half_away_from_zero</a> (T value)</td></tr>
<tr class="memdesc:aeecc6e8935077dc93cc5079fe98d3adc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Round floating-point value with half value rounding away from zero.  <a href="#aeecc6e8935077dc93cc5079fe98d3adc">More...</a><br /></td></tr>
<tr class="separator:aeecc6e8935077dc93cc5079fe98d3adc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7d412c5e09b4d4be67727d85d24d51be"><td class="memTemplParams" colspan="2">template&lt;typename T , ARM_COMPUTE_REQUIRES_TA(traits::is_floating_point&lt; T &gt;::value) &gt; </td></tr>
<tr class="memitem:a7d412c5e09b4d4be67727d85d24d51be"><td class="memTemplItemLeft" align="right" valign="top">T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1utils_1_1rounding.xhtml#a7d412c5e09b4d4be67727d85d24d51be">round_half_up</a> (T value)</td></tr>
<tr class="memdesc:a7d412c5e09b4d4be67727d85d24d51be"><td class="mdescLeft">&#160;</td><td class="mdescRight">Round floating-point value with half value rounding to positive infinity.  <a href="#a7d412c5e09b4d4be67727d85d24d51be">More...</a><br /></td></tr>
<tr class="separator:a7d412c5e09b4d4be67727d85d24d51be"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4a17ff00e5272477260c040731aa1d36"><td class="memTemplParams" colspan="2">template&lt;typename T , ARM_COMPUTE_REQUIRES_TA(traits::is_floating_point&lt; T &gt;::value) &gt; </td></tr>
<tr class="memitem:a4a17ff00e5272477260c040731aa1d36"><td class="memTemplItemLeft" align="right" valign="top">T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1utils_1_1rounding.xhtml#a4a17ff00e5272477260c040731aa1d36">round_half_down</a> (T value)</td></tr>
<tr class="memdesc:a4a17ff00e5272477260c040731aa1d36"><td class="mdescLeft">&#160;</td><td class="mdescRight">Round floating-point value with half value rounding to negative infinity.  <a href="#a4a17ff00e5272477260c040731aa1d36">More...</a><br /></td></tr>
<tr class="separator:a4a17ff00e5272477260c040731aa1d36"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af1c8bd162677ab8a8ae5dfddc55ca9b8"><td class="memTemplParams" colspan="2">template&lt;typename T , ARM_COMPUTE_REQUIRES_TA(traits::is_floating_point&lt; T &gt;::value) &gt; </td></tr>
<tr class="memitem:af1c8bd162677ab8a8ae5dfddc55ca9b8"><td class="memTemplItemLeft" align="right" valign="top">T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1utils_1_1rounding.xhtml#af1c8bd162677ab8a8ae5dfddc55ca9b8">round_half_even</a> (T value, T epsilon=std::numeric_limits&lt; T &gt;::epsilon())</td></tr>
<tr class="memdesc:af1c8bd162677ab8a8ae5dfddc55ca9b8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Round floating-point value with half value rounding to nearest even.  <a href="#af1c8bd162677ab8a8ae5dfddc55ca9b8">More...</a><br /></td></tr>
<tr class="separator:af1c8bd162677ab8a8ae5dfddc55ca9b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a995d306fa75c139b6a878506701e6e07"><td class="memTemplParams" colspan="2">template&lt;typename T , ARM_COMPUTE_REQUIRES_TA(traits::is_floating_point&lt; T &gt;::value) &gt; </td></tr>
<tr class="memitem:a995d306fa75c139b6a878506701e6e07"><td class="memTemplItemLeft" align="right" valign="top">T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1utils_1_1rounding.xhtml#a995d306fa75c139b6a878506701e6e07">round</a> (T value, <a class="el" href="namespacearm__compute_1_1utils_1_1rounding.xhtml#a5959c934b204c7bcb6766cfaea8ae101">RoundingMode</a> rounding_mode)</td></tr>
<tr class="memdesc:a995d306fa75c139b6a878506701e6e07"><td class="mdescLeft">&#160;</td><td class="mdescRight">Round floating-point value given a rounding mode.  <a href="#a995d306fa75c139b6a878506701e6e07">More...</a><br /></td></tr>
<tr class="separator:a995d306fa75c139b6a878506701e6e07"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Enumeration Type Documentation</h2>
<a id="a5959c934b204c7bcb6766cfaea8ae101"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5959c934b204c7bcb6766cfaea8ae101">&#9670;&nbsp;</a></span>RoundingMode</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="namespacearm__compute_1_1utils_1_1rounding.xhtml#a5959c934b204c7bcb6766cfaea8ae101">RoundingMode</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Rounding mode. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a5959c934b204c7bcb6766cfaea8ae101a5631ad8e27788edfca7e13535d862c06"></a>TO_ZERO&#160;</td><td class="fielddoc"><p>Round towards zero. </p>
</td></tr>
<tr><td class="fieldname"><a id="a5959c934b204c7bcb6766cfaea8ae101a1ff3077771e77d24ec18776e2ed9edc7"></a>AWAY_FROM_ZERO&#160;</td><td class="fielddoc"><p>Round away from zero. </p>
</td></tr>
<tr><td class="fieldname"><a id="a5959c934b204c7bcb6766cfaea8ae101afe7ff9704b5494f69cd7ccd330bc3969"></a>HALF_TO_ZERO&#160;</td><td class="fielddoc"><p>Round half towards from zero. </p>
</td></tr>
<tr><td class="fieldname"><a id="a5959c934b204c7bcb6766cfaea8ae101a0af811513148901478bd420235c48c6b"></a>HALF_AWAY_FROM_ZERO&#160;</td><td class="fielddoc"><p>Round half away from zero. </p>
</td></tr>
<tr><td class="fieldname"><a id="a5959c934b204c7bcb6766cfaea8ae101ae184ac539927e7effd9eae762e9f1904"></a>HALF_UP&#160;</td><td class="fielddoc"><p>Round half towards positive infinity. </p>
</td></tr>
<tr><td class="fieldname"><a id="a5959c934b204c7bcb6766cfaea8ae101a8f7b877b609236c678a778dd131ebcb6"></a>HALF_DOWN&#160;</td><td class="fielddoc"><p>Round half towards negative infinity. </p>
</td></tr>
<tr><td class="fieldname"><a id="a5959c934b204c7bcb6766cfaea8ae101a29746b187c41c8e51b96a3104cbda3b6"></a>HALF_EVEN&#160;</td><td class="fielddoc"><p>Round half towards nearest even. </p>
</td></tr>
</table>

<p class="definition">Definition at line <a class="el" href="support_2_rounding_8h_source.xhtml#l00041">41</a> of file <a class="el" href="support_2_rounding_8h_source.xhtml">Rounding.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;{</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#add6426cbf2e057a195846d4ba09a50bea5631ad8e27788edfca7e13535d862c06">TO_ZERO</a>,             <span class="comment">/**&lt; Round towards zero */</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <a class="code" href="namespacearm__compute_1_1utils_1_1rounding.xhtml#a5959c934b204c7bcb6766cfaea8ae101a1ff3077771e77d24ec18776e2ed9edc7">AWAY_FROM_ZERO</a>,      <span class="comment">/**&lt; Round away from zero */</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <a class="code" href="namespacearm__compute_1_1utils_1_1rounding.xhtml#a5959c934b204c7bcb6766cfaea8ae101afe7ff9704b5494f69cd7ccd330bc3969">HALF_TO_ZERO</a>,        <span class="comment">/**&lt; Round half towards from zero */</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <a class="code" href="namespacearm__compute_1_1utils_1_1rounding.xhtml#a5959c934b204c7bcb6766cfaea8ae101a0af811513148901478bd420235c48c6b">HALF_AWAY_FROM_ZERO</a>, <span class="comment">/**&lt; Round half away from zero */</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <a class="code" href="namespacearm__compute_1_1utils_1_1rounding.xhtml#a5959c934b204c7bcb6766cfaea8ae101ae184ac539927e7effd9eae762e9f1904">HALF_UP</a>,             <span class="comment">/**&lt; Round half towards positive infinity */</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <a class="code" href="namespacearm__compute_1_1utils_1_1rounding.xhtml#a5959c934b204c7bcb6766cfaea8ae101a8f7b877b609236c678a778dd131ebcb6">HALF_DOWN</a>,           <span class="comment">/**&lt; Round half towards negative infinity */</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <a class="code" href="namespacearm__compute_1_1utils_1_1rounding.xhtml#a5959c934b204c7bcb6766cfaea8ae101a29746b187c41c8e51b96a3104cbda3b6">HALF_EVEN</a>            <span class="comment">/**&lt; Round half towards nearest even */</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;};</div><div class="ttc" id="namespacearm__compute_1_1utils_1_1rounding_xhtml_a5959c934b204c7bcb6766cfaea8ae101afe7ff9704b5494f69cd7ccd330bc3969"><div class="ttname"><a href="namespacearm__compute_1_1utils_1_1rounding.xhtml#a5959c934b204c7bcb6766cfaea8ae101afe7ff9704b5494f69cd7ccd330bc3969">arm_compute::utils::rounding::RoundingMode::HALF_TO_ZERO</a></div><div class="ttdoc">Round half towards from zero. </div></div>
<div class="ttc" id="namespacearm__compute_1_1utils_1_1rounding_xhtml_a5959c934b204c7bcb6766cfaea8ae101a8f7b877b609236c678a778dd131ebcb6"><div class="ttname"><a href="namespacearm__compute_1_1utils_1_1rounding.xhtml#a5959c934b204c7bcb6766cfaea8ae101a8f7b877b609236c678a778dd131ebcb6">arm_compute::utils::rounding::RoundingMode::HALF_DOWN</a></div><div class="ttdoc">Round half towards negative infinity. </div></div>
<div class="ttc" id="namespacearm__compute_1_1utils_1_1rounding_xhtml_a5959c934b204c7bcb6766cfaea8ae101a1ff3077771e77d24ec18776e2ed9edc7"><div class="ttname"><a href="namespacearm__compute_1_1utils_1_1rounding.xhtml#a5959c934b204c7bcb6766cfaea8ae101a1ff3077771e77d24ec18776e2ed9edc7">arm_compute::utils::rounding::RoundingMode::AWAY_FROM_ZERO</a></div><div class="ttdoc">Round away from zero. </div></div>
<div class="ttc" id="namespacearm__compute_1_1utils_1_1rounding_xhtml_a5959c934b204c7bcb6766cfaea8ae101ae184ac539927e7effd9eae762e9f1904"><div class="ttname"><a href="namespacearm__compute_1_1utils_1_1rounding.xhtml#a5959c934b204c7bcb6766cfaea8ae101ae184ac539927e7effd9eae762e9f1904">arm_compute::utils::rounding::RoundingMode::HALF_UP</a></div><div class="ttdoc">Round half towards positive infinity. </div></div>
<div class="ttc" id="namespacearm__compute_1_1utils_1_1rounding_xhtml_a5959c934b204c7bcb6766cfaea8ae101a29746b187c41c8e51b96a3104cbda3b6"><div class="ttname"><a href="namespacearm__compute_1_1utils_1_1rounding.xhtml#a5959c934b204c7bcb6766cfaea8ae101a29746b187c41c8e51b96a3104cbda3b6">arm_compute::utils::rounding::RoundingMode::HALF_EVEN</a></div><div class="ttdoc">Round half towards nearest even. </div></div>
<div class="ttc" id="namespacearm__compute_1_1utils_1_1rounding_xhtml_a5959c934b204c7bcb6766cfaea8ae101a0af811513148901478bd420235c48c6b"><div class="ttname"><a href="namespacearm__compute_1_1utils_1_1rounding.xhtml#a5959c934b204c7bcb6766cfaea8ae101a0af811513148901478bd420235c48c6b">arm_compute::utils::rounding::RoundingMode::HALF_AWAY_FROM_ZERO</a></div><div class="ttdoc">Round half away from zero. </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_add6426cbf2e057a195846d4ba09a50bea5631ad8e27788edfca7e13535d862c06"><div class="ttname"><a href="namespacearm__compute.xhtml#add6426cbf2e057a195846d4ba09a50bea5631ad8e27788edfca7e13535d862c06">arm_compute::RoundingPolicy::TO_ZERO</a></div><div class="ttdoc">Truncates the least significant values that are lost in operations. </div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="a995d306fa75c139b6a878506701e6e07"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a995d306fa75c139b6a878506701e6e07">&#9670;&nbsp;</a></span>round()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">T arm_compute::utils::rounding::round </td>
          <td>(</td>
          <td class="paramtype">T&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1utils_1_1rounding.xhtml#a5959c934b204c7bcb6766cfaea8ae101">RoundingMode</a>&#160;</td>
          <td class="paramname"><em>rounding_mode</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Round floating-point value given a rounding mode. </p>
<dl class="tparams"><dt>Template Parameters</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">T</td><td>Parameter type. Should be of floating point type.</td></tr>
  </table>
  </dd>
</dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">value</td><td>floating-point value to be rounded. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rounding_mode</td><td>Rounding mode to use.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Floating-point value of rounded <code>value</code>. </dd></dl>

<p class="definition">Definition at line <a class="el" href="support_2_rounding_8h_source.xhtml#l00180">180</a> of file <a class="el" href="support_2_rounding_8h_source.xhtml">Rounding.h</a>.</p>

<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00352">ARM_COMPUTE_ERROR</a>, <a class="el" href="namespacearm__compute_1_1utils_1_1rounding.xhtml#a5959c934b204c7bcb6766cfaea8ae101a1ff3077771e77d24ec18776e2ed9edc7">AWAY_FROM_ZERO</a>, <a class="el" href="namespacearm__compute_1_1utils_1_1rounding.xhtml#a5959c934b204c7bcb6766cfaea8ae101a0af811513148901478bd420235c48c6b">HALF_AWAY_FROM_ZERO</a>, <a class="el" href="namespacearm__compute_1_1utils_1_1rounding.xhtml#a5959c934b204c7bcb6766cfaea8ae101a8f7b877b609236c678a778dd131ebcb6">HALF_DOWN</a>, <a class="el" href="namespacearm__compute_1_1utils_1_1rounding.xhtml#a5959c934b204c7bcb6766cfaea8ae101a29746b187c41c8e51b96a3104cbda3b6">HALF_EVEN</a>, <a class="el" href="namespacearm__compute_1_1utils_1_1rounding.xhtml#a5959c934b204c7bcb6766cfaea8ae101afe7ff9704b5494f69cd7ccd330bc3969">HALF_TO_ZERO</a>, <a class="el" href="namespacearm__compute_1_1utils_1_1rounding.xhtml#a5959c934b204c7bcb6766cfaea8ae101ae184ac539927e7effd9eae762e9f1904">HALF_UP</a>, <a class="el" href="support_2_rounding_8h_source.xhtml#l00076">round_away_from_zero()</a>, <a class="el" href="support_2_rounding_8h_source.xhtml#l00106">round_half_away_from_zero()</a>, <a class="el" href="support_2_rounding_8h_source.xhtml#l00135">round_half_down()</a>, <a class="el" href="support_2_rounding_8h_source.xhtml#l00150">round_half_even()</a>, <a class="el" href="support_2_rounding_8h_source.xhtml#l00091">round_half_to_zero()</a>, <a class="el" href="support_2_rounding_8h_source.xhtml#l00121">round_half_up()</a>, <a class="el" href="support_2_rounding_8h_source.xhtml#l00061">round_to_zero()</a>, and <a class="el" href="namespacearm__compute_1_1utils_1_1rounding.xhtml#a5959c934b204c7bcb6766cfaea8ae101a5631ad8e27788edfca7e13535d862c06">TO_ZERO</a>.</p>
<div class="fragment"><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;{</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    <span class="keywordflow">switch</span>(rounding_mode)</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    {</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;        <span class="keywordflow">case</span> RoundingMode::TO_ZERO:</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1utils_1_1rounding.xhtml#a02f57d08fe3b3f4efd408fb4875c0789">round_to_zero</a>(value);</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;        <span class="keywordflow">case</span> RoundingMode::AWAY_FROM_ZERO:</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1utils_1_1rounding.xhtml#a4d6feea06f0c1ad779760e477348db6b">round_away_from_zero</a>(value);</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;        <span class="keywordflow">case</span> RoundingMode::HALF_TO_ZERO:</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1utils_1_1rounding.xhtml#a2b38aea22003d34e97d6678f329896d9">round_half_to_zero</a>(value);</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;        <span class="keywordflow">case</span> RoundingMode::HALF_AWAY_FROM_ZERO:</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1utils_1_1rounding.xhtml#aeecc6e8935077dc93cc5079fe98d3adc">round_half_away_from_zero</a>(value);</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;        <span class="keywordflow">case</span> RoundingMode::HALF_UP:</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1utils_1_1rounding.xhtml#a7d412c5e09b4d4be67727d85d24d51be">round_half_up</a>(value);</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;        <span class="keywordflow">case</span> RoundingMode::HALF_DOWN:</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1utils_1_1rounding.xhtml#a4a17ff00e5272477260c040731aa1d36">round_half_down</a>(value);</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;        <span class="keywordflow">case</span> RoundingMode::HALF_EVEN:</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1utils_1_1rounding.xhtml#af1c8bd162677ab8a8ae5dfddc55ca9b8">round_half_even</a>(value);</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;        <span class="keywordflow">default</span>:</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;            <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;Unsupported rounding mode!&quot;</span>);</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    }</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;}</div><div class="ttc" id="namespacearm__compute_1_1utils_1_1rounding_xhtml_a4a17ff00e5272477260c040731aa1d36"><div class="ttname"><a href="namespacearm__compute_1_1utils_1_1rounding.xhtml#a4a17ff00e5272477260c040731aa1d36">arm_compute::utils::rounding::round_half_down</a></div><div class="ttdeci">T round_half_down(T value)</div><div class="ttdoc">Round floating-point value with half value rounding to negative infinity. </div><div class="ttdef"><b>Definition:</b> <a href="support_2_rounding_8h_source.xhtml#l00135">Rounding.h:135</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a7cf8d8b669b8f7b05680230be30d60f4"><div class="ttname"><a href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR(msg)</div><div class="ttdoc">Print the given message then throw an std::runtime_error. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00352">Error.h:352</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1utils_1_1rounding_xhtml_a7d412c5e09b4d4be67727d85d24d51be"><div class="ttname"><a href="namespacearm__compute_1_1utils_1_1rounding.xhtml#a7d412c5e09b4d4be67727d85d24d51be">arm_compute::utils::rounding::round_half_up</a></div><div class="ttdeci">T round_half_up(T value)</div><div class="ttdoc">Round floating-point value with half value rounding to positive infinity. </div><div class="ttdef"><b>Definition:</b> <a href="support_2_rounding_8h_source.xhtml#l00121">Rounding.h:121</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1utils_1_1rounding_xhtml_a4d6feea06f0c1ad779760e477348db6b"><div class="ttname"><a href="namespacearm__compute_1_1utils_1_1rounding.xhtml#a4d6feea06f0c1ad779760e477348db6b">arm_compute::utils::rounding::round_away_from_zero</a></div><div class="ttdeci">T round_away_from_zero(T value)</div><div class="ttdoc">Round floating-point value with round away from zero. </div><div class="ttdef"><b>Definition:</b> <a href="support_2_rounding_8h_source.xhtml#l00076">Rounding.h:76</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1utils_1_1rounding_xhtml_aeecc6e8935077dc93cc5079fe98d3adc"><div class="ttname"><a href="namespacearm__compute_1_1utils_1_1rounding.xhtml#aeecc6e8935077dc93cc5079fe98d3adc">arm_compute::utils::rounding::round_half_away_from_zero</a></div><div class="ttdeci">T round_half_away_from_zero(T value)</div><div class="ttdoc">Round floating-point value with half value rounding away from zero. </div><div class="ttdef"><b>Definition:</b> <a href="support_2_rounding_8h_source.xhtml#l00106">Rounding.h:106</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1utils_1_1rounding_xhtml_af1c8bd162677ab8a8ae5dfddc55ca9b8"><div class="ttname"><a href="namespacearm__compute_1_1utils_1_1rounding.xhtml#af1c8bd162677ab8a8ae5dfddc55ca9b8">arm_compute::utils::rounding::round_half_even</a></div><div class="ttdeci">T round_half_even(T value, T epsilon=std::numeric_limits&lt; T &gt;::epsilon())</div><div class="ttdoc">Round floating-point value with half value rounding to nearest even. </div><div class="ttdef"><b>Definition:</b> <a href="support_2_rounding_8h_source.xhtml#l00150">Rounding.h:150</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1utils_1_1rounding_xhtml_a2b38aea22003d34e97d6678f329896d9"><div class="ttname"><a href="namespacearm__compute_1_1utils_1_1rounding.xhtml#a2b38aea22003d34e97d6678f329896d9">arm_compute::utils::rounding::round_half_to_zero</a></div><div class="ttdeci">T round_half_to_zero(T value)</div><div class="ttdoc">Round floating-point value with half value rounding towards zero. </div><div class="ttdef"><b>Definition:</b> <a href="support_2_rounding_8h_source.xhtml#l00091">Rounding.h:91</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1utils_1_1rounding_xhtml_a02f57d08fe3b3f4efd408fb4875c0789"><div class="ttname"><a href="namespacearm__compute_1_1utils_1_1rounding.xhtml#a02f57d08fe3b3f4efd408fb4875c0789">arm_compute::utils::rounding::round_to_zero</a></div><div class="ttdeci">T round_to_zero(T value)</div><div class="ttdoc">Round floating-point value with round to zero. </div><div class="ttdef"><b>Definition:</b> <a href="support_2_rounding_8h_source.xhtml#l00061">Rounding.h:61</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a4d6feea06f0c1ad779760e477348db6b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4d6feea06f0c1ad779760e477348db6b">&#9670;&nbsp;</a></span>round_away_from_zero()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">T arm_compute::utils::rounding::round_away_from_zero </td>
          <td>(</td>
          <td class="paramtype">T&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Round floating-point value with round away from zero. </p>
<dl class="tparams"><dt>Template Parameters</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">T</td><td>Parameter type. Should be of floating point type.</td></tr>
  </table>
  </dd>
</dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">value</td><td>floating-point value to be rounded.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Floating-point value of rounded <code>value</code>. </dd></dl>

<p class="definition">Definition at line <a class="el" href="support_2_rounding_8h_source.xhtml#l00076">76</a> of file <a class="el" href="support_2_rounding_8h_source.xhtml">Rounding.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="support_2_rounding_8h_source.xhtml#l00180">round()</a>.</p>
<div class="fragment"><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;{</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    T res = std::ceil(std::fabs(value));</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <span class="keywordflow">return</span> (value &lt; 0.f) ? -res : res;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="aeecc6e8935077dc93cc5079fe98d3adc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeecc6e8935077dc93cc5079fe98d3adc">&#9670;&nbsp;</a></span>round_half_away_from_zero()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">T arm_compute::utils::rounding::round_half_away_from_zero </td>
          <td>(</td>
          <td class="paramtype">T&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Round floating-point value with half value rounding away from zero. </p>
<dl class="tparams"><dt>Template Parameters</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">T</td><td>Parameter type. Should be of floating point type.</td></tr>
  </table>
  </dd>
</dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">value</td><td>floating-point value to be rounded.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Floating-point value of rounded <code>value</code>. </dd></dl>

<p class="definition">Definition at line <a class="el" href="support_2_rounding_8h_source.xhtml#l00106">106</a> of file <a class="el" href="support_2_rounding_8h_source.xhtml">Rounding.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cpu_scale_kernel_8cpp_source.xhtml#l00185">CpuScaleKernel::configure()</a>, <a class="el" href="reference_2_depth_convert_layer_8cpp_source.xhtml#l00042">arm_compute::test::validation::reference::depth_convert()</a>, <a class="el" href="cpu_2kernels_2scale_2neon_2list_8h_source.xhtml#l00051">arm_compute::cpu::nearest_neon_scale()</a>, <a class="el" href="support_2_rounding_8h_source.xhtml#l00180">round()</a>, <a class="el" href="_saturate_cast_8h_source.xhtml#l00072">arm_compute::utils::cast::saturate_cast()</a>, and <a class="el" href="validation_2reference_2_scale_8cpp_source.xhtml#l00040">arm_compute::test::validation::reference::scale_core()</a>.</p>
<div class="fragment"><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;{</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    T res = T(std::floor(std::fabs(value) + 0.5f));</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <span class="keywordflow">return</span> (value &lt; 0.f) ? -res : res;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a4a17ff00e5272477260c040731aa1d36"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4a17ff00e5272477260c040731aa1d36">&#9670;&nbsp;</a></span>round_half_down()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">T arm_compute::utils::rounding::round_half_down </td>
          <td>(</td>
          <td class="paramtype">T&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Round floating-point value with half value rounding to negative infinity. </p>
<dl class="tparams"><dt>Template Parameters</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">T</td><td>Parameter type. Should be of floating point type.</td></tr>
  </table>
  </dd>
</dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">value</td><td>floating-point value to be rounded.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Floating-point value of rounded <code>value</code>. </dd></dl>

<p class="definition">Definition at line <a class="el" href="support_2_rounding_8h_source.xhtml#l00135">135</a> of file <a class="el" href="support_2_rounding_8h_source.xhtml">Rounding.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="support_2_rounding_8h_source.xhtml#l00180">round()</a>.</p>
<div class="fragment"><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;{</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    <span class="keywordflow">return</span> std::ceil(value - 0.5f);</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="af1c8bd162677ab8a8ae5dfddc55ca9b8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af1c8bd162677ab8a8ae5dfddc55ca9b8">&#9670;&nbsp;</a></span>round_half_even()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">T arm_compute::utils::rounding::round_half_even </td>
          <td>(</td>
          <td class="paramtype">T&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">T&#160;</td>
          <td class="paramname"><em>epsilon</em> = <code>std::numeric_limits&lt;T&gt;::epsilon()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Round floating-point value with half value rounding to nearest even. </p>
<dl class="tparams"><dt>Template Parameters</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">T</td><td>Parameter type. Should be of floating point type.</td></tr>
  </table>
  </dd>
</dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">value</td><td>floating-point value to be rounded. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">epsilon</td><td>precision.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Floating-point value of rounded <code>value</code>. </dd></dl>

<p class="definition">Definition at line <a class="el" href="support_2_rounding_8h_source.xhtml#l00150">150</a> of file <a class="el" href="support_2_rounding_8h_source.xhtml">Rounding.h</a>.</p>

<p class="reference">References <a class="el" href="_toolchain_support_8h_source.xhtml#l00231">arm_compute::support::cpp11::copysign()</a>, <a class="el" href="_asymm_helpers_8cpp_source.xhtml#l00038">arm_compute::quantization::epsilon</a>, and <a class="el" href="_toolchain_support_8h_source.xhtml#l00184">arm_compute::support::cpp11::round()</a>.</p>

<p class="reference">Referenced by <a class="el" href="support_2_rounding_8h_source.xhtml#l00180">round()</a>.</p>
<div class="fragment"><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;{</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    T positive_value = std::abs(value);</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    T ipart          = 0;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    std::modf(positive_value, &amp;ipart);</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <span class="comment">// If &#39;value&#39; is exactly halfway between two integers</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    <span class="keywordflow">if</span>(std::abs(positive_value - (ipart + 0.5f)) &lt; <a class="code" href="namespacearm__compute_1_1quantization.xhtml#a552dc3787d7ea1675f3e4e8993501d58">epsilon</a>)</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    {</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        <span class="comment">// If &#39;ipart&#39; is even then return &#39;ipart&#39;</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        <span class="keywordflow">if</span>(std::fmod(ipart, 2.f) &lt; <a class="code" href="namespacearm__compute_1_1quantization.xhtml#a552dc3787d7ea1675f3e4e8993501d58">epsilon</a>)</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        {</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#a28096f8372c0ad762864c790917375e2">support::cpp11::copysign</a>(ipart, value);</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;        }</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        <span class="comment">// Else return the nearest even integer</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#a28096f8372c0ad762864c790917375e2">support::cpp11::copysign</a>(std::ceil(ipart + 0.5f), value);</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    }</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    <span class="comment">// Otherwise use the usual round to closest</span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#a28096f8372c0ad762864c790917375e2">support::cpp11::copysign</a>(<a class="code" href="namespacearm__compute_1_1utils_1_1rounding.xhtml#a995d306fa75c139b6a878506701e6e07">support::cpp11::round</a>(positive_value), value);</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;}</div><div class="ttc" id="namespacearm__compute_1_1support_1_1cpp11_xhtml_a28096f8372c0ad762864c790917375e2"><div class="ttname"><a href="namespacearm__compute_1_1support_1_1cpp11.xhtml#a28096f8372c0ad762864c790917375e2">arm_compute::support::cpp11::copysign</a></div><div class="ttdeci">T copysign(T x, T y)</div><div class="ttdoc">Composes a floating point value with the magnitude of x and the sign of y. </div><div class="ttdef"><b>Definition:</b> <a href="_toolchain_support_8h_source.xhtml#l00231">ToolchainSupport.h:231</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1utils_1_1rounding_xhtml_a995d306fa75c139b6a878506701e6e07"><div class="ttname"><a href="namespacearm__compute_1_1utils_1_1rounding.xhtml#a995d306fa75c139b6a878506701e6e07">arm_compute::utils::rounding::round</a></div><div class="ttdeci">T round(T value, RoundingMode rounding_mode)</div><div class="ttdoc">Round floating-point value given a rounding mode. </div><div class="ttdef"><b>Definition:</b> <a href="support_2_rounding_8h_source.xhtml#l00180">Rounding.h:180</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1quantization_xhtml_a552dc3787d7ea1675f3e4e8993501d58"><div class="ttname"><a href="namespacearm__compute_1_1quantization.xhtml#a552dc3787d7ea1675f3e4e8993501d58">arm_compute::quantization::epsilon</a></div><div class="ttdeci">constexpr float epsilon</div><div class="ttdef"><b>Definition:</b> <a href="_asymm_helpers_8cpp_source.xhtml#l00038">AsymmHelpers.cpp:38</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a2b38aea22003d34e97d6678f329896d9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2b38aea22003d34e97d6678f329896d9">&#9670;&nbsp;</a></span>round_half_to_zero()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">T arm_compute::utils::rounding::round_half_to_zero </td>
          <td>(</td>
          <td class="paramtype">T&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Round floating-point value with half value rounding towards zero. </p>
<dl class="tparams"><dt>Template Parameters</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">T</td><td>Parameter type. Should be of floating point type.</td></tr>
  </table>
  </dd>
</dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">value</td><td>floating-point value to be rounded.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Floating-point value of rounded <code>value</code>. </dd></dl>

<p class="definition">Definition at line <a class="el" href="support_2_rounding_8h_source.xhtml#l00091">91</a> of file <a class="el" href="support_2_rounding_8h_source.xhtml">Rounding.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="support_2_rounding_8h_source.xhtml#l00180">round()</a>.</p>
<div class="fragment"><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;{</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    T res = T(std::ceil(std::fabs(value) - 0.5f));</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <span class="keywordflow">return</span> (value &lt; 0.f) ? -res : res;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a7d412c5e09b4d4be67727d85d24d51be"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7d412c5e09b4d4be67727d85d24d51be">&#9670;&nbsp;</a></span>round_half_up()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">T arm_compute::utils::rounding::round_half_up </td>
          <td>(</td>
          <td class="paramtype">T&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Round floating-point value with half value rounding to positive infinity. </p>
<dl class="tparams"><dt>Template Parameters</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">T</td><td>Parameter type. Should be of floating point type.</td></tr>
  </table>
  </dd>
</dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">value</td><td>floating-point value to be rounded.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Floating-point value of rounded <code>value</code>. </dd></dl>

<p class="definition">Definition at line <a class="el" href="support_2_rounding_8h_source.xhtml#l00121">121</a> of file <a class="el" href="support_2_rounding_8h_source.xhtml">Rounding.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="support_2_rounding_8h_source.xhtml#l00180">round()</a>.</p>
<div class="fragment"><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;{</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <span class="keywordflow">return</span> std::floor(value + 0.5f);</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a02f57d08fe3b3f4efd408fb4875c0789"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a02f57d08fe3b3f4efd408fb4875c0789">&#9670;&nbsp;</a></span>round_to_zero()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">T arm_compute::utils::rounding::round_to_zero </td>
          <td>(</td>
          <td class="paramtype">T&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Round floating-point value with round to zero. </p>
<dl class="tparams"><dt>Template Parameters</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">T</td><td>Parameter type. Should be of floating point type.</td></tr>
  </table>
  </dd>
</dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">value</td><td>floating-point value to be rounded.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Floating-point value of rounded <code>value</code>. </dd></dl>

<p class="definition">Definition at line <a class="el" href="support_2_rounding_8h_source.xhtml#l00061">61</a> of file <a class="el" href="support_2_rounding_8h_source.xhtml">Rounding.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="support_2_rounding_8h_source.xhtml#l00180">round()</a>.</p>
<div class="fragment"><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;{</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    T res = std::floor(std::fabs(value));</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="keywordflow">return</span> (value &lt; 0.f) ? -res : res;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1utils.xhtml">utils</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1utils_1_1rounding.xhtml">rounding</a></li>
    <li class="footer">Generated on Thu May 18 2023 14:52:46 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
