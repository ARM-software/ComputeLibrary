<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: CLTuningParams Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarm__compute_1_1_c_l_tuning_params.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">CLTuningParams Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>&lt; OpenCL tuner parameters  
 <a href="classarm__compute_1_1_c_l_tuning_params.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_c_l_tuning_params_8h_source.xhtml">CLTuningParams.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a038ae93c4fcf4cf49ac011394c8b4aa4"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_tuning_params.xhtml#a038ae93c4fcf4cf49ac011394c8b4aa4">CLTuningParams</a> (const <a class="el" href="classarm__compute_1_1_c_l_tuning_params.xhtml">CLTuningParams</a> &amp;tuning_params)</td></tr>
<tr class="separator:a038ae93c4fcf4cf49ac011394c8b4aa4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaaef6cf401958345e698d643cabc8f9d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_tuning_params.xhtml#aaaef6cf401958345e698d643cabc8f9d">CLTuningParams</a> (unsigned int lws_x=0, unsigned int lws_y=0, unsigned int lws_z=0, int wbsm=0)</td></tr>
<tr class="separator:aaaef6cf401958345e698d643cabc8f9d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4be152c6064cbf534155cbfae105e4e6"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_tuning_params.xhtml#a4be152c6064cbf534155cbfae105e4e6">CLTuningParams</a> (cl::NDRange lws, cl_int wbsm=0)</td></tr>
<tr class="separator:a4be152c6064cbf534155cbfae105e4e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f13b4d04ab1a4bfc4b49f4467f6b989"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_tuning_params.xhtml#a2f13b4d04ab1a4bfc4b49f4467f6b989">CLTuningParams</a> (cl_int wbsm)</td></tr>
<tr class="separator:a2f13b4d04ab1a4bfc4b49f4467f6b989"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2bc6bd390277f08a64fdf865dc8e2933"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_c_l_tuning_params.xhtml">CLTuningParams</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_tuning_params.xhtml#a2bc6bd390277f08a64fdf865dc8e2933">operator=</a> (const <a class="el" href="classarm__compute_1_1_c_l_tuning_params.xhtml">CLTuningParams</a> &amp;other)</td></tr>
<tr class="separator:a2bc6bd390277f08a64fdf865dc8e2933"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab2d66c6ccbd49d09857ef55c61aa84ea"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_tuning_params.xhtml#ab2d66c6ccbd49d09857ef55c61aa84ea">set_lws</a> (cl::NDRange lws)</td></tr>
<tr class="separator:ab2d66c6ccbd49d09857ef55c61aa84ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a722b1a9a06026623079b291d4a6c752f"><td class="memItemLeft" align="right" valign="top">cl::NDRange&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_tuning_params.xhtml#a722b1a9a06026623079b291d4a6c752f">get_lws</a> () const</td></tr>
<tr class="separator:a722b1a9a06026623079b291d4a6c752f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a589c67583be1aca669d760445ec131a1"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_tuning_params.xhtml#a589c67583be1aca669d760445ec131a1">set_wbsm</a> (cl_int wbsm)</td></tr>
<tr class="separator:a589c67583be1aca669d760445ec131a1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a911324ec4a6233263cccbea220d2cdb8"><td class="memItemLeft" align="right" valign="top">cl_int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_tuning_params.xhtml#a911324ec4a6233263cccbea220d2cdb8">get_wbsm</a> () const</td></tr>
<tr class="separator:a911324ec4a6233263cccbea220d2cdb8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7083e56d3e75863f33ef692b167b2caf"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_tuning_params.xhtml#a7083e56d3e75863f33ef692b167b2caf">to_string</a> (<a class="el" href="structarm__compute_1_1_c_l_tuning_info.xhtml">CLTuningInfo</a> tuning_info)</td></tr>
<tr class="separator:a7083e56d3e75863f33ef692b167b2caf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab91e266c6153d568c897ca15656913de"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_tuning_params.xhtml#ab91e266c6153d568c897ca15656913de">from_string</a> (<a class="el" href="structarm__compute_1_1_c_l_tuning_info.xhtml">CLTuningInfo</a> tuning_info, std::string tuning_params_string)</td></tr>
<tr class="separator:ab91e266c6153d568c897ca15656913de"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>&lt; OpenCL tuner parameters </p>

<p class="definition">Definition at line <a class="el" href="_c_l_tuning_params_8h_source.xhtml#l00036">36</a> of file <a class="el" href="_c_l_tuning_params_8h_source.xhtml">CLTuningParams.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a038ae93c4fcf4cf49ac011394c8b4aa4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a038ae93c4fcf4cf49ac011394c8b4aa4">&#9670;&nbsp;</a></span>CLTuningParams() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_tuning_params.xhtml">CLTuningParams</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_c_l_tuning_params.xhtml">CLTuningParams</a> &amp;&#160;</td>
          <td class="paramname"><em>tuning_params</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_c_l_tuning_params_8h_source.xhtml#l00039">39</a> of file <a class="el" href="_c_l_tuning_params_8h_source.xhtml">CLTuningParams.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;        : _lws(tuning_params._lws), _wbsm(tuning_params._wbsm)</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    {</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="aaaef6cf401958345e698d643cabc8f9d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaaef6cf401958345e698d643cabc8f9d">&#9670;&nbsp;</a></span>CLTuningParams() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_tuning_params.xhtml">CLTuningParams</a> </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>lws_x</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>lws_y</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>lws_z</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>wbsm</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_c_l_tuning_params_8h_source.xhtml#l00044">44</a> of file <a class="el" href="_c_l_tuning_params_8h_source.xhtml">CLTuningParams.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;        : _lws(lws_x, lws_y, lws_z), _wbsm(wbsm)</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    {</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="a4be152c6064cbf534155cbfae105e4e6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4be152c6064cbf534155cbfae105e4e6">&#9670;&nbsp;</a></span>CLTuningParams() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_tuning_params.xhtml">CLTuningParams</a> </td>
          <td>(</td>
          <td class="paramtype">cl::NDRange&#160;</td>
          <td class="paramname"><em>lws</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">cl_int&#160;</td>
          <td class="paramname"><em>wbsm</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_c_l_tuning_params_8h_source.xhtml#l00048">48</a> of file <a class="el" href="_c_l_tuning_params_8h_source.xhtml">CLTuningParams.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        : _lws(lws), _wbsm(wbsm)</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    {</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="a2f13b4d04ab1a4bfc4b49f4467f6b989"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2f13b4d04ab1a4bfc4b49f4467f6b989">&#9670;&nbsp;</a></span>CLTuningParams() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_tuning_params.xhtml">CLTuningParams</a> </td>
          <td>(</td>
          <td class="paramtype">cl_int&#160;</td>
          <td class="paramname"><em>wbsm</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_c_l_tuning_params_8h_source.xhtml#l00053">53</a> of file <a class="el" href="_c_l_tuning_params_8h_source.xhtml">CLTuningParams.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        : <a class="code" href="classarm__compute_1_1_c_l_tuning_params.xhtml#a038ae93c4fcf4cf49ac011394c8b4aa4">CLTuningParams</a>(cl::NullRange, wbsm)</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    {</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    }</div><div class="ttc" id="classarm__compute_1_1_c_l_tuning_params_xhtml_a038ae93c4fcf4cf49ac011394c8b4aa4"><div class="ttname"><a href="classarm__compute_1_1_c_l_tuning_params.xhtml#a038ae93c4fcf4cf49ac011394c8b4aa4">arm_compute::CLTuningParams::CLTuningParams</a></div><div class="ttdeci">CLTuningParams(const CLTuningParams &amp;tuning_params)</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_tuning_params_8h_source.xhtml#l00039">CLTuningParams.h:39</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="ab91e266c6153d568c897ca15656913de"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab91e266c6153d568c897ca15656913de">&#9670;&nbsp;</a></span>from_string()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool from_string </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1_c_l_tuning_info.xhtml">CLTuningInfo</a>&#160;</td>
          <td class="paramname"><em>tuning_info</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::string&#160;</td>
          <td class="paramname"><em>tuning_params_string</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_c_l_tuning_params_8h_source.xhtml#l00095">95</a> of file <a class="el" href="_c_l_tuning_params_8h_source.xhtml">CLTuningParams.h</a>.</p>

<p class="reference">References <a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">arm_compute::test::validation::ss()</a>, <a class="el" href="_string_support_8h_source.xhtml#l00055">arm_compute::support::cpp11::stoi()</a>, and <a class="el" href="_c_l_tuner_types_8h_source.xhtml#l00046">CLTuningInfo::tune_wbsm</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_tuner_8cpp_source.xhtml#l00290">CLTuner::load_from_file()</a>.</p>
<div class="fragment"><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    {</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        std::replace(tuning_params_string.begin(), tuning_params_string.end(), <span class="charliteral">&#39;;&#39;</span>, <span class="charliteral">&#39; &#39;</span>);</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        std::vector&lt;std::string&gt; array;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        std::stringstream        <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">ss</a>(tuning_params_string);</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        std::string              temp;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        <span class="keywordflow">while</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">ss</a> &gt;&gt; temp)</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        {</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;            array.push_back(temp);</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        }</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        <span class="comment">// Read 3 values for lws</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        <span class="keywordflow">if</span>(array.size() &lt; 3)</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        {</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        }</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> lws_0 = <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#abdba606a789b8d664774f17d18f45cfe">support::cpp11::stoi</a>(array[0]);</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> lws_1 = <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#abdba606a789b8d664774f17d18f45cfe">support::cpp11::stoi</a>(array[1]);</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> lws_2 = <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#abdba606a789b8d664774f17d18f45cfe">support::cpp11::stoi</a>(array[2]);</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        <span class="keywordflow">if</span>(lws_0 == 0 &amp;&amp; lws_1 == 0 &amp;&amp; lws_2 == 0)</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        {</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;            <span class="comment">// If lws values are 0, cl::NullRange has to be used</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;            <span class="comment">// otherwise the lws object will be badly created</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;            _lws = cl::NullRange;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        }</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        <span class="keywordflow">else</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        {</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;            _lws = cl::NDRange(lws_0, lws_1, lws_2);</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        }</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        array.erase(array.begin(), array.begin() + 3);</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;        <span class="keywordflow">if</span>(tuning_info.tune_wbsm)</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        {</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;            <span class="keywordflow">if</span>(array.size() &lt; 1)</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;            {</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;            }</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;            _wbsm = <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#abdba606a789b8d664774f17d18f45cfe">support::cpp11::stoi</a>(array[0]);</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;            array.erase(array.begin());</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        }</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    }</div><div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a02110ece50ffc08b8ae07c7a63eb10df"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">arm_compute::test::validation::ss</a></div><div class="ttdeci">std::stringstream ss(mlgo_str)</div></div>
<div class="ttc" id="namespacearm__compute_1_1support_1_1cpp11_xhtml_abdba606a789b8d664774f17d18f45cfe"><div class="ttname"><a href="namespacearm__compute_1_1support_1_1cpp11.xhtml#abdba606a789b8d664774f17d18f45cfe">arm_compute::support::cpp11::stoi</a></div><div class="ttdeci">int stoi(const std::string &amp;str, std::size_t *pos=0, NumericBase base=NumericBase::BASE_10)</div><div class="ttdoc">Convert string values to integer. </div><div class="ttdef"><b>Definition:</b> <a href="_string_support_8h_source.xhtml#l00055">StringSupport.h:55</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a722b1a9a06026623079b291d4a6c752f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a722b1a9a06026623079b291d4a6c752f">&#9670;&nbsp;</a></span>get_lws()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">cl::NDRange get_lws </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_c_l_tuning_params_8h_source.xhtml#l00069">69</a> of file <a class="el" href="_c_l_tuning_params_8h_source.xhtml">CLTuningParams.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_tuner_8cpp_source.xhtml#l00146">CLTuner::add_tuning_params()</a>, <a class="el" href="core_2_c_l_2_i_c_l_kernel_8h_source.xhtml#l00371">ICLKernel::lws_hint()</a>, and <a class="el" href="_c_l_tuner_8cpp_source.xhtml#l00094">CLTuner::tune_kernel_dynamic()</a>.</p>
<div class="fragment"><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    {</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        <span class="keywordflow">return</span> _lws;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="a911324ec4a6233263cccbea220d2cdb8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a911324ec4a6233263cccbea220d2cdb8">&#9670;&nbsp;</a></span>get_wbsm()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">cl_int get_wbsm </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_c_l_tuning_params_8h_source.xhtml#l00079">79</a> of file <a class="el" href="_c_l_tuning_params_8h_source.xhtml">CLTuningParams.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_tuner_8cpp_source.xhtml#l00146">CLTuner::add_tuning_params()</a>, <a class="el" href="_c_l_tuner_8cpp_source.xhtml#l00094">CLTuner::tune_kernel_dynamic()</a>, and <a class="el" href="core_2_c_l_2_i_c_l_kernel_8h_source.xhtml#l00392">ICLKernel::wbsm_hint()</a>.</p>
<div class="fragment"><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    {</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        <span class="keywordflow">return</span> _wbsm;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="a2bc6bd390277f08a64fdf865dc8e2933"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2bc6bd390277f08a64fdf865dc8e2933">&#9670;&nbsp;</a></span>operator=()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_tuning_params.xhtml">CLTuningParams</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_c_l_tuning_params.xhtml">CLTuningParams</a> &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_c_l_tuning_params_8h_source.xhtml#l00057">57</a> of file <a class="el" href="_c_l_tuning_params_8h_source.xhtml">CLTuningParams.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    {</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        _lws = other._lws;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        _wbsm = other._wbsm;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="ab2d66c6ccbd49d09857ef55c61aa84ea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab2d66c6ccbd49d09857ef55c61aa84ea">&#9670;&nbsp;</a></span>set_lws()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void set_lws </td>
          <td>(</td>
          <td class="paramtype">cl::NDRange&#160;</td>
          <td class="paramname"><em>lws</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_c_l_tuning_params_8h_source.xhtml#l00064">64</a> of file <a class="el" href="_c_l_tuning_params_8h_source.xhtml">CLTuningParams.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_tuner_8cpp_source.xhtml#l00146">CLTuner::add_tuning_params()</a>, and <a class="el" href="core_2_c_l_2_i_c_l_kernel_8h_source.xhtml#l00361">ICLKernel::set_lws_hint()</a>.</p>
<div class="fragment"><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    {</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        _lws = lws;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="a589c67583be1aca669d760445ec131a1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a589c67583be1aca669d760445ec131a1">&#9670;&nbsp;</a></span>set_wbsm()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void set_wbsm </td>
          <td>(</td>
          <td class="paramtype">cl_int&#160;</td>
          <td class="paramname"><em>wbsm</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_c_l_tuning_params_8h_source.xhtml#l00074">74</a> of file <a class="el" href="_c_l_tuning_params_8h_source.xhtml">CLTuningParams.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_tuner_8cpp_source.xhtml#l00146">CLTuner::add_tuning_params()</a>, and <a class="el" href="core_2_c_l_2_i_c_l_kernel_8h_source.xhtml#l00382">ICLKernel::set_wbsm_hint()</a>.</p>
<div class="fragment"><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    {</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        _wbsm = wbsm;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="a7083e56d3e75863f33ef692b167b2caf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7083e56d3e75863f33ef692b167b2caf">&#9670;&nbsp;</a></span>to_string()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string to_string </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1_c_l_tuning_info.xhtml">CLTuningInfo</a>&#160;</td>
          <td class="paramname"><em>tuning_info</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_c_l_tuning_params_8h_source.xhtml#l00084">84</a> of file <a class="el" href="_c_l_tuning_params_8h_source.xhtml">CLTuningParams.h</a>.</p>

<p class="reference">References <a class="el" href="_string_support_8h_source.xhtml#l00168">arm_compute::support::cpp11::to_string()</a>, and <a class="el" href="_c_l_tuner_types_8h_source.xhtml#l00046">CLTuningInfo::tune_wbsm</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_tuner_8cpp_source.xhtml#l00342">CLTuner::save_to_file()</a>.</p>
<div class="fragment"><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    {</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        std::string tuning_params_string = <span class="stringliteral">&quot;&quot;</span>;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        tuning_params_string += <span class="stringliteral">&quot;;&quot;</span> + <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(_lws[0]) + <span class="stringliteral">&quot;;&quot;</span> + <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(_lws[1]) + <span class="stringliteral">&quot;;&quot;</span> + <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(_lws[2]);</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        <span class="keywordflow">if</span>(tuning_info.tune_wbsm)</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        {</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;            tuning_params_string += <span class="stringliteral">&quot;;&quot;</span> + <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(_wbsm);</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        }</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        <span class="keywordflow">return</span> tuning_params_string;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    }</div><div class="ttc" id="namespacearm__compute_1_1support_1_1cpp11_xhtml_acc5dddee1cbe93a4eaf0a9f74ee96bb7"><div class="ttname"><a href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">arm_compute::support::cpp11::to_string</a></div><div class="ttdeci">std::string to_string(T &amp;&amp;value)</div><div class="ttdoc">Convert integer and float values to string. </div><div class="ttdef"><b>Definition:</b> <a href="_string_support_8h_source.xhtml#l00168">StringSupport.h:168</a></div></div>
</div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>arm_compute/runtime/CL/<a class="el" href="_c_l_tuning_params_8h_source.xhtml">CLTuningParams.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1_c_l_tuning_params.xhtml">CLTuningParams</a></li>
    <li class="footer">Generated on Thu May 18 2023 14:52:38 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
