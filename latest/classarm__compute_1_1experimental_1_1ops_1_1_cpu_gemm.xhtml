<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: CpuGemm Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.07</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__compute_1_1experimental_1_1ops_1_1_cpu_gemm.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">CpuGemm Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Wrapper class for <a class="el" href="classarm__compute_1_1experimental_1_1ops_1_1_cpu_gemm.xhtml" title="Wrapper class for CpuGemm.">CpuGemm</a>.  
 <a href="classarm__compute_1_1experimental_1_1ops_1_1_cpu_gemm.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="arm__compute_2runtime_2experimental_2operators_2_cpu_gemm_8h_source.xhtml">CpuGemm.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for CpuGemm:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classarm__compute_1_1experimental_1_1ops_1_1_cpu_gemm__coll__graph.svg" width="102" height="112"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:abe5ef3affa3b4ceec1d68b0becb08c99"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1ops_1_1_cpu_gemm.xhtml#abe5ef3affa3b4ceec1d68b0becb08c99">CpuGemm</a> ()</td></tr>
<tr class="memdesc:abe5ef3affa3b4ceec1d68b0becb08c99"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="classarm__compute_1_1experimental_1_1ops_1_1_cpu_gemm.xhtml#abe5ef3affa3b4ceec1d68b0becb08c99">More...</a><br /></td></tr>
<tr class="separator:abe5ef3affa3b4ceec1d68b0becb08c99"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0332b3729f9fcc058daf3c6fef7b0bff"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1ops_1_1_cpu_gemm.xhtml#a0332b3729f9fcc058daf3c6fef7b0bff">CpuGemm</a> (const <a class="el" href="classarm__compute_1_1experimental_1_1ops_1_1_cpu_gemm.xhtml">CpuGemm</a> &amp;)=delete</td></tr>
<tr class="memdesc:a0332b3729f9fcc058daf3c6fef7b0bff"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied (As this class contains pointers)  <a href="classarm__compute_1_1experimental_1_1ops_1_1_cpu_gemm.xhtml#a0332b3729f9fcc058daf3c6fef7b0bff">More...</a><br /></td></tr>
<tr class="separator:a0332b3729f9fcc058daf3c6fef7b0bff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed9c874aa5c50bcfc8cf33ae1fa843a9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1ops_1_1_cpu_gemm.xhtml#aed9c874aa5c50bcfc8cf33ae1fa843a9">CpuGemm</a> (<a class="el" href="classarm__compute_1_1experimental_1_1ops_1_1_cpu_gemm.xhtml">CpuGemm</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:aed9c874aa5c50bcfc8cf33ae1fa843a9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default move constructor.  <a href="classarm__compute_1_1experimental_1_1ops_1_1_cpu_gemm.xhtml#aed9c874aa5c50bcfc8cf33ae1fa843a9">More...</a><br /></td></tr>
<tr class="separator:aed9c874aa5c50bcfc8cf33ae1fa843a9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7bd88e85d4e8e03ad563414969a24d34"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1ops_1_1_cpu_gemm.xhtml#a7bd88e85d4e8e03ad563414969a24d34">~CpuGemm</a> ()</td></tr>
<tr class="memdesc:a7bd88e85d4e8e03ad563414969a24d34"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default destructor.  <a href="classarm__compute_1_1experimental_1_1ops_1_1_cpu_gemm.xhtml#a7bd88e85d4e8e03ad563414969a24d34">More...</a><br /></td></tr>
<tr class="separator:a7bd88e85d4e8e03ad563414969a24d34"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a73e2f2de41080c3d938e7fb864142fb3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1ops_1_1_cpu_gemm.xhtml#a73e2f2de41080c3d938e7fb864142fb3">configure</a> (const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *a, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *b, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *c, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *d, float alpha, float beta, const <a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml">GEMMInfo</a> &amp;gemm_info=<a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml">GEMMInfo</a>())</td></tr>
<tr class="memdesc:a73e2f2de41080c3d938e7fb864142fb3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Configure operator for a given list of arguments.  <a href="classarm__compute_1_1experimental_1_1ops_1_1_cpu_gemm.xhtml#a73e2f2de41080c3d938e7fb864142fb3">More...</a><br /></td></tr>
<tr class="separator:a73e2f2de41080c3d938e7fb864142fb3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a98d9392a7bdeca6788ac682e0febfd23"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1ops_1_1_cpu_gemm.xhtml#a98d9392a7bdeca6788ac682e0febfd23">run</a> (<a class="el" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> &amp;tensors)</td></tr>
<tr class="memdesc:a98d9392a7bdeca6788ac682e0febfd23"><td class="mdescLeft">&#160;</td><td class="mdescRight">Run the kernels contained in the function.  <a href="classarm__compute_1_1experimental_1_1ops_1_1_cpu_gemm.xhtml#a98d9392a7bdeca6788ac682e0febfd23">More...</a><br /></td></tr>
<tr class="separator:a98d9392a7bdeca6788ac682e0febfd23"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a144b414fea610775152309cc38f6c273"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1ops_1_1_cpu_gemm.xhtml#a144b414fea610775152309cc38f6c273">prepare</a> (<a class="el" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> &amp;constants)</td></tr>
<tr class="memdesc:a144b414fea610775152309cc38f6c273"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prepare the function for executing.  <a href="classarm__compute_1_1experimental_1_1ops_1_1_cpu_gemm.xhtml#a144b414fea610775152309cc38f6c273">More...</a><br /></td></tr>
<tr class="separator:a144b414fea610775152309cc38f6c273"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa5bbefff43ec650f41a70a13e4b88e73"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute_1_1experimental.xhtml#aa93a4d93eb22ef5445cd567ef22ca67c">experimental::MemoryRequirements</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1ops_1_1_cpu_gemm.xhtml#aa5bbefff43ec650f41a70a13e4b88e73">workspace</a> () const</td></tr>
<tr class="memdesc:aa5bbefff43ec650f41a70a13e4b88e73"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the memory requirements required by the workspace.  <a href="classarm__compute_1_1experimental_1_1ops_1_1_cpu_gemm.xhtml#aa5bbefff43ec650f41a70a13e4b88e73">More...</a><br /></td></tr>
<tr class="separator:aa5bbefff43ec650f41a70a13e4b88e73"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a86bd05b470f8c6a5b0a3e5e5c0762d1e"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classarm__compute_1_1_status.xhtml">Status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1ops_1_1_cpu_gemm.xhtml#a86bd05b470f8c6a5b0a3e5e5c0762d1e">validate</a> (const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *a, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *b, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *c, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *d, float alpha, float beta, const <a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml">GEMMInfo</a> &amp;gemm_info=<a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml">GEMMInfo</a>())</td></tr>
<tr class="memdesc:a86bd05b470f8c6a5b0a3e5e5c0762d1e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Static function to check if given info will lead to a valid configuration of <a class="el" href="classarm__compute_1_1experimental_1_1ops_1_1_cpu_gemm.xhtml">CpuGemm</a>.  <a href="classarm__compute_1_1experimental_1_1ops_1_1_cpu_gemm.xhtml#a86bd05b470f8c6a5b0a3e5e5c0762d1e">More...</a><br /></td></tr>
<tr class="separator:a86bd05b470f8c6a5b0a3e5e5c0762d1e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac91f91cff0bd873c550e162792e32ffe"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classarm__compute_1_1_status.xhtml">Status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1ops_1_1_cpu_gemm.xhtml#ac91f91cff0bd873c550e162792e32ffe">has_opt_impl</a> (<a class="el" href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5">arm_compute::WeightFormat</a> &amp;weight_format, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *a, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *b, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *c, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *d, const <a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml">GEMMInfo</a> &amp;gemm_info=<a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml">GEMMInfo</a>())</td></tr>
<tr class="memdesc:ac91f91cff0bd873c550e162792e32ffe"><td class="mdescLeft">&#160;</td><td class="mdescRight">Indicates whether or not there is an optimal assembly implementation that can be used to process the given parameters.  <a href="classarm__compute_1_1experimental_1_1ops_1_1_cpu_gemm.xhtml#ac91f91cff0bd873c550e162792e32ffe">More...</a><br /></td></tr>
<tr class="separator:ac91f91cff0bd873c550e162792e32ffe"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Wrapper class for <a class="el" href="classarm__compute_1_1experimental_1_1ops_1_1_cpu_gemm.xhtml" title="Wrapper class for CpuGemm.">CpuGemm</a>. </p>
<p>For information on the operators, see "src/cpu/operators/CpuGemm.h" </p>

<p class="definition">Definition at line <a class="el" href="arm__compute_2runtime_2experimental_2operators_2_cpu_gemm_8h_source.xhtml#l00048">48</a> of file <a class="el" href="arm__compute_2runtime_2experimental_2operators_2_cpu_gemm_8h_source.xhtml">CpuGemm.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="abe5ef3affa3b4ceec1d68b0becb08c99"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abe5ef3affa3b4ceec1d68b0becb08c99">&#9670;&nbsp;</a></span>CpuGemm() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1experimental_1_1ops_1_1_cpu_gemm.xhtml">CpuGemm</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructor. </p>

<p class="definition">Definition at line <a class="el" href="src_2runtime_2experimental_2operators_2_cpu_gemm_8cpp_source.xhtml#l00042">42</a> of file <a class="el" href="src_2runtime_2experimental_2operators_2_cpu_gemm_8cpp_source.xhtml">CpuGemm.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;                 : _impl(std::make_unique&lt;Impl&gt;())</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;{</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    _impl-&gt;cpu_gemm = std::make_unique&lt;cpu::CpuGemm&gt;();</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a0332b3729f9fcc058daf3c6fef7b0bff"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0332b3729f9fcc058daf3c6fef7b0bff">&#9670;&nbsp;</a></span>CpuGemm() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1experimental_1_1ops_1_1_cpu_gemm.xhtml">CpuGemm</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1experimental_1_1ops_1_1_cpu_gemm.xhtml">CpuGemm</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class from being copied (As this class contains pointers) </p>

</div>
</div>
<a id="aed9c874aa5c50bcfc8cf33ae1fa843a9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aed9c874aa5c50bcfc8cf33ae1fa843a9">&#9670;&nbsp;</a></span>CpuGemm() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1experimental_1_1ops_1_1_cpu_gemm.xhtml">CpuGemm</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1experimental_1_1ops_1_1_cpu_gemm.xhtml">CpuGemm</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default move constructor. </p>

</div>
</div>
<a id="a7bd88e85d4e8e03ad563414969a24d34"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7bd88e85d4e8e03ad563414969a24d34">&#9670;&nbsp;</a></span>~CpuGemm()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classarm__compute_1_1experimental_1_1ops_1_1_cpu_gemm.xhtml">CpuGemm</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default destructor. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a73e2f2de41080c3d938e7fb864142fb3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a73e2f2de41080c3d938e7fb864142fb3">&#9670;&nbsp;</a></span>configure()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void configure </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>c</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>d</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>alpha</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>beta</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml">GEMMInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>gemm_info</em> = <code><a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml">GEMMInfo</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Configure operator for a given list of arguments. </p>
<p>Valid data layouts:</p><ul>
<li>All</li>
</ul>
<p>Valid data type configurations: </p><table class="markdownTable">
<tr class="markdownTableHead">
<th class="markdownTableHeadLeft">a </th><th class="markdownTableHeadLeft">b </th><th class="markdownTableHeadLeft">c </th><th class="markdownTableHeadLeft">d  </th></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyLeft">F32 </td><td class="markdownTableBodyLeft">F32 </td><td class="markdownTableBodyLeft">F32 </td><td class="markdownTableBodyLeft">F32  </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyLeft">F16 </td><td class="markdownTableBodyLeft">F16 </td><td class="markdownTableBodyLeft">F16 </td><td class="markdownTableBodyLeft">F16  </td></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyLeft">BFLOAT16 </td><td class="markdownTableBodyLeft">BFLOAT16 </td><td class="markdownTableBodyLeft">BFLOAT16 </td><td class="markdownTableBodyLeft">FP32  </td></tr>
</table>
<dl class="section note"><dt>Note</dt><dd>GEMM: General Matrix Multiply - [alpha * A * B + beta * C]. </dd>
<dd>
GEMM: The tensors a, b, c, d must have the same data type. You should not mix data types when calling this function.</dd>
<dd>
Batched GEMM only supports broadcasting cases where RHS rank &lt; LHS rank but not the other way around</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">a</td><td>First input tensor info (Matrix A or <a class="el" href="struct_vector.xhtml" title="Structure to hold Vector information.">Vector</a> A). Data type supported: BFLOAT16/F16/F32 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">b</td><td>Second input tensor info (Matrix B). Data type supported: same as <code>a</code> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">c</td><td>Third input tensor info (Matrix C). It can be a nullptr if just the multiplication between <code>a</code> and <code>b</code> is needed. Data type supported: same as <code>a</code> </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">d</td><td>Output tensor info. Data type supported: same as <code>a</code> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">alpha</td><td>Weight of the matrix product </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">beta</td><td>Weight of matrix C </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">gemm_info</td><td>(Optional) Specifies if the matrix A and/or matrix B have been reshaped and if the reshape of matrix B should happen only for the first run </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="src_2runtime_2experimental_2operators_2_cpu_gemm_8cpp_source.xhtml#l00049">49</a> of file <a class="el" href="src_2runtime_2experimental_2operators_2_cpu_gemm_8cpp_source.xhtml">CpuGemm.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;{</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    _impl-&gt;cpu_gemm-&gt;configure(a, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>, c, d, alpha, beta, gemm_info);</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00157">arm_compute::test::validation::b</a>.</p>

</div>
</div>
<a id="ac91f91cff0bd873c550e162792e32ffe"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac91f91cff0bd873c550e162792e32ffe">&#9670;&nbsp;</a></span>has_opt_impl()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_status.xhtml">Status</a> has_opt_impl </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5">arm_compute::WeightFormat</a> &amp;&#160;</td>
          <td class="paramname"><em>weight_format</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>c</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>d</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml">GEMMInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>gemm_info</em> = <code><a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml">GEMMInfo</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Indicates whether or not there is an optimal assembly implementation that can be used to process the given parameters. </p>
<p>This method has the same use of <a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_convolution_layer.xhtml#ad6aa14137d9d91a2416434db337870bb">NEGEMMConvolutionLayer::has_opt_impl</a>, with the only caveat that the value of <a class="el" href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5" title="Memory layouts for the weights tensor.">arm_compute::WeightFormat</a> need to be passed via the parameter gemm_info. </p>

<p class="definition">Definition at line <a class="el" href="src_2runtime_2experimental_2operators_2_cpu_gemm_8cpp_source.xhtml#l00071">71</a> of file <a class="el" href="src_2runtime_2experimental_2operators_2_cpu_gemm_8cpp_source.xhtml">CpuGemm.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;{</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_gemm.xhtml#ac91f91cff0bd873c550e162792e32ffe">cpu::CpuGemm::has_opt_impl</a>(weight_format, a, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>, c, d, gemm_info);</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00157">arm_compute::test::validation::b</a>, and <a class="el" href="src_2cpu_2operators_2_cpu_gemm_8cpp_source.xhtml#l00550">CpuGemm::has_opt_impl()</a>.</p>

</div>
</div>
<a id="a144b414fea610775152309cc38f6c273"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a144b414fea610775152309cc38f6c273">&#9670;&nbsp;</a></span>prepare()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void prepare </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> &amp;&#160;</td>
          <td class="paramname"><em>constants</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prepare the function for executing. </p>
<p>Any one off pre-processing step required by the function is handled here</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">constants</td><td><a class="el" href="struct_vector.xhtml" title="Structure to hold Vector information.">Vector</a> that contains the constants tensors.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd>Prepare stage might not need all the function's buffers' backing memory to be available in order to execute </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1experimental_1_1_i_operator.xhtml#a490892d69716b3d4a4aa83c5dd113f0c">IOperator</a>.</p>

<p class="definition">Definition at line <a class="el" href="src_2runtime_2experimental_2operators_2_cpu_gemm_8cpp_source.xhtml#l00085">85</a> of file <a class="el" href="src_2runtime_2experimental_2operators_2_cpu_gemm_8cpp_source.xhtml">CpuGemm.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;{</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    _impl-&gt;cpu_gemm-&gt;prepare(constants);</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a98d9392a7bdeca6788ac682e0febfd23"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a98d9392a7bdeca6788ac682e0febfd23">&#9670;&nbsp;</a></span>run()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void run </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> &amp;&#160;</td>
          <td class="paramname"><em>tensors</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Run the kernels contained in the function. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">tensors</td><td><a class="el" href="struct_vector.xhtml" title="Structure to hold Vector information.">Vector</a> that contains the tensors to operate on. </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classarm__compute_1_1experimental_1_1_i_operator.xhtml#a8d7312410ad7314fa75c29b1ff0f17f0">IOperator</a>.</p>

<p class="definition">Definition at line <a class="el" href="src_2runtime_2experimental_2operators_2_cpu_gemm_8cpp_source.xhtml#l00081">81</a> of file <a class="el" href="src_2runtime_2experimental_2operators_2_cpu_gemm_8cpp_source.xhtml">CpuGemm.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;{</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    _impl-&gt;cpu_gemm-&gt;run(tensors);</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a86bd05b470f8c6a5b0a3e5e5c0762d1e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a86bd05b470f8c6a5b0a3e5e5c0762d1e">&#9670;&nbsp;</a></span>validate()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_status.xhtml">Status</a> validate </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>c</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>d</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>alpha</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>beta</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml">GEMMInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>gemm_info</em> = <code><a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml">GEMMInfo</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Static function to check if given info will lead to a valid configuration of <a class="el" href="classarm__compute_1_1experimental_1_1ops_1_1_cpu_gemm.xhtml">CpuGemm</a>. </p>
<p>Similar to <a class="el" href="classarm__compute_1_1experimental_1_1ops_1_1_cpu_gemm.xhtml#a73e2f2de41080c3d938e7fb864142fb3">CpuGemm::configure()</a></p>
<dl class="section return"><dt>Returns</dt><dd>a status </dd></dl>

<p class="definition">Definition at line <a class="el" href="src_2runtime_2experimental_2operators_2_cpu_gemm_8cpp_source.xhtml#l00060">60</a> of file <a class="el" href="src_2runtime_2experimental_2operators_2_cpu_gemm_8cpp_source.xhtml">CpuGemm.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;{</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_gemm.xhtml#a86bd05b470f8c6a5b0a3e5e5c0762d1e">cpu::CpuGemm::validate</a>(a, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>, c, d, alpha, beta, gemm_info);</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00157">arm_compute::test::validation::b</a>, and <a class="el" href="src_2cpu_2operators_2_cpu_gemm_8cpp_source.xhtml#l00214">CpuGemm::validate()</a>.</p>

</div>
</div>
<a id="aa5bbefff43ec650f41a70a13e4b88e73"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa5bbefff43ec650f41a70a13e4b88e73">&#9670;&nbsp;</a></span>workspace()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__compute_1_1experimental.xhtml#aa93a4d93eb22ef5445cd567ef22ca67c">experimental::MemoryRequirements</a> workspace </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Return the memory requirements required by the workspace. </p>

<p>Implements <a class="el" href="classarm__compute_1_1experimental_1_1_i_operator.xhtml#a8ef96ccfabfca0faf4c3914c85bc4786">IOperator</a>.</p>

<p class="definition">Definition at line <a class="el" href="src_2runtime_2experimental_2operators_2_cpu_gemm_8cpp_source.xhtml#l00089">89</a> of file <a class="el" href="src_2runtime_2experimental_2operators_2_cpu_gemm_8cpp_source.xhtml">CpuGemm.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;{</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <span class="keywordflow">return</span> _impl-&gt;cpu_gemm-&gt;workspace();</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>arm_compute/runtime/experimental/operators/<a class="el" href="arm__compute_2runtime_2experimental_2operators_2_cpu_gemm_8h_source.xhtml">CpuGemm.h</a></li>
<li>src/runtime/experimental/operators/<a class="el" href="src_2runtime_2experimental_2operators_2_cpu_gemm_8cpp_source.xhtml">CpuGemm.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1_cpu_gemm_xhtml_a86bd05b470f8c6a5b0a3e5e5c0762d1e"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_gemm.xhtml#a86bd05b470f8c6a5b0a3e5e5c0762d1e">arm_compute::cpu::CpuGemm::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *a, const ITensorInfo *b, const ITensorInfo *c, const ITensorInfo *d, float alpha, float beta, const GEMMInfo &amp;gemm_info=GEMMInfo())</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of CpuGemm.</div><div class="ttdef"><b>Definition:</b> <a href="src_2cpu_2operators_2_cpu_gemm_8cpp_source.xhtml#l00214">CpuGemm.cpp:214</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_aa76b4a6e74940dabc5b7fc6b2dab3545"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">arm_compute::test::validation::b</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; b</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00157">DFT.cpp:157</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1_cpu_gemm_xhtml_ac91f91cff0bd873c550e162792e32ffe"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_gemm.xhtml#ac91f91cff0bd873c550e162792e32ffe">arm_compute::cpu::CpuGemm::has_opt_impl</a></div><div class="ttdeci">static Status has_opt_impl(arm_compute::WeightFormat &amp;weight_format, const ITensorInfo *a, const ITensorInfo *b, const ITensorInfo *c, const ITensorInfo *d, const GEMMInfo &amp;gemm_info=GEMMInfo())</div><div class="ttdoc">Indicates whether or not there is an optimal assembly implementation that can be used to process the ...</div><div class="ttdef"><b>Definition:</b> <a href="src_2cpu_2operators_2_cpu_gemm_8cpp_source.xhtml#l00550">CpuGemm.cpp:550</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1experimental.xhtml">experimental</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1experimental_1_1ops.xhtml">ops</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1experimental_1_1ops_1_1_cpu_gemm.xhtml">CpuGemm</a></li>
    <li class="footer">Generated on Fri Jul 26 2024 12:08:34 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
