<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: tests/framework/instruments/WallClockTimer.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.02.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_wall_clock_timer_8cpp_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">WallClockTimer.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_wall_clock_timer_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2017-2021 Arm Limited.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_wall_clock_timer_8h.xhtml">WallClockTimer.h</a>&quot;</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160; </div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;../Framework.h&quot;</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;../Utils.h&quot;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160; </div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;{</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="keyword">namespace </span>test</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;{</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keyword">namespace </span>framework</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;{</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="keyword">template</span> &lt;<span class="keywordtype">bool</span> output_timestamps&gt;</div>
<div class="line"><a name="l00036"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_wall_clock.xhtml#a501ef37fef441a0a6a8ea8b8e30a7181">   36</a></span>&#160;std::string    <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_wall_clock.xhtml#a501ef37fef441a0a6a8ea8b8e30a7181">WallClock&lt;output_timestamps&gt;::id</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    <span class="keywordflow">if</span>(output_timestamps)</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    {</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;        <span class="keywordflow">return</span> <span class="stringliteral">&quot;Wall clock timestamps&quot;</span>;</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    }</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    {</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;        <span class="keywordflow">return</span> <span class="stringliteral">&quot;Wall clock&quot;</span>;</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    }</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;}</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160; </div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="keyword">template</span> &lt;<span class="keywordtype">bool</span> output_timestamps&gt;</div>
<div class="line"><a name="l00049"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_wall_clock.xhtml#a5d5d9ebd12cd3a7d268bc98a3fc7bf97">   49</a></span>&#160;<span class="keywordtype">void</span>           <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_wall_clock.xhtml#a5d5d9ebd12cd3a7d268bc98a3fc7bf97">WallClock&lt;output_timestamps&gt;::start</a>()</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;{</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="preprocessor">#if defined(BARE_METAL)</span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    uint64_t tmp;</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    uint64_t <a class="code" href="namespacecheck__header__guards.xhtml#a7f345697df7eb20c9aba1ab6980cae8f">retval</a>;</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160; </div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    __asm __volatile(</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        <span class="stringliteral">&quot;mrs    %[tmp], pmcr_el0\n&quot;</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        <span class="stringliteral">&quot;orr    %[tmp], %[tmp], #1\n&quot;</span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        <span class="stringliteral">&quot;msr    pmcr_el0, %[tmp]\n&quot;</span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        <span class="stringliteral">&quot;mrs    %[tmp], pmcntenset_el0\n&quot;</span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        <span class="stringliteral">&quot;orr    %[tmp], %[tmp], #1&lt;&lt;31\n&quot;</span></div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        <span class="stringliteral">&quot;msr    pmcntenset_el0, %[tmp]\n&quot;</span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        <span class="stringliteral">&quot;mrs    %[retval], pmccntr_el0\n&quot;</span></div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        : [tmp] <span class="stringliteral">&quot;=r&quot;</span>(tmp), [<a class="code" href="namespacecheck__header__guards.xhtml#a7f345697df7eb20c9aba1ab6980cae8f">retval</a>] <span class="stringliteral">&quot;=r&quot;</span>(<a class="code" href="namespacecheck__header__guards.xhtml#a7f345697df7eb20c9aba1ab6980cae8f">retval</a>));</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160; </div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    _start = <a class="code" href="namespacecheck__header__guards.xhtml#a7f345697df7eb20c9aba1ab6980cae8f">retval</a>;</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="preprocessor">#else  // !defined(BARE_METAL)</span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    _start = std::chrono::system_clock::now();</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="preprocessor">#endif // defined(BARE_METAL)</span></div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;}</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160; </div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="keyword">template</span> &lt;<span class="keywordtype">bool</span> output_timestamps&gt;</div>
<div class="line"><a name="l00072"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_wall_clock.xhtml#ab3536e22848ce87b16a9b96d6d824d45">   72</a></span>&#160;<span class="keywordtype">void</span>           <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_wall_clock.xhtml#ab3536e22848ce87b16a9b96d6d824d45">WallClock&lt;output_timestamps&gt;::stop</a>()</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;{</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="preprocessor">#if defined(BARE_METAL)</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    uint64_t tmp;</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    uint64_t <a class="code" href="namespacecheck__header__guards.xhtml#a7f345697df7eb20c9aba1ab6980cae8f">retval</a>;</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160; </div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    __asm __volatile(</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        <span class="stringliteral">&quot;mrs    %[retval], pmccntr_el0\n&quot;</span></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        <span class="stringliteral">&quot;mov   %[tmp], #0x3f\n&quot;</span></div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        <span class="stringliteral">&quot;orr   %[tmp], %[tmp], #1&lt;&lt;31\n&quot;</span></div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        <span class="stringliteral">&quot;msr    pmcntenclr_el0, %[tmp]\n&quot;</span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        : [tmp] <span class="stringliteral">&quot;=r&quot;</span>(tmp), [<a class="code" href="namespacecheck__header__guards.xhtml#a7f345697df7eb20c9aba1ab6980cae8f">retval</a>] <span class="stringliteral">&quot;=r&quot;</span>(<a class="code" href="namespacecheck__header__guards.xhtml#a7f345697df7eb20c9aba1ab6980cae8f">retval</a>));</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160; </div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    _stop = <a class="code" href="namespacecheck__header__guards.xhtml#a7f345697df7eb20c9aba1ab6980cae8f">retval</a>;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="preprocessor">#else  // !defined(BARE_METAL)</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    _stop = std::chrono::system_clock::now();</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="preprocessor">#endif // defined(BARE_METAL)</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;}</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160; </div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="keyword">template</span> &lt;<span class="keywordtype">bool</span>              output_timestamps&gt;</div>
<div class="line"><a name="l00092"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_wall_clock.xhtml#a73cabccc9d4406bf48f1db033dc35005">   92</a></span>&#160;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml#afc7df496e6026b91c3f48da6821c86a9">Instrument::MeasurementsMap</a> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_wall_clock.xhtml#a73cabccc9d4406bf48f1db033dc35005">WallClock&lt;output_timestamps&gt;::measurements</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml#afc7df496e6026b91c3f48da6821c86a9">MeasurementsMap</a> measurements;</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="keywordflow">if</span>(output_timestamps)</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    {</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="preprocessor">#if defined(BARE_METAL)</span></div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        measurements.emplace(<span class="stringliteral">&quot;[start]Wall clock time&quot;</span>, <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml">Measurement</a>(_start / <span class="keyword">static_cast&lt;</span>uint64_t<span class="keyword">&gt;</span>(_scale_factor), _unit));</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        measurements.emplace(<span class="stringliteral">&quot;[end]Wall clock time&quot;</span>, <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml">Measurement</a>(_stop / <span class="keyword">static_cast&lt;</span>uint64_t<span class="keyword">&gt;</span>(_scale_factor), _unit));</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="preprocessor">#else  // !defined(BARE_METAL)</span></div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        measurements.emplace(<span class="stringliteral">&quot;[start]Wall clock time&quot;</span>, <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml">Measurement</a>(_start.time_since_epoch().count() / <span class="keyword">static_cast&lt;</span>uint64_t<span class="keyword">&gt;</span>(1000 * _scale_factor), _unit));</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        measurements.emplace(<span class="stringliteral">&quot;[end]Wall clock time&quot;</span>, <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml">Measurement</a>(_stop.time_since_epoch().count() / <span class="keyword">static_cast&lt;</span>uint64_t<span class="keyword">&gt;</span>(1000 * _scale_factor), _unit));</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="preprocessor">#endif // defined(BARE_METAL)</span></div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    }</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    {</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="preprocessor">#if defined(BARE_METAL)</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">double</span> delta = _stop - _start;</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        measurements.emplace(<span class="stringliteral">&quot;Wall clock time&quot;</span>, <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml">Measurement</a>(delta / <span class="keyword">static_cast&lt;</span><span class="keywordtype">double</span><span class="keyword">&gt;</span>(1000 * _scale_factor), _unit));</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="preprocessor">#else  // !defined(BARE_METAL)</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> delta = std::chrono::duration_cast&lt;std::chrono::microseconds&gt;(_stop - _start);</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        measurements.emplace(<span class="stringliteral">&quot;Wall clock time&quot;</span>, <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml">Measurement</a>(delta.count() / _scale_factor, _unit));</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="preprocessor">#endif // defined(BARE_METAL)</span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    }</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="keywordflow">return</span> measurements;</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;}</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160; </div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;} <span class="comment">// namespace framework</span></div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;} <span class="comment">// namespace test</span></div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;} <span class="comment">// namespace arm_compute</span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160; </div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="keyword">template</span> <span class="keyword">class </span><a class="code" href="classarm__compute_1_1test_1_1framework_1_1_wall_clock.xhtml">arm_compute::test::framework::WallClock&lt;true&gt;</a>;</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="keyword">template</span> <span class="keyword">class </span><a class="code" href="classarm__compute_1_1test_1_1framework_1_1_wall_clock.xhtml">arm_compute::test::framework::WallClock&lt;false&gt;</a>;</div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_wall_clock_xhtml_a5d5d9ebd12cd3a7d268bc98a3fc7bf97"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_wall_clock.xhtml#a5d5d9ebd12cd3a7d268bc98a3fc7bf97">arm_compute::test::framework::WallClock::start</a></div><div class="ttdeci">void start() override</div><div class="ttdoc">Start measuring.</div><div class="ttdef"><b>Definition:</b> <a href="_wall_clock_timer_8cpp_source.xhtml#l00049">WallClockTimer.cpp:49</a></div></div>
<div class="ttc" id="astructarm__compute_1_1test_1_1framework_1_1_measurement_xhtml"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml">arm_compute::test::framework::Measurement</a></div><div class="ttdoc">Generic measurement that stores values as either double or long long int.</div><div class="ttdef"><b>Definition:</b> <a href="_measurement_8h_source.xhtml#l00041">Measurement.h:41</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_wall_clock_xhtml_a501ef37fef441a0a6a8ea8b8e30a7181"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_wall_clock.xhtml#a501ef37fef441a0a6a8ea8b8e30a7181">arm_compute::test::framework::WallClock::id</a></div><div class="ttdeci">std::string id() const override</div><div class="ttdoc">Identifier for the instrument.</div><div class="ttdef"><b>Definition:</b> <a href="_wall_clock_timer_8cpp_source.xhtml#l00036">WallClockTimer.cpp:36</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_wall_clock_xhtml_ab3536e22848ce87b16a9b96d6d824d45"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_wall_clock.xhtml#ab3536e22848ce87b16a9b96d6d824d45">arm_compute::test::framework::WallClock::stop</a></div><div class="ttdeci">void stop() override</div><div class="ttdoc">Stop measuring.</div><div class="ttdef"><b>Definition:</b> <a href="_wall_clock_timer_8cpp_source.xhtml#l00072">WallClockTimer.cpp:72</a></div></div>
<div class="ttc" id="a_wall_clock_timer_8h_xhtml"><div class="ttname"><a href="_wall_clock_timer_8h.xhtml">WallClockTimer.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2024 Arm Limited.</div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_wall_clock_xhtml"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_wall_clock.xhtml">arm_compute::test::framework::WallClock</a></div><div class="ttdoc">Implementation of an instrument to measure elapsed wall-clock time in milliseconds.</div><div class="ttdef"><b>Definition:</b> <a href="_wall_clock_timer_8h_source.xhtml#l00039">WallClockTimer.h:39</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_wall_clock_xhtml_a73cabccc9d4406bf48f1db033dc35005"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_wall_clock.xhtml#a73cabccc9d4406bf48f1db033dc35005">arm_compute::test::framework::WallClock::measurements</a></div><div class="ttdeci">MeasurementsMap measurements() const override</div><div class="ttdoc">Return the latest measurements.</div><div class="ttdef"><b>Definition:</b> <a href="_wall_clock_timer_8cpp_source.xhtml#l00092">WallClockTimer.cpp:92</a></div></div>
<div class="ttc" id="anamespacecheck__header__guards_xhtml_a7f345697df7eb20c9aba1ab6980cae8f"><div class="ttname"><a href="namespacecheck__header__guards.xhtml#a7f345697df7eb20c9aba1ab6980cae8f">check_header_guards.retval</a></div><div class="ttdeci">int retval</div><div class="ttdef"><b>Definition:</b> <a href="check__header__guards_8py_source.xhtml#l00188">check_header_guards.py:188</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_instrument_xhtml_afc7df496e6026b91c3f48da6821c86a9"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml#afc7df496e6026b91c3f48da6821c86a9">arm_compute::test::framework::Instrument::MeasurementsMap</a></div><div class="ttdeci">std::map&lt; std::string, Measurement &gt; MeasurementsMap</div><div class="ttdoc">Map of measurements.</div><div class="ttdef"><b>Definition:</b> <a href="_instrument_8h_source.xhtml#l00109">Instrument.h:109</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_59425e443f801f1f2fd8bbe4959a3ccf.xhtml">tests</a></li><li class="navelem"><a class="el" href="dir_9e71e2da941d3cafc4d98a9f6ae3de4f.xhtml">framework</a></li><li class="navelem"><a class="el" href="dir_4efd0ee2ecda32567e74991b08d544ea.xhtml">instruments</a></li><li class="navelem"><a class="el" href="_wall_clock_timer_8cpp.xhtml">WallClockTimer.cpp</a></li>
    <li class="footer">Generated on Mon Mar 18 2024 11:32:04 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
