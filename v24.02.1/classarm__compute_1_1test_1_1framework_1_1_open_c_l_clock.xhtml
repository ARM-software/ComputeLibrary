<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: OpenCLClock&lt; output_timestamps &gt; Class Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.02.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__compute_1_1test_1_1framework_1_1_open_c_l_clock.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">OpenCLClock&lt; output_timestamps &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml" title="Interface for classes that can be used to measure performance.">Instrument</a> creating measurements based on the information returned by clGetEventProfilingInfo for each OpenCL kernel executed.  
 <a href="classarm__compute_1_1test_1_1framework_1_1_open_c_l_clock.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_open_c_l_timer_8h_source.xhtml">OpenCLTimer.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for OpenCLClock&lt; output_timestamps &gt;:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classarm__compute_1_1test_1_1framework_1_1_open_c_l_clock__coll__graph.svg" width="176" height="127"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ab8b13fb740f8ad1344efb2dbd937791b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_open_c_l_clock.xhtml#ab8b13fb740f8ad1344efb2dbd937791b">OpenCLClock</a> (<a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100">ScaleFactor</a> scale_factor)</td></tr>
<tr class="memdesc:ab8b13fb740f8ad1344efb2dbd937791b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Construct an OpenCL timer.  <a href="classarm__compute_1_1test_1_1framework_1_1_open_c_l_clock.xhtml#ab8b13fb740f8ad1344efb2dbd937791b">More...</a><br /></td></tr>
<tr class="separator:ab8b13fb740f8ad1344efb2dbd937791b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a501ef37fef441a0a6a8ea8b8e30a7181"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_open_c_l_clock.xhtml#a501ef37fef441a0a6a8ea8b8e30a7181">id</a> () const override</td></tr>
<tr class="memdesc:a501ef37fef441a0a6a8ea8b8e30a7181"><td class="mdescLeft">&#160;</td><td class="mdescRight">Identifier for the instrument.  <a href="classarm__compute_1_1test_1_1framework_1_1_open_c_l_clock.xhtml#a501ef37fef441a0a6a8ea8b8e30a7181">More...</a><br /></td></tr>
<tr class="separator:a501ef37fef441a0a6a8ea8b8e30a7181"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad94b6b2e29abc159c9624278938badb3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_open_c_l_clock.xhtml#ad94b6b2e29abc159c9624278938badb3">test_start</a> () override</td></tr>
<tr class="memdesc:ad94b6b2e29abc159c9624278938badb3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Start of the test.  <a href="classarm__compute_1_1test_1_1framework_1_1_open_c_l_clock.xhtml#ad94b6b2e29abc159c9624278938badb3">More...</a><br /></td></tr>
<tr class="separator:ad94b6b2e29abc159c9624278938badb3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d5d9ebd12cd3a7d268bc98a3fc7bf97"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_open_c_l_clock.xhtml#a5d5d9ebd12cd3a7d268bc98a3fc7bf97">start</a> () override</td></tr>
<tr class="memdesc:a5d5d9ebd12cd3a7d268bc98a3fc7bf97"><td class="mdescLeft">&#160;</td><td class="mdescRight">Start measuring.  <a href="classarm__compute_1_1test_1_1framework_1_1_open_c_l_clock.xhtml#a5d5d9ebd12cd3a7d268bc98a3fc7bf97">More...</a><br /></td></tr>
<tr class="separator:a5d5d9ebd12cd3a7d268bc98a3fc7bf97"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab3536e22848ce87b16a9b96d6d824d45"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_open_c_l_clock.xhtml#ab3536e22848ce87b16a9b96d6d824d45">stop</a> () override</td></tr>
<tr class="memdesc:ab3536e22848ce87b16a9b96d6d824d45"><td class="mdescLeft">&#160;</td><td class="mdescRight">Stop measuring.  <a href="classarm__compute_1_1test_1_1framework_1_1_open_c_l_clock.xhtml#ab3536e22848ce87b16a9b96d6d824d45">More...</a><br /></td></tr>
<tr class="separator:ab3536e22848ce87b16a9b96d6d824d45"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a84eed1102b2ad191e3659dd7c49705bc"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_open_c_l_clock.xhtml#a84eed1102b2ad191e3659dd7c49705bc">test_stop</a> () override</td></tr>
<tr class="memdesc:a84eed1102b2ad191e3659dd7c49705bc"><td class="mdescLeft">&#160;</td><td class="mdescRight">End of the test.  <a href="classarm__compute_1_1test_1_1framework_1_1_open_c_l_clock.xhtml#a84eed1102b2ad191e3659dd7c49705bc">More...</a><br /></td></tr>
<tr class="separator:a84eed1102b2ad191e3659dd7c49705bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a73cabccc9d4406bf48f1db033dc35005"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml#afc7df496e6026b91c3f48da6821c86a9">MeasurementsMap</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_open_c_l_clock.xhtml#a73cabccc9d4406bf48f1db033dc35005">measurements</a> () const override</td></tr>
<tr class="memdesc:a73cabccc9d4406bf48f1db033dc35005"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the latest measurements.  <a href="classarm__compute_1_1test_1_1framework_1_1_open_c_l_clock.xhtml#a73cabccc9d4406bf48f1db033dc35005">More...</a><br /></td></tr>
<tr class="separator:a73cabccc9d4406bf48f1db033dc35005"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a60f8fdb7ead1583e0dfae6e97372bf40"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml#afc7df496e6026b91c3f48da6821c86a9">MeasurementsMap</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_open_c_l_clock.xhtml#a60f8fdb7ead1583e0dfae6e97372bf40">test_measurements</a> () const override</td></tr>
<tr class="memdesc:a60f8fdb7ead1583e0dfae6e97372bf40"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the latest test measurements.  <a href="classarm__compute_1_1test_1_1framework_1_1_open_c_l_clock.xhtml#a60f8fdb7ead1583e0dfae6e97372bf40">More...</a><br /></td></tr>
<tr class="separator:a60f8fdb7ead1583e0dfae6e97372bf40"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1test_1_1framework_1_1_instrument"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1test_1_1framework_1_1_instrument')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml">Instrument</a></td></tr>
<tr class="memitem:a44dfdf6c9c53e1b5c5eddfc58c31dc54 inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_instrument"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml#a44dfdf6c9c53e1b5c5eddfc58c31dc54">Instrument</a> ()=default</td></tr>
<tr class="memdesc:a44dfdf6c9c53e1b5c5eddfc58c31dc54 inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_instrument"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor.  <a href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml#a44dfdf6c9c53e1b5c5eddfc58c31dc54">More...</a><br /></td></tr>
<tr class="separator:a44dfdf6c9c53e1b5c5eddfc58c31dc54 inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_instrument"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac92db65cbe174915234b0d99b3ad4be7 inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_instrument"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml#ac92db65cbe174915234b0d99b3ad4be7">Instrument</a> (const <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml">Instrument</a> &amp;)=default</td></tr>
<tr class="memdesc:ac92db65cbe174915234b0d99b3ad4be7 inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_instrument"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be copy constructed.  <a href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml#ac92db65cbe174915234b0d99b3ad4be7">More...</a><br /></td></tr>
<tr class="separator:ac92db65cbe174915234b0d99b3ad4be7 inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_instrument"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adda867124fd5c093788f96cb2eaf67cd inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_instrument"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml#adda867124fd5c093788f96cb2eaf67cd">Instrument</a> (<a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml">Instrument</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:adda867124fd5c093788f96cb2eaf67cd inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_instrument"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be move constructed.  <a href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml#adda867124fd5c093788f96cb2eaf67cd">More...</a><br /></td></tr>
<tr class="separator:adda867124fd5c093788f96cb2eaf67cd inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_instrument"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae4a6c66ea355204cca47490247b91f5f inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_instrument"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml">Instrument</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml#ae4a6c66ea355204cca47490247b91f5f">operator=</a> (const <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml">Instrument</a> &amp;)=default</td></tr>
<tr class="memdesc:ae4a6c66ea355204cca47490247b91f5f inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_instrument"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be copied.  <a href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml#ae4a6c66ea355204cca47490247b91f5f">More...</a><br /></td></tr>
<tr class="separator:ae4a6c66ea355204cca47490247b91f5f inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_instrument"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a550047da2682a06765be837ae570e542 inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_instrument"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml">Instrument</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml#a550047da2682a06765be837ae570e542">operator=</a> (<a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml">Instrument</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:a550047da2682a06765be837ae570e542 inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_instrument"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be moved.  <a href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml#a550047da2682a06765be837ae570e542">More...</a><br /></td></tr>
<tr class="separator:a550047da2682a06765be837ae570e542 inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_instrument"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7bd8541cf37e6c439d4a6bf7296437a2 inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_instrument"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml#a7bd8541cf37e6c439d4a6bf7296437a2">~Instrument</a> ()=default</td></tr>
<tr class="memdesc:a7bd8541cf37e6c439d4a6bf7296437a2 inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_instrument"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default destructor.  <a href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml#a7bd8541cf37e6c439d4a6bf7296437a2">More...</a><br /></td></tr>
<tr class="separator:a7bd8541cf37e6c439d4a6bf7296437a2 inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_instrument"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4d3582d354eb3e9028f627624ad7e126 inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_instrument"><td class="memItemLeft" align="right" valign="top">virtual std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml#a4d3582d354eb3e9028f627624ad7e126">instrument_header</a> () const</td></tr>
<tr class="memdesc:a4d3582d354eb3e9028f627624ad7e126 inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_instrument"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return JSON formatted instrument header string.  <a href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml#a4d3582d354eb3e9028f627624ad7e126">More...</a><br /></td></tr>
<tr class="separator:a4d3582d354eb3e9028f627624ad7e126 inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_instrument"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_types_classarm__compute_1_1test_1_1framework_1_1_instrument"><td colspan="2" onclick="javascript:toggleInherit('pub_types_classarm__compute_1_1test_1_1framework_1_1_instrument')"><img src="closed.png" alt="-"/>&#160;Public Types inherited from <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml">Instrument</a></td></tr>
<tr class="memitem:afc7df496e6026b91c3f48da6821c86a9 inherit pub_types_classarm__compute_1_1test_1_1framework_1_1_instrument"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml#afc7df496e6026b91c3f48da6821c86a9">MeasurementsMap</a> = std::map&lt; std::string, <a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml">Measurement</a> &gt;</td></tr>
<tr class="memdesc:afc7df496e6026b91c3f48da6821c86a9 inherit pub_types_classarm__compute_1_1test_1_1framework_1_1_instrument"><td class="mdescLeft">&#160;</td><td class="mdescRight">Map of measurements.  <a href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml#afc7df496e6026b91c3f48da6821c86a9">More...</a><br /></td></tr>
<tr class="separator:afc7df496e6026b91c3f48da6821c86a9 inherit pub_types_classarm__compute_1_1test_1_1framework_1_1_instrument"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_static_methods_classarm__compute_1_1test_1_1framework_1_1_instrument"><td colspan="2" onclick="javascript:toggleInherit('pub_static_methods_classarm__compute_1_1test_1_1framework_1_1_instrument')"><img src="closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml">Instrument</a></td></tr>
<tr class="memitem:ab6ac86ac15a8211221f1721d6a4ee889 inherit pub_static_methods_classarm__compute_1_1test_1_1framework_1_1_instrument"><td class="memTemplParams" colspan="2">template&lt;typename T , ScaleFactor scale&gt; </td></tr>
<tr class="memitem:ab6ac86ac15a8211221f1721d6a4ee889 inherit pub_static_methods_classarm__compute_1_1test_1_1framework_1_1_instrument"><td class="memTemplItemLeft" align="right" valign="top">static std::unique_ptr&lt; <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml">Instrument</a> &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml#ab6ac86ac15a8211221f1721d6a4ee889">make_instrument</a> ()</td></tr>
<tr class="memdesc:ab6ac86ac15a8211221f1721d6a4ee889 inherit pub_static_methods_classarm__compute_1_1test_1_1framework_1_1_instrument"><td class="mdescLeft">&#160;</td><td class="mdescRight">Helper function to create an instrument of the given type.  <a href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml#ab6ac86ac15a8211221f1721d6a4ee889">More...</a><br /></td></tr>
<tr class="separator:ab6ac86ac15a8211221f1721d6a4ee889 inherit pub_static_methods_classarm__compute_1_1test_1_1framework_1_1_instrument"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;bool output_timestamps&gt;<br />
class arm_compute::test::framework::OpenCLClock&lt; output_timestamps &gt;</h3>

<p><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml" title="Interface for classes that can be used to measure performance.">Instrument</a> creating measurements based on the information returned by clGetEventProfilingInfo for each OpenCL kernel executed. </p>

<p class="definition">Definition at line <a class="el" href="_open_c_l_timer_8h_source.xhtml#l00045">45</a> of file <a class="el" href="_open_c_l_timer_8h_source.xhtml">OpenCLTimer.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="ab8b13fb740f8ad1344efb2dbd937791b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab8b13fb740f8ad1344efb2dbd937791b">&#9670;&nbsp;</a></span>OpenCLClock()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_open_c_l_clock.xhtml">OpenCLClock</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100">ScaleFactor</a>&#160;</td>
          <td class="paramname"><em>scale_factor</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Construct an OpenCL timer. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">scale_factor</td><td><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml" title="Generic measurement that stores values as either double or long long int.">Measurement</a> scale factor. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_open_c_l_timer_8cpp_source.xhtml#l00056">56</a> of file <a class="el" href="_open_c_l_timer_8cpp_source.xhtml">OpenCLTimer.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    : _kernels(),</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;      _real_function(<span class="keyword">nullptr</span>),</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="preprocessor">#ifdef ARM_COMPUTE_GRAPH_ENABLED</span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;      _real_graph_function(<span class="keyword">nullptr</span>),</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* ARM_COMPUTE_GRAPH_ENABLED */</span><span class="preprocessor"></span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;      _prefix(),</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;      _timer_enabled(<span class="keyword">false</span>)</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;{</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <span class="keyword">auto</span>                        q     = <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a398a2582c746d28fc125487a44c9ed74">queue</a>();</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    cl_command_queue_properties props = q.getInfo&lt;CL_QUEUE_PROPERTIES&gt;();</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <span class="keywordflow">if</span>((props &amp; CL_QUEUE_PROFILING_ENABLE) == 0)</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    {</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9608e5af9f3a199f69ca6aa41b94359a">set_queue</a>(cl::CommandQueue(<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf0dd2db07cdbb966d6e385d3cd2605c">context</a>(), props | CL_QUEUE_PROFILING_ENABLE));</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    }</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160; </div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="keywordflow">switch</span>(scale_factor)</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    {</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100ab50339a10e1de285ac99d4c3990b8693">ScaleFactor::NONE</a>:</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;            _scale_factor = 1.f;</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;            _unit         = <span class="stringliteral">&quot;ns&quot;</span>;</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100ab843f590d06438293e06980b4f94bf39">ScaleFactor::TIME_US</a>:</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;            _scale_factor = 1000.f;</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;            _unit         = <span class="stringliteral">&quot;us&quot;</span>;</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100a8ed2f2476469f812d63a2f4e83166c61">ScaleFactor::TIME_MS</a>:</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;            _scale_factor = 1000000.f;</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;            _unit         = <span class="stringliteral">&quot;ms&quot;</span>;</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100a55d658bdb6741297d391d36632cb51b1">ScaleFactor::TIME_S</a>:</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;            _scale_factor = 1000000000.f;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;            _unit         = <span class="stringliteral">&quot;s&quot;</span>;</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;            <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;Invalid scale&quot;</span>);</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    }</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00354">ARM_COMPUTE_ERROR</a>, <a class="el" href="_direct_conv2d_8cpp_source.xhtml#l00167">arm_compute::test::validation::context</a>, <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00112">CLScheduler::get()</a>, <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100ab50339a10e1de285ac99d4c3990b8693">arm_compute::test::framework::NONE</a>, <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00040">CLScheduler::queue()</a>, <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00056">CLScheduler::set_queue()</a>, <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100a8ed2f2476469f812d63a2f4e83166c61">arm_compute::test::framework::TIME_MS</a>, <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100a55d658bdb6741297d391d36632cb51b1">arm_compute::test::framework::TIME_S</a>, and <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100ab843f590d06438293e06980b4f94bf39">arm_compute::test::framework::TIME_US</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a501ef37fef441a0a6a8ea8b8e30a7181"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a501ef37fef441a0a6a8ea8b8e30a7181">&#9670;&nbsp;</a></span>id()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string id </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Identifier for the instrument. </p>

<p>Implements <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml#a93697d33dc9325ba180a9a2a8ade6937">Instrument</a>.</p>

<p class="definition">Definition at line <a class="el" href="_open_c_l_timer_8cpp_source.xhtml#l00043">43</a> of file <a class="el" href="_open_c_l_timer_8cpp_source.xhtml">OpenCLTimer.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;{</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <span class="keywordflow">if</span>(output_timestamps)</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    {</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;        <span class="keywordflow">return</span> <span class="stringliteral">&quot;OpenCLTimestamps&quot;</span>;</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    }</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    {</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        <span class="keywordflow">return</span> <span class="stringliteral">&quot;OpenCLTimer&quot;</span>;</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    }</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a73cabccc9d4406bf48f1db033dc35005"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a73cabccc9d4406bf48f1db033dc35005">&#9670;&nbsp;</a></span>measurements()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml#afc7df496e6026b91c3f48da6821c86a9">Instrument::MeasurementsMap</a> measurements</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Return the latest measurements. </p>
<dl class="section return"><dt>Returns</dt><dd>the latest measurements. </dd></dl>

<p>Reimplemented from <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml#af7d7a6fbea69e98b802398957a245488">Instrument</a>.</p>

<p class="definition">Definition at line <a class="el" href="_open_c_l_timer_8cpp_source.xhtml#l00193">193</a> of file <a class="el" href="_open_c_l_timer_8cpp_source.xhtml">OpenCLTimer.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;{</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml#afc7df496e6026b91c3f48da6821c86a9">MeasurementsMap</a> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_open_c_l_clock.xhtml#a73cabccc9d4406bf48f1db033dc35005">measurements</a>;</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>    kernel_number = 0;</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    <span class="keywordflow">for</span>(<span class="keyword">auto</span> <span class="keyword">const</span> &amp;kernel : _kernels)</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    {</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;        cl_ulong queued;</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        cl_ulong flushed;</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;        cl_ulong <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_open_c_l_clock.xhtml#a5d5d9ebd12cd3a7d268bc98a3fc7bf97">start</a>;</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;        cl_ulong <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a9fe67a1da3e2628bade473115ecbb5be">end</a>;</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;        kernel.event.getProfilingInfo(CL_PROFILING_COMMAND_QUEUED, &amp;queued);</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;        kernel.event.getProfilingInfo(CL_PROFILING_COMMAND_SUBMIT, &amp;flushed);</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;        kernel.event.getProfilingInfo(CL_PROFILING_COMMAND_START, &amp;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_open_c_l_clock.xhtml#a5d5d9ebd12cd3a7d268bc98a3fc7bf97">start</a>);</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;        kernel.event.getProfilingInfo(CL_PROFILING_COMMAND_END, &amp;<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a9fe67a1da3e2628bade473115ecbb5be">end</a>);</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;        std::string <a class="code" href="_n_e_batch_normalization_layer_kernel_8cpp.xhtml#a8f8f80d37794cde9472343e4487ba3eb">name</a> = kernel.name + <span class="stringliteral">&quot; #&quot;</span> + <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(kernel_number++);</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160; </div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;        <span class="keywordflow">if</span>(output_timestamps)</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;        {</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;            <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_open_c_l_clock.xhtml#a73cabccc9d4406bf48f1db033dc35005">measurements</a>.emplace(<span class="stringliteral">&quot;[start]&quot;</span> + <a class="code" href="_n_e_batch_normalization_layer_kernel_8cpp.xhtml#a8f8f80d37794cde9472343e4487ba3eb">name</a>, Measurement(<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_open_c_l_clock.xhtml#a5d5d9ebd12cd3a7d268bc98a3fc7bf97">start</a> / <span class="keyword">static_cast&lt;</span>cl_ulong<span class="keyword">&gt;</span>(_scale_factor), _unit));</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;            <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_open_c_l_clock.xhtml#a73cabccc9d4406bf48f1db033dc35005">measurements</a>.emplace(<span class="stringliteral">&quot;[queued]&quot;</span> + <a class="code" href="_n_e_batch_normalization_layer_kernel_8cpp.xhtml#a8f8f80d37794cde9472343e4487ba3eb">name</a>, Measurement(queued / <span class="keyword">static_cast&lt;</span>cl_ulong<span class="keyword">&gt;</span>(_scale_factor), _unit));</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;            <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_open_c_l_clock.xhtml#a73cabccc9d4406bf48f1db033dc35005">measurements</a>.emplace(<span class="stringliteral">&quot;[flushed]&quot;</span> + <a class="code" href="_n_e_batch_normalization_layer_kernel_8cpp.xhtml#a8f8f80d37794cde9472343e4487ba3eb">name</a>, Measurement(flushed / <span class="keyword">static_cast&lt;</span>cl_ulong<span class="keyword">&gt;</span>(_scale_factor), _unit));</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;            <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_open_c_l_clock.xhtml#a73cabccc9d4406bf48f1db033dc35005">measurements</a>.emplace(<span class="stringliteral">&quot;[end]&quot;</span> + <a class="code" href="_n_e_batch_normalization_layer_kernel_8cpp.xhtml#a8f8f80d37794cde9472343e4487ba3eb">name</a>, Measurement(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a9fe67a1da3e2628bade473115ecbb5be">end</a> / <span class="keyword">static_cast&lt;</span>cl_ulong<span class="keyword">&gt;</span>(_scale_factor), _unit));</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;        }</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;        {</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;            <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_open_c_l_clock.xhtml#a73cabccc9d4406bf48f1db033dc35005">measurements</a>.emplace(<a class="code" href="_n_e_batch_normalization_layer_kernel_8cpp.xhtml#a8f8f80d37794cde9472343e4487ba3eb">name</a>, Measurement((<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a9fe67a1da3e2628bade473115ecbb5be">end</a> - <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_open_c_l_clock.xhtml#a5d5d9ebd12cd3a7d268bc98a3fc7bf97">start</a>) / _scale_factor, _unit));</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;        }</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    }</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160; </div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_open_c_l_clock.xhtml#a73cabccc9d4406bf48f1db033dc35005">measurements</a>;</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_m_l_g_o_parser_8cpp_source.xhtml#l00283">arm_compute::mlgo::parser::end()</a>, <a class="el" href="_n_e_batch_normalization_layer_kernel_8cpp_source.xhtml#l00066">name</a>, and <a class="el" href="_string_support_8h_source.xhtml#l00168">arm_compute::support::cpp11::to_string()</a>.</p>

</div>
</div>
<a id="a5d5d9ebd12cd3a7d268bc98a3fc7bf97"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5d5d9ebd12cd3a7d268bc98a3fc7bf97">&#9670;&nbsp;</a></span>start()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void start</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Start measuring. </p>
<p>Called just before the run of the test starts </p>

<p>Reimplemented from <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml#a62b63bddf378b0e13a4affa3e8e1bedf">Instrument</a>.</p>

<p class="definition">Definition at line <a class="el" href="_open_c_l_timer_8cpp_source.xhtml#l00169">169</a> of file <a class="el" href="_open_c_l_timer_8cpp_source.xhtml">OpenCLTimer.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;{</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    _kernels.clear();</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    _timer_enabled = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="ab3536e22848ce87b16a9b96d6d824d45"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab3536e22848ce87b16a9b96d6d824d45">&#9670;&nbsp;</a></span>stop()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void stop</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Stop measuring. </p>
<p>Called just after the run of the test ends </p>

<p>Reimplemented from <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml#ae92ae13a136435391be883fd6f0f5c8c">Instrument</a>.</p>

<p class="definition">Definition at line <a class="el" href="_open_c_l_timer_8cpp_source.xhtml#l00175">175</a> of file <a class="el" href="_open_c_l_timer_8cpp_source.xhtml">OpenCLTimer.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;{</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    _timer_enabled = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a60f8fdb7ead1583e0dfae6e97372bf40"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a60f8fdb7ead1583e0dfae6e97372bf40">&#9670;&nbsp;</a></span>test_measurements()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml#afc7df496e6026b91c3f48da6821c86a9">Instrument::MeasurementsMap</a> test_measurements</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Return the latest test measurements. </p>
<dl class="section return"><dt>Returns</dt><dd>the latest test measurements. </dd></dl>

<p>Reimplemented from <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml#aab0f12a9ccff85982411599026baad54">Instrument</a>.</p>

<p class="definition">Definition at line <a class="el" href="_open_c_l_timer_8cpp_source.xhtml#l00226">226</a> of file <a class="el" href="_open_c_l_timer_8cpp_source.xhtml">OpenCLTimer.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;{</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml#afc7df496e6026b91c3f48da6821c86a9">MeasurementsMap</a> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_open_c_l_clock.xhtml#a73cabccc9d4406bf48f1db033dc35005">measurements</a>;</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160; </div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    <span class="keywordflow">if</span>(output_timestamps)</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    {</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;        <span class="comment">// The OpenCL clock and the wall clock are not in sync, so we use</span></div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;        <span class="comment">// this trick to calculate the offset between the two clocks:</span></div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;        ::cl::Event event;</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;        cl_ulong    now_gpu;</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160; </div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;        <span class="comment">// Enqueue retrieve current CPU clock and enqueue a dummy marker</span></div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;        std::chrono::high_resolution_clock::time_point now_cpu = std::chrono::high_resolution_clock::now();</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;        <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a398a2582c746d28fc125487a44c9ed74">queue</a>().enqueueMarker(&amp;event);</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160; </div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;        <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a398a2582c746d28fc125487a44c9ed74">queue</a>().finish();</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;        <span class="comment">//Access the time at which the marker was enqueued:</span></div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;        <span class="keyword">event</span>.getProfilingInfo(CL_PROFILING_COMMAND_QUEUED, &amp;now_gpu);</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160; </div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;        <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_open_c_l_clock.xhtml#a73cabccc9d4406bf48f1db033dc35005">measurements</a>.emplace(<span class="stringliteral">&quot;Now Wall clock&quot;</span>, Measurement(now_cpu.time_since_epoch().count() / 1000, <span class="stringliteral">&quot;us&quot;</span>));</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;        <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_open_c_l_clock.xhtml#a73cabccc9d4406bf48f1db033dc35005">measurements</a>.emplace(<span class="stringliteral">&quot;Now OpenCL&quot;</span>, Measurement(now_gpu / <span class="keyword">static_cast&lt;</span>cl_ulong<span class="keyword">&gt;</span>(_scale_factor), _unit));</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    }</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160; </div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_open_c_l_clock.xhtml#a73cabccc9d4406bf48f1db033dc35005">measurements</a>;</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00112">CLScheduler::get()</a>, and <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00040">CLScheduler::queue()</a>.</p>

</div>
</div>
<a id="ad94b6b2e29abc159c9624278938badb3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad94b6b2e29abc159c9624278938badb3">&#9670;&nbsp;</a></span>test_start()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void test_start</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Start of the test. </p>
<p>Called before the test set up starts </p>

<p>Reimplemented from <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml#a66c51340d5301212438dd42cddd9b015">Instrument</a>.</p>

<p class="definition">Definition at line <a class="el" href="_open_c_l_timer_8cpp_source.xhtml#l00096">96</a> of file <a class="el" href="_open_c_l_timer_8cpp_source.xhtml">OpenCLTimer.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;{</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <span class="comment">// Start intercepting enqueues:</span></div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(_real_function != <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    _real_function   = <a class="code" href="classarm__compute_1_1_c_l_symbols.xhtml#ac3d2ed16df8334b183d76d8a82dbf70f">CLSymbols::get</a>().<a class="code" href="classarm__compute_1_1_c_l_symbols.xhtml#ab5c1d962dbe252b8d6a9a3414557d194">clEnqueueNDRangeKernel_ptr</a>;</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <span class="keyword">auto</span> interceptor = [<span class="keyword">this</span>](</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;                           cl_command_queue command_queue,</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;                           cl_kernel        kernel,</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;                           cl_uint          work_dim,</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;                           <span class="keyword">const</span> <span class="keywordtype">size_t</span>    *gwo,</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;                           <span class="keyword">const</span> <span class="keywordtype">size_t</span>    *gws,</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;                           <span class="keyword">const</span> <span class="keywordtype">size_t</span>    *lws,</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;                           cl_uint          num_events_in_wait_list,</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;                           <span class="keyword">const</span> cl_event * event_wait_list,</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;                           cl_event *       event)</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    {</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        <span class="keywordflow">if</span>(this-&gt;_timer_enabled)</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        {</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;            kernel_info       <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>;</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;            cl::Kernel        cpp_kernel(kernel, <span class="keyword">true</span>);</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;            std::stringstream <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">ss</a>;</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;            <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">ss</a> &lt;&lt; this-&gt;_prefix &lt;&lt; cpp_kernel.getInfo&lt;CL_KERNEL_FUNCTION_NAME&gt;();</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;            <span class="keywordflow">if</span>(gws != <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;            {</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;                <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">ss</a> &lt;&lt; <span class="stringliteral">&quot; GWS[&quot;</span> &lt;&lt; gws[0] &lt;&lt; <span class="stringliteral">&quot;,&quot;</span> &lt;&lt; gws[1] &lt;&lt; <span class="stringliteral">&quot;,&quot;</span> &lt;&lt; gws[2] &lt;&lt; <span class="stringliteral">&quot;]&quot;</span>;</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;            }</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;            <span class="keywordflow">if</span>(lws != <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;            {</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;                <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">ss</a> &lt;&lt; <span class="stringliteral">&quot; LWS[&quot;</span> &lt;&lt; lws[0] &lt;&lt; <span class="stringliteral">&quot;,&quot;</span> &lt;&lt; lws[1] &lt;&lt; <span class="stringliteral">&quot;,&quot;</span> &lt;&lt; lws[2] &lt;&lt; <span class="stringliteral">&quot;]&quot;</span>;</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;            }</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;            <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>.name = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">ss</a>.str();</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;            cl_event tmp;</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;            cl_int   <a class="code" href="namespacecheck__header__guards.xhtml#a7f345697df7eb20c9aba1ab6980cae8f">retval</a> = this-&gt;_real_function(command_queue, kernel, work_dim, gwo, gws, lws, num_events_in_wait_list, event_wait_list, &amp;tmp);</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;            <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>.event      = tmp;</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;            this-&gt;_kernels.push_back(std::move(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>));</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160; </div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;            <span class="keywordflow">if</span>(event != <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;            {</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;                <span class="comment">//return cl_event from the intercepted call</span></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;                <a class="code" href="_open_c_l_8cpp.xhtml#a434f9e0998ebb096bf09a0a6abdd5938">clRetainEvent</a>(tmp);</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;                *<span class="keyword">event</span> = tmp;</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;            }</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespacecheck__header__guards.xhtml#a7f345697df7eb20c9aba1ab6980cae8f">retval</a>;</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        }</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        {</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;            <span class="keywordflow">return</span> this-&gt;_real_function(command_queue, kernel, work_dim, gwo, gws, lws, num_events_in_wait_list, event_wait_list, event);</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;        }</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    };</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_symbols.xhtml#ac3d2ed16df8334b183d76d8a82dbf70f">CLSymbols::get</a>().<a class="code" href="classarm__compute_1_1_c_l_symbols.xhtml#ab5c1d962dbe252b8d6a9a3414557d194">clEnqueueNDRangeKernel_ptr</a> = interceptor;</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160; </div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="preprocessor">#ifdef ARM_COMPUTE_GRAPH_ENABLED</span></div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(_real_graph_function != <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    _real_graph_function = <a class="code" href="classarm__compute_1_1graph_1_1_task_executor.xhtml#a8814816f2d2940dbbc2817277eff42db">graph::TaskExecutor::get</a>().<a class="code" href="classarm__compute_1_1graph_1_1_task_executor.xhtml#af356b3757a26ca474239624e161fb49c">execute_function</a>;</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    <span class="comment">// Start intercepting tasks:</span></div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    <span class="keyword">auto</span> task_interceptor = [<span class="keyword">this</span>](graph::ExecutionTask &amp; task)</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    {</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;        <span class="keywordflow">if</span>(task.node != <span class="keyword">nullptr</span> &amp;&amp; !task.node-&gt;name().empty())</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;        {</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;            this-&gt;_prefix = task.node-&gt;name() + <span class="stringliteral">&quot;/&quot;</span>;</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        }</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        {</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;            this-&gt;_prefix = <span class="stringliteral">&quot;&quot;</span>;</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        }</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;        this-&gt;_real_graph_function(task);</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;        this-&gt;_prefix = <span class="stringliteral">&quot;&quot;</span>;</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    };</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    <a class="code" href="classarm__compute_1_1graph_1_1_task_executor.xhtml#a8814816f2d2940dbbc2817277eff42db">graph::TaskExecutor::get</a>().<a class="code" href="classarm__compute_1_1graph_1_1_task_executor.xhtml#af356b3757a26ca474239624e161fb49c">execute_function</a> = task_interceptor;</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* ARM_COMPUTE_GRAPH_ENABLED */</span><span class="preprocessor"></span></div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>, <a class="el" href="_open_c_l_8h_source.xhtml#l00099">CLSymbols::clEnqueueNDRangeKernel_ptr</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00937">clRetainEvent()</a>, <a class="el" href="_workload_8h_source.xhtml#l00063">TaskExecutor::execute_function</a>, <a class="el" href="_workload_8cpp_source.xhtml#l00074">TaskExecutor::get()</a>, <a class="el" href="_open_c_l_8cpp_source.xhtml#l00043">CLSymbols::get()</a>, <a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">arm_compute::test::validation::info</a>, <a class="el" href="check__header__guards_8py_source.xhtml#l00188">check_header_guards::retval</a>, and <a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">arm_compute::test::validation::ss()</a>.</p>

</div>
</div>
<a id="a84eed1102b2ad191e3659dd7c49705bc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a84eed1102b2ad191e3659dd7c49705bc">&#9670;&nbsp;</a></span>test_stop()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void test_stop</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>End of the test. </p>
<p>Called after the test teardown ended </p>

<p>Reimplemented from <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml#a24b0f69632f7d082aad3e0fceaf4f5b1">Instrument</a>.</p>

<p class="definition">Definition at line <a class="el" href="_open_c_l_timer_8cpp_source.xhtml#l00181">181</a> of file <a class="el" href="_open_c_l_timer_8cpp_source.xhtml">OpenCLTimer.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;{</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    <span class="comment">// Restore real function</span></div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_symbols.xhtml#ac3d2ed16df8334b183d76d8a82dbf70f">CLSymbols::get</a>().<a class="code" href="classarm__compute_1_1_c_l_symbols.xhtml#ab5c1d962dbe252b8d6a9a3414557d194">clEnqueueNDRangeKernel_ptr</a> = _real_function;</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    _real_function                              = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="preprocessor">#ifdef ARM_COMPUTE_GRAPH_ENABLED</span></div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    <a class="code" href="classarm__compute_1_1graph_1_1_task_executor.xhtml#a8814816f2d2940dbbc2817277eff42db">graph::TaskExecutor::get</a>().<a class="code" href="classarm__compute_1_1graph_1_1_task_executor.xhtml#af356b3757a26ca474239624e161fb49c">execute_function</a> = _real_graph_function;</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    _real_graph_function                        = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* ARM_COMPUTE_GRAPH_ENABLED */</span><span class="preprocessor"></span></div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_open_c_l_8h_source.xhtml#l00099">CLSymbols::clEnqueueNDRangeKernel_ptr</a>, <a class="el" href="_workload_8h_source.xhtml#l00063">TaskExecutor::execute_function</a>, <a class="el" href="_workload_8cpp_source.xhtml#l00074">TaskExecutor::get()</a>, and <a class="el" href="_open_c_l_8cpp_source.xhtml#l00043">CLSymbols::get()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>tests/framework/instruments/<a class="el" href="_open_c_l_timer_8h_source.xhtml">OpenCLTimer.h</a></li>
<li>tests/framework/instruments/<a class="el" href="_open_c_l_timer_8cpp_source.xhtml">OpenCLTimer.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="anamespacearm__compute_1_1support_1_1cpp11_xhtml_acc5dddee1cbe93a4eaf0a9f74ee96bb7"><div class="ttname"><a href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">arm_compute::support::cpp11::to_string</a></div><div class="ttdeci">std::string to_string(T &amp;&amp;value)</div><div class="ttdoc">Convert integer and float values to string.</div><div class="ttdef"><b>Definition:</b> <a href="_string_support_8h_source.xhtml#l00168">StringSupport.h:168</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_symbols_xhtml_ac3d2ed16df8334b183d76d8a82dbf70f"><div class="ttname"><a href="classarm__compute_1_1_c_l_symbols.xhtml#ac3d2ed16df8334b183d76d8a82dbf70f">arm_compute::CLSymbols::get</a></div><div class="ttdeci">static CLSymbols &amp; get()</div><div class="ttdoc">Get the static instance of CLSymbols.</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00043">OpenCL.cpp:43</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a7cf8d8b669b8f7b05680230be30d60f4"><div class="ttname"><a href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR(msg)</div><div class="ttdoc">Print the given message then throw an std::runtime_error.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00354">Error.h:354</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1framework_xhtml_a3a01a70ad3a22d8b80c413e8a5977100ab843f590d06438293e06980b4f94bf39"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100ab843f590d06438293e06980b4f94bf39">arm_compute::test::framework::ScaleFactor::TIME_US</a></div><div class="ttdeci">@ TIME_US</div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_symbols_xhtml_ab5c1d962dbe252b8d6a9a3414557d194"><div class="ttname"><a href="classarm__compute_1_1_c_l_symbols.xhtml#ab5c1d962dbe252b8d6a9a3414557d194">arm_compute::CLSymbols::clEnqueueNDRangeKernel_ptr</a></div><div class="ttdeci">std::function&lt; decltype(clEnqueueNDRangeKernel)&gt; clEnqueueNDRangeKernel_ptr</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8h_source.xhtml#l00099">OpenCL.h:99</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_task_executor_xhtml_a8814816f2d2940dbbc2817277eff42db"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_task_executor.xhtml#a8814816f2d2940dbbc2817277eff42db">arm_compute::graph::TaskExecutor::get</a></div><div class="ttdeci">static TaskExecutor &amp; get()</div><div class="ttdoc">Task executor accessor.</div><div class="ttdef"><b>Definition:</b> <a href="_workload_8cpp_source.xhtml#l00074">Workload.cpp:74</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_open_c_l_clock_xhtml_a5d5d9ebd12cd3a7d268bc98a3fc7bf97"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_open_c_l_clock.xhtml#a5d5d9ebd12cd3a7d268bc98a3fc7bf97">arm_compute::test::framework::OpenCLClock::start</a></div><div class="ttdeci">void start() override</div><div class="ttdoc">Start measuring.</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_timer_8cpp_source.xhtml#l00169">OpenCLTimer.cpp:169</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00466">Error.h:466</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a02110ece50ffc08b8ae07c7a63eb10df"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">arm_compute::test::validation::ss</a></div><div class="ttdeci">std::stringstream ss(mlgo_str)</div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1framework_xhtml_a3a01a70ad3a22d8b80c413e8a5977100ab50339a10e1de285ac99d4c3990b8693"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100ab50339a10e1de285ac99d4c3990b8693">arm_compute::test::framework::ScaleFactor::NONE</a></div><div class="ttdeci">@ NONE</div></div>
<div class="ttc" id="a_n_e_batch_normalization_layer_kernel_8cpp_xhtml_a8f8f80d37794cde9472343e4487ba3eb"><div class="ttname"><a href="_n_e_batch_normalization_layer_kernel_8cpp.xhtml#a8f8f80d37794cde9472343e4487ba3eb">name</a></div><div class="ttdeci">const char * name</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_batch_normalization_layer_kernel_8cpp_source.xhtml#l00066">NEBatchNormalizationLayerKernel.cpp:66</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1framework_xhtml_a3a01a70ad3a22d8b80c413e8a5977100a55d658bdb6741297d391d36632cb51b1"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100a55d658bdb6741297d391d36632cb51b1">arm_compute::test::framework::ScaleFactor::TIME_S</a></div><div class="ttdeci">@ TIME_S</div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1framework_xhtml_a3a01a70ad3a22d8b80c413e8a5977100a8ed2f2476469f812d63a2f4e83166c61"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100a8ed2f2476469f812d63a2f4e83166c61">arm_compute::test::framework::ScaleFactor::TIME_MS</a></div><div class="ttdeci">@ TIME_MS</div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_adf0dd2db07cdbb966d6e385d3cd2605c"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#adf0dd2db07cdbb966d6e385d3cd2605c">arm_compute::test::validation::context</a></div><div class="ttdeci">auto context</div><div class="ttdef"><b>Definition:</b> <a href="_direct_conv2d_8cpp_source.xhtml#l00167">DirectConv2d.cpp:167</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_task_executor_xhtml_af356b3757a26ca474239624e161fb49c"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_task_executor.xhtml#af356b3757a26ca474239624e161fb49c">arm_compute::graph::TaskExecutor::execute_function</a></div><div class="ttdeci">std::function&lt; decltype(execute_task)&gt; execute_function</div><div class="ttdoc">Function that is responsible for executing tasks.</div><div class="ttdef"><b>Definition:</b> <a href="_workload_8h_source.xhtml#l00063">Workload.h:63</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_scheduler_xhtml_a9b58d0eb9a2af8e6d7908695e1557d6c"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">arm_compute::CLScheduler::get</a></div><div class="ttdeci">static CLScheduler &amp; get()</div><div class="ttdoc">Access the scheduler singleton.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00112">CLScheduler.cpp:112</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_1_1parser_xhtml_a9fe67a1da3e2628bade473115ecbb5be"><div class="ttname"><a href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a9fe67a1da3e2628bade473115ecbb5be">arm_compute::mlgo::parser::end</a></div><div class="ttdeci">void end(TokenStream &amp;in, bool &amp;valid)</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8cpp_source.xhtml#l00283">MLGOParser.cpp:283</a></div></div>
<div class="ttc" id="anamespacecheck__header__guards_xhtml_a7f345697df7eb20c9aba1ab6980cae8f"><div class="ttname"><a href="namespacecheck__header__guards.xhtml#a7f345697df7eb20c9aba1ab6980cae8f">check_header_guards.retval</a></div><div class="ttdeci">int retval</div><div class="ttdef"><b>Definition:</b> <a href="check__header__guards_8py_source.xhtml#l00188">check_header_guards.py:188</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_ac57b92957968088a392021cac1d2076b"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">arm_compute::test::validation::info</a></div><div class="ttdeci">ScaleKernelInfo info(interpolation_policy, default_border_mode, PixelValue(), sampling_policy, false)</div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_open_c_l_clock_xhtml_a73cabccc9d4406bf48f1db033dc35005"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_open_c_l_clock.xhtml#a73cabccc9d4406bf48f1db033dc35005">arm_compute::test::framework::OpenCLClock::measurements</a></div><div class="ttdeci">MeasurementsMap measurements() const override</div><div class="ttdoc">Return the latest measurements.</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_timer_8cpp_source.xhtml#l00193">OpenCLTimer.cpp:193</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_scheduler_xhtml_a398a2582c746d28fc125487a44c9ed74"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a398a2582c746d28fc125487a44c9ed74">arm_compute::CLScheduler::queue</a></div><div class="ttdeci">cl::CommandQueue &amp; queue()</div><div class="ttdoc">Accessor for the associated CL command queue.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00040">CLScheduler.cpp:40</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_a434f9e0998ebb096bf09a0a6abdd5938"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#a434f9e0998ebb096bf09a0a6abdd5938">clRetainEvent</a></div><div class="ttdeci">cl_int clRetainEvent(cl_event event)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00937">OpenCL.cpp:937</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_scheduler_xhtml_a9608e5af9f3a199f69ca6aa41b94359a"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a9608e5af9f3a199f69ca6aa41b94359a">arm_compute::CLScheduler::set_queue</a></div><div class="ttdeci">void set_queue(cl::CommandQueue queue)</div><div class="ttdoc">Accessor to set the CL command queue to be used by the scheduler.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00056">CLScheduler.cpp:56</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_instrument_xhtml_afc7df496e6026b91c3f48da6821c86a9"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml#afc7df496e6026b91c3f48da6821c86a9">arm_compute::test::framework::Instrument::MeasurementsMap</a></div><div class="ttdeci">std::map&lt; std::string, Measurement &gt; MeasurementsMap</div><div class="ttdoc">Map of measurements.</div><div class="ttdef"><b>Definition:</b> <a href="_instrument_8h_source.xhtml#l00109">Instrument.h:109</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1test.xhtml">test</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml">framework</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_open_c_l_clock.xhtml">OpenCLClock</a></li>
    <li class="footer">Generated on Mon Mar 18 2024 11:32:16 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
