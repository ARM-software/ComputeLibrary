<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: arm_compute/runtime/CL/CLTuner.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.02.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_c_l_tuner_8h_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">CLTuner.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_c_l_tuner_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2017-2022 Arm Limited.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifndef ARM_COMPUTE_CLTUNER_H</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#define ARM_COMPUTE_CLTUNER_H</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160; </div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_open_c_l_8h.xhtml">arm_compute/core/CL/OpenCL.h</a>&quot;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2core_2utils_2misc_2_macros_8h.xhtml">arm_compute/core/utils/misc/Macros.h</a>&quot;</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_c_l_tuner_types_8h.xhtml">arm_compute/runtime/CL/CLTunerTypes.h</a>&quot;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_c_l_tuning_params_8h.xhtml">arm_compute/runtime/CL/CLTuningParams.h</a>&quot;</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_c_l_tuner_8h.xhtml">arm_compute/runtime/CL/ICLTuner.h</a>&quot;</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160; </div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &lt;unordered_map&gt;</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160; </div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;{</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keyword">class </span>ICLKernel;</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="comment">/** Basic implementation of the OpenCL tuner interface */</span></div>
<div class="line"><a name="l00040"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_tuner.xhtml">   40</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1_c_l_tuner.xhtml">CLTuner</a> : <span class="keyword">public</span> <a class="code" href="classarm__compute_1_1_i_c_l_tuner.xhtml">ICLTuner</a></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;{</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keyword">public</span>:<span class="comment"></span></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="comment">    /** Constructor</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="comment">     * @param[in] tune_new_kernels Find the optimal local workgroup size for kernels which are not present in the table ?</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="comment">     * @param[in] tuning_info      (Optional) opencl parameters to tune</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tuner.xhtml#af40cb6e89337657d0fea6a8629f69a32">CLTuner</a>(<span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1_c_l_tuner.xhtml#a362184f6651ae4acde05d5ce85cfd16f">tune_new_kernels</a> = <span class="keyword">true</span>, <a class="code" href="structarm__compute_1_1_c_l_tuning_info.xhtml">CLTuningInfo</a> tuning_info = <a class="code" href="structarm__compute_1_1_c_l_tuning_info.xhtml">CLTuningInfo</a>());</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="comment">    /** Destructor */</span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tuner.xhtml#a577ac5b9d244bdf031905faaf08b968c">~CLTuner</a>() = <span class="keywordflow">default</span>;</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="comment">    /** Setter for tune_new_kernels option</span></div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="comment">     * @param[in] tune_new_kernels Find the optimal local workgroup size for kernels which are not present in the table ?</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_c_l_tuner.xhtml#aba10acdb2d58e3e0a96364c487a71d40">set_tune_new_kernels</a>(<span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1_c_l_tuner.xhtml#a362184f6651ae4acde05d5ce85cfd16f">tune_new_kernels</a>);</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="comment">    /** Tune kernels that are not in the tuning parameters table</span></div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="comment">     * @return True if tuning of new kernels is enabled.</span></div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1_c_l_tuner.xhtml#a362184f6651ae4acde05d5ce85cfd16f">tune_new_kernels</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="comment">    /** Setter for tune parameters option</span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="comment">     * @param[in] tuning_info opencl parameters to tune</span></div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_c_l_tuner.xhtml#a867dcc8110e466575c074674c0db52ac">set_tuning_parameters</a>(<a class="code" href="structarm__compute_1_1_c_l_tuning_info.xhtml">CLTuningInfo</a> tuning_info);</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="comment">    /** Set OpenCL tuner mode</span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="comment">     * @param[in] mode Indicates how exhaustive the search for the optimal tuning parameters should be while tuning. Default is Exhaustive mode</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_c_l_tuner.xhtml#aae485b24df65d39cb646e48317f49639">set_tuner_mode</a>(<a class="code" href="namespacearm__compute.xhtml#ae76ef5bd3ad69f7380ebb3ac6033ec5c">CLTunerMode</a> <a class="code" href="namespaceclang__tidy__rules.xhtml#a1a6b6fb557d8d37d59700faf4e4c9167">mode</a>);</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="comment">    /** Manually add tuning parameters for a kernel</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="comment">     * @param[in] kernel_id             Unique identifiant of the kernel</span></div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="comment">     * @param[in] optimal_tuning_params Optimal tuning parameters to use for the given kernel</span></div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_c_l_tuner.xhtml#a7993b367bfe0275459eafb09059da1d8">add_tuning_params</a>(<span class="keyword">const</span> std::string &amp;kernel_id, <a class="code" href="classarm__compute_1_1_c_l_tuning_params.xhtml">CLTuningParams</a> optimal_tuning_params);</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="comment">    /** Import tuning parameters table</span></div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="comment">     * @param[in] tuning_params_table The unordered_map container to import</span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_c_l_tuner.xhtml#afbcfe4307e76d284d098b1ca3f83e065">import_tuning_params</a>(<span class="keyword">const</span> std::unordered_map&lt;std::string, CLTuningParams&gt; &amp;<a class="code" href="classarm__compute_1_1_c_l_tuner.xhtml#a09f3664a934e7bb4b227fbe3a7df555f">tuning_params_table</a>);</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="comment">    /** Give read access to the tuning params table</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="comment">     * @return The tuning params table as unordered_map container</span></div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="keyword">const</span> std::unordered_map&lt;std::string, CLTuningParams&gt; &amp;<a class="code" href="classarm__compute_1_1_c_l_tuner.xhtml#a09f3664a934e7bb4b227fbe3a7df555f">tuning_params_table</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="comment">    /** Set the OpenCL kernel event</span></div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="comment">     * @note The interceptor can use this function to store the event associated to the OpenCL kernel</span></div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="comment">     * @param[in] kernel_event The OpenCL kernel event</span></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_c_l_tuner.xhtml#a7937dca7876064401bb14b4443bf5d8d">set_cl_kernel_event</a>(cl_event kernel_event);</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="comment">    /** clEnqueueNDRangeKernel symbol */</span></div>
<div class="line"><a name="l00106"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_tuner.xhtml#a5baba955626e8da33ed5dd829a538974">  106</a></span>&#160;    std::function&lt;decltype(<a class="code" href="_open_c_l_8cpp.xhtml#a0152f4b089c26f22f032162d0b7a0d21">clEnqueueNDRangeKernel</a>)&gt; <a class="code" href="classarm__compute_1_1_c_l_tuner.xhtml#a5baba955626e8da33ed5dd829a538974">real_clEnqueueNDRangeKernel</a>;</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="comment">    /** Load the tuning parameters table from file. It also sets up the tuning read from the file</span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="comment">     * @param[in] filename Load the tuning parameters table from this file.(Must exist)</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_c_l_tuner.xhtml#a5ddfa449f78e4c4d8345e37f1719cc57">load_from_file</a>(<span class="keyword">const</span> std::string &amp;filename);</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="comment">    /** Save the content of the tuning parameters table to file</span></div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="comment">     * @param[in] filename Save the tuning parameters table to this file. (Content will be overwritten)</span></div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="comment">     * @return true if the file was created</span></div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1_c_l_tuner.xhtml#a3954437274c111b1d51ae164fbe6bb2f">save_to_file</a>(<span class="keyword">const</span> std::string &amp;filename) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160; </div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <span class="comment">// Inherited methods overridden:</span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_c_l_tuner.xhtml#a52f755d664bbdcb9346cdf5cc4a7e958">tune_kernel_static</a>(<a class="code" href="classarm__compute_1_1_i_c_l_kernel.xhtml">ICLKernel</a> &amp;kernel) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_c_l_tuner.xhtml#af073b532560e2105dd22d381f5888ce7">tune_kernel_dynamic</a>(<a class="code" href="classarm__compute_1_1_i_c_l_kernel.xhtml">ICLKernel</a> &amp;kernel) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_c_l_tuner.xhtml#af073b532560e2105dd22d381f5888ce7">tune_kernel_dynamic</a>(<a class="code" href="classarm__compute_1_1_i_c_l_kernel.xhtml">ICLKernel</a> &amp;kernel, <a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> &amp;tensors) <span class="keyword">override</span>;<span class="comment"></span></div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="comment">    /** Is the kernel_event set ?</span></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="comment">     * @return true if the kernel_event is set.</span></div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1_c_l_tuner.xhtml#ac6fe363cafdd1fcfb6179a7cceac7dad">kernel_event_is_set</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="comment">    /** A wrapper wrapping tensors and other objects needed for running the kernel</span></div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    <span class="keyword">struct </span>IKernelData;</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160; </div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="keyword">private</span>:<span class="comment"></span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="comment">    /** Perform tune_kernel_dynamic</span></div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="comment">     * @param[in]     kernel OpenCL kernel to be tuned with tuning parameters</span></div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="comment">     * @param[in,out] data   IKernelData object wrapping tensors and other objects needed for running the kernel</span></div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    <span class="keywordtype">void</span> do_tune_kernel_dynamic(<a class="code" href="classarm__compute_1_1_i_c_l_kernel.xhtml">ICLKernel</a> &amp;kernel, IKernelData *data);<span class="comment"></span></div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="comment">    /** Find optimal tuning parameters using brute-force approach</span></div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="comment">     * @param[in]     kernel OpenCL kernel to be tuned with tuning parameters</span></div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="comment">     * @param[in,out] data   IKernelData object wrapping tensors and other objects needed for running the kernel</span></div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="comment">     * @return The optimal tuning parameters to use</span></div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tuning_params.xhtml">CLTuningParams</a> find_optimal_tuning_params(<a class="code" href="classarm__compute_1_1_i_c_l_kernel.xhtml">ICLKernel</a> &amp;kernel, IKernelData *data);</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160; </div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    std::unordered_map&lt;std::string, CLTuningParams&gt; _tuning_params_table;</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    std::unordered_map&lt;std::string, cl::NDRange&gt;    _lws_table;</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    cl::Event                                       _kernel_event;</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <span class="keywordtype">bool</span>                                            _tune_new_kernels;</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    <a class="code" href="structarm__compute_1_1_c_l_tuning_info.xhtml">CLTuningInfo</a>                                    _tuning_info;</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;};</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;} <span class="comment">// namespace arm_compute</span></div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/*ARM_COMPUTE_CLTUNER_H */</span><span class="preprocessor"></span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassarm__compute_1_1_c_l_tuner_xhtml_a3954437274c111b1d51ae164fbe6bb2f"><div class="ttname"><a href="classarm__compute_1_1_c_l_tuner.xhtml#a3954437274c111b1d51ae164fbe6bb2f">arm_compute::CLTuner::save_to_file</a></div><div class="ttdeci">bool save_to_file(const std::string &amp;filename) const</div><div class="ttdoc">Save the content of the tuning parameters table to file.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_tuner_8cpp_source.xhtml#l00350">CLTuner.cpp:350</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_tuner_xhtml_a09f3664a934e7bb4b227fbe3a7df555f"><div class="ttname"><a href="classarm__compute_1_1_c_l_tuner.xhtml#a09f3664a934e7bb4b227fbe3a7df555f">arm_compute::CLTuner::tuning_params_table</a></div><div class="ttdeci">const std::unordered_map&lt; std::string, CLTuningParams &gt; &amp; tuning_params_table() const</div><div class="ttdoc">Give read access to the tuning params table.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_tuner_8cpp_source.xhtml#l00287">CLTuner.cpp:287</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_a0152f4b089c26f22f032162d0b7a0d21"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#a0152f4b089c26f22f032162d0b7a0d21">clEnqueueNDRangeKernel</a></div><div class="ttdeci">cl_int clEnqueueNDRangeKernel(cl_command_queue command_queue, cl_kernel kernel, cl_uint work_dim, const size_t *global_work_offset, const size_t *global_work_size, const size_t *local_work_size, cl_uint num_events_in_wait_list, const cl_event *event_wait_list, cl_event *event)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00459">OpenCL.cpp:459</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_tuner_xhtml_a52f755d664bbdcb9346cdf5cc4a7e958"><div class="ttname"><a href="classarm__compute_1_1_c_l_tuner.xhtml#a52f755d664bbdcb9346cdf5cc4a7e958">arm_compute::CLTuner::tune_kernel_static</a></div><div class="ttdeci">void tune_kernel_static(ICLKernel &amp;kernel) override</div><div class="ttdoc">Tune OpenCL kernel statically.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_tuner_8cpp_source.xhtml#l00094">CLTuner.cpp:94</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_tuner_xhtml_ac6fe363cafdd1fcfb6179a7cceac7dad"><div class="ttname"><a href="classarm__compute_1_1_c_l_tuner.xhtml#ac6fe363cafdd1fcfb6179a7cceac7dad">arm_compute::CLTuner::kernel_event_is_set</a></div><div class="ttdeci">bool kernel_event_is_set() const</div><div class="ttdoc">Is the kernel_event set ?</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_tuner_8cpp_source.xhtml#l00071">CLTuner.cpp:71</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_pack_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_pack.xhtml">arm_compute::ITensorPack</a></div><div class="ttdoc">Tensor packing service.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_pack_8h_source.xhtml#l00039">ITensorPack.h:39</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_tuner_xhtml_a867dcc8110e466575c074674c0db52ac"><div class="ttname"><a href="classarm__compute_1_1_c_l_tuner.xhtml#a867dcc8110e466575c074674c0db52ac">arm_compute::CLTuner::set_tuning_parameters</a></div><div class="ttdeci">void set_tuning_parameters(CLTuningInfo tuning_info)</div><div class="ttdoc">Setter for tune parameters option.</div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_tuner_xhtml_af40cb6e89337657d0fea6a8629f69a32"><div class="ttname"><a href="classarm__compute_1_1_c_l_tuner.xhtml#af40cb6e89337657d0fea6a8629f69a32">arm_compute::CLTuner::CLTuner</a></div><div class="ttdeci">CLTuner(bool tune_new_kernels=true, CLTuningInfo tuning_info=CLTuningInfo())</div><div class="ttdoc">Constructor.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_tuner_8cpp_source.xhtml#l00040">CLTuner.cpp:40</a></div></div>
<div class="ttc" id="astructarm__compute_1_1_c_l_tuning_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1_c_l_tuning_info.xhtml">arm_compute::CLTuningInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_c_l_tuner_types_8h_source.xhtml#l00043">CLTunerTypes.h:43</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_tuning_params_xhtml"><div class="ttname"><a href="classarm__compute_1_1_c_l_tuning_params.xhtml">arm_compute::CLTuningParams</a></div><div class="ttdoc">&lt; OpenCL tuner parameters</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_tuning_params_8h_source.xhtml#l00037">CLTuningParams.h:37</a></div></div>
<div class="ttc" id="a_open_c_l_8h_xhtml"><div class="ttname"><a href="_open_c_l_8h.xhtml">OpenCL.h</a></div><div class="ttdoc">Wrapper to configure the Khronos OpenCL C++ header.</div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_tuner_xhtml_a7993b367bfe0275459eafb09059da1d8"><div class="ttname"><a href="classarm__compute_1_1_c_l_tuner.xhtml#a7993b367bfe0275459eafb09059da1d8">arm_compute::CLTuner::add_tuning_params</a></div><div class="ttdeci">void add_tuning_params(const std::string &amp;kernel_id, CLTuningParams optimal_tuning_params)</div><div class="ttdoc">Manually add tuning parameters for a kernel.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_tuner_8cpp_source.xhtml#l00152">CLTuner.cpp:152</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_tuner_xhtml_a7937dca7876064401bb14b4443bf5d8d"><div class="ttname"><a href="classarm__compute_1_1_c_l_tuner.xhtml#a7937dca7876064401bb14b4443bf5d8d">arm_compute::CLTuner::set_cl_kernel_event</a></div><div class="ttdeci">void set_cl_kernel_event(cl_event kernel_event)</div><div class="ttdoc">Set the OpenCL kernel event.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_tuner_8cpp_source.xhtml#l00075">CLTuner.cpp:75</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_tuner_xhtml_a362184f6651ae4acde05d5ce85cfd16f"><div class="ttname"><a href="classarm__compute_1_1_c_l_tuner.xhtml#a362184f6651ae4acde05d5ce85cfd16f">arm_compute::CLTuner::tune_new_kernels</a></div><div class="ttdeci">bool tune_new_kernels() const</div><div class="ttdoc">Tune kernels that are not in the tuning parameters table.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_tuner_8cpp_source.xhtml#l00084">CLTuner.cpp:84</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_c_l_kernel_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_c_l_kernel.xhtml">arm_compute::ICLKernel</a></div><div class="ttdoc">Common interface for all the OpenCL kernels.</div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_i_c_l_kernel_8h_source.xhtml#l00067">ICLKernel.h:67</a></div></div>
<div class="ttc" id="a_i_c_l_tuner_8h_xhtml"><div class="ttname"><a href="_i_c_l_tuner_8h.xhtml">ICLTuner.h</a></div><div class="ttdoc">Interface used to tune the local work-group size of OpenCL kernels.</div></div>
<div class="ttc" id="a_c_l_tuner_types_8h_xhtml"><div class="ttname"><a href="_c_l_tuner_types_8h.xhtml">CLTunerTypes.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_tuner_xhtml_afbcfe4307e76d284d098b1ca3f83e065"><div class="ttname"><a href="classarm__compute_1_1_c_l_tuner.xhtml#afbcfe4307e76d284d098b1ca3f83e065">arm_compute::CLTuner::import_tuning_params</a></div><div class="ttdeci">void import_tuning_params(const std::unordered_map&lt; std::string, CLTuningParams &gt; &amp;tuning_params_table)</div><div class="ttdoc">Import tuning parameters table.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_tuner_8cpp_source.xhtml#l00292">CLTuner.cpp:292</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_tuner_xhtml_a577ac5b9d244bdf031905faaf08b968c"><div class="ttname"><a href="classarm__compute_1_1_c_l_tuner.xhtml#a577ac5b9d244bdf031905faaf08b968c">arm_compute::CLTuner::~CLTuner</a></div><div class="ttdeci">~CLTuner()=default</div><div class="ttdoc">Destructor.</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2024 Arm Limited.</div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="anamespaceclang__tidy__rules_xhtml_a1a6b6fb557d8d37d59700faf4e4c9167"><div class="ttname"><a href="namespaceclang__tidy__rules.xhtml#a1a6b6fb557d8d37d59700faf4e4c9167">clang_tidy_rules.mode</a></div><div class="ttdeci">mode</div><div class="ttdef"><b>Definition:</b> <a href="clang__tidy__rules_8py_source.xhtml#l00196">clang_tidy_rules.py:196</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_tuner_xhtml_af073b532560e2105dd22d381f5888ce7"><div class="ttname"><a href="classarm__compute_1_1_c_l_tuner.xhtml#af073b532560e2105dd22d381f5888ce7">arm_compute::CLTuner::tune_kernel_dynamic</a></div><div class="ttdeci">void tune_kernel_dynamic(ICLKernel &amp;kernel) override</div><div class="ttdoc">Tune OpenCL kernel dynamically.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_tuner_8cpp_source.xhtml#l00099">CLTuner.cpp:99</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ae76ef5bd3ad69f7380ebb3ac6033ec5c"><div class="ttname"><a href="namespacearm__compute.xhtml#ae76ef5bd3ad69f7380ebb3ac6033ec5c">arm_compute::CLTunerMode</a></div><div class="ttdeci">CLTunerMode</div><div class="ttdoc">&lt; OpenCL tuner modes</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_tuner_types_8h_source.xhtml#l00035">CLTunerTypes.h:35</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_tuner_xhtml_a5ddfa449f78e4c4d8345e37f1719cc57"><div class="ttname"><a href="classarm__compute_1_1_c_l_tuner.xhtml#a5ddfa449f78e4c4d8345e37f1719cc57">arm_compute::CLTuner::load_from_file</a></div><div class="ttdeci">void load_from_file(const std::string &amp;filename)</div><div class="ttdoc">Load the tuning parameters table from file.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_tuner_8cpp_source.xhtml#l00298">CLTuner.cpp:298</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_tuner_xhtml_aae485b24df65d39cb646e48317f49639"><div class="ttname"><a href="classarm__compute_1_1_c_l_tuner.xhtml#aae485b24df65d39cb646e48317f49639">arm_compute::CLTuner::set_tuner_mode</a></div><div class="ttdeci">void set_tuner_mode(CLTunerMode mode)</div><div class="ttdoc">Set OpenCL tuner mode.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_tuner_8cpp_source.xhtml#l00089">CLTuner.cpp:89</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_tuner_xhtml_a5baba955626e8da33ed5dd829a538974"><div class="ttname"><a href="classarm__compute_1_1_c_l_tuner.xhtml#a5baba955626e8da33ed5dd829a538974">arm_compute::CLTuner::real_clEnqueueNDRangeKernel</a></div><div class="ttdeci">std::function&lt; decltype(clEnqueueNDRangeKernel)&gt; real_clEnqueueNDRangeKernel</div><div class="ttdoc">clEnqueueNDRangeKernel symbol</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_tuner_8h_source.xhtml#l00106">CLTuner.h:106</a></div></div>
<div class="ttc" id="aarm__compute_2core_2utils_2misc_2_macros_8h_xhtml"><div class="ttname"><a href="arm__compute_2core_2utils_2misc_2_macros_8h.xhtml">Macros.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_tuner_xhtml_aba10acdb2d58e3e0a96364c487a71d40"><div class="ttname"><a href="classarm__compute_1_1_c_l_tuner.xhtml#aba10acdb2d58e3e0a96364c487a71d40">arm_compute::CLTuner::set_tune_new_kernels</a></div><div class="ttdeci">void set_tune_new_kernels(bool tune_new_kernels)</div><div class="ttdoc">Setter for tune_new_kernels option.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_tuner_8cpp_source.xhtml#l00080">CLTuner.cpp:80</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_c_l_tuner_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_c_l_tuner.xhtml">arm_compute::ICLTuner</a></div><div class="ttdoc">Basic interface for tuning the OpenCL kernels.</div><div class="ttdef"><b>Definition:</b> <a href="_i_c_l_tuner_8h_source.xhtml#l00034">ICLTuner.h:34</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_tuner_xhtml"><div class="ttname"><a href="classarm__compute_1_1_c_l_tuner.xhtml">arm_compute::CLTuner</a></div><div class="ttdoc">Basic implementation of the OpenCL tuner interface.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_tuner_8h_source.xhtml#l00040">CLTuner.h:40</a></div></div>
<div class="ttc" id="a_c_l_tuning_params_8h_xhtml"><div class="ttname"><a href="_c_l_tuning_params_8h.xhtml">CLTuningParams.h</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_214608ef36d61442cb2b0c1c4e9a7def.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="dir_8bc26130589aa16388b5a02f17abf2c2.xhtml">runtime</a></li><li class="navelem"><a class="el" href="dir_b986aa98f9b6490bb4fc7918500346fb.xhtml">CL</a></li><li class="navelem"><a class="el" href="_c_l_tuner_8h.xhtml">CLTuner.h</a></li>
    <li class="footer">Generated on Mon Mar 18 2024 11:31:55 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
