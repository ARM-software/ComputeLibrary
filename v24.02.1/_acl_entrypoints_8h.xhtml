<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: arm_compute/AclEntrypoints.h File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.02.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_acl_entrypoints_8h.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">AclEntrypoints.h File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="_acl_types_8h_source.xhtml">arm_compute/AclTypes.h</a>&quot;</code><br />
</div>
<p><a href="_acl_entrypoints_8h_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a24008433ea6baa1e783ffd60a0a003d9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2">AclStatus</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_acl_entrypoints_8h.xhtml#a24008433ea6baa1e783ffd60a0a003d9">AclCreateContext</a> (<a class="el" href="_acl_types_8h.xhtml#ac624458ca531df9ccff14d2316d6dd28">AclContext</a> *ctx, <a class="el" href="_acl_types_8h.xhtml#a0c40e87dd09c38533d746df32e9ca483">AclTarget</a> target, const <a class="el" href="struct_acl_context_options.xhtml">AclContextOptions</a> *options)</td></tr>
<tr class="memdesc:a24008433ea6baa1e783ffd60a0a003d9"><td class="mdescLeft">&#160;</td><td class="mdescRight">__cplusplus  <a href="_acl_entrypoints_8h.xhtml#a24008433ea6baa1e783ffd60a0a003d9">More...</a><br /></td></tr>
<tr class="separator:a24008433ea6baa1e783ffd60a0a003d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab28f6d540e919720ad2425dbe67c38c3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2">AclStatus</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_acl_entrypoints_8h.xhtml#ab28f6d540e919720ad2425dbe67c38c3">AclDestroyContext</a> (<a class="el" href="_acl_types_8h.xhtml#ac624458ca531df9ccff14d2316d6dd28">AclContext</a> ctx)</td></tr>
<tr class="memdesc:ab28f6d540e919720ad2425dbe67c38c3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroy a given context object.  <a href="_acl_entrypoints_8h.xhtml#ab28f6d540e919720ad2425dbe67c38c3">More...</a><br /></td></tr>
<tr class="separator:ab28f6d540e919720ad2425dbe67c38c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2d02b31b77acf5b05e5d311bc46b3147"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2">AclStatus</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_acl_entrypoints_8h.xhtml#a2d02b31b77acf5b05e5d311bc46b3147">AclCreateQueue</a> (<a class="el" href="_acl_types_8h.xhtml#ad100d0640d4dff954977840f32e7cfbe">AclQueue</a> *queue, <a class="el" href="_acl_types_8h.xhtml#ac624458ca531df9ccff14d2316d6dd28">AclContext</a> ctx, const <a class="el" href="struct_acl_queue_options.xhtml">AclQueueOptions</a> *options)</td></tr>
<tr class="memdesc:a2d02b31b77acf5b05e5d311bc46b3147"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create an operator queue.  <a href="_acl_entrypoints_8h.xhtml#a2d02b31b77acf5b05e5d311bc46b3147">More...</a><br /></td></tr>
<tr class="separator:a2d02b31b77acf5b05e5d311bc46b3147"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9f1e3973a09da9eb7e86b96b7bd635c3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2">AclStatus</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_acl_entrypoints_8h.xhtml#a9f1e3973a09da9eb7e86b96b7bd635c3">AclQueueFinish</a> (<a class="el" href="_acl_types_8h.xhtml#ad100d0640d4dff954977840f32e7cfbe">AclQueue</a> queue)</td></tr>
<tr class="memdesc:a9f1e3973a09da9eb7e86b96b7bd635c3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Wait until all elements on the queue have been completed.  <a href="_acl_entrypoints_8h.xhtml#a9f1e3973a09da9eb7e86b96b7bd635c3">More...</a><br /></td></tr>
<tr class="separator:a9f1e3973a09da9eb7e86b96b7bd635c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a09a6b6162edaca978bd5791ae52fea7d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2">AclStatus</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_acl_entrypoints_8h.xhtml#a09a6b6162edaca978bd5791ae52fea7d">AclDestroyQueue</a> (<a class="el" href="_acl_types_8h.xhtml#ad100d0640d4dff954977840f32e7cfbe">AclQueue</a> queue)</td></tr>
<tr class="memdesc:a09a6b6162edaca978bd5791ae52fea7d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroy a given queue object.  <a href="_acl_entrypoints_8h.xhtml#a09a6b6162edaca978bd5791ae52fea7d">More...</a><br /></td></tr>
<tr class="separator:a09a6b6162edaca978bd5791ae52fea7d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd5a3091549e64d2259d97113aed9d50"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2">AclStatus</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_acl_entrypoints_8h.xhtml#acd5a3091549e64d2259d97113aed9d50">AclCreateTensor</a> (<a class="el" href="_acl_types_8h.xhtml#a90ea96c40064aa67e45589a99db23e96">AclTensor</a> *<a class="el" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>, <a class="el" href="_acl_types_8h.xhtml#ac624458ca531df9ccff14d2316d6dd28">AclContext</a> ctx, const <a class="el" href="struct_acl_tensor_descriptor.xhtml">AclTensorDescriptor</a> *desc, bool allocate)</td></tr>
<tr class="memdesc:acd5a3091549e64d2259d97113aed9d50"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a Tensor object.  <a href="_acl_entrypoints_8h.xhtml#acd5a3091549e64d2259d97113aed9d50">More...</a><br /></td></tr>
<tr class="separator:acd5a3091549e64d2259d97113aed9d50"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a94b41b78fd18d9dbff5325f7636c8974"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2">AclStatus</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_acl_entrypoints_8h.xhtml#a94b41b78fd18d9dbff5325f7636c8974">AclMapTensor</a> (<a class="el" href="_acl_types_8h.xhtml#a90ea96c40064aa67e45589a99db23e96">AclTensor</a> <a class="el" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>, void **handle)</td></tr>
<tr class="memdesc:a94b41b78fd18d9dbff5325f7636c8974"><td class="mdescLeft">&#160;</td><td class="mdescRight">Map a tensor's backing memory to the host.  <a href="_acl_entrypoints_8h.xhtml#a94b41b78fd18d9dbff5325f7636c8974">More...</a><br /></td></tr>
<tr class="separator:a94b41b78fd18d9dbff5325f7636c8974"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a22a4f3406d18376e3d8740c72e3b2a35"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2">AclStatus</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_acl_entrypoints_8h.xhtml#a22a4f3406d18376e3d8740c72e3b2a35">AclUnmapTensor</a> (<a class="el" href="_acl_types_8h.xhtml#a90ea96c40064aa67e45589a99db23e96">AclTensor</a> <a class="el" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>, void *handle)</td></tr>
<tr class="memdesc:a22a4f3406d18376e3d8740c72e3b2a35"><td class="mdescLeft">&#160;</td><td class="mdescRight">Unmap the tensor's backing memory.  <a href="_acl_entrypoints_8h.xhtml#a22a4f3406d18376e3d8740c72e3b2a35">More...</a><br /></td></tr>
<tr class="separator:a22a4f3406d18376e3d8740c72e3b2a35"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3296c2f66ee36d849ae4d51fdd1d0521"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2">AclStatus</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_acl_entrypoints_8h.xhtml#a3296c2f66ee36d849ae4d51fdd1d0521">AclTensorImport</a> (<a class="el" href="_acl_types_8h.xhtml#a90ea96c40064aa67e45589a99db23e96">AclTensor</a> <a class="el" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>, void *handle, <a class="el" href="_acl_types_8h.xhtml#a7a59b5478ea9250c2d244831c2c4672a">AclImportMemoryType</a> <a class="el" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a>)</td></tr>
<tr class="memdesc:a3296c2f66ee36d849ae4d51fdd1d0521"><td class="mdescLeft">&#160;</td><td class="mdescRight">Import external memory to a given tensor object.  <a href="_acl_entrypoints_8h.xhtml#a3296c2f66ee36d849ae4d51fdd1d0521">More...</a><br /></td></tr>
<tr class="separator:a3296c2f66ee36d849ae4d51fdd1d0521"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abb1208d4213183fe5cc0c5742e0df966"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2">AclStatus</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_acl_entrypoints_8h.xhtml#abb1208d4213183fe5cc0c5742e0df966">AclDestroyTensor</a> (<a class="el" href="_acl_types_8h.xhtml#a90ea96c40064aa67e45589a99db23e96">AclTensor</a> <a class="el" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>)</td></tr>
<tr class="memdesc:abb1208d4213183fe5cc0c5742e0df966"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroy a given tensor object.  <a href="_acl_entrypoints_8h.xhtml#abb1208d4213183fe5cc0c5742e0df966">More...</a><br /></td></tr>
<tr class="separator:abb1208d4213183fe5cc0c5742e0df966"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa198d7fd208daa37bea62a3284cf05a0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2">AclStatus</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_acl_entrypoints_8h.xhtml#aa198d7fd208daa37bea62a3284cf05a0">AclCreateTensorPack</a> (<a class="el" href="_acl_types_8h.xhtml#adc3017359ff84d03850580266cb18256">AclTensorPack</a> *pack, <a class="el" href="_acl_types_8h.xhtml#ac624458ca531df9ccff14d2316d6dd28">AclContext</a> ctx)</td></tr>
<tr class="memdesc:aa198d7fd208daa37bea62a3284cf05a0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a tensor pack.  <a href="_acl_entrypoints_8h.xhtml#aa198d7fd208daa37bea62a3284cf05a0">More...</a><br /></td></tr>
<tr class="separator:aa198d7fd208daa37bea62a3284cf05a0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adbb0c63266c2acd743a61c5186d76092"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2">AclStatus</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_acl_entrypoints_8h.xhtml#adbb0c63266c2acd743a61c5186d76092">AclPackTensor</a> (<a class="el" href="_acl_types_8h.xhtml#adc3017359ff84d03850580266cb18256">AclTensorPack</a> pack, <a class="el" href="_acl_types_8h.xhtml#a90ea96c40064aa67e45589a99db23e96">AclTensor</a> <a class="el" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>, int32_t slot_id)</td></tr>
<tr class="memdesc:adbb0c63266c2acd743a61c5186d76092"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add a tensor to a tensor pack.  <a href="_acl_entrypoints_8h.xhtml#adbb0c63266c2acd743a61c5186d76092">More...</a><br /></td></tr>
<tr class="separator:adbb0c63266c2acd743a61c5186d76092"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaf77900a1d93e1890afde55699f4b092"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2">AclStatus</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_acl_entrypoints_8h.xhtml#aaf77900a1d93e1890afde55699f4b092">AclPackTensors</a> (<a class="el" href="_acl_types_8h.xhtml#adc3017359ff84d03850580266cb18256">AclTensorPack</a> pack, <a class="el" href="_acl_types_8h.xhtml#a90ea96c40064aa67e45589a99db23e96">AclTensor</a> *tensors, int32_t *slot_ids, size_t num_tensors)</td></tr>
<tr class="memdesc:aaf77900a1d93e1890afde55699f4b092"><td class="mdescLeft">&#160;</td><td class="mdescRight">A list of tensors to a tensor pack.  <a href="_acl_entrypoints_8h.xhtml#aaf77900a1d93e1890afde55699f4b092">More...</a><br /></td></tr>
<tr class="separator:aaf77900a1d93e1890afde55699f4b092"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0dd4cd60a1039b649151ded8f0833baf"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2">AclStatus</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_acl_entrypoints_8h.xhtml#a0dd4cd60a1039b649151ded8f0833baf">AclDestroyTensorPack</a> (<a class="el" href="_acl_types_8h.xhtml#adc3017359ff84d03850580266cb18256">AclTensorPack</a> pack)</td></tr>
<tr class="memdesc:a0dd4cd60a1039b649151ded8f0833baf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroy a given tensor pack object.  <a href="_acl_entrypoints_8h.xhtml#a0dd4cd60a1039b649151ded8f0833baf">More...</a><br /></td></tr>
<tr class="separator:a0dd4cd60a1039b649151ded8f0833baf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aceab9b4db8a76762883b158faec8f636"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2">AclStatus</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_acl_entrypoints_8h.xhtml#aceab9b4db8a76762883b158faec8f636">AclRunOperator</a> (<a class="el" href="_acl_types_8h.xhtml#adefdd489a321a9c39178951d57658c60">AclOperator</a> op, <a class="el" href="_acl_types_8h.xhtml#ad100d0640d4dff954977840f32e7cfbe">AclQueue</a> queue, <a class="el" href="_acl_types_8h.xhtml#adc3017359ff84d03850580266cb18256">AclTensorPack</a> tensors)</td></tr>
<tr class="memdesc:aceab9b4db8a76762883b158faec8f636"><td class="mdescLeft">&#160;</td><td class="mdescRight">Eager execution of a given operator on a list of inputs and outputs.  <a href="_acl_entrypoints_8h.xhtml#aceab9b4db8a76762883b158faec8f636">More...</a><br /></td></tr>
<tr class="separator:aceab9b4db8a76762883b158faec8f636"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a04c8614f16b47287dd772b26434cd879"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2">AclStatus</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_acl_entrypoints_8h.xhtml#a04c8614f16b47287dd772b26434cd879">AclDestroyOperator</a> (<a class="el" href="_acl_types_8h.xhtml#adefdd489a321a9c39178951d57658c60">AclOperator</a> op)</td></tr>
<tr class="memdesc:a04c8614f16b47287dd772b26434cd879"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroy a given operator object.  <a href="_acl_entrypoints_8h.xhtml#a04c8614f16b47287dd772b26434cd879">More...</a><br /></td></tr>
<tr class="separator:a04c8614f16b47287dd772b26434cd879"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a id="a24008433ea6baa1e783ffd60a0a003d9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a24008433ea6baa1e783ffd60a0a003d9">&#9670;&nbsp;</a></span>AclCreateContext()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2">AclStatus</a> AclCreateContext </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="_acl_types_8h.xhtml#ac624458ca531df9ccff14d2316d6dd28">AclContext</a> *&#160;</td>
          <td class="paramname"><em>ctx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="_acl_types_8h.xhtml#a0c40e87dd09c38533d746df32e9ca483">AclTarget</a>&#160;</td>
          <td class="paramname"><em>target</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="struct_acl_context_options.xhtml">AclContextOptions</a> *&#160;</td>
          <td class="paramname"><em>options</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>__cplusplus </p>
<p>Create a context object</p>
<p>Context is responsible for retaining internal information and work as an aggregate service mechanism</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">ctx</td><td>A valid non-zero context object if no failure occurs </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">target</td><td>Target to create the context for </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">options</td><td>Context options to be used for all the kernels that are created under the context</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Status code</dd></dl>
<p>Returns:</p><ul>
<li><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a5c0200f51580173c58b156cb6c443dce">AclSuccess</a> if function was completed successfully</li>
<li><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2aae6e50c78015ae9c9f6c03ef2c88356e">AclOutOfMemory</a> if there was a failure allocating memory resources</li>
<li><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a2bab471e86cd1e7951172eeae0855f40">AclUnsupportedTarget</a> if the requested target is unsupported</li>
<li><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a00f188d1f6cef6e569b31a95964d26ca">AclInvalidArgument</a> if a given argument is invalid </li>
</ul>

<p class="definition">Definition at line <a class="el" href="_acl_context_8cpp_source.xhtml#l00079">79</a> of file <a class="el" href="_acl_context_8cpp_source.xhtml">AclContext.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;{</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <span class="keywordflow">if</span> (!is_target_valid(target))</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    {</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        <a class="code" href="src_2common_2utils_2_log_8h.xhtml#a4031f58cfc5d279b039fa0e167511b7e">ARM_COMPUTE_LOG_ERROR_WITH_FUNCNAME_ACL</a>(<span class="stringliteral">&quot;Target is invalid!&quot;</span>);</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a2bab471e86cd1e7951172eeae0855f40">AclUnsupportedTarget</a>;</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    }</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160; </div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <span class="keywordflow">if</span> (options != <span class="keyword">nullptr</span> &amp;&amp; !are_context_options_valid(options))</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    {</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        <a class="code" href="src_2common_2utils_2_log_8h.xhtml#a4031f58cfc5d279b039fa0e167511b7e">ARM_COMPUTE_LOG_ERROR_WITH_FUNCNAME_ACL</a>(<span class="stringliteral">&quot;Context options are invalid!&quot;</span>);</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a00f188d1f6cef6e569b31a95964d26ca">AclInvalidArgument</a>;</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    }</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160; </div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="keyword">auto</span> ctx = create_context(target, options);</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <span class="keywordflow">if</span> (ctx == <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    {</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        <a class="code" href="src_2common_2utils_2_log_8h.xhtml#a4031f58cfc5d279b039fa0e167511b7e">ARM_COMPUTE_LOG_ERROR_WITH_FUNCNAME_ACL</a>(<span class="stringliteral">&quot;Couldn&#39;t allocate internal resources for context creation!&quot;</span>);</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2aae6e50c78015ae9c9f6c03ef2c88356e">AclOutOfMemory</a>;</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    }</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    *external_ctx = ctx;</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160; </div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a5c0200f51580173c58b156cb6c443dce">AclSuccess</a>;</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_acl_types_8h_source.xhtml#l00058">AclInvalidArgument</a>, <a class="el" href="_acl_types_8h_source.xhtml#l00054">AclOutOfMemory</a>, <a class="el" href="_acl_types_8h_source.xhtml#l00052">AclSuccess</a>, <a class="el" href="_acl_types_8h_source.xhtml#l00056">AclUnsupportedTarget</a>, and <a class="el" href="src_2common_2utils_2_log_8h_source.xhtml#l00033">ARM_COMPUTE_LOG_ERROR_WITH_FUNCNAME_ACL</a>.</p>

<p class="reference">Referenced by <a class="el" href="_acl_8hpp_source.xhtml#l00384">Context::Context()</a>, and <a class="el" href="cpu_2unit_2_context_8cpp_source.xhtml#l00047">arm_compute::test::validation::TEST_CASE()</a>.</p>

</div>
</div>
<a id="a2d02b31b77acf5b05e5d311bc46b3147"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2d02b31b77acf5b05e5d311bc46b3147">&#9670;&nbsp;</a></span>AclCreateQueue()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2">AclStatus</a> AclCreateQueue </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="_acl_types_8h.xhtml#ad100d0640d4dff954977840f32e7cfbe">AclQueue</a> *&#160;</td>
          <td class="paramname"><em>queue</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="_acl_types_8h.xhtml#ac624458ca531df9ccff14d2316d6dd28">AclContext</a>&#160;</td>
          <td class="paramname"><em>ctx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="struct_acl_queue_options.xhtml">AclQueueOptions</a> *&#160;</td>
          <td class="paramname"><em>options</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Create an operator queue. </p>
<p>Queue is responsible for any scheduling related activities</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">queue</td><td>A valid non-zero queue object is not failures occur </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">ctx</td><td>Context to be used </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">options</td><td>Queue options to be used for the operators using the queue</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Status code</dd></dl>
<p>Returns:</p><ul>
<li><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a5c0200f51580173c58b156cb6c443dce">AclSuccess</a> if function was completed successfully</li>
<li><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2aae6e50c78015ae9c9f6c03ef2c88356e">AclOutOfMemory</a> if there was a failure allocating memory resources</li>
<li><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a2bab471e86cd1e7951172eeae0855f40">AclUnsupportedTarget</a> if the requested target is unsupported</li>
<li><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a00f188d1f6cef6e569b31a95964d26ca">AclInvalidArgument</a> if a given argument is invalid </li>
</ul>

<p class="definition">Definition at line <a class="el" href="_acl_queue_8cpp_source.xhtml#l00045">45</a> of file <a class="el" href="_acl_queue_8cpp_source.xhtml">AclQueue.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;{</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <span class="keyword">using namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a>;</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160; </div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="keyword">auto</span> ctx = <a class="code" href="namespacearm__compute.xhtml#af6916ea927eec95c074b917eafc5a667">get_internal</a>(external_ctx);</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160; </div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ae98a46f4ea1a43ca48acaf15d2eb7113">StatusCode</a> status = <a class="code" href="namespacearm__compute_1_1detail.xhtml#a47ecd4a65072f2ac3dab46b03e350ee2">detail::validate_internal_context</a>(ctx);</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <a class="code" href="src_2common_2utils_2_macros_8h.xhtml#a17bc1c1fe5cb9282bcb0b27cfa0ee3db">ARM_COMPUTE_RETURN_CENUM_ON_FAILURE</a>(status);</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160; </div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <span class="keywordflow">if</span> (options != <span class="keyword">nullptr</span> &amp;&amp; !is_mode_valid(options))</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    {</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        <a class="code" href="src_2common_2utils_2_log_8h.xhtml#ada668c5c47184c0667c0b029d92d3b4f">ARM_COMPUTE_LOG_ERROR_ACL</a>(<span class="stringliteral">&quot;Queue options are invalid&quot;</span>);</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a00f188d1f6cef6e569b31a95964d26ca">AclInvalidArgument</a>;</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    }</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160; </div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <span class="keyword">auto</span> queue = ctx-&gt;create_queue(options);</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <span class="keywordflow">if</span> (queue == <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    {</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        <a class="code" href="src_2common_2utils_2_log_8h.xhtml#ada668c5c47184c0667c0b029d92d3b4f">ARM_COMPUTE_LOG_ERROR_ACL</a>(<span class="stringliteral">&quot;Couldn&#39;t allocate internal resources&quot;</span>);</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2aae6e50c78015ae9c9f6c03ef2c88356e">AclOutOfMemory</a>;</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    }</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160; </div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    *external_queue = queue;</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160; </div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a5c0200f51580173c58b156cb6c443dce">AclSuccess</a>;</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_acl_types_8h_source.xhtml#l00058">AclInvalidArgument</a>, <a class="el" href="_acl_types_8h_source.xhtml#l00054">AclOutOfMemory</a>, <a class="el" href="_acl_types_8h_source.xhtml#l00052">AclSuccess</a>, <a class="el" href="src_2common_2utils_2_log_8h_source.xhtml#l00032">ARM_COMPUTE_LOG_ERROR_ACL</a>, <a class="el" href="src_2common_2utils_2_macros_8h_source.xhtml#l00029">ARM_COMPUTE_RETURN_CENUM_ON_FAILURE</a>, <a class="el" href="_i_context_8h_source.xhtml#l00127">arm_compute::get_internal()</a>, and <a class="el" href="_i_context_8h_source.xhtml#l00140">arm_compute::detail::validate_internal_context()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_acl_8hpp_source.xhtml#l00460">Queue::Queue()</a>.</p>

</div>
</div>
<a id="acd5a3091549e64d2259d97113aed9d50"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acd5a3091549e64d2259d97113aed9d50">&#9670;&nbsp;</a></span>AclCreateTensor()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2">AclStatus</a> AclCreateTensor </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="_acl_types_8h.xhtml#a90ea96c40064aa67e45589a99db23e96">AclTensor</a> *&#160;</td>
          <td class="paramname"><em>tensor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="_acl_types_8h.xhtml#ac624458ca531df9ccff14d2316d6dd28">AclContext</a>&#160;</td>
          <td class="paramname"><em>ctx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="struct_acl_tensor_descriptor.xhtml">AclTensorDescriptor</a> *&#160;</td>
          <td class="paramname"><em>desc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>allocate</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Create a Tensor object. </p>
<p>Tensor is a generalized matrix construct that can represent up to ND dimensionality (where N = 6 for Compute Library) The object holds a backing memory along-side to operate on</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">tensor</td><td>A valid non-zero tensor object if no failures occur </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">ctx</td><td>Context to be used </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">desc</td><td>Tensor representation meta-data </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">allocate</td><td>Instructs allocation of the tensor objects</td></tr>
  </table>
  </dd>
</dl>
<p>Returns:</p><ul>
<li><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a5c0200f51580173c58b156cb6c443dce">AclSuccess</a> if function was completed successfully</li>
<li><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2aae6e50c78015ae9c9f6c03ef2c88356e">AclOutOfMemory</a> if there was a failure allocating memory resources</li>
<li><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a2bab471e86cd1e7951172eeae0855f40">AclUnsupportedTarget</a> if the requested target is unsupported</li>
<li><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a00f188d1f6cef6e569b31a95964d26ca">AclInvalidArgument</a> if a given argument is invalid </li>
</ul>

<p class="definition">Definition at line <a class="el" href="_acl_tensor_8cpp_source.xhtml#l00071">71</a> of file <a class="el" href="_acl_tensor_8cpp_source.xhtml">AclTensor.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;{</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <span class="keyword">using namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a>;</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160; </div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <a class="code" href="classarm__compute_1_1_i_context.xhtml">IContext</a> *ctx = <a class="code" href="namespacearm__compute.xhtml#af6916ea927eec95c074b917eafc5a667">get_internal</a>(external_ctx);</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160; </div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ae98a46f4ea1a43ca48acaf15d2eb7113">StatusCode</a> status = <a class="code" href="namespacearm__compute_1_1detail.xhtml#a47ecd4a65072f2ac3dab46b03e350ee2">detail::validate_internal_context</a>(ctx);</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <a class="code" href="src_2common_2utils_2_macros_8h.xhtml#a17bc1c1fe5cb9282bcb0b27cfa0ee3db">ARM_COMPUTE_RETURN_CENUM_ON_FAILURE</a>(status);</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160; </div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <span class="keywordflow">if</span> (desc == <span class="keyword">nullptr</span> || !is_desc_valid(*desc))</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    {</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        <a class="code" href="src_2common_2utils_2_log_8h.xhtml#ada668c5c47184c0667c0b029d92d3b4f">ARM_COMPUTE_LOG_ERROR_ACL</a>(<span class="stringliteral">&quot;[AclCreateTensor]: Descriptor is invalid!&quot;</span>);</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a00f188d1f6cef6e569b31a95964d26ca">AclInvalidArgument</a>;</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    }</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160; </div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <span class="keyword">auto</span> <a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a> = ctx-&gt;<a class="code" href="classarm__compute_1_1_i_context.xhtml#a44ec729ae5abf3d48b4a3dd9ab6623cb">create_tensor</a>(*desc, allocate);</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a> == <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    {</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        <a class="code" href="src_2common_2utils_2_log_8h.xhtml#ada668c5c47184c0667c0b029d92d3b4f">ARM_COMPUTE_LOG_ERROR_ACL</a>(<span class="stringliteral">&quot;[AclCreateTensor]: Couldn&#39;t allocate internal resources for tensor creation!&quot;</span>);</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2aae6e50c78015ae9c9f6c03ef2c88356e">AclOutOfMemory</a>;</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    }</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    *external_tensor = <a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160; </div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a5c0200f51580173c58b156cb6c443dce">AclSuccess</a>;</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_acl_types_8h_source.xhtml#l00058">AclInvalidArgument</a>, <a class="el" href="_acl_types_8h_source.xhtml#l00054">AclOutOfMemory</a>, <a class="el" href="_acl_types_8h_source.xhtml#l00052">AclSuccess</a>, <a class="el" href="src_2common_2utils_2_log_8h_source.xhtml#l00032">ARM_COMPUTE_LOG_ERROR_ACL</a>, <a class="el" href="src_2common_2utils_2_macros_8h_source.xhtml#l00029">ARM_COMPUTE_RETURN_CENUM_ON_FAILURE</a>, <a class="el" href="classarm__compute_1_1_i_context.xhtml#a44ec729ae5abf3d48b4a3dd9ab6623cb">IContext::create_tensor()</a>, <a class="el" href="_i_context_8h_source.xhtml#l00127">arm_compute::get_internal()</a>, <a class="el" href="_cl_workload_runtime_8cpp_source.xhtml#l00067">tensor</a>, and <a class="el" href="_i_context_8h_source.xhtml#l00140">arm_compute::detail::validate_internal_context()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_acl_8hpp_source.xhtml#l00601">Tensor::Tensor()</a>.</p>

</div>
</div>
<a id="aa198d7fd208daa37bea62a3284cf05a0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa198d7fd208daa37bea62a3284cf05a0">&#9670;&nbsp;</a></span>AclCreateTensorPack()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2">AclStatus</a> AclCreateTensorPack </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="_acl_types_8h.xhtml#adc3017359ff84d03850580266cb18256">AclTensorPack</a> *&#160;</td>
          <td class="paramname"><em>pack</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="_acl_types_8h.xhtml#ac624458ca531df9ccff14d2316d6dd28">AclContext</a>&#160;</td>
          <td class="paramname"><em>ctx</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Creates a tensor pack. </p>
<p>Tensor packs are used to create a collection of tensors that can be passed around for operator execution</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">pack</td><td>A valid non-zero tensor pack object if no failures occur </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">ctx</td><td>Context to be used</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Status code</dd></dl>
<p>Returns:</p><ul>
<li><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a5c0200f51580173c58b156cb6c443dce">AclSuccess</a> if function was completed successfully</li>
<li><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2aae6e50c78015ae9c9f6c03ef2c88356e">AclOutOfMemory</a> if there was a failure allocating memory resources</li>
<li><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a00f188d1f6cef6e569b31a95964d26ca">AclInvalidArgument</a> if a given argument is invalid </li>
</ul>

<p class="definition">Definition at line <a class="el" href="_acl_tensor_pack_8cpp_source.xhtml#l00051">51</a> of file <a class="el" href="_acl_tensor_pack_8cpp_source.xhtml">AclTensorPack.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;{</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="keyword">using namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a>;</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160; </div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <a class="code" href="classarm__compute_1_1_i_context.xhtml">IContext</a> *ctx = <a class="code" href="namespacearm__compute.xhtml#af6916ea927eec95c074b917eafc5a667">get_internal</a>(external_ctx);</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160; </div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#ae98a46f4ea1a43ca48acaf15d2eb7113">StatusCode</a> status = <a class="code" href="namespacearm__compute_1_1detail.xhtml#a47ecd4a65072f2ac3dab46b03e350ee2">detail::validate_internal_context</a>(ctx);</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <a class="code" href="src_2common_2utils_2_macros_8h.xhtml#a17bc1c1fe5cb9282bcb0b27cfa0ee3db">ARM_COMPUTE_RETURN_CENUM_ON_FAILURE</a>(status);</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160; </div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <span class="keyword">auto</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a> = <span class="keyword">new</span> <a class="code" href="classarm__compute_1_1_tensor_pack.xhtml">TensorPack</a>(ctx);</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a> == <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    {</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        <a class="code" href="src_2common_2utils_2_log_8h.xhtml#a4031f58cfc5d279b039fa0e167511b7e">ARM_COMPUTE_LOG_ERROR_WITH_FUNCNAME_ACL</a>(<span class="stringliteral">&quot;Couldn&#39;t allocate internal resources!&quot;</span>);</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2aae6e50c78015ae9c9f6c03ef2c88356e">AclOutOfMemory</a>;</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    }</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    *external_pack = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a>;</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160; </div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a5c0200f51580173c58b156cb6c443dce">AclSuccess</a>;</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_acl_types_8h_source.xhtml#l00054">AclOutOfMemory</a>, <a class="el" href="_acl_types_8h_source.xhtml#l00052">AclSuccess</a>, <a class="el" href="src_2common_2utils_2_log_8h_source.xhtml#l00033">ARM_COMPUTE_LOG_ERROR_WITH_FUNCNAME_ACL</a>, <a class="el" href="src_2common_2utils_2_macros_8h_source.xhtml#l00029">ARM_COMPUTE_RETURN_CENUM_ON_FAILURE</a>, <a class="el" href="_i_context_8h_source.xhtml#l00127">arm_compute::get_internal()</a>, <a class="el" href="_n_e_o_n_2_im2_col_8cpp_source.xhtml#l00188">arm_compute::test::validation::pack</a>, and <a class="el" href="_i_context_8h_source.xhtml#l00140">arm_compute::detail::validate_internal_context()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_acl_8hpp_source.xhtml#l00705">TensorPack::TensorPack()</a>.</p>

</div>
</div>
<a id="ab28f6d540e919720ad2425dbe67c38c3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab28f6d540e919720ad2425dbe67c38c3">&#9670;&nbsp;</a></span>AclDestroyContext()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2">AclStatus</a> AclDestroyContext </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="_acl_types_8h.xhtml#ac624458ca531df9ccff14d2316d6dd28">AclContext</a>&#160;</td>
          <td class="paramname"><em>ctx</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Destroy a given context object. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">ctx</td><td>A valid context object to destroy</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Status code</dd></dl>
<p>Returns:</p><ul>
<li><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a5c0200f51580173c58b156cb6c443dce">AclSuccess</a> if functions was completed successfully</li>
<li><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a00f188d1f6cef6e569b31a95964d26ca">AclInvalidArgument</a> if the provided context is invalid </li>
</ul>

<p class="definition">Definition at line <a class="el" href="_acl_context_8cpp_source.xhtml#l00104">104</a> of file <a class="el" href="_acl_context_8cpp_source.xhtml">AclContext.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;{</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <span class="keyword">using namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a>;</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160; </div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <a class="code" href="classarm__compute_1_1_i_context.xhtml">IContext</a> *ctx = <a class="code" href="namespacearm__compute.xhtml#af6916ea927eec95c074b917eafc5a667">get_internal</a>(external_ctx);</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160; </div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ae98a46f4ea1a43ca48acaf15d2eb7113">StatusCode</a> status = <a class="code" href="namespacearm__compute_1_1detail.xhtml#a47ecd4a65072f2ac3dab46b03e350ee2">detail::validate_internal_context</a>(ctx);</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <a class="code" href="src_2common_2utils_2_macros_8h.xhtml#a17bc1c1fe5cb9282bcb0b27cfa0ee3db">ARM_COMPUTE_RETURN_CENUM_ON_FAILURE</a>(status);</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160; </div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <span class="keywordflow">if</span> (ctx-&gt;<a class="code" href="classarm__compute_1_1_i_context.xhtml#af69eba190b1a2d72856b33fd6b4cc75a">refcount</a>() != 0)</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    {</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        <a class="code" href="src_2common_2utils_2_log_8h.xhtml#a4031f58cfc5d279b039fa0e167511b7e">ARM_COMPUTE_LOG_ERROR_WITH_FUNCNAME_ACL</a>(<span class="stringliteral">&quot;Context has references on it that haven&#39;t been released!&quot;</span>);</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        <span class="comment">// TODO: Fix the refcount with callback when reaches 0</span></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    }</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160; </div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <span class="keyword">delete</span> ctx;</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160; </div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <span class="keywordflow">return</span> utils::as_cenum&lt;AclStatus&gt;(status);</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="src_2common_2utils_2_log_8h_source.xhtml#l00033">ARM_COMPUTE_LOG_ERROR_WITH_FUNCNAME_ACL</a>, <a class="el" href="src_2common_2utils_2_macros_8h_source.xhtml#l00029">ARM_COMPUTE_RETURN_CENUM_ON_FAILURE</a>, <a class="el" href="_i_context_8h_source.xhtml#l00127">arm_compute::get_internal()</a>, <a class="el" href="_i_context_8h_source.xhtml#l00084">IContext::refcount()</a>, and <a class="el" href="_i_context_8h_source.xhtml#l00140">arm_compute::detail::validate_internal_context()</a>.</p>

</div>
</div>
<a id="a04c8614f16b47287dd772b26434cd879"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a04c8614f16b47287dd772b26434cd879">&#9670;&nbsp;</a></span>AclDestroyOperator()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2">AclStatus</a> AclDestroyOperator </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="_acl_types_8h.xhtml#adefdd489a321a9c39178951d57658c60">AclOperator</a>&#160;</td>
          <td class="paramname"><em>op</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Destroy a given operator object. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">op</td><td>A valid operator object to destroy</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Status code</dd></dl>
<p>Returns:</p><ul>
<li><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a5c0200f51580173c58b156cb6c443dce">AclSuccess</a> if functions was completed successfully</li>
<li><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a00f188d1f6cef6e569b31a95964d26ca">AclInvalidArgument</a> if the provided context is invalid </li>
</ul>

<p class="definition">Definition at line <a class="el" href="_acl_operator_8cpp_source.xhtml#l00053">53</a> of file <a class="el" href="_acl_operator_8cpp_source.xhtml">AclOperator.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;{</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <span class="keyword">using namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a>;</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160; </div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="keyword">auto</span> op = <a class="code" href="namespacearm__compute.xhtml#af6916ea927eec95c074b917eafc5a667">get_internal</a>(external_op);</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160; </div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ae98a46f4ea1a43ca48acaf15d2eb7113">StatusCode</a> status = <a class="code" href="namespacearm__compute_1_1detail.xhtml#ae48d6a6f3c6fbe0b8c9a1541a3c23c82">detail::validate_internal_operator</a>(op);</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <a class="code" href="src_2common_2utils_2_macros_8h.xhtml#a17bc1c1fe5cb9282bcb0b27cfa0ee3db">ARM_COMPUTE_RETURN_CENUM_ON_FAILURE</a>(status);</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160; </div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <span class="keyword">delete</span> op;</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160; </div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a5c0200f51580173c58b156cb6c443dce">AclSuccess</a>;</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_acl_types_8h_source.xhtml#l00052">AclSuccess</a>, <a class="el" href="src_2common_2utils_2_macros_8h_source.xhtml#l00029">ARM_COMPUTE_RETURN_CENUM_ON_FAILURE</a>, <a class="el" href="_i_context_8h_source.xhtml#l00127">arm_compute::get_internal()</a>, and <a class="el" href="src_2common_2_i_operator_8h_source.xhtml#l00126">arm_compute::detail::validate_internal_operator()</a>.</p>

</div>
</div>
<a id="a09a6b6162edaca978bd5791ae52fea7d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a09a6b6162edaca978bd5791ae52fea7d">&#9670;&nbsp;</a></span>AclDestroyQueue()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2">AclStatus</a> AclDestroyQueue </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="_acl_types_8h.xhtml#ad100d0640d4dff954977840f32e7cfbe">AclQueue</a>&#160;</td>
          <td class="paramname"><em>queue</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Destroy a given queue object. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">queue</td><td>A valid context object to destroy</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Status code</dd></dl>
<p>Returns:</p><ul>
<li><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a5c0200f51580173c58b156cb6c443dce">AclSuccess</a> if functions was completed successfully</li>
<li><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a00f188d1f6cef6e569b31a95964d26ca">AclInvalidArgument</a> if the provided context is invalid </li>
</ul>

<p class="definition">Definition at line <a class="el" href="_acl_queue_8cpp_source.xhtml#l00087">87</a> of file <a class="el" href="_acl_queue_8cpp_source.xhtml">AclQueue.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;{</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="keyword">using namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a>;</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160; </div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <span class="keyword">auto</span> queue = <a class="code" href="namespacearm__compute.xhtml#af6916ea927eec95c074b917eafc5a667">get_internal</a>(external_queue);</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160; </div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ae98a46f4ea1a43ca48acaf15d2eb7113">StatusCode</a> status = <a class="code" href="namespacearm__compute_1_1detail.xhtml#a855caae729317428d08d661de17d3508">detail::validate_internal_queue</a>(queue);</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <a class="code" href="src_2common_2utils_2_macros_8h.xhtml#a17bc1c1fe5cb9282bcb0b27cfa0ee3db">ARM_COMPUTE_RETURN_CENUM_ON_FAILURE</a>(status);</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160; </div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <span class="keyword">delete</span> queue;</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160; </div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a5c0200f51580173c58b156cb6c443dce">AclSuccess</a>;</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_acl_types_8h_source.xhtml#l00052">AclSuccess</a>, <a class="el" href="src_2common_2utils_2_macros_8h_source.xhtml#l00029">ARM_COMPUTE_RETURN_CENUM_ON_FAILURE</a>, <a class="el" href="_i_context_8h_source.xhtml#l00127">arm_compute::get_internal()</a>, and <a class="el" href="_i_queue_8h_source.xhtml#l00089">arm_compute::detail::validate_internal_queue()</a>.</p>

</div>
</div>
<a id="abb1208d4213183fe5cc0c5742e0df966"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abb1208d4213183fe5cc0c5742e0df966">&#9670;&nbsp;</a></span>AclDestroyTensor()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2">AclStatus</a> AclDestroyTensor </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="_acl_types_8h.xhtml#a90ea96c40064aa67e45589a99db23e96">AclTensor</a>&#160;</td>
          <td class="paramname"><em>tensor</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Destroy a given tensor object. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">tensor</td><td>A valid tensor object to be destroyed</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Status code</dd></dl>
<p>Returns:</p><ul>
<li><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a5c0200f51580173c58b156cb6c443dce">AclSuccess</a> if function was completed successfully</li>
<li><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a00f188d1f6cef6e569b31a95964d26ca">AclInvalidArgument</a> if the provided tensor is invalid </li>
</ul>

<p class="definition">Definition at line <a class="el" href="_acl_tensor_8cpp_source.xhtml#l00144">144</a> of file <a class="el" href="_acl_tensor_8cpp_source.xhtml">AclTensor.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;{</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <span class="keyword">using namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a>;</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160; </div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    <span class="keyword">auto</span> <a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a> = <a class="code" href="namespacearm__compute.xhtml#af6916ea927eec95c074b917eafc5a667">get_internal</a>(external_tensor);</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160; </div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ae98a46f4ea1a43ca48acaf15d2eb7113">StatusCode</a> status = <a class="code" href="namespacearm__compute_1_1detail.xhtml#a9fdf95bf0a83958e5ef2da382806d0a4">detail::validate_internal_tensor</a>(<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>);</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    <a class="code" href="src_2common_2utils_2_macros_8h.xhtml#a17bc1c1fe5cb9282bcb0b27cfa0ee3db">ARM_COMPUTE_RETURN_CENUM_ON_FAILURE</a>(status);</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160; </div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <span class="keyword">delete</span> <a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>;</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160; </div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a5c0200f51580173c58b156cb6c443dce">AclSuccess</a>;</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_acl_types_8h_source.xhtml#l00052">AclSuccess</a>, <a class="el" href="src_2common_2utils_2_macros_8h_source.xhtml#l00029">ARM_COMPUTE_RETURN_CENUM_ON_FAILURE</a>, <a class="el" href="_i_context_8h_source.xhtml#l00127">arm_compute::get_internal()</a>, <a class="el" href="_cl_workload_runtime_8cpp_source.xhtml#l00067">tensor</a>, and <a class="el" href="_i_tensor_v2_8h_source.xhtml#l00128">arm_compute::detail::validate_internal_tensor()</a>.</p>

</div>
</div>
<a id="a0dd4cd60a1039b649151ded8f0833baf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0dd4cd60a1039b649151ded8f0833baf">&#9670;&nbsp;</a></span>AclDestroyTensorPack()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2">AclStatus</a> AclDestroyTensorPack </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="_acl_types_8h.xhtml#adc3017359ff84d03850580266cb18256">AclTensorPack</a>&#160;</td>
          <td class="paramname"><em>pack</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Destroy a given tensor pack object. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">pack</td><td>A valid tensor pack object to destroy</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Status code</dd></dl>
<p>Returns:</p><ul>
<li><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a5c0200f51580173c58b156cb6c443dce">AclSuccess</a> if functions was completed successfully</li>
<li><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a00f188d1f6cef6e569b31a95964d26ca">AclInvalidArgument</a> if the provided context is invalid </li>
</ul>

<p class="definition">Definition at line <a class="el" href="_acl_tensor_pack_8cpp_source.xhtml#l00096">96</a> of file <a class="el" href="_acl_tensor_pack_8cpp_source.xhtml">AclTensorPack.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;{</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <span class="keyword">using namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a>;</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160; </div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <span class="keyword">auto</span>       <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a>   = <a class="code" href="namespacearm__compute.xhtml#af6916ea927eec95c074b917eafc5a667">get_internal</a>(external_pack);</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ae98a46f4ea1a43ca48acaf15d2eb7113">StatusCode</a> status = <a class="code" href="namespacearm__compute_1_1detail.xhtml#aeaa9c71ce8a3ca5edf6880e09184e9aa">detail::validate_internal_pack</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a>);</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <a class="code" href="src_2common_2utils_2_macros_8h.xhtml#a17bc1c1fe5cb9282bcb0b27cfa0ee3db">ARM_COMPUTE_RETURN_CENUM_ON_FAILURE</a>(status);</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160; </div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <span class="keyword">delete</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a>;</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160; </div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a5c0200f51580173c58b156cb6c443dce">AclSuccess</a>;</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_acl_types_8h_source.xhtml#l00052">AclSuccess</a>, <a class="el" href="src_2common_2utils_2_macros_8h_source.xhtml#l00029">ARM_COMPUTE_RETURN_CENUM_ON_FAILURE</a>, <a class="el" href="_i_context_8h_source.xhtml#l00127">arm_compute::get_internal()</a>, <a class="el" href="_n_e_o_n_2_im2_col_8cpp_source.xhtml#l00188">arm_compute::test::validation::pack</a>, and <a class="el" href="_tensor_pack_8h_source.xhtml#l00120">arm_compute::detail::validate_internal_pack()</a>.</p>

</div>
</div>
<a id="a94b41b78fd18d9dbff5325f7636c8974"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a94b41b78fd18d9dbff5325f7636c8974">&#9670;&nbsp;</a></span>AclMapTensor()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2">AclStatus</a> AclMapTensor </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="_acl_types_8h.xhtml#a90ea96c40064aa67e45589a99db23e96">AclTensor</a>&#160;</td>
          <td class="paramname"><em>tensor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void **&#160;</td>
          <td class="paramname"><em>handle</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Map a tensor's backing memory to the host. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">tensor</td><td>Tensor to be mapped </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">handle</td><td>A handle to the underlying backing memory</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Status code</dd></dl>
<p>Returns:</p><ul>
<li><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a5c0200f51580173c58b156cb6c443dce">AclSuccess</a> if function was completed successfully</li>
<li><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a00f188d1f6cef6e569b31a95964d26ca">AclInvalidArgument</a> if a given argument is invalid </li>
</ul>

<p class="definition">Definition at line <a class="el" href="_acl_tensor_8cpp_source.xhtml#l00097">97</a> of file <a class="el" href="_acl_tensor_8cpp_source.xhtml">AclTensor.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;{</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <span class="keyword">using namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a>;</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160; </div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <span class="keyword">auto</span>       <a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a> = <a class="code" href="namespacearm__compute.xhtml#af6916ea927eec95c074b917eafc5a667">get_internal</a>(external_tensor);</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ae98a46f4ea1a43ca48acaf15d2eb7113">StatusCode</a> status = <a class="code" href="namespacearm__compute_1_1detail.xhtml#a9fdf95bf0a83958e5ef2da382806d0a4">detail::validate_internal_tensor</a>(<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>);</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <a class="code" href="src_2common_2utils_2_macros_8h.xhtml#a17bc1c1fe5cb9282bcb0b27cfa0ee3db">ARM_COMPUTE_RETURN_CENUM_ON_FAILURE</a>(status);</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160; </div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <span class="keywordflow">if</span> (handle == <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    {</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        <a class="code" href="src_2common_2utils_2_log_8h.xhtml#ada668c5c47184c0667c0b029d92d3b4f">ARM_COMPUTE_LOG_ERROR_ACL</a>(<span class="stringliteral">&quot;[AclMapTensor]: Handle object is nullptr!&quot;</span>);</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a00f188d1f6cef6e569b31a95964d26ca">AclInvalidArgument</a>;</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    }</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160; </div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    *handle = <a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>-&gt;<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a14c53d2d17be6fa8a2c9861527c7b002">map</a>();</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160; </div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a5c0200f51580173c58b156cb6c443dce">AclSuccess</a>;</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_acl_types_8h_source.xhtml#l00058">AclInvalidArgument</a>, <a class="el" href="_acl_types_8h_source.xhtml#l00052">AclSuccess</a>, <a class="el" href="src_2common_2utils_2_log_8h_source.xhtml#l00032">ARM_COMPUTE_LOG_ERROR_ACL</a>, <a class="el" href="src_2common_2utils_2_macros_8h_source.xhtml#l00029">ARM_COMPUTE_RETURN_CENUM_ON_FAILURE</a>, <a class="el" href="_i_context_8h_source.xhtml#l00127">arm_compute::get_internal()</a>, <a class="el" href="runtime_2_c_l_2_cl_tensor_8cpp_source.xhtml#l00066">CLTensor::map()</a>, <a class="el" href="_cl_workload_runtime_8cpp_source.xhtml#l00067">tensor</a>, and <a class="el" href="_i_tensor_v2_8h_source.xhtml#l00128">arm_compute::detail::validate_internal_tensor()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_acl_8hpp_source.xhtml#l00616">Tensor::map()</a>.</p>

</div>
</div>
<a id="adbb0c63266c2acd743a61c5186d76092"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adbb0c63266c2acd743a61c5186d76092">&#9670;&nbsp;</a></span>AclPackTensor()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2">AclStatus</a> AclPackTensor </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="_acl_types_8h.xhtml#adc3017359ff84d03850580266cb18256">AclTensorPack</a>&#160;</td>
          <td class="paramname"><em>pack</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="_acl_types_8h.xhtml#a90ea96c40064aa67e45589a99db23e96">AclTensor</a>&#160;</td>
          <td class="paramname"><em>tensor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int32_t&#160;</td>
          <td class="paramname"><em>slot_id</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Add a tensor to a tensor pack. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">pack</td><td>Pack to append a tensor to </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">tensor</td><td>Tensor to pack </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">slot_id</td><td>Slot of the operator that the tensors corresponds to</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Status code</dd></dl>
<p>Returns:</p><ul>
<li><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a5c0200f51580173c58b156cb6c443dce">AclSuccess</a> if function was completed successfully</li>
<li><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2aae6e50c78015ae9c9f6c03ef2c88356e">AclOutOfMemory</a> if there was a failure allocating memory resources</li>
<li><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a00f188d1f6cef6e569b31a95964d26ca">AclInvalidArgument</a> if a given argument is invalid </li>
</ul>

<p class="definition">Definition at line <a class="el" href="_acl_tensor_pack_8cpp_source.xhtml#l00071">71</a> of file <a class="el" href="_acl_tensor_pack_8cpp_source.xhtml">AclTensorPack.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;{</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <span class="keyword">using namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a>;</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160; </div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <span class="keyword">auto</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a> = <a class="code" href="namespacearm__compute.xhtml#af6916ea927eec95c074b917eafc5a667">get_internal</a>(external_pack);</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <a class="code" href="src_2common_2utils_2_macros_8h.xhtml#a17bc1c1fe5cb9282bcb0b27cfa0ee3db">ARM_COMPUTE_RETURN_CENUM_ON_FAILURE</a>(<a class="code" href="namespacearm__compute_1_1detail.xhtml#aeaa9c71ce8a3ca5edf6880e09184e9aa">detail::validate_internal_pack</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a>));</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <a class="code" href="src_2common_2utils_2_macros_8h.xhtml#a17bc1c1fe5cb9282bcb0b27cfa0ee3db">ARM_COMPUTE_RETURN_CENUM_ON_FAILURE</a>(PackTensorInternal(*<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a>, external_tensor, slot_id));</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a5c0200f51580173c58b156cb6c443dce">AclStatus::AclSuccess</a>;</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_acl_types_8h_source.xhtml#l00052">AclSuccess</a>, <a class="el" href="src_2common_2utils_2_macros_8h_source.xhtml#l00029">ARM_COMPUTE_RETURN_CENUM_ON_FAILURE</a>, <a class="el" href="_i_context_8h_source.xhtml#l00127">arm_compute::get_internal()</a>, <a class="el" href="_n_e_o_n_2_im2_col_8cpp_source.xhtml#l00188">arm_compute::test::validation::pack</a>, and <a class="el" href="_tensor_pack_8h_source.xhtml#l00120">arm_compute::detail::validate_internal_pack()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_acl_8hpp_source.xhtml#l00723">TensorPack::add()</a>.</p>

</div>
</div>
<a id="aaf77900a1d93e1890afde55699f4b092"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaf77900a1d93e1890afde55699f4b092">&#9670;&nbsp;</a></span>AclPackTensors()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2">AclStatus</a> AclPackTensors </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="_acl_types_8h.xhtml#adc3017359ff84d03850580266cb18256">AclTensorPack</a>&#160;</td>
          <td class="paramname"><em>pack</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="_acl_types_8h.xhtml#a90ea96c40064aa67e45589a99db23e96">AclTensor</a> *&#160;</td>
          <td class="paramname"><em>tensors</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int32_t *&#160;</td>
          <td class="paramname"><em>slot_ids</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>num_tensors</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>A list of tensors to a tensor pack. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">pack</td><td>Pack to append the tensors to </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">tensors</td><td>Tensors to append to the pack </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">slot_ids</td><td>Slot IDs of each tensors to the operators </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">num_tensors</td><td>Number of tensors that are passed</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Status code</dd></dl>
<p>Returns:</p><ul>
<li><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a5c0200f51580173c58b156cb6c443dce">AclSuccess</a> if function was completed successfully</li>
<li><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2aae6e50c78015ae9c9f6c03ef2c88356e">AclOutOfMemory</a> if there was a failure allocating memory resources</li>
<li><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a00f188d1f6cef6e569b31a95964d26ca">AclInvalidArgument</a> if a given argument is invalid </li>
</ul>

<p class="definition">Definition at line <a class="el" href="_acl_tensor_pack_8cpp_source.xhtml#l00082">82</a> of file <a class="el" href="_acl_tensor_pack_8cpp_source.xhtml">AclTensorPack.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;{</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <span class="keyword">using namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a>;</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160; </div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <span class="keyword">auto</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a> = <a class="code" href="namespacearm__compute.xhtml#af6916ea927eec95c074b917eafc5a667">get_internal</a>(external_pack);</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <a class="code" href="src_2common_2utils_2_macros_8h.xhtml#a17bc1c1fe5cb9282bcb0b27cfa0ee3db">ARM_COMPUTE_RETURN_CENUM_ON_FAILURE</a>(<a class="code" href="namespacearm__compute_1_1detail.xhtml#aeaa9c71ce8a3ca5edf6880e09184e9aa">detail::validate_internal_pack</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a>));</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160; </div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> i = 0; i &lt; num_tensors; ++i)</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    {</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        <a class="code" href="src_2common_2utils_2_macros_8h.xhtml#a17bc1c1fe5cb9282bcb0b27cfa0ee3db">ARM_COMPUTE_RETURN_CENUM_ON_FAILURE</a>(PackTensorInternal(*<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a>, external_tensors[i], slot_ids[i]));</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    }</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a5c0200f51580173c58b156cb6c443dce">AclStatus::AclSuccess</a>;</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_acl_types_8h_source.xhtml#l00052">AclSuccess</a>, <a class="el" href="src_2common_2utils_2_macros_8h_source.xhtml#l00029">ARM_COMPUTE_RETURN_CENUM_ON_FAILURE</a>, <a class="el" href="_i_context_8h_source.xhtml#l00127">arm_compute::get_internal()</a>, <a class="el" href="_n_e_o_n_2_im2_col_8cpp_source.xhtml#l00188">arm_compute::test::validation::pack</a>, and <a class="el" href="_tensor_pack_8h_source.xhtml#l00120">arm_compute::detail::validate_internal_pack()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_acl_8hpp_source.xhtml#l00733">TensorPack::add()</a>.</p>

</div>
</div>
<a id="a9f1e3973a09da9eb7e86b96b7bd635c3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9f1e3973a09da9eb7e86b96b7bd635c3">&#9670;&nbsp;</a></span>AclQueueFinish()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2">AclStatus</a> AclQueueFinish </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="_acl_types_8h.xhtml#ad100d0640d4dff954977840f32e7cfbe">AclQueue</a>&#160;</td>
          <td class="paramname"><em>queue</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Wait until all elements on the queue have been completed. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">queue</td><td>Queue to wait on completion</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Status code</dd></dl>
<p>Returns:</p><ul>
<li><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a5c0200f51580173c58b156cb6c443dce">AclSuccess</a> if functions was completed successfully</li>
<li><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a00f188d1f6cef6e569b31a95964d26ca">AclInvalidArgument</a> if the provided queue is invalid</li>
<li><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a7586a308543e75989742667676cb102d">AclRuntimeError</a> on any other runtime related error </li>
</ul>

<p class="definition">Definition at line <a class="el" href="_acl_queue_8cpp_source.xhtml#l00072">72</a> of file <a class="el" href="_acl_queue_8cpp_source.xhtml">AclQueue.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;{</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="keyword">using namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a>;</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160; </div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <span class="keyword">auto</span> queue = <a class="code" href="namespacearm__compute.xhtml#af6916ea927eec95c074b917eafc5a667">get_internal</a>(external_queue);</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160; </div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ae98a46f4ea1a43ca48acaf15d2eb7113">StatusCode</a> status = <a class="code" href="namespacearm__compute_1_1detail.xhtml#a855caae729317428d08d661de17d3508">detail::validate_internal_queue</a>(queue);</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <a class="code" href="src_2common_2utils_2_macros_8h.xhtml#a17bc1c1fe5cb9282bcb0b27cfa0ee3db">ARM_COMPUTE_RETURN_CENUM_ON_FAILURE</a>(status);</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160; </div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    status = queue-&gt;finish();</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <a class="code" href="src_2common_2utils_2_macros_8h.xhtml#a17bc1c1fe5cb9282bcb0b27cfa0ee3db">ARM_COMPUTE_RETURN_CENUM_ON_FAILURE</a>(status);</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160; </div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a5c0200f51580173c58b156cb6c443dce">AclSuccess</a>;</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_acl_types_8h_source.xhtml#l00052">AclSuccess</a>, <a class="el" href="src_2common_2utils_2_macros_8h_source.xhtml#l00029">ARM_COMPUTE_RETURN_CENUM_ON_FAILURE</a>, <a class="el" href="_i_context_8h_source.xhtml#l00127">arm_compute::get_internal()</a>, and <a class="el" href="_i_queue_8h_source.xhtml#l00089">arm_compute::detail::validate_internal_queue()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_acl_8hpp_source.xhtml#l00475">Queue::finish()</a>.</p>

</div>
</div>
<a id="aceab9b4db8a76762883b158faec8f636"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aceab9b4db8a76762883b158faec8f636">&#9670;&nbsp;</a></span>AclRunOperator()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2">AclStatus</a> AclRunOperator </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="_acl_types_8h.xhtml#adefdd489a321a9c39178951d57658c60">AclOperator</a>&#160;</td>
          <td class="paramname"><em>op</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="_acl_types_8h.xhtml#ad100d0640d4dff954977840f32e7cfbe">AclQueue</a>&#160;</td>
          <td class="paramname"><em>queue</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="_acl_types_8h.xhtml#adc3017359ff84d03850580266cb18256">AclTensorPack</a>&#160;</td>
          <td class="paramname"><em>tensors</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Eager execution of a given operator on a list of inputs and outputs. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">op</td><td>Operator to execute </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">queue</td><td>Queue to schedule the operator on </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">tensors</td><td>A list of input and outputs tensors to execute the operator on</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Status Code</dd></dl>
<p>Returns:</p><ul>
<li><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a5c0200f51580173c58b156cb6c443dce">AclSuccess</a> if function was completed successfully</li>
<li><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2aae6e50c78015ae9c9f6c03ef2c88356e">AclOutOfMemory</a> if there was a failure allocating memory resources</li>
<li><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a2bab471e86cd1e7951172eeae0855f40">AclUnsupportedTarget</a> if the requested target is unsupported</li>
<li><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a00f188d1f6cef6e569b31a95964d26ca">AclInvalidArgument</a> if a given argument is invalid</li>
<li><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a7586a308543e75989742667676cb102d">AclRuntimeError</a> on any other runtime related error </li>
</ul>

<p class="definition">Definition at line <a class="el" href="_acl_operator_8cpp_source.xhtml#l00031">31</a> of file <a class="el" href="_acl_operator_8cpp_source.xhtml">AclOperator.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;{</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    <span class="keyword">using namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a>;</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160; </div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    <span class="keyword">auto</span> op    = <a class="code" href="namespacearm__compute.xhtml#af6916ea927eec95c074b917eafc5a667">get_internal</a>(external_op);</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    <span class="keyword">auto</span> queue = <a class="code" href="namespacearm__compute.xhtml#af6916ea927eec95c074b917eafc5a667">get_internal</a>(external_queue);</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    <span class="keyword">auto</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a>  = <a class="code" href="namespacearm__compute.xhtml#af6916ea927eec95c074b917eafc5a667">get_internal</a>(external_tensors);</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160; </div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ae98a46f4ea1a43ca48acaf15d2eb7113">StatusCode</a> status = <a class="code" href="namespacearm__compute.xhtml#ae98a46f4ea1a43ca48acaf15d2eb7113a505a83f220c02df2f85c3810cd9ceb38">StatusCode::Success</a>;</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    status            = <a class="code" href="namespacearm__compute_1_1detail.xhtml#ae48d6a6f3c6fbe0b8c9a1541a3c23c82">detail::validate_internal_operator</a>(op);</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    <a class="code" href="src_2common_2utils_2_macros_8h.xhtml#a17bc1c1fe5cb9282bcb0b27cfa0ee3db">ARM_COMPUTE_RETURN_CENUM_ON_FAILURE</a>(status);</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    status = <a class="code" href="namespacearm__compute_1_1detail.xhtml#a855caae729317428d08d661de17d3508">detail::validate_internal_queue</a>(queue);</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <a class="code" href="src_2common_2utils_2_macros_8h.xhtml#a17bc1c1fe5cb9282bcb0b27cfa0ee3db">ARM_COMPUTE_RETURN_CENUM_ON_FAILURE</a>(status);</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    status = <a class="code" href="namespacearm__compute_1_1detail.xhtml#aeaa9c71ce8a3ca5edf6880e09184e9aa">detail::validate_internal_pack</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a>);</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <a class="code" href="src_2common_2utils_2_macros_8h.xhtml#a17bc1c1fe5cb9282bcb0b27cfa0ee3db">ARM_COMPUTE_RETURN_CENUM_ON_FAILURE</a>(status);</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160; </div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    status = op-&gt;run(*queue, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a>-&gt;get_tensor_pack());</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <a class="code" href="src_2common_2utils_2_macros_8h.xhtml#a17bc1c1fe5cb9282bcb0b27cfa0ee3db">ARM_COMPUTE_RETURN_CENUM_ON_FAILURE</a>(status);</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160; </div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a5c0200f51580173c58b156cb6c443dce">AclSuccess</a>;</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_acl_types_8h_source.xhtml#l00052">AclSuccess</a>, <a class="el" href="src_2common_2utils_2_macros_8h_source.xhtml#l00029">ARM_COMPUTE_RETURN_CENUM_ON_FAILURE</a>, <a class="el" href="_i_context_8h_source.xhtml#l00127">arm_compute::get_internal()</a>, <a class="el" href="_n_e_o_n_2_im2_col_8cpp_source.xhtml#l00188">arm_compute::test::validation::pack</a>, <a class="el" href="namespacearm__compute.xhtml#ae98a46f4ea1a43ca48acaf15d2eb7113a505a83f220c02df2f85c3810cd9ceb38">arm_compute::Success</a>, <a class="el" href="src_2common_2_i_operator_8h_source.xhtml#l00126">arm_compute::detail::validate_internal_operator()</a>, <a class="el" href="_tensor_pack_8h_source.xhtml#l00120">arm_compute::detail::validate_internal_pack()</a>, and <a class="el" href="_i_queue_8h_source.xhtml#l00089">arm_compute::detail::validate_internal_queue()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_acl_8hpp_source.xhtml#l00763">Operator::run()</a>.</p>

</div>
</div>
<a id="a3296c2f66ee36d849ae4d51fdd1d0521"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3296c2f66ee36d849ae4d51fdd1d0521">&#9670;&nbsp;</a></span>AclTensorImport()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2">AclStatus</a> AclTensorImport </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="_acl_types_8h.xhtml#a90ea96c40064aa67e45589a99db23e96">AclTensor</a>&#160;</td>
          <td class="paramname"><em>tensor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>handle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="_acl_types_8h.xhtml#a7a59b5478ea9250c2d244831c2c4672a">AclImportMemoryType</a>&#160;</td>
          <td class="paramname"><em>type</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Import external memory to a given tensor object. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">tensor</td><td>Tensor to import memory to </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">handle</td><td>Backing memory to be imported </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">type</td><td>Type of the imported memory</td></tr>
  </table>
  </dd>
</dl>
<p>Returns:</p><ul>
<li><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a5c0200f51580173c58b156cb6c443dce">AclSuccess</a> if function was completed successfully</li>
<li><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a00f188d1f6cef6e569b31a95964d26ca">AclInvalidArgument</a> if a given argument is invalid </li>
</ul>

<p class="definition">Definition at line <a class="el" href="_acl_tensor_8cpp_source.xhtml#l00130">130</a> of file <a class="el" href="_acl_tensor_8cpp_source.xhtml">AclTensor.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;{</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <span class="keyword">using namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a>;</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160; </div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <span class="keyword">auto</span>       <a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a> = <a class="code" href="namespacearm__compute.xhtml#af6916ea927eec95c074b917eafc5a667">get_internal</a>(external_tensor);</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ae98a46f4ea1a43ca48acaf15d2eb7113">StatusCode</a> status = <a class="code" href="namespacearm__compute_1_1detail.xhtml#a9fdf95bf0a83958e5ef2da382806d0a4">detail::validate_internal_tensor</a>(<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>);</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    <a class="code" href="src_2common_2utils_2_macros_8h.xhtml#a17bc1c1fe5cb9282bcb0b27cfa0ee3db">ARM_COMPUTE_RETURN_CENUM_ON_FAILURE</a>(status);</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160; </div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    status = <a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>-&gt;import(handle, utils::as_enum&lt;ImportMemoryType&gt;(<a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a>));</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    <a class="code" href="src_2common_2utils_2_macros_8h.xhtml#a17bc1c1fe5cb9282bcb0b27cfa0ee3db">ARM_COMPUTE_RETURN_CENUM_ON_FAILURE</a>(status);</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160; </div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a5c0200f51580173c58b156cb6c443dce">AclSuccess</a>;</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_acl_types_8h_source.xhtml#l00052">AclSuccess</a>, <a class="el" href="src_2common_2utils_2_macros_8h_source.xhtml#l00029">ARM_COMPUTE_RETURN_CENUM_ON_FAILURE</a>, <a class="el" href="_i_context_8h_source.xhtml#l00127">arm_compute::get_internal()</a>, <a class="el" href="_cl_workload_runtime_8cpp_source.xhtml#l00067">tensor</a>, <a class="el" href="gemm__interleaved_8hpp_source.xhtml#l00261">type</a>, and <a class="el" href="_i_tensor_v2_8h_source.xhtml#l00128">arm_compute::detail::validate_internal_tensor()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_acl_8hpp_source.xhtml#l00642">Tensor::import()</a>.</p>

</div>
</div>
<a id="a22a4f3406d18376e3d8740c72e3b2a35"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a22a4f3406d18376e3d8740c72e3b2a35">&#9670;&nbsp;</a></span>AclUnmapTensor()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2">AclStatus</a> AclUnmapTensor </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="_acl_types_8h.xhtml#a90ea96c40064aa67e45589a99db23e96">AclTensor</a>&#160;</td>
          <td class="paramname"><em>tensor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>handle</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Unmap the tensor's backing memory. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">tensor</td><td>tensor to unmap memory from </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">handle</td><td>Backing memory to be unmapped</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Status code</dd></dl>
<p>Returns:</p><ul>
<li><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a5c0200f51580173c58b156cb6c443dce">AclSuccess</a> if function was completed successfully</li>
<li><a class="el" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a00f188d1f6cef6e569b31a95964d26ca">AclInvalidArgument</a> if a given argument is invalid </li>
</ul>

<p class="definition">Definition at line <a class="el" href="_acl_tensor_8cpp_source.xhtml#l00116">116</a> of file <a class="el" href="_acl_tensor_8cpp_source.xhtml">AclTensor.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;{</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(handle);</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160; </div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="keyword">using namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a>;</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160; </div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <span class="keyword">auto</span>       <a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a> = <a class="code" href="namespacearm__compute.xhtml#af6916ea927eec95c074b917eafc5a667">get_internal</a>(external_tensor);</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ae98a46f4ea1a43ca48acaf15d2eb7113">StatusCode</a> status = <a class="code" href="namespacearm__compute_1_1detail.xhtml#a9fdf95bf0a83958e5ef2da382806d0a4">detail::validate_internal_tensor</a>(<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>);</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <a class="code" href="src_2common_2utils_2_macros_8h.xhtml#a17bc1c1fe5cb9282bcb0b27cfa0ee3db">ARM_COMPUTE_RETURN_CENUM_ON_FAILURE</a>(status);</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160; </div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    status = <a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>-&gt;<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a1ffeb3b5abb3d61f62b58a391816201c">unmap</a>();</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a5c0200f51580173c58b156cb6c443dce">AclSuccess</a>;</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_acl_types_8h_source.xhtml#l00052">AclSuccess</a>, <a class="el" href="src_2common_2utils_2_macros_8h_source.xhtml#l00029">ARM_COMPUTE_RETURN_CENUM_ON_FAILURE</a>, <a class="el" href="_error_8h_source.xhtml#l00151">ARM_COMPUTE_UNUSED</a>, <a class="el" href="_i_context_8h_source.xhtml#l00127">arm_compute::get_internal()</a>, <a class="el" href="_cl_workload_runtime_8cpp_source.xhtml#l00067">tensor</a>, <a class="el" href="runtime_2_c_l_2_cl_tensor_8cpp_source.xhtml#l00071">CLTensor::unmap()</a>, and <a class="el" href="_i_tensor_v2_8h_source.xhtml#l00128">arm_compute::detail::validate_internal_tensor()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_acl_8hpp_source.xhtml#l00629">Tensor::unmap()</a>.</p>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="a_acl_types_8h_xhtml_a9283721ff430c549802798b9909549d2a2bab471e86cd1e7951172eeae0855f40"><div class="ttname"><a href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a2bab471e86cd1e7951172eeae0855f40">AclUnsupportedTarget</a></div><div class="ttdeci">@ AclUnsupportedTarget</div><div class="ttdoc">Call failed as an invalid backend was requested.</div><div class="ttdef"><b>Definition:</b> <a href="_acl_types_8h_source.xhtml#l00056">AclTypes.h:56</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_tensor_xhtml_a1ffeb3b5abb3d61f62b58a391816201c"><div class="ttname"><a href="classarm__compute_1_1_c_l_tensor.xhtml#a1ffeb3b5abb3d61f62b58a391816201c">arm_compute::CLTensor::unmap</a></div><div class="ttdeci">void unmap()</div><div class="ttdoc">Enqueue an unmap operation of the allocated and mapped buffer.</div><div class="ttdef"><b>Definition:</b> <a href="runtime_2_c_l_2_cl_tensor_8cpp_source.xhtml#l00071">CLTensor.cpp:71</a></div></div>
<div class="ttc" id="agemm__interleaved_8hpp_xhtml_a6fbca3dca9ecb372332fc525529cc086"><div class="ttname"><a href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a></div><div class="ttdeci">decltype(strategy::transforms) typedef type</div><div class="ttdef"><b>Definition:</b> <a href="gemm__interleaved_8hpp_source.xhtml#l00261">gemm_interleaved.hpp:261</a></div></div>
<div class="ttc" id="a_acl_types_8h_xhtml_a9283721ff430c549802798b9909549d2a5c0200f51580173c58b156cb6c443dce"><div class="ttname"><a href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a5c0200f51580173c58b156cb6c443dce">AclSuccess</a></div><div class="ttdeci">@ AclSuccess</div><div class="ttdoc">Call succeeded, leading to valid state for all involved objects/data.</div><div class="ttdef"><b>Definition:</b> <a href="_acl_types_8h_source.xhtml#l00052">AclTypes.h:52</a></div></div>
<div class="ttc" id="asrc_2common_2utils_2_log_8h_xhtml_ada668c5c47184c0667c0b029d92d3b4f"><div class="ttname"><a href="src_2common_2utils_2_log_8h.xhtml#ada668c5c47184c0667c0b029d92d3b4f">ARM_COMPUTE_LOG_ERROR_ACL</a></div><div class="ttdeci">#define ARM_COMPUTE_LOG_ERROR_ACL(msg)</div><div class="ttdef"><b>Definition:</b> <a href="src_2common_2utils_2_log_8h_source.xhtml#l00032">Log.h:32</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ae98a46f4ea1a43ca48acaf15d2eb7113a505a83f220c02df2f85c3810cd9ceb38"><div class="ttname"><a href="namespacearm__compute.xhtml#ae98a46f4ea1a43ca48acaf15d2eb7113a505a83f220c02df2f85c3810cd9ceb38">arm_compute::StatusCode::Success</a></div><div class="ttdeci">@ Success</div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_tensor_xhtml_a14c53d2d17be6fa8a2c9861527c7b002"><div class="ttname"><a href="classarm__compute_1_1_c_l_tensor.xhtml#a14c53d2d17be6fa8a2c9861527c7b002">arm_compute::CLTensor::map</a></div><div class="ttdeci">void map(bool blocking=true)</div><div class="ttdoc">Enqueue a map operation of the allocated buffer.</div><div class="ttdef"><b>Definition:</b> <a href="runtime_2_c_l_2_cl_tensor_8cpp_source.xhtml#l00066">CLTensor.cpp:66</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_context_xhtml_af69eba190b1a2d72856b33fd6b4cc75a"><div class="ttname"><a href="classarm__compute_1_1_i_context.xhtml#af69eba190b1a2d72856b33fd6b4cc75a">arm_compute::IContext::refcount</a></div><div class="ttdeci">int refcount() const</div><div class="ttdoc">Reference counter accessor.</div><div class="ttdef"><b>Definition:</b> <a href="_i_context_8h_source.xhtml#l00084">IContext.h:84</a></div></div>
<div class="ttc" id="a_acl_types_8h_xhtml_a9283721ff430c549802798b9909549d2aae6e50c78015ae9c9f6c03ef2c88356e"><div class="ttname"><a href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2aae6e50c78015ae9c9f6c03ef2c88356e">AclOutOfMemory</a></div><div class="ttdeci">@ AclOutOfMemory</div><div class="ttdoc">Call failed due to failure to allocate resources.</div><div class="ttdef"><b>Definition:</b> <a href="_acl_types_8h_source.xhtml#l00054">AclTypes.h:54</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_context_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_context.xhtml">arm_compute::IContext</a></div><div class="ttdoc">Context interface.</div><div class="ttdef"><b>Definition:</b> <a href="_i_context_8h_source.xhtml#l00051">IContext.h:51</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1detail_xhtml_a47ecd4a65072f2ac3dab46b03e350ee2"><div class="ttname"><a href="namespacearm__compute_1_1detail.xhtml#a47ecd4a65072f2ac3dab46b03e350ee2">arm_compute::detail::validate_internal_context</a></div><div class="ttdeci">StatusCode validate_internal_context(const IContext *ctx)</div><div class="ttdoc">Check if an internal context is valid.</div><div class="ttdef"><b>Definition:</b> <a href="_i_context_8h_source.xhtml#l00140">IContext.h:140</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1detail_xhtml_ae48d6a6f3c6fbe0b8c9a1541a3c23c82"><div class="ttname"><a href="namespacearm__compute_1_1detail.xhtml#ae48d6a6f3c6fbe0b8c9a1541a3c23c82">arm_compute::detail::validate_internal_operator</a></div><div class="ttdeci">StatusCode validate_internal_operator(const IOperator *op)</div><div class="ttdoc">Check if an internal operator is valid.</div><div class="ttdef"><b>Definition:</b> <a href="src_2common_2_i_operator_8h_source.xhtml#l00126">IOperator.h:126</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ae98a46f4ea1a43ca48acaf15d2eb7113"><div class="ttname"><a href="namespacearm__compute.xhtml#ae98a46f4ea1a43ca48acaf15d2eb7113">arm_compute::StatusCode</a></div><div class="ttdeci">StatusCode</div><div class="ttdef"><b>Definition:</b> <a href="src_2common_2_types_8h_source.xhtml#l00032">Types.h:32</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1detail_xhtml_aeaa9c71ce8a3ca5edf6880e09184e9aa"><div class="ttname"><a href="namespacearm__compute_1_1detail.xhtml#aeaa9c71ce8a3ca5edf6880e09184e9aa">arm_compute::detail::validate_internal_pack</a></div><div class="ttdeci">StatusCode validate_internal_pack(const TensorPack *pack)</div><div class="ttdoc">Check if an internal TensorPack is valid.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_pack_8h_source.xhtml#l00120">TensorPack.h:120</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_tensor_pack_xhtml"><div class="ttname"><a href="classarm__compute_1_1_tensor_pack.xhtml">arm_compute::TensorPack</a></div><div class="ttdoc">Tensor packing service.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_pack_8h_source.xhtml#l00051">TensorPack.h:51</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a1e041dc03ff256dfc8b0bf5c5fe099e0"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">arm_compute::test::validation::pack</a></div><div class="ttdeci">ITensorPack pack</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_o_n_2_im2_col_8cpp_source.xhtml#l00188">Im2Col.cpp:188</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a6dc630a6ae9cc063b3924bcea8dee9d6"><div class="ttname"><a href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a></div><div class="ttdeci">#define ARM_COMPUTE_UNUSED(...)</div><div class="ttdoc">To avoid unused variables warnings.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00151">Error.h:151</a></div></div>
<div class="ttc" id="a_cl_workload_runtime_8cpp_xhtml_a5555e1497e9b84ade322d8ad8b503598"><div class="ttname"><a href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a></div><div class="ttdeci">CLTensor * tensor</div><div class="ttdoc">Pointer to the auxiliary tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_runtime_8cpp_source.xhtml#l00067">ClWorkloadRuntime.cpp:67</a></div></div>
<div class="ttc" id="a_acl_types_8h_xhtml_a9283721ff430c549802798b9909549d2a00f188d1f6cef6e569b31a95964d26ca"><div class="ttname"><a href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a00f188d1f6cef6e569b31a95964d26ca">AclInvalidArgument</a></div><div class="ttdeci">@ AclInvalidArgument</div><div class="ttdoc">Call failed as invalid argument was passed.</div><div class="ttdef"><b>Definition:</b> <a href="_acl_types_8h_source.xhtml#l00058">AclTypes.h:58</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2024 Arm Limited.</div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1detail_xhtml_a9fdf95bf0a83958e5ef2da382806d0a4"><div class="ttname"><a href="namespacearm__compute_1_1detail.xhtml#a9fdf95bf0a83958e5ef2da382806d0a4">arm_compute::detail::validate_internal_tensor</a></div><div class="ttdeci">StatusCode validate_internal_tensor(const ITensorV2 *tensor)</div><div class="ttdoc">Check if an internal tensor is valid.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_v2_8h_source.xhtml#l00128">ITensorV2.h:128</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_af6916ea927eec95c074b917eafc5a667"><div class="ttname"><a href="namespacearm__compute.xhtml#af6916ea927eec95c074b917eafc5a667">arm_compute::get_internal</a></div><div class="ttdeci">IContext * get_internal(AclContext ctx)</div><div class="ttdoc">Extract internal representation of a Context.</div><div class="ttdef"><b>Definition:</b> <a href="_i_context_8h_source.xhtml#l00127">IContext.h:127</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_context_xhtml_a44ec729ae5abf3d48b4a3dd9ab6623cb"><div class="ttname"><a href="classarm__compute_1_1_i_context.xhtml#a44ec729ae5abf3d48b4a3dd9ab6623cb">arm_compute::IContext::create_tensor</a></div><div class="ttdeci">virtual ITensorV2 * create_tensor(const AclTensorDescriptor &amp;desc, bool allocate)=0</div><div class="ttdoc">Create a tensor object.</div></div>
<div class="ttc" id="asrc_2common_2utils_2_log_8h_xhtml_a4031f58cfc5d279b039fa0e167511b7e"><div class="ttname"><a href="src_2common_2utils_2_log_8h.xhtml#a4031f58cfc5d279b039fa0e167511b7e">ARM_COMPUTE_LOG_ERROR_WITH_FUNCNAME_ACL</a></div><div class="ttdeci">#define ARM_COMPUTE_LOG_ERROR_WITH_FUNCNAME_ACL(msg)</div><div class="ttdef"><b>Definition:</b> <a href="src_2common_2utils_2_log_8h_source.xhtml#l00033">Log.h:33</a></div></div>
<div class="ttc" id="asrc_2common_2utils_2_macros_8h_xhtml_a17bc1c1fe5cb9282bcb0b27cfa0ee3db"><div class="ttname"><a href="src_2common_2utils_2_macros_8h.xhtml#a17bc1c1fe5cb9282bcb0b27cfa0ee3db">ARM_COMPUTE_RETURN_CENUM_ON_FAILURE</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_CENUM_ON_FAILURE(status)</div><div class="ttdef"><b>Definition:</b> <a href="src_2common_2utils_2_macros_8h_source.xhtml#l00029">Macros.h:29</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1detail_xhtml_a855caae729317428d08d661de17d3508"><div class="ttname"><a href="namespacearm__compute_1_1detail.xhtml#a855caae729317428d08d661de17d3508">arm_compute::detail::validate_internal_queue</a></div><div class="ttdeci">StatusCode validate_internal_queue(const IQueue *queue)</div><div class="ttdoc">Check if an internal queue is valid.</div><div class="ttdef"><b>Definition:</b> <a href="_i_queue_8h_source.xhtml#l00089">IQueue.h:89</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_214608ef36d61442cb2b0c1c4e9a7def.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="_acl_entrypoints_8h.xhtml">AclEntrypoints.h</a></li>
    <li class="footer">Generated on Mon Mar 18 2024 11:32:06 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
