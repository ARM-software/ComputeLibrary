<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: ClGemmLowpMatrixMultiplyCore Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.02.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__compute_1_1opencl_1_1_cl_gemm_lowp_matrix_multiply_core.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">ClGemmLowpMatrixMultiplyCore Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Basic function to execute GEMMLowpMatrixMultiplyCore on OpenCL.  
 <a href="classarm__compute_1_1opencl_1_1_cl_gemm_lowp_matrix_multiply_core.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="src_2gpu_2cl_2operators_2_c_l_g_e_m_m_lowp_matrix_multiply_core_8h_source.xhtml">ClGemmLowpMatrixMultiplyCore.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for ClGemmLowpMatrixMultiplyCore:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classarm__compute_1_1opencl_1_1_cl_gemm_lowp_matrix_multiply_core__coll__graph.svg" width="250" height="187"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a0b145da7db78ecac24835286d10ee734"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm_lowp_matrix_multiply_core.xhtml#a0b145da7db78ecac24835286d10ee734">ClGemmLowpMatrixMultiplyCore</a> ()</td></tr>
<tr class="separator:a0b145da7db78ecac24835286d10ee734"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4993f6d727f4c4981248116a754e3bf8"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm_lowp_matrix_multiply_core.xhtml#a4993f6d727f4c4981248116a754e3bf8">~ClGemmLowpMatrixMultiplyCore</a> ()</td></tr>
<tr class="separator:a4993f6d727f4c4981248116a754e3bf8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a48efdcf8bc0a6f12cfe0ad234400181a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm_lowp_matrix_multiply_core.xhtml#a48efdcf8bc0a6f12cfe0ad234400181a">configure</a> (const <a class="el" href="classarm__compute_1_1_c_l_compile_context.xhtml">CLCompileContext</a> &amp;compile_context, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *a, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *b, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *c, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *output, const <a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml">GEMMInfo</a> &amp;gemm_info=<a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml">GEMMInfo</a>())</td></tr>
<tr class="memdesc:a48efdcf8bc0a6f12cfe0ad234400181a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialise the kernel's inputs, output.  <a href="classarm__compute_1_1opencl_1_1_cl_gemm_lowp_matrix_multiply_core.xhtml#a48efdcf8bc0a6f12cfe0ad234400181a">More...</a><br /></td></tr>
<tr class="separator:a48efdcf8bc0a6f12cfe0ad234400181a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a684a54d1fb1634a348a585c6b5e76df0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm_lowp_matrix_multiply_core.xhtml#a684a54d1fb1634a348a585c6b5e76df0">run</a> (<a class="el" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> &amp;tensors) override</td></tr>
<tr class="memdesc:a684a54d1fb1634a348a585c6b5e76df0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Run the kernels contained in the function.  <a href="classarm__compute_1_1opencl_1_1_cl_gemm_lowp_matrix_multiply_core.xhtml#a684a54d1fb1634a348a585c6b5e76df0">More...</a><br /></td></tr>
<tr class="separator:a684a54d1fb1634a348a585c6b5e76df0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aff8f5e4223fd2a3020c8b252c8982d3a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm_lowp_matrix_multiply_core.xhtml#aff8f5e4223fd2a3020c8b252c8982d3a">prepare</a> (<a class="el" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> &amp;constants) override</td></tr>
<tr class="memdesc:aff8f5e4223fd2a3020c8b252c8982d3a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prepare the function for executing.  <a href="classarm__compute_1_1opencl_1_1_cl_gemm_lowp_matrix_multiply_core.xhtml#aff8f5e4223fd2a3020c8b252c8982d3a">More...</a><br /></td></tr>
<tr class="separator:aff8f5e4223fd2a3020c8b252c8982d3a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a74ae0d6e96f38fecd38471431786b870"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute_1_1experimental.xhtml#aa93a4d93eb22ef5445cd567ef22ca67c">experimental::MemoryRequirements</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm_lowp_matrix_multiply_core.xhtml#a74ae0d6e96f38fecd38471431786b870">workspace</a> () const override</td></tr>
<tr class="memdesc:a74ae0d6e96f38fecd38471431786b870"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the memory requirements required by the workspace.  <a href="classarm__compute_1_1opencl_1_1_cl_gemm_lowp_matrix_multiply_core.xhtml#a74ae0d6e96f38fecd38471431786b870">More...</a><br /></td></tr>
<tr class="separator:a74ae0d6e96f38fecd38471431786b870"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1experimental_1_1_i_c_l_operator"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1experimental_1_1_i_c_l_operator')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml">ICLOperator</a></td></tr>
<tr class="memitem:ac4ed47b6e86464a36585094de41f1bc4 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_c_l_operator"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml#ac4ed47b6e86464a36585094de41f1bc4">ICLOperator</a> (<a class="el" href="classarm__compute_1_1_i_runtime_context.xhtml">IRuntimeContext</a> *ctx=nullptr)</td></tr>
<tr class="memdesc:ac4ed47b6e86464a36585094de41f1bc4 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_c_l_operator"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml#ac4ed47b6e86464a36585094de41f1bc4">More...</a><br /></td></tr>
<tr class="separator:ac4ed47b6e86464a36585094de41f1bc4 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_c_l_operator"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a219a51d9e81ee889a97cf4fdceb70dca inherit pub_methods_classarm__compute_1_1experimental_1_1_i_c_l_operator"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml#a219a51d9e81ee889a97cf4fdceb70dca">ICLOperator</a> (const <a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml">ICLOperator</a> &amp;)=delete</td></tr>
<tr class="memdesc:a219a51d9e81ee889a97cf4fdceb70dca inherit pub_methods_classarm__compute_1_1experimental_1_1_i_c_l_operator"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied (As this class contains pointers)  <a href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml#a219a51d9e81ee889a97cf4fdceb70dca">More...</a><br /></td></tr>
<tr class="separator:a219a51d9e81ee889a97cf4fdceb70dca inherit pub_methods_classarm__compute_1_1experimental_1_1_i_c_l_operator"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4f9ec2decc6780c6fd9b67f3e9ef9e77 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_c_l_operator"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml#a4f9ec2decc6780c6fd9b67f3e9ef9e77">ICLOperator</a> (<a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml">ICLOperator</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:a4f9ec2decc6780c6fd9b67f3e9ef9e77 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_c_l_operator"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default move constructor.  <a href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml#a4f9ec2decc6780c6fd9b67f3e9ef9e77">More...</a><br /></td></tr>
<tr class="separator:a4f9ec2decc6780c6fd9b67f3e9ef9e77 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_c_l_operator"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3acfe6ff0d707c408bd2d8a111e2a7c4 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_c_l_operator"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml">ICLOperator</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml#a3acfe6ff0d707c408bd2d8a111e2a7c4">operator=</a> (const <a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml">ICLOperator</a> &amp;)=delete</td></tr>
<tr class="memdesc:a3acfe6ff0d707c408bd2d8a111e2a7c4 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_c_l_operator"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied (As this class contains pointers)  <a href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml#a3acfe6ff0d707c408bd2d8a111e2a7c4">More...</a><br /></td></tr>
<tr class="separator:a3acfe6ff0d707c408bd2d8a111e2a7c4 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_c_l_operator"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af2f26be13d5bb74bf2ac7e8b3bd65b17 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_c_l_operator"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml">ICLOperator</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml#af2f26be13d5bb74bf2ac7e8b3bd65b17">operator=</a> (<a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml">ICLOperator</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:af2f26be13d5bb74bf2ac7e8b3bd65b17 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_c_l_operator"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default move assignment operator.  <a href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml#af2f26be13d5bb74bf2ac7e8b3bd65b17">More...</a><br /></td></tr>
<tr class="separator:af2f26be13d5bb74bf2ac7e8b3bd65b17 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_c_l_operator"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1experimental_1_1_i_operator"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1experimental_1_1_i_operator')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1experimental_1_1_i_operator.xhtml">IOperator</a></td></tr>
<tr class="memitem:a3da3a4cfa91daf144e828fa521760ed5 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_operator"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1_i_operator.xhtml#a3da3a4cfa91daf144e828fa521760ed5">~IOperator</a> ()=default</td></tr>
<tr class="memdesc:a3da3a4cfa91daf144e828fa521760ed5 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_operator"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="classarm__compute_1_1experimental_1_1_i_operator.xhtml#a3da3a4cfa91daf144e828fa521760ed5">More...</a><br /></td></tr>
<tr class="separator:a3da3a4cfa91daf144e828fa521760ed5 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_operator"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a8c3cf2d65afb288e39909171ada19566"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classarm__compute_1_1_status.xhtml">Status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm_lowp_matrix_multiply_core.xhtml#a8c3cf2d65afb288e39909171ada19566">validate</a> (const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *a, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *b, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *c, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *output, const <a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml">GEMMInfo</a> &amp;gemm_info=<a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml">GEMMInfo</a>())</td></tr>
<tr class="memdesc:a8c3cf2d65afb288e39909171ada19566"><td class="mdescLeft">&#160;</td><td class="mdescRight">Static function to check if given info will lead to a valid configuration.  <a href="classarm__compute_1_1opencl_1_1_cl_gemm_lowp_matrix_multiply_core.xhtml#a8c3cf2d65afb288e39909171ada19566">More...</a><br /></td></tr>
<tr class="separator:a8c3cf2d65afb288e39909171ada19566"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Basic function to execute GEMMLowpMatrixMultiplyCore on OpenCL. </p>

<p class="definition">Definition at line <a class="el" href="src_2gpu_2cl_2operators_2_c_l_g_e_m_m_lowp_matrix_multiply_core_8h_source.xhtml#l00053">53</a> of file <a class="el" href="src_2gpu_2cl_2operators_2_c_l_g_e_m_m_lowp_matrix_multiply_core_8h_source.xhtml">ClGemmLowpMatrixMultiplyCore.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a0b145da7db78ecac24835286d10ee734"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0b145da7db78ecac24835286d10ee734">&#9670;&nbsp;</a></span>ClGemmLowpMatrixMultiplyCore()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm_lowp_matrix_multiply_core.xhtml">ClGemmLowpMatrixMultiplyCore</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="gpu_2cl_2operators_2_cl_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00288">288</a> of file <a class="el" href="gpu_2cl_2operators_2_cl_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml">ClGemmLowpMatrixMultiplyCore.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;    : _weights_to_qasymm8(std::make_unique&lt;ClCastKernel&gt;()),</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;      _mm_native_kernel(std::make_unique&lt;ClGemmLowpMatrixMultiplyNativeKernel&gt;()),</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;      _mm_reshaped_only_rhs_kernel(std::make_unique&lt;ClGemmLowpMatrixMultiplyReshapedOnlyRhsKernel&gt;()),</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;      _mm_reshaped_only_rhs_mmul_kernel(std::make_unique&lt;ClGemmLowpMatrixMultiplyReshapedOnlyRhsMMULKernel&gt;()),</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;      _mtx_b_reshape_kernel(std::make_unique&lt;ClGemmReshapeRhsMatrixKernel&gt;()),</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;      _mtx_a_reduction_kernel(std::make_unique&lt;ClGemmLowpMatrixAReductionKernel&gt;()),</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;      _mtx_b_reduction_kernel(std::make_unique&lt;ClGemmLowpMatrixBReductionKernel&gt;()),</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;      _offset_contribution_kernel(std::make_unique&lt;ClGemmLowpOffsetContributionKernel&gt;()),</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;      _offset_contribution_output_stage_kernel(std::make_unique&lt;ClGemmLowpOffsetContributionOutputStageKernel&gt;()),</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;      _aux_mem(AuxTensorIdx::Count)</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;{</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a4993f6d727f4c4981248116a754e3bf8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4993f6d727f4c4981248116a754e3bf8">&#9670;&nbsp;</a></span>~ClGemmLowpMatrixMultiplyCore()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm_lowp_matrix_multiply_core.xhtml">ClGemmLowpMatrixMultiplyCore</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a48efdcf8bc0a6f12cfe0ad234400181a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a48efdcf8bc0a6f12cfe0ad234400181a">&#9670;&nbsp;</a></span>configure()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void configure </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_c_l_compile_context.xhtml">CLCompileContext</a> &amp;&#160;</td>
          <td class="paramname"><em>compile_context</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>c</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml">GEMMInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>gemm_info</em> = <code><a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml">GEMMInfo</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialise the kernel's inputs, output. </p>
<p>Valid data layouts:</p><ul>
<li>NHWC</li>
<li>NCHW</li>
</ul>
<p>Valid data type configurations: </p><table class="markdownTable">
<tr class="markdownTableHead">
<th class="markdownTableHeadLeft">src0 </th><th class="markdownTableHeadLeft">src1 </th><th class="markdownTableHeadLeft">src2 </th><th class="markdownTableHeadLeft">dst  </th></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyLeft">QASYMM8 </td><td class="markdownTableBodyLeft">QASYMM8 </td><td class="markdownTableBodyLeft">S32 </td><td class="markdownTableBodyLeft">QASYMM8  </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyLeft">QASYMM8 </td><td class="markdownTableBodyLeft">QSYMM8_PER_CHANNEL </td><td class="markdownTableBodyLeft">S32 </td><td class="markdownTableBodyLeft">QASYMM8  </td></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyLeft">QASYMM8 </td><td class="markdownTableBodyLeft">QSYMM8 </td><td class="markdownTableBodyLeft">S32 </td><td class="markdownTableBodyLeft">QASYMM8  </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyLeft">QASYMM8 </td><td class="markdownTableBodyLeft">QASYMM8 </td><td class="markdownTableBodyLeft">S32 </td><td class="markdownTableBodyLeft">S32  </td></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyLeft">QASYMM8 </td><td class="markdownTableBodyLeft">QSYMM8_PER_CHANNEL </td><td class="markdownTableBodyLeft">S32 </td><td class="markdownTableBodyLeft">S32  </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyLeft">QASYMM8 </td><td class="markdownTableBodyLeft">QSYMM8 </td><td class="markdownTableBodyLeft">S32 </td><td class="markdownTableBodyLeft">S32  </td></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyLeft">QASYMM8_SIGNED </td><td class="markdownTableBodyLeft">QASYMM8_SIGNED </td><td class="markdownTableBodyLeft">S32 </td><td class="markdownTableBodyLeft">QASYMM8_SIGNED  </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyLeft">QASYMM8_SIGNED </td><td class="markdownTableBodyLeft">QSYMM8_PER_CHANNEL </td><td class="markdownTableBodyLeft">S32 </td><td class="markdownTableBodyLeft">QASYMM8_SIGNED  </td></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyLeft">QASYMM8_SIGNED </td><td class="markdownTableBodyLeft">QSYMM8 </td><td class="markdownTableBodyLeft">S32 </td><td class="markdownTableBodyLeft">QASYMM8_SIGNED  </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyLeft">QASYMM8_SIGNED </td><td class="markdownTableBodyLeft">QASYMM8_SIGNED </td><td class="markdownTableBodyLeft">S32 </td><td class="markdownTableBodyLeft">S32  </td></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyLeft">QASYMM8_SIGNED </td><td class="markdownTableBodyLeft">QSYMM8_PER_CHANNEL </td><td class="markdownTableBodyLeft">S32 </td><td class="markdownTableBodyLeft">S32  </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyLeft">QASYMM8_SIGNED </td><td class="markdownTableBodyLeft">QSYMM8 </td><td class="markdownTableBodyLeft">S32 </td><td class="markdownTableBodyLeft">S32  </td></tr>
</table>
<dl class="section note"><dt>Note</dt><dd>GEMMLowp: low precision GEMM kernel. [A * B + C] This kernel performs the following computations:</dd></dl>
<ol type="1">
<li>Convert a values from 8-bit quantized to int32 and add a_offset to each of them.</li>
<li>Convert b values from 8-bit quantized to int32 and add b_offset to each of them.</li>
<li>Compute the matrix product of the resulting a * b in int32.</li>
<li>Quantize to uint8 if gemm_info.gemmlowp_output_stage != NONE</li>
</ol>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">compile_context</td><td>The compile context to be used. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">a</td><td>First input tensor (Matrix A). Data type supported: QASYMM8/QASYMM8_SIGNED. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">b</td><td>Second input tensor (Matrix B). Data type supported: same as <code>a</code> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">c</td><td>Third input tensor (Matrix C). It can be a nullptr. Data type supported: S32 </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">output</td><td>Output tensor. Data type supported: S32 or QASYMM8/QASYMM8_SIGNED if gemm_info.gemmlowp_output_stage != NONE </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">gemm_info</td><td>(Optional) Specifies if the matrix A and/or matrix B have been reshaped and if the reshape of matrix B should be executed only for the first run </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="gpu_2cl_2operators_2_cl_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00304">304</a> of file <a class="el" href="gpu_2cl_2operators_2_cl_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml">ClGemmLowpMatrixMultiplyCore.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;{</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(a, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>, output);</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;    <a class="code" href="_error_8h.xhtml#a938dcd406ce611ef5345ad2531cdb948">ARM_COMPUTE_ERROR_THROW_ON</a>(<a class="code" href="classarm__compute_1_1opencl_1_1_cl_gemm_lowp_matrix_multiply_core.xhtml#a8c3cf2d65afb288e39909171ada19566">ClGemmLowpMatrixMultiplyCore::validate</a>(a, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>, c, output, gemm_info));</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;    <a class="code" href="src_2common_2utils_2_log_8h.xhtml#a3ae35e22a098d589ff54ed85647ed87e">ARM_COMPUTE_LOG_PARAMS</a>(a, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>, c, output, gemm_info);</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160; </div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;    _reshape_b_only_on_first_run = gemm_info.reshape_b_only_on_first_run();</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;    _a_offset                    = a-&gt;quantization_info().uniform().offset;</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;    _convert_to_qasymm8          = <a class="code" href="namespacearm__compute.xhtml#a84437d80241f6a31e1a07c231ee8e3ac">is_data_type_quantized_per_channel</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>-&gt;data_type()) &amp;&amp;</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;                          <a class="code" href="namespacearm__compute.xhtml#a922cd85c475c0d725fc030116ea57979">is_data_type_quantized_symmetric</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>-&gt;data_type()) &amp;&amp; a-&gt;data_type() == <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>;</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;    _b_offset  = _convert_to_qasymm8 ? -128 : <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>-&gt;quantization_info().uniform().offset;</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;    _gemm_info = gemm_info;</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160; </div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;    <span class="comment">// Get the GPU target</span></div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3">GPUTarget</a> gpu_target = <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a27561688e2fc60176608ef725a4ecb30">target</a>();</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160; </div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;    <span class="comment">// Set the target for the kernels</span></div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;    _mm_native_kernel-&gt;set_target(gpu_target);</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;    _mm_reshaped_only_rhs_kernel-&gt;set_target(gpu_target);</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;    _mm_reshaped_only_rhs_mmul_kernel-&gt;set_target(gpu_target);</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160; </div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;    GEMMRHSMatrixInfo rhs_info;</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;    GEMMLHSMatrixInfo lhs_info;</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160; </div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;    <span class="comment">// Arguments used by GEMMReshapeInfo</span></div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;    <span class="comment">// in order to know how the matrices have been reshaped</span></div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;    <span class="keywordtype">bool</span>               reinterpret_input_as_3d = gemm_info.reinterpret_input_as_3d();</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> m          = reinterpret_input_as_3d ? (a-&gt;dimension(1) * a-&gt;dimension(2)) : a-&gt;dimension(1);</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> n          = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>-&gt;dimension(0);</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> k          = a-&gt;dimension(0);</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> batch_size = reinterpret_input_as_3d ? a-&gt;dimension(3) : a-&gt;dimension(2);</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span>          depth_output_gemm3d = gemm_info.depth_output_gemm3d();</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160; </div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> reshape_info = GEMMReshapeInfo(m, n, k, 1, 1, depth_output_gemm3d, reinterpret_input_as_3d);</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160; </div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;    _gemm_kernel_type = auto_select_gemm_kernel(</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;        <a class="code" href="structarm__compute_1_1cl__gemm_1_1auto__heuristics_1_1_common_query.xhtml">auto_heuristics::CommonQuery</a>{gpu_target, a-&gt;<a class="code" href="structarm__compute_1_1cl__gemm_1_1auto__heuristics_1_1_common_query.xhtml#a6118865e7371b107bd5fb4dd4a9e99a3">data_type</a>(), m, n, k, batch_size}, _reshape_b_only_on_first_run);</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160; </div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;    <span class="keywordflow">if</span> (_convert_to_qasymm8)</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;    {</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;        <span class="comment">// Set data type for converted weights</span></div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;        _qasymm8_weights = *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>;</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;        _qasymm8_weights.<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a0a9053e6c4729ac5201b58068050c319">set_data_type</a>(<a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>);</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;        _weights_to_qasymm8-&gt;configure(compile_context, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>, &amp;_qasymm8_weights, <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fae1c8555fcf0ea2bb648a6fd527d658c0">ConvertPolicy::WRAP</a>);</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;    }</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160; </div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;    ITensorInfo *matrix_b = _convert_to_qasymm8 ? &amp;_qasymm8_weights : <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>;</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;    <span class="keywordflow">if</span> (_gemm_kernel_type == <a class="code" href="namespacearm__compute.xhtml#a6f7d2fe6b41e36d408375ad6bf9a612aae5baae53d329b252d56acec1bc0b5868">CLGEMMKernelType::RESHAPED_ONLY_RHS</a>)</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;    {</div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;        matrix_b = &amp;_tmp_b;</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160; </div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;        <span class="comment">// Pick up the GEMM configuration</span></div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;        <span class="comment">// It doesn&#39;t matter whether Datatype is DataType::QASYMM8 or DataType::QASYMM8_SIGNED, since it only affect the shape configuration</span></div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;        std::tie(lhs_info, rhs_info) = auto_select_gemm_config_reshaped_only_rhs(</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;            <a class="code" href="structarm__compute_1_1cl__gemm_1_1auto__heuristics_1_1_common_query.xhtml">auto_heuristics::CommonQuery</a>{gpu_target, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>, m, n, k, batch_size}, reinterpret_input_as_3d,</div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;            depth_output_gemm3d, a, _convert_to_qasymm8 ? &amp;_qasymm8_weights : <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>, output);</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160; </div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;        <span class="comment">// Configure reshape RHS kernel</span></div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;        _mtx_b_reshape_kernel-&gt;configure(compile_context, _convert_to_qasymm8 ? &amp;_qasymm8_weights : <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>, &amp;_tmp_b,</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;                                         rhs_info);</div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;    }</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;    <span class="keywordflow">if</span> (_gemm_kernel_type == <a class="code" href="namespacearm__compute.xhtml#a6f7d2fe6b41e36d408375ad6bf9a612aa4361824f1748299245ef0ad0cb7d6111">CLGEMMKernelType::RESHAPED_ONLY_RHS_MMUL</a>)</div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;    {</div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;        matrix_b = &amp;_tmp_b;</div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160; </div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;        <span class="comment">// Pick up the GEMM configuration</span></div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;        <span class="comment">// It doesn&#39;t matter whether Datatype is DataType::QASYMM8 or DataType::QASYMM8_SIGNED, since it only affect the shape configuration</span></div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;        std::tie(lhs_info, rhs_info) = auto_select_gemm_config_reshaped_only_rhs_mmul(</div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;            <a class="code" href="structarm__compute_1_1cl__gemm_1_1auto__heuristics_1_1_common_query.xhtml">auto_heuristics::CommonQuery</a>{gpu_target, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>, m, n, k, batch_size}, reinterpret_input_as_3d,</div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;            depth_output_gemm3d, a, _convert_to_qasymm8 ? &amp;_qasymm8_weights : <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>, output);</div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160; </div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;        <span class="comment">// Configure reshape RHS kernel</span></div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;        _mtx_b_reshape_kernel-&gt;configure(compile_context, _convert_to_qasymm8 ? &amp;_qasymm8_weights : <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>, &amp;_tmp_b,</div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;                                         rhs_info);</div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;    }</div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160; </div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;    <span class="comment">// Using default reduction info</span></div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;    <span class="keyword">const</span> GEMMLowpReductionKernelInfo reduction_info{};</div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160; </div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;    <span class="comment">// Initialize matrix B reduction kernel only if _a_offset is not equal to 0</span></div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;    <span class="keywordflow">if</span> (_a_offset != 0)</div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;    {</div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;        _vector_sum_col = TensorInfo(<a class="code" href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml#a60ce6c017f70d978b48b101ce314969e">compute_reductionA_shape</a>(*<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aa1e28eee0339658d39a8b4d325b56e9c">DataType::S32</a>);</div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160; </div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;        <span class="comment">// Configure Matrix B reduction kernel</span></div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;        _mtx_b_reduction_kernel-&gt;configure(compile_context, _convert_to_qasymm8 ? &amp;_qasymm8_weights : <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>,</div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;                                           &amp;_vector_sum_col, reduction_info);</div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;    }</div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160; </div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;    <span class="comment">// Initialize Matrix A reduction kernel only if _b_offset is not equal to 0</span></div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;    <span class="keywordflow">if</span> (_b_offset != 0)</div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;    {</div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;        _vector_sum_row = TensorInfo(<a class="code" href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml#a69f9b3191aafc4905f9d029ff9d48fea">compute_reductionB_shape</a>(*a), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aa1e28eee0339658d39a8b4d325b56e9c">DataType::S32</a>);</div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160; </div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;        <span class="comment">// Configure matrix A reduction kernel</span></div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;        _mtx_a_reduction_kernel-&gt;configure(compile_context, a, &amp;_vector_sum_row, reduction_info);</div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;    }</div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160; </div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;    GEMMKernelInfo gemm_kernel_info;</div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;    gemm_kernel_info.m                       = m;</div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;    gemm_kernel_info.n                       = n;</div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;    gemm_kernel_info.k                       = k;</div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;    gemm_kernel_info.depth_output_gemm3d     = depth_output_gemm3d;</div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;    gemm_kernel_info.reinterpret_input_as_3d = reinterpret_input_as_3d;</div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;    gemm_kernel_info.lhs_info                = lhs_info;</div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;    gemm_kernel_info.rhs_info                = rhs_info;</div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;    gemm_kernel_info.a_offset                = _a_offset;</div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;    gemm_kernel_info.b_offset                = _b_offset;</div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;    <span class="comment">// If GEMMLowpOutputStage != NONE, fuse the offset contribution with the output stage</span></div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;    <span class="keywordflow">if</span> (gemm_info.gemmlowp_output_stage().type != <a class="code" href="namespacearm__compute.xhtml#a5558e2cc22f7f4771653d992c8ad8864ab50339a10e1de285ac99d4c3990b8693">GEMMLowpOutputStageType::NONE</a>)</div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;    {</div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;        <span class="comment">// Configure offset contribution kernel</span></div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">size_t</span> num_filters = (gemm_info.gemmlowp_output_stage().is_quantized_per_channel)</div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;                                       ? gemm_info.gemmlowp_output_stage().gemmlowp_multipliers.size()</div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;                                       : 1;</div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160; </div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;        _gemm_output_stage_multipliers = TensorInfo(TensorShape(num_filters), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aa1e28eee0339658d39a8b4d325b56e9c">DataType::S32</a>);</div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;        _gemm_output_stage_shifts      = TensorInfo(TensorShape(num_filters), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aa1e28eee0339658d39a8b4d325b56e9c">DataType::S32</a>);</div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160; </div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;        GEMMLowpOutputStageInfo gemmlowp_output_stage = gemm_info.gemmlowp_output_stage();</div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;        gemmlowp_output_stage.output_data_type        = a-&gt;data_type();</div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;        <span class="keywordflow">if</span> (num_filters == 1)</div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;        {</div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;            <span class="comment">// Per-channel quantization with OFM == 1 is equivalent to uniform quantization.</span></div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;            <span class="comment">// Setting this flag to false prevents the kernel from adding useless padding to the output multipliers and shifts</span></div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;            gemmlowp_output_stage.is_quantized_per_channel = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;        }</div>
<div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160; </div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;        gemm_kernel_info.output_stage = gemmlowp_output_stage;</div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160; </div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;        <span class="keywordflow">if</span> (_gemm_kernel_type == <a class="code" href="namespacearm__compute.xhtml#a6f7d2fe6b41e36d408375ad6bf9a612aae5baae53d329b252d56acec1bc0b5868">CLGEMMKernelType::RESHAPED_ONLY_RHS</a> &amp;&amp;</div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;            gemmlowp_output_stage.type == <a class="code" href="namespacearm__compute.xhtml#a5558e2cc22f7f4771653d992c8ad8864ab300cae200f67712c1eb9234e28158ca">GEMMLowpOutputStageType::QUANTIZE_DOWN_FIXEDPOINT</a>)</div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;        {</div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;            <span class="comment">// Configure and tune matrix multiply kernel with fused output stage</span></div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;            _mm_reshaped_only_rhs_kernel-&gt;configure(</div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;                compile_context, a, matrix_b, output, gemm_kernel_info, _a_offset == 0 ? <span class="keyword">nullptr</span> : &amp;_vector_sum_col,</div>
<div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;                _b_offset == 0 ? <span class="keyword">nullptr</span> : &amp;_vector_sum_row, c != <span class="keyword">nullptr</span> ? c : <span class="keyword">nullptr</span>,</div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;                &amp;_gemm_output_stage_multipliers, &amp;_gemm_output_stage_shifts);</div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;        }</div>
<div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span> (_gemm_kernel_type == <a class="code" href="namespacearm__compute.xhtml#a6f7d2fe6b41e36d408375ad6bf9a612aa4361824f1748299245ef0ad0cb7d6111">CLGEMMKernelType::RESHAPED_ONLY_RHS_MMUL</a> &amp;&amp;</div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;                 gemmlowp_output_stage.type == <a class="code" href="namespacearm__compute.xhtml#a5558e2cc22f7f4771653d992c8ad8864ab300cae200f67712c1eb9234e28158ca">GEMMLowpOutputStageType::QUANTIZE_DOWN_FIXEDPOINT</a>)</div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;        {</div>
<div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;            <span class="comment">// Configure and tune matrix multiply kernel with fused output stage</span></div>
<div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;            _mm_reshaped_only_rhs_mmul_kernel-&gt;configure(</div>
<div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;                compile_context, a, matrix_b, output, gemm_kernel_info, _a_offset == 0 ? <span class="keyword">nullptr</span> : &amp;_vector_sum_col,</div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;                _b_offset == 0 ? <span class="keyword">nullptr</span> : &amp;_vector_sum_row, c != <span class="keyword">nullptr</span> ? c : <span class="keyword">nullptr</span>,</div>
<div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;                &amp;_gemm_output_stage_multipliers, &amp;_gemm_output_stage_shifts);</div>
<div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;        }</div>
<div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;        {</div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;            _run_output_stage = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160; </div>
<div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;            <span class="keywordflow">if</span> (_gemm_kernel_type == <a class="code" href="namespacearm__compute.xhtml#a6f7d2fe6b41e36d408375ad6bf9a612aae5baae53d329b252d56acec1bc0b5868">CLGEMMKernelType::RESHAPED_ONLY_RHS</a>)</div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;            {</div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;                _mm_reshaped_only_rhs_kernel-&gt;configure(compile_context, a, matrix_b, &amp;_mm_result_s32,</div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;                                                        gemm_kernel_info);</div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;            }</div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;            <span class="keywordflow">if</span> (_gemm_kernel_type == <a class="code" href="namespacearm__compute.xhtml#a6f7d2fe6b41e36d408375ad6bf9a612aa4361824f1748299245ef0ad0cb7d6111">CLGEMMKernelType::RESHAPED_ONLY_RHS_MMUL</a>)</div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;            {</div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;                _mm_reshaped_only_rhs_mmul_kernel-&gt;configure(compile_context, a, matrix_b, &amp;_mm_result_s32,</div>
<div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;                                                             gemm_kernel_info);</div>
<div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;            }</div>
<div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;            <span class="keywordflow">else</span></div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;            {</div>
<div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;                <span class="comment">// Pick up the GEMM configuration</span></div>
<div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;                <span class="comment">// It doesn&#39;t matter whether Datatype is DataType::QASYMM8 or DataType::QASYMM8_SIGNED, since it only affect the shape configuration</span></div>
<div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;                std::tie(lhs_info, rhs_info) = auto_select_gemm_config_native(</div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;                    <a class="code" href="structarm__compute_1_1cl__gemm_1_1auto__heuristics_1_1_common_query.xhtml">auto_heuristics::CommonQuery</a>{gpu_target, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>, m, n, k, batch_size}, a,</div>
<div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;                    _convert_to_qasymm8 ? &amp;_qasymm8_weights : matrix_b, reshape_info);</div>
<div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160; </div>
<div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;                <span class="comment">// Configure matrix multiply kernel</span></div>
<div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;                _mm_native_kernel-&gt;configure(compile_context, a, matrix_b, &amp;_mm_result_s32, lhs_info, rhs_info,</div>
<div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;                                             reshape_info);</div>
<div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160; </div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;                _offset_contribution_output_stage_kernel-&gt;configure(</div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;                    compile_context, &amp;_mm_result_s32, _a_offset == 0 ? <span class="keyword">nullptr</span> : &amp;_vector_sum_col,</div>
<div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;                    _b_offset == 0 ? <span class="keyword">nullptr</span> : &amp;_vector_sum_row, c != <span class="keyword">nullptr</span> ? c : <span class="keyword">nullptr</span>, output, a-&gt;dimension(0),</div>
<div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;                    _a_offset, _b_offset, gemmlowp_output_stage, &amp;_gemm_output_stage_multipliers,</div>
<div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;                    &amp;_gemm_output_stage_shifts);</div>
<div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;            }</div>
<div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;        }</div>
<div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;    }</div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;    {</div>
<div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;        _run_offset_contribution = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;        <span class="keywordflow">if</span> (_gemm_kernel_type == <a class="code" href="namespacearm__compute.xhtml#a6f7d2fe6b41e36d408375ad6bf9a612aae5baae53d329b252d56acec1bc0b5868">CLGEMMKernelType::RESHAPED_ONLY_RHS</a>)</div>
<div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;        {</div>
<div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;            <span class="comment">// Configure and tune matrix multiply kernel</span></div>
<div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;            _mm_reshaped_only_rhs_kernel-&gt;configure(compile_context, a, matrix_b, output, gemm_kernel_info);</div>
<div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;        }</div>
<div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span> (_gemm_kernel_type == <a class="code" href="namespacearm__compute.xhtml#a6f7d2fe6b41e36d408375ad6bf9a612aa4361824f1748299245ef0ad0cb7d6111">CLGEMMKernelType::RESHAPED_ONLY_RHS_MMUL</a>)</div>
<div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;        {</div>
<div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;            <span class="comment">// Configure and tune matrix multiply kernel</span></div>
<div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;            _mm_reshaped_only_rhs_mmul_kernel-&gt;configure(compile_context, a, matrix_b, output, gemm_kernel_info);</div>
<div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;        }</div>
<div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;        {</div>
<div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;            <span class="comment">// Pick up the GEMM configuration</span></div>
<div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;            <span class="comment">// It doesn&#39;t matter whether Datatype is DataType::QASYMM8 or DataType::QASYMM8_SIGNED, since it only affect the shape configuration</span></div>
<div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;            std::tie(lhs_info, rhs_info) = auto_select_gemm_config_native(</div>
<div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;                <a class="code" href="structarm__compute_1_1cl__gemm_1_1auto__heuristics_1_1_common_query.xhtml">auto_heuristics::CommonQuery</a>{gpu_target, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>, m, n, k, batch_size}, a,</div>
<div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;                _convert_to_qasymm8 ? &amp;_qasymm8_weights : <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>, reshape_info);</div>
<div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160; </div>
<div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;            <span class="comment">// Configure matrix multiply kernel</span></div>
<div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;            _mm_native_kernel-&gt;configure(compile_context, a, matrix_b, output, lhs_info, rhs_info, reshape_info);</div>
<div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;        }</div>
<div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160; </div>
<div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;        <span class="comment">// Configure offset contribution kernel</span></div>
<div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;        _offset_contribution_kernel-&gt;configure(compile_context, output, _a_offset == 0 ? <span class="keyword">nullptr</span> : &amp;_vector_sum_col,</div>
<div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;                                               _b_offset == 0 ? <span class="keyword">nullptr</span> : &amp;_vector_sum_row, c != <span class="keyword">nullptr</span> ? c : <span class="keyword">nullptr</span>,</div>
<div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;                                               a-&gt;dimension(0), _a_offset, _b_offset);</div>
<div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;    }</div>
<div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160; </div>
<div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;    <span class="comment">// Request memory</span></div>
<div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;    _aux_mem[RhsQAsymm8] =</div>
<div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;        <a class="code" href="structarm__compute_1_1experimental_1_1_memory_info.xhtml">MemoryInfo</a>(<a class="code" href="namespacearm__compute.xhtml#a324d709e8fb5568ada56ba4999dfb2f1">offset_int_vec</a>(RhsQAsymm8),</div>
<div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;                   _reshape_b_only_on_first_run ? MemoryLifetime::Persistent : MemoryLifetime::Temporary,</div>
<div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;                   _qasymm8_weights.<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#af398466b602a02b42d8df19fb66a6c60">total_size</a>());</div>
<div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;    <span class="keywordflow">if</span> (is_gemm_reshaped(_gemm_kernel_type))</div>
<div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;    {</div>
<div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;        <span class="comment">// Overwrite Rhs as prepare if gemm is reshaped as there will be a two-step transformation</span></div>
<div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;        _aux_mem[RhsQAsymm8] =</div>
<div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;            <a class="code" href="structarm__compute_1_1experimental_1_1_memory_info.xhtml">MemoryInfo</a>(<a class="code" href="namespacearm__compute.xhtml#a324d709e8fb5568ada56ba4999dfb2f1">offset_int_vec</a>(RhsQAsymm8),</div>
<div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;                       _reshape_b_only_on_first_run ? <a class="code" href="namespacearm__compute_1_1experimental.xhtml#a90cbc7f3fa8bbc097dfd0429b31efb83af8199556cf6a62ca9268aa50c99b34a1">MemoryLifetime::Prepare</a> : MemoryLifetime::Temporary,</div>
<div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;                       _qasymm8_weights.<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#af398466b602a02b42d8df19fb66a6c60">total_size</a>());</div>
<div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;        _aux_mem[RhsReshape] = <a class="code" href="structarm__compute_1_1experimental_1_1_memory_info.xhtml">MemoryInfo</a>(</div>
<div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;            <a class="code" href="namespacearm__compute.xhtml#a324d709e8fb5568ada56ba4999dfb2f1">offset_int_vec</a>(RhsReshape),</div>
<div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;            _reshape_b_only_on_first_run ? MemoryLifetime::Persistent : MemoryLifetime::Temporary, _tmp_b.<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#af398466b602a02b42d8df19fb66a6c60">total_size</a>());</div>
<div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;    }</div>
<div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;    <span class="keywordflow">if</span> (_a_offset != 0)</div>
<div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;    {</div>
<div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;        _aux_mem[VecSumCol] =</div>
<div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;            <a class="code" href="structarm__compute_1_1experimental_1_1_memory_info.xhtml">MemoryInfo</a>(<a class="code" href="namespacearm__compute.xhtml#a324d709e8fb5568ada56ba4999dfb2f1">offset_int_vec</a>(VecSumCol),</div>
<div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;                       _reshape_b_only_on_first_run ? MemoryLifetime::Persistent : MemoryLifetime::Temporary,</div>
<div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;                       _vector_sum_col.<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#af398466b602a02b42d8df19fb66a6c60">total_size</a>());</div>
<div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;    }</div>
<div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;    <span class="keywordflow">if</span> (_b_offset != 0)</div>
<div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;    {</div>
<div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;        _aux_mem[VecSumRow] =</div>
<div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;            <a class="code" href="structarm__compute_1_1experimental_1_1_memory_info.xhtml">MemoryInfo</a>(<a class="code" href="namespacearm__compute.xhtml#a324d709e8fb5568ada56ba4999dfb2f1">offset_int_vec</a>(VecSumRow), MemoryLifetime::Temporary, _vector_sum_row.<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#af398466b602a02b42d8df19fb66a6c60">total_size</a>());</div>
<div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;    }</div>
<div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;    _aux_mem[ResultS32] = <a class="code" href="structarm__compute_1_1experimental_1_1_memory_info.xhtml">MemoryInfo</a>(<a class="code" href="namespacearm__compute.xhtml#a324d709e8fb5568ada56ba4999dfb2f1">offset_int_vec</a>(ResultS32), MemoryLifetime::Temporary, _mm_result_s32.<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#af398466b602a02b42d8df19fb66a6c60">total_size</a>());</div>
<div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;    _aux_mem[Multipliers] = <a class="code" href="structarm__compute_1_1experimental_1_1_memory_info.xhtml">MemoryInfo</a>(<a class="code" href="namespacearm__compute.xhtml#a324d709e8fb5568ada56ba4999dfb2f1">offset_int_vec</a>(Multipliers), MemoryLifetime::Persistent,</div>
<div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;                                       _gemm_output_stage_multipliers.<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#af398466b602a02b42d8df19fb66a6c60">total_size</a>());</div>
<div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;    _aux_mem[Shifts] =</div>
<div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;        <a class="code" href="structarm__compute_1_1experimental_1_1_memory_info.xhtml">MemoryInfo</a>(<a class="code" href="namespacearm__compute.xhtml#a324d709e8fb5568ada56ba4999dfb2f1">offset_int_vec</a>(Shifts), MemoryLifetime::Persistent, _gemm_output_stage_shifts.<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#af398466b602a02b42d8df19fb66a6c60">total_size</a>());</div>
<div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_kernel_descriptors_8h_source.xhtml#l00109">GEMMKernelInfo::a_offset</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00159">ARM_COMPUTE_ERROR_ON_NULLPTR</a>, <a class="el" href="_error_8h_source.xhtml#l00455">ARM_COMPUTE_ERROR_THROW_ON</a>, <a class="el" href="src_2common_2utils_2_log_8h_source.xhtml#l00035">ARM_COMPUTE_LOG_PARAMS</a>, <a class="el" href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00157">arm_compute::test::validation::b</a>, <a class="el" href="_kernel_descriptors_8h_source.xhtml#l00110">GEMMKernelInfo::b_offset</a>, <a class="el" href="_shape_calculator_8h_source.xhtml#l00350">arm_compute::misc::shape_calculator::compute_reductionA_shape()</a>, <a class="el" href="_shape_calculator_8h_source.xhtml#l00367">arm_compute::misc::shape_calculator::compute_reductionB_shape()</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">ITensorInfo::data_type()</a>, <a class="el" href="_kernel_descriptors_8h_source.xhtml#l00097">GEMMKernelInfo::depth_output_gemm3d</a>, <a class="el" href="_g_e_m_m_info_8h_source.xhtml#l00171">GEMMInfo::depth_output_gemm3d()</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">ITensorInfo::dimension()</a>, <a class="el" href="_g_e_m_m_info_8h_source.xhtml#l00057">GEMMLowpOutputStageInfo::gemmlowp_multipliers</a>, <a class="el" href="_g_e_m_m_info_8h_source.xhtml#l00195">GEMMInfo::gemmlowp_output_stage()</a>, <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00112">CLScheduler::get()</a>, <a class="el" href="_data_type_utils_8h_source.xhtml#l00401">arm_compute::is_data_type_quantized_per_channel()</a>, <a class="el" href="_data_type_utils_8h_source.xhtml#l00382">arm_compute::is_data_type_quantized_symmetric()</a>, <a class="el" href="_g_e_m_m_info_8h_source.xhtml#l00060">GEMMLowpOutputStageInfo::is_quantized_per_channel</a>, <a class="el" href="_kernel_descriptors_8h_source.xhtml#l00096">GEMMKernelInfo::k</a>, <a class="el" href="_kernel_descriptors_8h_source.xhtml#l00107">GEMMKernelInfo::lhs_info</a>, <a class="el" href="_kernel_descriptors_8h_source.xhtml#l00094">GEMMKernelInfo::m</a>, <a class="el" href="_kernel_descriptors_8h_source.xhtml#l00095">GEMMKernelInfo::n</a>, <a class="el" href="namespacearm__compute.xhtml#a5558e2cc22f7f4771653d992c8ad8864ab50339a10e1de285ac99d4c3990b8693">arm_compute::NONE</a>, <a class="el" href="_quantization_info_8h_source.xhtml#l00063">UniformQuantizationInfo::offset</a>, <a class="el" href="_memory_helpers_8h_source.xhtml#l00038">arm_compute::offset_int_vec()</a>, <a class="el" href="_g_e_m_m_info_8h_source.xhtml#l00061">GEMMLowpOutputStageInfo::output_data_type</a>, <a class="el" href="_kernel_descriptors_8h_source.xhtml#l00111">GEMMKernelInfo::output_stage</a>, <a class="el" href="namespacearm__compute_1_1experimental.xhtml#a90cbc7f3fa8bbc097dfd0429b31efb83af8199556cf6a62ca9268aa50c99b34a1">arm_compute::experimental::Prepare</a>, <a class="el" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">arm_compute::QASYMM8</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a3f3e1a3200223e6a304a533b1016e749">ITensorInfo::quantization_info()</a>, <a class="el" href="namespacearm__compute.xhtml#a5558e2cc22f7f4771653d992c8ad8864ab300cae200f67712c1eb9234e28158ca">arm_compute::QUANTIZE_DOWN_FIXEDPOINT</a>, <a class="el" href="_kernel_descriptors_8h_source.xhtml#l00098">GEMMKernelInfo::reinterpret_input_as_3d</a>, <a class="el" href="_g_e_m_m_info_8h_source.xhtml#l00179">GEMMInfo::reinterpret_input_as_3d()</a>, <a class="el" href="_g_e_m_m_info_8h_source.xhtml#l00163">GEMMInfo::reshape_b_only_on_first_run()</a>, <a class="el" href="namespacearm__compute.xhtml#a6f7d2fe6b41e36d408375ad6bf9a612aae5baae53d329b252d56acec1bc0b5868">arm_compute::RESHAPED_ONLY_RHS</a>, <a class="el" href="namespacearm__compute.xhtml#a6f7d2fe6b41e36d408375ad6bf9a612aa4361824f1748299245ef0ad0cb7d6111">arm_compute::RESHAPED_ONLY_RHS_MMUL</a>, <a class="el" href="_kernel_descriptors_8h_source.xhtml#l00108">GEMMKernelInfo::rhs_info</a>, <a class="el" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aa1e28eee0339658d39a8b4d325b56e9c">arm_compute::S32</a>, <a class="el" href="src_2core_2_tensor_info_8cpp_source.xhtml#l00339">TensorInfo::set_data_type()</a>, <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00046">CLScheduler::target()</a>, <a class="el" href="_tensor_info_8h_source.xhtml#l00261">TensorInfo::total_size()</a>, <a class="el" href="_g_e_m_m_info_8h_source.xhtml#l00047">GEMMLowpOutputStageInfo::type</a>, <a class="el" href="_quantization_info_8h_source.xhtml#l00140">QuantizationInfo::uniform()</a>, <a class="el" href="gpu_2cl_2operators_2_cl_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00557">ClGemmLowpMatrixMultiplyCore::validate()</a>, and <a class="el" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fae1c8555fcf0ea2bb648a6fd527d658c0">arm_compute::WRAP</a>.</p>

</div>
</div>
<a id="aff8f5e4223fd2a3020c8b252c8982d3a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aff8f5e4223fd2a3020c8b252c8982d3a">&#9670;&nbsp;</a></span>prepare()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void prepare </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> &amp;&#160;</td>
          <td class="paramname"><em>constants</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prepare the function for executing. </p>
<p>Any one off pre-processing step required by the function is handled here</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">constants</td><td><a class="el" href="struct_vector.xhtml" title="Structure to hold Vector information.">Vector</a> that contains the constants tensors.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd>Prepare stage might not need all the function's buffers' backing memory to be available in order to execute </dd></dl>

<p>Reimplemented from <a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml#aff8f5e4223fd2a3020c8b252c8982d3a">ICLOperator</a>.</p>

<p class="definition">Definition at line <a class="el" href="gpu_2cl_2operators_2_cl_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00877">877</a> of file <a class="el" href="gpu_2cl_2operators_2_cl_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml">ClGemmLowpMatrixMultiplyCore.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00878"></a><span class="lineno">  878</span>&#160;{</div>
<div class="line"><a name="l00879"></a><span class="lineno">  879</span>&#160;    <span class="keywordflow">if</span> (!_is_prepared)</div>
<div class="line"><a name="l00880"></a><span class="lineno">  880</span>&#160;    {</div>
<div class="line"><a name="l00881"></a><span class="lineno">  881</span>&#160;        <span class="keyword">auto</span>               <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a> = tensors.get_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0">TensorType::ACL_SRC_1</a>);</div>
<div class="line"><a name="l00882"></a><span class="lineno">  882</span>&#160;        CLAuxTensorHandler tmp_b(<a class="code" href="namespacearm__compute.xhtml#a324d709e8fb5568ada56ba4999dfb2f1">offset_int_vec</a>(RhsReshape), _tmp_b, tensors, <span class="keyword">true</span>);</div>
<div class="line"><a name="l00883"></a><span class="lineno">  883</span>&#160;        CLAuxTensorHandler vec_sum_col(<a class="code" href="namespacearm__compute.xhtml#a324d709e8fb5568ada56ba4999dfb2f1">offset_int_vec</a>(VecSumCol), _vector_sum_col, tensors, <span class="keyword">true</span>);</div>
<div class="line"><a name="l00884"></a><span class="lineno">  884</span>&#160;        CLAuxTensorHandler rhs_qasymm8(<a class="code" href="namespacearm__compute.xhtml#a324d709e8fb5568ada56ba4999dfb2f1">offset_int_vec</a>(RhsQAsymm8), _qasymm8_weights, tensors, <span class="keyword">false</span>);</div>
<div class="line"><a name="l00885"></a><span class="lineno">  885</span>&#160; </div>
<div class="line"><a name="l00886"></a><span class="lineno">  886</span>&#160;        <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>);</div>
<div class="line"><a name="l00887"></a><span class="lineno">  887</span>&#160; </div>
<div class="line"><a name="l00888"></a><span class="lineno">  888</span>&#160;        <span class="keywordflow">if</span> (_convert_to_qasymm8)</div>
<div class="line"><a name="l00889"></a><span class="lineno">  889</span>&#160;        {</div>
<div class="line"><a name="l00890"></a><span class="lineno">  890</span>&#160;            ITensorPack convert_to_qs8_pack = {{<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69">ACL_SRC</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>}, {<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">ACL_DST</a>, rhs_qasymm8.get()}};</div>
<div class="line"><a name="l00891"></a><span class="lineno">  891</span>&#160;            <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a5c0fc6f465cae029d60ffdfc7f3e99d9">enqueue_op</a>(*_weights_to_qasymm8, convert_to_qs8_pack, <span class="keyword">false</span>);</div>
<div class="line"><a name="l00892"></a><span class="lineno">  892</span>&#160;            <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>-&gt;mark_as_unused();</div>
<div class="line"><a name="l00893"></a><span class="lineno">  893</span>&#160;        }</div>
<div class="line"><a name="l00894"></a><span class="lineno">  894</span>&#160; </div>
<div class="line"><a name="l00895"></a><span class="lineno">  895</span>&#160;        <span class="keywordflow">if</span> (is_gemm_reshaped(_gemm_kernel_type) &amp;&amp; _reshape_b_only_on_first_run)</div>
<div class="line"><a name="l00896"></a><span class="lineno">  896</span>&#160;        {</div>
<div class="line"><a name="l00897"></a><span class="lineno">  897</span>&#160;            <span class="comment">// Run reshape kernel and mark original weights tensor as unused</span></div>
<div class="line"><a name="l00898"></a><span class="lineno">  898</span>&#160;            ITensorPack mtx_b_pack = {{<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69">TensorType::ACL_SRC</a>, _convert_to_qasymm8 ? rhs_qasymm8.get() : <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>},</div>
<div class="line"><a name="l00899"></a><span class="lineno">  899</span>&#160;                                      {<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">TensorType::ACL_DST</a>, tmp_b.get()}};</div>
<div class="line"><a name="l00900"></a><span class="lineno">  900</span>&#160;            <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a5c0fc6f465cae029d60ffdfc7f3e99d9">enqueue_op</a>(*_mtx_b_reshape_kernel, mtx_b_pack, <span class="keyword">false</span>);</div>
<div class="line"><a name="l00901"></a><span class="lineno">  901</span>&#160;            <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>-&gt;mark_as_unused();</div>
<div class="line"><a name="l00902"></a><span class="lineno">  902</span>&#160;        }</div>
<div class="line"><a name="l00903"></a><span class="lineno">  903</span>&#160; </div>
<div class="line"><a name="l00904"></a><span class="lineno">  904</span>&#160;        <span class="comment">// Run matrix B reduction kernel only if _a_offset is not equal to 0</span></div>
<div class="line"><a name="l00905"></a><span class="lineno">  905</span>&#160;        <span class="keywordflow">if</span> (_a_offset != 0 &amp;&amp; _reshape_b_only_on_first_run)</div>
<div class="line"><a name="l00906"></a><span class="lineno">  906</span>&#160;        {</div>
<div class="line"><a name="l00907"></a><span class="lineno">  907</span>&#160;            ITensorPack mtx_b_red_pack = {{<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69">TensorType::ACL_SRC</a>, _convert_to_qasymm8 ? rhs_qasymm8.get() : <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>},</div>
<div class="line"><a name="l00908"></a><span class="lineno">  908</span>&#160;                                          {<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">TensorType::ACL_DST</a>, vec_sum_col.get()}};</div>
<div class="line"><a name="l00909"></a><span class="lineno">  909</span>&#160;            <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a5c0fc6f465cae029d60ffdfc7f3e99d9">enqueue_op</a>(*_mtx_b_reduction_kernel, mtx_b_red_pack, <span class="keyword">false</span>);</div>
<div class="line"><a name="l00910"></a><span class="lineno">  910</span>&#160;        }</div>
<div class="line"><a name="l00911"></a><span class="lineno">  911</span>&#160; </div>
<div class="line"><a name="l00912"></a><span class="lineno">  912</span>&#160;        <span class="comment">// Compute GEMM output multipliers and shifts for output stage</span></div>
<div class="line"><a name="l00913"></a><span class="lineno">  913</span>&#160;        {</div>
<div class="line"><a name="l00914"></a><span class="lineno">  914</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">size_t</span> num_filters = (_gemm_info.<a class="code" href="classarm__compute_1_1_g_e_m_m_info.xhtml#a11d8f855e323a8396fe6944edcef4238">gemmlowp_output_stage</a>().<a class="code" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#a94e1801be6c3d9d6645c694d7e280cda">is_quantized_per_channel</a>)</div>
<div class="line"><a name="l00915"></a><span class="lineno">  915</span>&#160;                                           ? _gemm_info.<a class="code" href="classarm__compute_1_1_g_e_m_m_info.xhtml#a11d8f855e323a8396fe6944edcef4238">gemmlowp_output_stage</a>().<a class="code" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#ae5bd6bebbc0c7ebd9e7dbfd47d939c2a">gemmlowp_multipliers</a>.size()</div>
<div class="line"><a name="l00916"></a><span class="lineno">  916</span>&#160;                                           : 1;</div>
<div class="line"><a name="l00917"></a><span class="lineno">  917</span>&#160; </div>
<div class="line"><a name="l00918"></a><span class="lineno">  918</span>&#160;            CLAuxTensorHandler multipliers(<a class="code" href="namespacearm__compute.xhtml#a324d709e8fb5568ada56ba4999dfb2f1">offset_int_vec</a>(Multipliers), _gemm_output_stage_multipliers, tensors, <span class="keyword">false</span>);</div>
<div class="line"><a name="l00919"></a><span class="lineno">  919</span>&#160;            CLAuxTensorHandler shifts(<a class="code" href="namespacearm__compute.xhtml#a324d709e8fb5568ada56ba4999dfb2f1">offset_int_vec</a>(Shifts), _gemm_output_stage_shifts, tensors, <span class="keyword">false</span>);</div>
<div class="line"><a name="l00920"></a><span class="lineno">  920</span>&#160; </div>
<div class="line"><a name="l00921"></a><span class="lineno">  921</span>&#160;            ICLTensor *multiplier_tensor = multipliers.get();</div>
<div class="line"><a name="l00922"></a><span class="lineno">  922</span>&#160;            <span class="keywordflow">if</span> (multiplier_tensor != <span class="keyword">nullptr</span> &amp;&amp; multiplier_tensor-&gt;info()-&gt;total_size() &gt; 0)</div>
<div class="line"><a name="l00923"></a><span class="lineno">  923</span>&#160;            {</div>
<div class="line"><a name="l00924"></a><span class="lineno">  924</span>&#160;                multiplier_tensor-&gt;map(<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().queue(), <span class="keyword">true</span>);</div>
<div class="line"><a name="l00925"></a><span class="lineno">  925</span>&#160;                std::memcpy(multiplier_tensor-&gt;ptr_to_element(Coordinates(0)),</div>
<div class="line"><a name="l00926"></a><span class="lineno">  926</span>&#160;                            _gemm_info.<a class="code" href="classarm__compute_1_1_g_e_m_m_info.xhtml#a11d8f855e323a8396fe6944edcef4238">gemmlowp_output_stage</a>().<a class="code" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#ae5bd6bebbc0c7ebd9e7dbfd47d939c2a">gemmlowp_multipliers</a>.data(),</div>
<div class="line"><a name="l00927"></a><span class="lineno">  927</span>&#160;                            num_filters * <span class="keyword">sizeof</span>(int32_t));</div>
<div class="line"><a name="l00928"></a><span class="lineno">  928</span>&#160;                multiplier_tensor-&gt;unmap(<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().queue());</div>
<div class="line"><a name="l00929"></a><span class="lineno">  929</span>&#160;            }</div>
<div class="line"><a name="l00930"></a><span class="lineno">  930</span>&#160; </div>
<div class="line"><a name="l00931"></a><span class="lineno">  931</span>&#160;            ICLTensor *shifts_tensor = shifts.get();</div>
<div class="line"><a name="l00932"></a><span class="lineno">  932</span>&#160;            <span class="keywordflow">if</span> (shifts.get() != <span class="keyword">nullptr</span> &amp;&amp; shifts_tensor-&gt;info()-&gt;total_size() &gt; 0)</div>
<div class="line"><a name="l00933"></a><span class="lineno">  933</span>&#160;            {</div>
<div class="line"><a name="l00934"></a><span class="lineno">  934</span>&#160;                shifts_tensor-&gt;map(<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().queue(), <span class="keyword">true</span>);</div>
<div class="line"><a name="l00935"></a><span class="lineno">  935</span>&#160;                std::memcpy(shifts_tensor-&gt;ptr_to_element(Coordinates(0)),</div>
<div class="line"><a name="l00936"></a><span class="lineno">  936</span>&#160;                            _gemm_info.<a class="code" href="classarm__compute_1_1_g_e_m_m_info.xhtml#a11d8f855e323a8396fe6944edcef4238">gemmlowp_output_stage</a>().<a class="code" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#ab269b182588a158cd256f9d4bb2a00dd">gemmlowp_shifts</a>.data(), num_filters * <span class="keyword">sizeof</span>(int32_t));</div>
<div class="line"><a name="l00937"></a><span class="lineno">  937</span>&#160;                shifts_tensor-&gt;unmap(<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().queue());</div>
<div class="line"><a name="l00938"></a><span class="lineno">  938</span>&#160;            }</div>
<div class="line"><a name="l00939"></a><span class="lineno">  939</span>&#160;        }</div>
<div class="line"><a name="l00940"></a><span class="lineno">  940</span>&#160;        <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a398a2582c746d28fc125487a44c9ed74">queue</a>().finish();</div>
<div class="line"><a name="l00941"></a><span class="lineno">  941</span>&#160;        _is_prepared = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00942"></a><span class="lineno">  942</span>&#160;    }</div>
<div class="line"><a name="l00943"></a><span class="lineno">  943</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00055">arm_compute::ACL_DST</a>, <a class="el" href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00044">arm_compute::ACL_SRC</a>, <a class="el" href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00046">arm_compute::ACL_SRC_1</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00159">ARM_COMPUTE_ERROR_ON_NULLPTR</a>, <a class="el" href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00157">arm_compute::test::validation::b</a>, <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00238">CLScheduler::enqueue_op()</a>, <a class="el" href="_g_e_m_m_info_8h_source.xhtml#l00057">GEMMLowpOutputStageInfo::gemmlowp_multipliers</a>, <a class="el" href="_g_e_m_m_info_8h_source.xhtml#l00195">GEMMInfo::gemmlowp_output_stage()</a>, <a class="el" href="_g_e_m_m_info_8h_source.xhtml#l00058">GEMMLowpOutputStageInfo::gemmlowp_shifts</a>, <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00112">CLScheduler::get()</a>, <a class="el" href="_cl_aux_tensor_handler_8h_source.xhtml#l00136">CLAuxTensorHandler::get()</a>, <a class="el" href="_i_tensor_pack_8cpp_source.xhtml#l00053">ITensorPack::get_const_tensor()</a>, <a class="el" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">ITensor::info()</a>, <a class="el" href="_g_e_m_m_info_8h_source.xhtml#l00060">GEMMLowpOutputStageInfo::is_quantized_per_channel</a>, <a class="el" href="_i_c_l_tensor_8cpp_source.xhtml#l00034">ICLTensor::map()</a>, <a class="el" href="_memory_helpers_8h_source.xhtml#l00038">arm_compute::offset_int_vec()</a>, <a class="el" href="_i_tensor_8h_source.xhtml#l00063">ITensor::ptr_to_element()</a>, <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00040">CLScheduler::queue()</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a18064e0011c3869d884653e9e7c47b66">ITensorInfo::total_size()</a>, and <a class="el" href="_i_c_l_tensor_8cpp_source.xhtml#l00039">ICLTensor::unmap()</a>.</p>

<p class="reference">Referenced by <a class="el" href="gpu_2cl_2operators_2_cl_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00759">ClGemmLowpMatrixMultiplyCore::run()</a>.</p>

</div>
</div>
<a id="a684a54d1fb1634a348a585c6b5e76df0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a684a54d1fb1634a348a585c6b5e76df0">&#9670;&nbsp;</a></span>run()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void run </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> &amp;&#160;</td>
          <td class="paramname"><em>tensors</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Run the kernels contained in the function. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">tensors</td><td><a class="el" href="struct_vector.xhtml" title="Structure to hold Vector information.">Vector</a> that contains the tensors to operate on. </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented from <a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml#a684a54d1fb1634a348a585c6b5e76df0">ICLOperator</a>.</p>

<p class="definition">Definition at line <a class="el" href="gpu_2cl_2operators_2_cl_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00759">759</a> of file <a class="el" href="gpu_2cl_2operators_2_cl_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml">ClGemmLowpMatrixMultiplyCore.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;{</div>
<div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;    <span class="keyword">const</span> ITensor *a   = tensors.get_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5">ACL_SRC_0</a>);</div>
<div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;    <span class="keyword">const</span> ITensor *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>   = tensors.get_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0">ACL_SRC_1</a>);</div>
<div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;    <span class="keyword">const</span> ITensor *c   = tensors.get_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a01cea947a24713975f86d0769bf8fad5">ACL_SRC_2</a>);</div>
<div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;    ITensor       *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a> = tensors.get_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">ACL_DST</a>);</div>
<div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160; </div>
<div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(a, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160; </div>
<div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;    CLAuxTensorHandler vec_sum_col(<a class="code" href="namespacearm__compute.xhtml#a324d709e8fb5568ada56ba4999dfb2f1">offset_int_vec</a>(VecSumCol), _vector_sum_col, tensors, <span class="keyword">true</span>);</div>
<div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;    CLAuxTensorHandler vec_sum_row(<a class="code" href="namespacearm__compute.xhtml#a324d709e8fb5568ada56ba4999dfb2f1">offset_int_vec</a>(VecSumRow), _vector_sum_row, tensors, <span class="keyword">true</span>);</div>
<div class="line"><a name="l00770"></a><span class="lineno">  770</span>&#160;    CLAuxTensorHandler rhs_qasymm8(<a class="code" href="namespacearm__compute.xhtml#a324d709e8fb5568ada56ba4999dfb2f1">offset_int_vec</a>(RhsQAsymm8), _qasymm8_weights, tensors, <span class="keyword">true</span>);</div>
<div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;    CLAuxTensorHandler tmp_b(<a class="code" href="namespacearm__compute.xhtml#a324d709e8fb5568ada56ba4999dfb2f1">offset_int_vec</a>(RhsReshape), _tmp_b, tensors, <span class="keyword">true</span>);</div>
<div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;    CLAuxTensorHandler res32(<a class="code" href="namespacearm__compute.xhtml#a324d709e8fb5568ada56ba4999dfb2f1">offset_int_vec</a>(ResultS32), _mm_result_s32, tensors, <span class="keyword">true</span>);</div>
<div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;    CLAuxTensorHandler shifts(<a class="code" href="namespacearm__compute.xhtml#a324d709e8fb5568ada56ba4999dfb2f1">offset_int_vec</a>(Shifts), _gemm_output_stage_shifts, tensors, <span class="keyword">true</span>);</div>
<div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;    CLAuxTensorHandler multipliers(<a class="code" href="namespacearm__compute.xhtml#a324d709e8fb5568ada56ba4999dfb2f1">offset_int_vec</a>(Multipliers), _gemm_output_stage_multipliers, tensors, <span class="keyword">true</span>);</div>
<div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160; </div>
<div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160;    <span class="comment">// Prepare the consts if needed</span></div>
<div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160;    <a class="code" href="classarm__compute_1_1opencl_1_1_cl_gemm_lowp_matrix_multiply_core.xhtml#aff8f5e4223fd2a3020c8b252c8982d3a">prepare</a>(tensors);</div>
<div class="line"><a name="l00778"></a><span class="lineno">  778</span>&#160; </div>
<div class="line"><a name="l00779"></a><span class="lineno">  779</span>&#160;    <span class="keyword">const</span> ITensor *matrix_a = a;</div>
<div class="line"><a name="l00780"></a><span class="lineno">  780</span>&#160;    <span class="keyword">const</span> ITensor *matrix_b = _convert_to_qasymm8 ? rhs_qasymm8.get() : <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>;</div>
<div class="line"><a name="l00781"></a><span class="lineno">  781</span>&#160; </div>
<div class="line"><a name="l00782"></a><span class="lineno">  782</span>&#160;    <span class="keywordflow">if</span> (is_gemm_reshaped(_gemm_kernel_type))</div>
<div class="line"><a name="l00783"></a><span class="lineno">  783</span>&#160;    {</div>
<div class="line"><a name="l00784"></a><span class="lineno">  784</span>&#160;        matrix_b = tmp_b.get();</div>
<div class="line"><a name="l00785"></a><span class="lineno">  785</span>&#160;        <span class="keywordflow">if</span> (!_reshape_b_only_on_first_run)</div>
<div class="line"><a name="l00786"></a><span class="lineno">  786</span>&#160;        {</div>
<div class="line"><a name="l00787"></a><span class="lineno">  787</span>&#160;            <span class="comment">// Run reshape matrix B</span></div>
<div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;            ITensorPack mtx_b_reshape_pack = {{<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69">TensorType::ACL_SRC</a>, _convert_to_qasymm8 ? rhs_qasymm8.get() : <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>},</div>
<div class="line"><a name="l00789"></a><span class="lineno">  789</span>&#160;                                              {<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">TensorType::ACL_DST</a>, tmp_b.get()}};</div>
<div class="line"><a name="l00790"></a><span class="lineno">  790</span>&#160;            <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a5c0fc6f465cae029d60ffdfc7f3e99d9">enqueue_op</a>(*_mtx_b_reshape_kernel, mtx_b_reshape_pack, <span class="keyword">false</span>);</div>
<div class="line"><a name="l00791"></a><span class="lineno">  791</span>&#160;        }</div>
<div class="line"><a name="l00792"></a><span class="lineno">  792</span>&#160;    }</div>
<div class="line"><a name="l00793"></a><span class="lineno">  793</span>&#160; </div>
<div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160;    <span class="comment">// Run matrix B reduction kernel only if _a_offset is not equal to 0</span></div>
<div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160;    <span class="keywordflow">if</span> (_a_offset != 0 &amp;&amp; !_reshape_b_only_on_first_run)</div>
<div class="line"><a name="l00796"></a><span class="lineno">  796</span>&#160;    {</div>
<div class="line"><a name="l00797"></a><span class="lineno">  797</span>&#160;        ITensorPack mtx_b_red_pack = {{<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69">TensorType::ACL_SRC</a>, _convert_to_qasymm8 ? rhs_qasymm8.get() : <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>},</div>
<div class="line"><a name="l00798"></a><span class="lineno">  798</span>&#160;                                      {<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">TensorType::ACL_DST</a>, vec_sum_col.get()}};</div>
<div class="line"><a name="l00799"></a><span class="lineno">  799</span>&#160;        <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a5c0fc6f465cae029d60ffdfc7f3e99d9">enqueue_op</a>(*_mtx_b_reduction_kernel, mtx_b_red_pack, <span class="keyword">false</span>);</div>
<div class="line"><a name="l00800"></a><span class="lineno">  800</span>&#160;    }</div>
<div class="line"><a name="l00801"></a><span class="lineno">  801</span>&#160; </div>
<div class="line"><a name="l00802"></a><span class="lineno">  802</span>&#160;    <span class="comment">// Run matrix A reduction kernel only if _b_offset is not equal to 0</span></div>
<div class="line"><a name="l00803"></a><span class="lineno">  803</span>&#160;    <span class="keywordflow">if</span> (_b_offset != 0)</div>
<div class="line"><a name="l00804"></a><span class="lineno">  804</span>&#160;    {</div>
<div class="line"><a name="l00805"></a><span class="lineno">  805</span>&#160;        ITensorPack mtx_a_red_pack = {{<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69">TensorType::ACL_SRC</a>, matrix_a}, {<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">TensorType::ACL_DST</a>, vec_sum_row.get()}};</div>
<div class="line"><a name="l00806"></a><span class="lineno">  806</span>&#160;        <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a5c0fc6f465cae029d60ffdfc7f3e99d9">enqueue_op</a>(*_mtx_a_reduction_kernel, mtx_a_red_pack, <span class="keyword">false</span>);</div>
<div class="line"><a name="l00807"></a><span class="lineno">  807</span>&#160;    }</div>
<div class="line"><a name="l00808"></a><span class="lineno">  808</span>&#160; </div>
<div class="line"><a name="l00809"></a><span class="lineno">  809</span>&#160;    <span class="comment">// Run matrix multiply</span></div>
<div class="line"><a name="l00810"></a><span class="lineno">  810</span>&#160;    <span class="keywordflow">if</span> (is_gemm_reshaped(_gemm_kernel_type))</div>
<div class="line"><a name="l00811"></a><span class="lineno">  811</span>&#160;    {</div>
<div class="line"><a name="l00812"></a><span class="lineno">  812</span>&#160;        ITensorPack gemm_reshaped_pack;</div>
<div class="line"><a name="l00813"></a><span class="lineno">  813</span>&#160;        <span class="keywordflow">if</span> (_run_offset_contribution)</div>
<div class="line"><a name="l00814"></a><span class="lineno">  814</span>&#160;        {</div>
<div class="line"><a name="l00815"></a><span class="lineno">  815</span>&#160;            gemm_reshaped_pack = ITensorPack({{<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5">TensorType::ACL_SRC_0</a>, matrix_a},</div>
<div class="line"><a name="l00816"></a><span class="lineno">  816</span>&#160;                                              {<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0">TensorType::ACL_SRC_1</a>, matrix_b},</div>
<div class="line"><a name="l00817"></a><span class="lineno">  817</span>&#160;                                              {<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">TensorType::ACL_DST</a>, _run_output_stage ? res32.get() : <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>}});</div>
<div class="line"><a name="l00818"></a><span class="lineno">  818</span>&#160;        }</div>
<div class="line"><a name="l00819"></a><span class="lineno">  819</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00820"></a><span class="lineno">  820</span>&#160;        {</div>
<div class="line"><a name="l00821"></a><span class="lineno">  821</span>&#160;            gemm_reshaped_pack = ITensorPack({</div>
<div class="line"><a name="l00822"></a><span class="lineno">  822</span>&#160;                {<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69">TensorType::ACL_SRC</a>, matrix_a},</div>
<div class="line"><a name="l00823"></a><span class="lineno">  823</span>&#160;                {<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0">TensorType::ACL_SRC_1</a>, matrix_b},</div>
<div class="line"><a name="l00824"></a><span class="lineno">  824</span>&#160;                {<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a059864283c54386b639427bc8a01e785">TensorType::ACL_BIAS</a>, c},</div>
<div class="line"><a name="l00825"></a><span class="lineno">  825</span>&#160;                {<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a8201f58586be83622450924f1339d95d">TensorType::ACL_VEC_ROW_SUM</a>, _b_offset == 0 ? nullptr : vec_sum_row.get()},</div>
<div class="line"><a name="l00826"></a><span class="lineno">  826</span>&#160;                {<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a93203bd138078ed3c19f335d84f9b3cd">TensorType::ACL_VEC_COL_SUM</a>, _a_offset == 0 ? nullptr : vec_sum_col.get()},</div>
<div class="line"><a name="l00827"></a><span class="lineno">  827</span>&#160;                {<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828afbaa09ed653f4ffe6c94c2bfaa36ddc7">TensorType::ACL_SHIFTS</a>, shifts.get()},</div>
<div class="line"><a name="l00828"></a><span class="lineno">  828</span>&#160;                {<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a9da88e01e6f086c156eda117f84b89e0">TensorType::ACL_MULTIPLIERS</a>, multipliers.get()},</div>
<div class="line"><a name="l00829"></a><span class="lineno">  829</span>&#160;                {<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">TensorType::ACL_DST</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>},</div>
<div class="line"><a name="l00830"></a><span class="lineno">  830</span>&#160;            });</div>
<div class="line"><a name="l00831"></a><span class="lineno">  831</span>&#160;        }</div>
<div class="line"><a name="l00832"></a><span class="lineno">  832</span>&#160;        <span class="keywordflow">if</span> (_gemm_kernel_type == <a class="code" href="namespacearm__compute.xhtml#a6f7d2fe6b41e36d408375ad6bf9a612aae5baae53d329b252d56acec1bc0b5868">CLGEMMKernelType::RESHAPED_ONLY_RHS</a>)</div>
<div class="line"><a name="l00833"></a><span class="lineno">  833</span>&#160;        {</div>
<div class="line"><a name="l00834"></a><span class="lineno">  834</span>&#160;            <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a5c0fc6f465cae029d60ffdfc7f3e99d9">enqueue_op</a>(*_mm_reshaped_only_rhs_kernel, gemm_reshaped_pack, <span class="keyword">false</span>);</div>
<div class="line"><a name="l00835"></a><span class="lineno">  835</span>&#160;        }</div>
<div class="line"><a name="l00836"></a><span class="lineno">  836</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span> (_gemm_kernel_type == <a class="code" href="namespacearm__compute.xhtml#a6f7d2fe6b41e36d408375ad6bf9a612aa4361824f1748299245ef0ad0cb7d6111">CLGEMMKernelType::RESHAPED_ONLY_RHS_MMUL</a>)</div>
<div class="line"><a name="l00837"></a><span class="lineno">  837</span>&#160;        {</div>
<div class="line"><a name="l00838"></a><span class="lineno">  838</span>&#160;            <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a5c0fc6f465cae029d60ffdfc7f3e99d9">enqueue_op</a>(*_mm_reshaped_only_rhs_mmul_kernel, gemm_reshaped_pack, <span class="keyword">false</span>);</div>
<div class="line"><a name="l00839"></a><span class="lineno">  839</span>&#160;        }</div>
<div class="line"><a name="l00840"></a><span class="lineno">  840</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00841"></a><span class="lineno">  841</span>&#160;        {</div>
<div class="line"><a name="l00842"></a><span class="lineno">  842</span>&#160;            <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;Invalid reshaped kernel&quot;</span>);</div>
<div class="line"><a name="l00843"></a><span class="lineno">  843</span>&#160;        }</div>
<div class="line"><a name="l00844"></a><span class="lineno">  844</span>&#160;    }</div>
<div class="line"><a name="l00845"></a><span class="lineno">  845</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00846"></a><span class="lineno">  846</span>&#160;    {</div>
<div class="line"><a name="l00847"></a><span class="lineno">  847</span>&#160;        ITensorPack gemm_native_pack = {{<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5">TensorType::ACL_SRC_0</a>, matrix_a},</div>
<div class="line"><a name="l00848"></a><span class="lineno">  848</span>&#160;                                        {<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0">TensorType::ACL_SRC_1</a>, matrix_b},</div>
<div class="line"><a name="l00849"></a><span class="lineno">  849</span>&#160;                                        {<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">TensorType::ACL_DST</a>, _run_offset_contribution ? <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a> : res32.get()}};</div>
<div class="line"><a name="l00850"></a><span class="lineno">  850</span>&#160;        <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a5c0fc6f465cae029d60ffdfc7f3e99d9">enqueue_op</a>(*_mm_native_kernel, gemm_native_pack, <span class="keyword">false</span>);</div>
<div class="line"><a name="l00851"></a><span class="lineno">  851</span>&#160;    }</div>
<div class="line"><a name="l00852"></a><span class="lineno">  852</span>&#160;    <span class="keywordflow">if</span> (_run_output_stage)</div>
<div class="line"><a name="l00853"></a><span class="lineno">  853</span>&#160;    {</div>
<div class="line"><a name="l00854"></a><span class="lineno">  854</span>&#160;        <span class="comment">// Run offset contribution/output stage kernel</span></div>
<div class="line"><a name="l00855"></a><span class="lineno">  855</span>&#160;        ITensorPack output_stage_pack = {</div>
<div class="line"><a name="l00856"></a><span class="lineno">  856</span>&#160;            {<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69">TensorType::ACL_SRC</a>, res32.get()},</div>
<div class="line"><a name="l00857"></a><span class="lineno">  857</span>&#160;            {<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a059864283c54386b639427bc8a01e785">TensorType::ACL_BIAS</a>, c},</div>
<div class="line"><a name="l00858"></a><span class="lineno">  858</span>&#160;            {<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a8201f58586be83622450924f1339d95d">TensorType::ACL_VEC_ROW_SUM</a>, _b_offset == 0 ? nullptr : vec_sum_row.get()},</div>
<div class="line"><a name="l00859"></a><span class="lineno">  859</span>&#160;            {<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a93203bd138078ed3c19f335d84f9b3cd">TensorType::ACL_VEC_COL_SUM</a>, _a_offset == 0 ? nullptr : vec_sum_col.get()},</div>
<div class="line"><a name="l00860"></a><span class="lineno">  860</span>&#160;            {<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828afbaa09ed653f4ffe6c94c2bfaa36ddc7">TensorType::ACL_SHIFTS</a>, shifts.get()},</div>
<div class="line"><a name="l00861"></a><span class="lineno">  861</span>&#160;            {<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a9da88e01e6f086c156eda117f84b89e0">TensorType::ACL_MULTIPLIERS</a>, multipliers.get()},</div>
<div class="line"><a name="l00862"></a><span class="lineno">  862</span>&#160;            {<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">TensorType::ACL_DST</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>},</div>
<div class="line"><a name="l00863"></a><span class="lineno">  863</span>&#160;        };</div>
<div class="line"><a name="l00864"></a><span class="lineno">  864</span>&#160;        <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a5c0fc6f465cae029d60ffdfc7f3e99d9">enqueue_op</a>(*_offset_contribution_output_stage_kernel, output_stage_pack, <span class="keyword">true</span>);</div>
<div class="line"><a name="l00865"></a><span class="lineno">  865</span>&#160;    }</div>
<div class="line"><a name="l00866"></a><span class="lineno">  866</span>&#160;    <span class="keywordflow">if</span> (_run_offset_contribution)</div>
<div class="line"><a name="l00867"></a><span class="lineno">  867</span>&#160;    {</div>
<div class="line"><a name="l00868"></a><span class="lineno">  868</span>&#160;        <span class="comment">// Run offset contribution kernel</span></div>
<div class="line"><a name="l00869"></a><span class="lineno">  869</span>&#160;        ITensorPack offset_contrib_pack = {{<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a292ea0ca5cb39b9acea91a2c56fbbe60">TensorType::ACL_SRC_DST</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>},</div>
<div class="line"><a name="l00870"></a><span class="lineno">  870</span>&#160;                                           {<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a059864283c54386b639427bc8a01e785">TensorType::ACL_BIAS</a>, c},</div>
<div class="line"><a name="l00871"></a><span class="lineno">  871</span>&#160;                                           {<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a8201f58586be83622450924f1339d95d">TensorType::ACL_VEC_ROW_SUM</a>, _b_offset == 0 ? nullptr : vec_sum_row.get()},</div>
<div class="line"><a name="l00872"></a><span class="lineno">  872</span>&#160;                                           {<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a93203bd138078ed3c19f335d84f9b3cd">TensorType::ACL_VEC_COL_SUM</a>, _a_offset == 0 ? nullptr : vec_sum_col.get()}};</div>
<div class="line"><a name="l00873"></a><span class="lineno">  873</span>&#160;        <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a5c0fc6f465cae029d60ffdfc7f3e99d9">enqueue_op</a>(*_offset_contribution_kernel, offset_contrib_pack, <span class="keyword">true</span>);</div>
<div class="line"><a name="l00874"></a><span class="lineno">  874</span>&#160;    }</div>
<div class="line"><a name="l00875"></a><span class="lineno">  875</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00074">arm_compute::ACL_BIAS</a>, <a class="el" href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00055">arm_compute::ACL_DST</a>, <a class="el" href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00080">arm_compute::ACL_MULTIPLIERS</a>, <a class="el" href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00079">arm_compute::ACL_SHIFTS</a>, <a class="el" href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00044">arm_compute::ACL_SRC</a>, <a class="el" href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00045">arm_compute::ACL_SRC_0</a>, <a class="el" href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00046">arm_compute::ACL_SRC_1</a>, <a class="el" href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00047">arm_compute::ACL_SRC_2</a>, <a class="el" href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00041">arm_compute::ACL_SRC_DST</a>, <a class="el" href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00078">arm_compute::ACL_VEC_COL_SUM</a>, <a class="el" href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00077">arm_compute::ACL_VEC_ROW_SUM</a>, <a class="el" href="_error_8h_source.xhtml#l00354">ARM_COMPUTE_ERROR</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00159">ARM_COMPUTE_ERROR_ON_NULLPTR</a>, <a class="el" href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00157">arm_compute::test::validation::b</a>, <a class="el" href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00170">arm_compute::test::validation::dst</a>, <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00238">CLScheduler::enqueue_op()</a>, <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00112">CLScheduler::get()</a>, <a class="el" href="_cl_aux_tensor_handler_8h_source.xhtml#l00136">CLAuxTensorHandler::get()</a>, <a class="el" href="_i_tensor_pack_8cpp_source.xhtml#l00053">ITensorPack::get_const_tensor()</a>, <a class="el" href="_i_tensor_pack_8cpp_source.xhtml#l00063">ITensorPack::get_tensor()</a>, <a class="el" href="_memory_helpers_8h_source.xhtml#l00038">arm_compute::offset_int_vec()</a>, <a class="el" href="gpu_2cl_2operators_2_cl_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00877">ClGemmLowpMatrixMultiplyCore::prepare()</a>, <a class="el" href="namespacearm__compute.xhtml#a6f7d2fe6b41e36d408375ad6bf9a612aae5baae53d329b252d56acec1bc0b5868">arm_compute::RESHAPED_ONLY_RHS</a>, and <a class="el" href="namespacearm__compute.xhtml#a6f7d2fe6b41e36d408375ad6bf9a612aa4361824f1748299245ef0ad0cb7d6111">arm_compute::RESHAPED_ONLY_RHS_MMUL</a>.</p>

</div>
</div>
<a id="a8c3cf2d65afb288e39909171ada19566"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8c3cf2d65afb288e39909171ada19566">&#9670;&nbsp;</a></span>validate()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_status.xhtml">Status</a> validate </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>c</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml">GEMMInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>gemm_info</em> = <code><a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml">GEMMInfo</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Static function to check if given info will lead to a valid configuration. </p>
<p>Similar to <a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm_lowp_matrix_multiply_core.xhtml#a48efdcf8bc0a6f12cfe0ad234400181a" title="Initialise the kernel&#39;s inputs, output.">ClGemmLowpMatrixMultiplyCore::configure()</a></p>
<dl class="section return"><dt>Returns</dt><dd>a status </dd></dl>

<p class="definition">Definition at line <a class="el" href="gpu_2cl_2operators_2_cl_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00557">557</a> of file <a class="el" href="gpu_2cl_2operators_2_cl_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml">ClGemmLowpMatrixMultiplyCore.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;{</div>
<div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(a, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>, output);</div>
<div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#ae7eed178dac535c6e727061b1f5bc6eb">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN</a>(a, 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a329f5d0c4b0c80e3474951d2c4435dd9">DataType::QASYMM8_SIGNED</a>);</div>
<div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#ae7eed178dac535c6e727061b1f5bc6eb">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>, 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a329f5d0c4b0c80e3474951d2c4435dd9">DataType::QASYMM8_SIGNED</a>,</div>
<div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;                                                         <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a5f007421a4becd11c0666c2058b0b36c">DataType::QSYMM8</a>, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a34f500e941c4df30b870126ec868ebd5">DataType::QSYMM8_PER_CHANNEL</a>);</div>
<div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(a-&gt;data_type() == <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a> &amp;&amp; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>-&gt;data_type() == <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a329f5d0c4b0c80e3474951d2c4435dd9">DataType::QASYMM8_SIGNED</a>);</div>
<div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(a-&gt;data_type() == <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a329f5d0c4b0c80e3474951d2c4435dd9">DataType::QASYMM8_SIGNED</a> &amp;&amp; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>-&gt;data_type() == <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>);</div>
<div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;    <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(gemm_info.is_a_reshaped(), <span class="stringliteral">&quot;Matrix A already reshaped is not supported&quot;</span>);</div>
<div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;    <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(gemm_info.is_b_reshaped(), <span class="stringliteral">&quot;Matrix B already reshaped is not supported&quot;</span>);</div>
<div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160; </div>
<div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;    int32_t a_offset = a-&gt;quantization_info().uniform().offset;</div>
<div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;    int32_t b_offset = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>-&gt;quantization_info().uniform().offset;</div>
<div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160; </div>
<div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;    <span class="keyword">const</span> ITensorInfo *matrix_a_info = a;</div>
<div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160; </div>
<div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;    TensorInfo        tmp_b_info{};</div>
<div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;    GEMMRHSMatrixInfo rhs_info;</div>
<div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;    GEMMLHSMatrixInfo lhs_info;</div>
<div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160; </div>
<div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;    <span class="comment">// Get the GPU target</span></div>
<div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3">GPUTarget</a> gpu_target = <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a27561688e2fc60176608ef725a4ecb30">target</a>();</div>
<div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160; </div>
<div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;    <span class="keywordtype">bool</span>               reinterpret_input_as_3d = gemm_info.reinterpret_input_as_3d();</div>
<div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> m          = reinterpret_input_as_3d ? (a-&gt;dimension(1) * a-&gt;dimension(2)) : a-&gt;dimension(1);</div>
<div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> n          = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>-&gt;dimension(0);</div>
<div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> k          = a-&gt;dimension(0);</div>
<div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> batch_size = reinterpret_input_as_3d ? a-&gt;dimension(3) : a-&gt;dimension(2);</div>
<div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span>          depth_output_gemm3d = gemm_info.depth_output_gemm3d();</div>
<div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160; </div>
<div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;    <span class="keywordtype">bool</span> reshape_matrix_b = is_gemm_reshaped(</div>
<div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;        auto_select_gemm_kernel(<a class="code" href="structarm__compute_1_1cl__gemm_1_1auto__heuristics_1_1_common_query.xhtml">auto_heuristics::CommonQuery</a>{gpu_target, a-&gt;<a class="code" href="structarm__compute_1_1cl__gemm_1_1auto__heuristics_1_1_common_query.xhtml#a6118865e7371b107bd5fb4dd4a9e99a3">data_type</a>(), m, n, k, batch_size},</div>
<div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;                                gemm_info.reshape_b_only_on_first_run()));</div>
<div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160; </div>
<div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;    <span class="keyword">const</span> GEMMReshapeInfo reshape_info = GEMMReshapeInfo(m, n, k, 1, 1, depth_output_gemm3d, reinterpret_input_as_3d);</div>
<div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160; </div>
<div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;    <span class="keywordtype">bool</span> convert_to_qasymm8 = <a class="code" href="namespacearm__compute.xhtml#a84437d80241f6a31e1a07c231ee8e3ac">is_data_type_quantized_per_channel</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>-&gt;data_type()) &amp;&amp;</div>
<div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;                              <a class="code" href="namespacearm__compute.xhtml#a922cd85c475c0d725fc030116ea57979">is_data_type_quantized_symmetric</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>-&gt;data_type()) &amp;&amp;</div>
<div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;                              <a class="code" href="namespacearm__compute.xhtml#a14f46283f316e7f0fad301d5c1507e9f">is_data_type_quantized_asymmetric</a>(a-&gt;data_type());</div>
<div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;    TensorInfo <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7cb842ebfe255726066039853a4322f0">weights_info</a>(*<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>);</div>
<div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;    <span class="keywordflow">if</span> (convert_to_qasymm8)</div>
<div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;    {</div>
<div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;        b_offset = -128;</div>
<div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;        <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7cb842ebfe255726066039853a4322f0">weights_info</a>.set_data_type(<a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>);</div>
<div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;        <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_cast_kernel.xhtml#a99ee9eafa97c4a2c2ddefa4055acbfeb">ClCastKernel::validate</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>, &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7cb842ebfe255726066039853a4322f0">weights_info</a>, <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fae1c8555fcf0ea2bb648a6fd527d658c0">ConvertPolicy::WRAP</a>));</div>
<div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;    }</div>
<div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;    <span class="keyword">const</span> ITensorInfo *matrix_b_info = &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7cb842ebfe255726066039853a4322f0">weights_info</a>;</div>
<div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;    <span class="keywordflow">if</span> (reshape_matrix_b)</div>
<div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;    {</div>
<div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;        matrix_b_info = &amp;tmp_b_info;</div>
<div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160; </div>
<div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;        <span class="comment">// Pick up the GEMM configuration</span></div>
<div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;        <span class="comment">// NOTE: No need to validate mlgo configurations as they automatically fall back to default heuristics if validation fails</span></div>
<div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;        <span class="comment">// It doesn&#39;t matter whether Datatype is DataType::QASYMM8 or DataType::QASYMM8_SIGNED, since it only affect the shape configuration</span></div>
<div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> res = <a class="code" href="namespacearm__compute_1_1cl__gemm_1_1auto__heuristics.xhtml#af53deba4e7f9f689d28e5980acef03f6">select_default_gemm_config_reshaped_only_rhs</a>(</div>
<div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;            <a class="code" href="structarm__compute_1_1cl__gemm_1_1auto__heuristics_1_1_common_query.xhtml">auto_heuristics::CommonQuery</a>{gpu_target, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>, m, n, k, batch_size});</div>
<div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;        lhs_info = res.<a class="code" href="structarm__compute_1_1cl__gemm_1_1auto__heuristics_1_1_g_e_m_m_config_result.xhtml#ab4acc1212729959d1bb6d9dbc55354dd">lhs_info</a>;</div>
<div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;        rhs_info = res.rhs_info;</div>
<div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160; </div>
<div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;        <span class="comment">// Validate reshape RHS kernel</span></div>
<div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;        <a class="code" href="namespacearm__compute.xhtml#a37c28ce239ce7092298245ce59694917">auto_init_if_empty</a>(tmp_b_info,</div>
<div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;                           <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7cb842ebfe255726066039853a4322f0">weights_info</a>.clone()-&gt;set_tensor_shape(<a class="code" href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml#a09ad10a110d947fd9c444b2ea5e4c127">compute_rhs_reshaped_shape</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7cb842ebfe255726066039853a4322f0">weights_info</a>, rhs_info)));</div>
<div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;        <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_reshape_rhs_matrix_kernel.xhtml#a7e935f10ed6c95b1d37dd46f72892154">ClGemmReshapeRhsMatrixKernel::validate</a>(&amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7cb842ebfe255726066039853a4322f0">weights_info</a>, &amp;tmp_b_info, rhs_info));</div>
<div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;    }</div>
<div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160; </div>
<div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;    TensorInfo info_vector_sum_col{};</div>
<div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;    TensorInfo info_vector_sum_row{};</div>
<div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160; </div>
<div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;    <span class="keyword">const</span> GEMMLowpReductionKernelInfo reduction_info;</div>
<div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;    <span class="comment">// Validate matrix B reduction kernel only if _a_offset is not equal to 0</span></div>
<div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;    <span class="keywordflow">if</span> (a_offset != 0)</div>
<div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;    {</div>
<div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;        info_vector_sum_col = TensorInfo(<a class="code" href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml#a60ce6c017f70d978b48b101ce314969e">compute_reductionA_shape</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7cb842ebfe255726066039853a4322f0">weights_info</a>), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aa1e28eee0339658d39a8b4d325b56e9c">DataType::S32</a>);</div>
<div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160; </div>
<div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;        <span class="comment">// Configure Matrix B reduction kernel</span></div>
<div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;        <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(</div>
<div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;            <a class="code" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_lowp_matrix_b_reduction_kernel.xhtml#a1c41b8a7aaca0e8284958934b5fe12ab">ClGemmLowpMatrixBReductionKernel::validate</a>(&amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7cb842ebfe255726066039853a4322f0">weights_info</a>, &amp;info_vector_sum_col, reduction_info));</div>
<div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;    }</div>
<div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160; </div>
<div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;    <span class="comment">// Validate Matrix A reduction kernel only if _b_offset is not equal to 0</span></div>
<div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;    <span class="keywordflow">if</span> (b_offset != 0)</div>
<div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;    {</div>
<div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;        info_vector_sum_row = TensorInfo(<a class="code" href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml#a69f9b3191aafc4905f9d029ff9d48fea">compute_reductionB_shape</a>(*a), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aa1e28eee0339658d39a8b4d325b56e9c">DataType::S32</a>);</div>
<div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160; </div>
<div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;        <span class="comment">// Configure matrix A reduction kernel</span></div>
<div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;        <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(</div>
<div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;            <a class="code" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_lowp_matrix_a_reduction_kernel.xhtml#a0f66fad62612f272ca82c4a3aeeb2454">ClGemmLowpMatrixAReductionKernel::validate</a>(a, &amp;info_vector_sum_row, reduction_info));</div>
<div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;    }</div>
<div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160; </div>
<div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;    GEMMKernelInfo gemm_kernel_info;</div>
<div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;    gemm_kernel_info.m                       = m;</div>
<div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;    gemm_kernel_info.n                       = n;</div>
<div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;    gemm_kernel_info.k                       = k;</div>
<div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;    gemm_kernel_info.depth_output_gemm3d     = depth_output_gemm3d;</div>
<div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;    gemm_kernel_info.reinterpret_input_as_3d = reinterpret_input_as_3d;</div>
<div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;    gemm_kernel_info.lhs_info                = lhs_info;</div>
<div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;    gemm_kernel_info.rhs_info                = rhs_info;</div>
<div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;    gemm_kernel_info.a_offset                = a_offset;</div>
<div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;    gemm_kernel_info.b_offset                = b_offset;</div>
<div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;    <span class="keywordflow">if</span> (gemm_info.gemmlowp_output_stage().type != <a class="code" href="namespacearm__compute.xhtml#a5558e2cc22f7f4771653d992c8ad8864ab50339a10e1de285ac99d4c3990b8693">GEMMLowpOutputStageType::NONE</a>)</div>
<div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;    {</div>
<div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">size_t</span> num_filters = (gemm_info.gemmlowp_output_stage().is_quantized_per_channel)</div>
<div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;                                       ? gemm_info.gemmlowp_output_stage().gemmlowp_multipliers.size()</div>
<div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;                                       : 1;</div>
<div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160; </div>
<div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;        <span class="keyword">const</span> TensorInfo gemm_output_stage_multipliers_shifts_info(</div>
<div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;            TensorInfo(TensorShape(num_filters), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aa1e28eee0339658d39a8b4d325b56e9c">DataType::S32</a>));</div>
<div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160; </div>
<div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;        GEMMLowpOutputStageInfo gemmlowp_output_stage = gemm_info.gemmlowp_output_stage();</div>
<div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;        gemmlowp_output_stage.output_data_type        = a-&gt;data_type();</div>
<div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160; </div>
<div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;        gemm_kernel_info.output_stage = gemmlowp_output_stage;</div>
<div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;        <span class="keywordflow">if</span> (reshape_matrix_b &amp;&amp;</div>
<div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;            gemm_info.gemmlowp_output_stage().type == <a class="code" href="namespacearm__compute.xhtml#a5558e2cc22f7f4771653d992c8ad8864ab300cae200f67712c1eb9234e28158ca">GEMMLowpOutputStageType::QUANTIZE_DOWN_FIXEDPOINT</a>)</div>
<div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;        {</div>
<div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;            <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_lowp_matrix_multiply_reshaped_only_rhs_kernel.xhtml#acf3c0edc128368064ed11c1df57f0e09">ClGemmLowpMatrixMultiplyReshapedOnlyRhsKernel::validate</a>(</div>
<div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;                matrix_a_info, matrix_b_info, output, gemm_kernel_info, a_offset == 0 ? <span class="keyword">nullptr</span> : &amp;info_vector_sum_col,</div>
<div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;                b_offset == 0 ? <span class="keyword">nullptr</span> : &amp;info_vector_sum_row, c, &amp;gemm_output_stage_multipliers_shifts_info,</div>
<div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;                &amp;gemm_output_stage_multipliers_shifts_info));</div>
<div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;        }</div>
<div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;        {</div>
<div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;            TensorInfo mm_result_s32_info{};</div>
<div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160; </div>
<div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;            <span class="keywordflow">if</span> (reshape_matrix_b)</div>
<div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;            {</div>
<div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;                <span class="comment">// Output tensor auto inizialitation if not yet initialized</span></div>
<div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;                <a class="code" href="namespacearm__compute.xhtml#a37c28ce239ce7092298245ce59694917">auto_init_if_empty</a>(mm_result_s32_info, a-&gt;clone()</div>
<div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;                                                           -&gt;set_tensor_shape(<a class="code" href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml#adca241b012a5e00ddfcdc5a8db05a2a3">compute_mm_shape</a>(</div>
<div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;                                                               *matrix_a_info, *matrix_b_info, reshape_info))</div>
<div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;                                                           .set_data_type(<a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aa1e28eee0339658d39a8b4d325b56e9c">DataType::S32</a>));</div>
<div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160; </div>
<div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;                <span class="comment">// Validate matrix multiply</span></div>
<div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;                <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_lowp_matrix_multiply_reshaped_only_rhs_kernel.xhtml#acf3c0edc128368064ed11c1df57f0e09">ClGemmLowpMatrixMultiplyReshapedOnlyRhsKernel::validate</a>(</div>
<div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;                    matrix_a_info, matrix_b_info, &amp;mm_result_s32_info, gemm_kernel_info));</div>
<div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;            }</div>
<div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;            <span class="keywordflow">else</span></div>
<div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;            {</div>
<div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;                <span class="comment">// Output tensor auto inizialitation if not yet initialized</span></div>
<div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;                <a class="code" href="namespacearm__compute.xhtml#a37c28ce239ce7092298245ce59694917">auto_init_if_empty</a>(mm_result_s32_info, a-&gt;clone()</div>
<div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;                                                           -&gt;set_tensor_shape(<a class="code" href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml#adca241b012a5e00ddfcdc5a8db05a2a3">compute_mm_shape</a>(</div>
<div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;                                                               *matrix_a_info, *matrix_b_info, <span class="keyword">false</span>, reshape_info))</div>
<div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;                                                           .set_data_type(<a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aa1e28eee0339658d39a8b4d325b56e9c">DataType::S32</a>));</div>
<div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160; </div>
<div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;                <span class="comment">// Pick up the GEMM configuration</span></div>
<div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;                <span class="comment">// NOTE: No need to validate mlgo configurations as they automatically fall back to default heuristics if validation fails</span></div>
<div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;                <span class="comment">// It doesn&#39;t matter whether Datatype is DataType::QASYMM8 or DataType::QASYMM8_SIGNED, since it only affect the shape configuration</span></div>
<div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;                <span class="keyword">const</span> <span class="keyword">auto</span> res = <a class="code" href="namespacearm__compute_1_1cl__gemm_1_1auto__heuristics.xhtml#ac5401113c92afe31982eeb3634bb8321">select_default_gemm_config_native</a>(</div>
<div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;                    <a class="code" href="structarm__compute_1_1cl__gemm_1_1auto__heuristics_1_1_common_query.xhtml">auto_heuristics::CommonQuery</a>{gpu_target, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>, m, n, k, batch_size});</div>
<div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;                lhs_info = res.<a class="code" href="structarm__compute_1_1cl__gemm_1_1auto__heuristics_1_1_g_e_m_m_config_result.xhtml#ab4acc1212729959d1bb6d9dbc55354dd">lhs_info</a>;</div>
<div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;                rhs_info = res.rhs_info;</div>
<div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160; </div>
<div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;                <span class="comment">// Validate matrix multiply</span></div>
<div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;                <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_lowp_matrix_multiply_native_kernel.xhtml#a639674cca77f928fbc6beebb97aa2f1b">ClGemmLowpMatrixMultiplyNativeKernel::validate</a>(</div>
<div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;                    matrix_a_info, matrix_b_info, &amp;mm_result_s32_info, lhs_info, rhs_info, reshape_info));</div>
<div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;            }</div>
<div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160; </div>
<div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;            <span class="comment">// Validate offset contribution kernel</span></div>
<div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;            <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_lowp_offset_contribution_output_stage_kernel.xhtml#ae4368b3be8accd98e999f5b56eac1b65">ClGemmLowpOffsetContributionOutputStageKernel::validate</a>(</div>
<div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;                &amp;mm_result_s32_info, a_offset == 0 ? <span class="keyword">nullptr</span> : &amp;info_vector_sum_col,</div>
<div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;                b_offset == 0 ? <span class="keyword">nullptr</span> : &amp;info_vector_sum_row, c, output, a_offset, b_offset, gemmlowp_output_stage,</div>
<div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;                &amp;gemm_output_stage_multipliers_shifts_info, &amp;gemm_output_stage_multipliers_shifts_info));</div>
<div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;        }</div>
<div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;    }</div>
<div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;    {</div>
<div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;        <span class="keywordflow">if</span> (reshape_matrix_b)</div>
<div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;        {</div>
<div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;            <span class="comment">// Validate matrix multiply</span></div>
<div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;            <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_lowp_matrix_multiply_reshaped_only_rhs_kernel.xhtml#acf3c0edc128368064ed11c1df57f0e09">ClGemmLowpMatrixMultiplyReshapedOnlyRhsKernel::validate</a>(</div>
<div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;                matrix_a_info, matrix_b_info, output, gemm_kernel_info));</div>
<div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;        }</div>
<div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;        {</div>
<div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;            <span class="comment">// Pick up the GEMM configuration</span></div>
<div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;            <span class="comment">// It doesn&#39;t matter whether Datatype is DataType::QASYMM8 or DataType::QASYMM8_SIGNED, since it only affect the shape configuration</span></div>
<div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span> res = <a class="code" href="namespacearm__compute_1_1cl__gemm_1_1auto__heuristics.xhtml#ac5401113c92afe31982eeb3634bb8321">select_default_gemm_config_native</a>(</div>
<div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;                <a class="code" href="structarm__compute_1_1cl__gemm_1_1auto__heuristics_1_1_common_query.xhtml">auto_heuristics::CommonQuery</a>{gpu_target, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>, m, n, k, batch_size});</div>
<div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;            lhs_info = res.<a class="code" href="structarm__compute_1_1cl__gemm_1_1auto__heuristics_1_1_g_e_m_m_config_result.xhtml#ab4acc1212729959d1bb6d9dbc55354dd">lhs_info</a>;</div>
<div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;            rhs_info = res.rhs_info;</div>
<div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160; </div>
<div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;            <span class="comment">// Validate matrix multiply</span></div>
<div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;            <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_lowp_matrix_multiply_native_kernel.xhtml#a639674cca77f928fbc6beebb97aa2f1b">ClGemmLowpMatrixMultiplyNativeKernel::validate</a>(</div>
<div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;                matrix_a_info, matrix_b_info, output, lhs_info, rhs_info, reshape_info));</div>
<div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;        }</div>
<div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160; </div>
<div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160;        <span class="keywordflow">if</span> (output-&gt;total_size() != 0)</div>
<div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;        {</div>
<div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;            <span class="comment">// Validate offset contribution kernel</span></div>
<div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160;            <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_lowp_offset_contribution_kernel.xhtml#a0c8e9fe3b2d6411e9f75bfcfa8b8e7d2">ClGemmLowpOffsetContributionKernel::validate</a>(</div>
<div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;                output, a_offset == 0 ? <span class="keyword">nullptr</span> : &amp;info_vector_sum_col, b_offset == 0 ? <span class="keyword">nullptr</span> : &amp;info_vector_sum_row,</div>
<div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;                c, a_offset, b_offset));</div>
<div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;        }</div>
<div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;    }</div>
<div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160; </div>
<div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;    <span class="keywordflow">return</span> Status{};</div>
<div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_kernel_descriptors_8h_source.xhtml#l00109">GEMMKernelInfo::a_offset</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00159">ARM_COMPUTE_ERROR_ON_NULLPTR</a>, <a class="el" href="_error_8h_source.xhtml#l00298">ARM_COMPUTE_RETURN_ERROR_ON</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00952">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN</a>, <a class="el" href="_error_8h_source.xhtml#l00245">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>, <a class="el" href="_error_8h_source.xhtml#l00205">ARM_COMPUTE_RETURN_ON_ERROR</a>, <a class="el" href="_auto_configuration_8h_source.xhtml#l00043">arm_compute::auto_init_if_empty()</a>, <a class="el" href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00157">arm_compute::test::validation::b</a>, <a class="el" href="_kernel_descriptors_8h_source.xhtml#l00110">GEMMKernelInfo::b_offset</a>, <a class="el" href="classarm__compute_1_1misc_1_1_i_cloneable.xhtml#a4d10e5012a872e7f78f2b539b673049d">ICloneable&lt; T &gt;::clone()</a>, <a class="el" href="_shape_calculator_8h_source.xhtml#l00987">arm_compute::misc::shape_calculator::compute_mm_shape()</a>, <a class="el" href="_shape_calculator_8h_source.xhtml#l00350">arm_compute::misc::shape_calculator::compute_reductionA_shape()</a>, <a class="el" href="_shape_calculator_8h_source.xhtml#l00367">arm_compute::misc::shape_calculator::compute_reductionB_shape()</a>, <a class="el" href="_shape_calculator_8h_source.xhtml#l00240">arm_compute::misc::shape_calculator::compute_rhs_reshaped_shape()</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">ITensorInfo::data_type()</a>, <a class="el" href="_kernel_descriptors_8h_source.xhtml#l00097">GEMMKernelInfo::depth_output_gemm3d</a>, <a class="el" href="_g_e_m_m_info_8h_source.xhtml#l00171">GEMMInfo::depth_output_gemm3d()</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">ITensorInfo::dimension()</a>, <a class="el" href="_g_e_m_m_info_8h_source.xhtml#l00057">GEMMLowpOutputStageInfo::gemmlowp_multipliers</a>, <a class="el" href="_g_e_m_m_info_8h_source.xhtml#l00195">GEMMInfo::gemmlowp_output_stage()</a>, <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00112">CLScheduler::get()</a>, <a class="el" href="_g_e_m_m_info_8h_source.xhtml#l00145">GEMMInfo::is_a_reshaped()</a>, <a class="el" href="_g_e_m_m_info_8h_source.xhtml#l00153">GEMMInfo::is_b_reshaped()</a>, <a class="el" href="_data_type_utils_8h_source.xhtml#l00346">arm_compute::is_data_type_quantized_asymmetric()</a>, <a class="el" href="_data_type_utils_8h_source.xhtml#l00401">arm_compute::is_data_type_quantized_per_channel()</a>, <a class="el" href="_data_type_utils_8h_source.xhtml#l00382">arm_compute::is_data_type_quantized_symmetric()</a>, <a class="el" href="_g_e_m_m_info_8h_source.xhtml#l00060">GEMMLowpOutputStageInfo::is_quantized_per_channel</a>, <a class="el" href="_kernel_descriptors_8h_source.xhtml#l00096">GEMMKernelInfo::k</a>, <a class="el" href="_kernel_descriptors_8h_source.xhtml#l00107">GEMMKernelInfo::lhs_info</a>, <a class="el" href="_kernel_descriptors_8h_source.xhtml#l00094">GEMMKernelInfo::m</a>, <a class="el" href="_kernel_descriptors_8h_source.xhtml#l00095">GEMMKernelInfo::n</a>, <a class="el" href="namespacearm__compute.xhtml#a5558e2cc22f7f4771653d992c8ad8864ab50339a10e1de285ac99d4c3990b8693">arm_compute::NONE</a>, <a class="el" href="_quantization_info_8h_source.xhtml#l00063">UniformQuantizationInfo::offset</a>, <a class="el" href="_g_e_m_m_info_8h_source.xhtml#l00061">GEMMLowpOutputStageInfo::output_data_type</a>, <a class="el" href="_kernel_descriptors_8h_source.xhtml#l00111">GEMMKernelInfo::output_stage</a>, <a class="el" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">arm_compute::QASYMM8</a>, <a class="el" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a329f5d0c4b0c80e3474951d2c4435dd9">arm_compute::QASYMM8_SIGNED</a>, <a class="el" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a5f007421a4becd11c0666c2058b0b36c">arm_compute::QSYMM8</a>, <a class="el" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a34f500e941c4df30b870126ec868ebd5">arm_compute::QSYMM8_PER_CHANNEL</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a3f3e1a3200223e6a304a533b1016e749">ITensorInfo::quantization_info()</a>, <a class="el" href="namespacearm__compute.xhtml#a5558e2cc22f7f4771653d992c8ad8864ab300cae200f67712c1eb9234e28158ca">arm_compute::QUANTIZE_DOWN_FIXEDPOINT</a>, <a class="el" href="_kernel_descriptors_8h_source.xhtml#l00098">GEMMKernelInfo::reinterpret_input_as_3d</a>, <a class="el" href="_g_e_m_m_info_8h_source.xhtml#l00179">GEMMInfo::reinterpret_input_as_3d()</a>, <a class="el" href="_g_e_m_m_info_8h_source.xhtml#l00163">GEMMInfo::reshape_b_only_on_first_run()</a>, <a class="el" href="_kernel_descriptors_8h_source.xhtml#l00108">GEMMKernelInfo::rhs_info</a>, <a class="el" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aa1e28eee0339658d39a8b4d325b56e9c">arm_compute::S32</a>, <a class="el" href="_c_l_g_e_m_m_auto_heuristics_8cpp_source.xhtml#l00166">arm_compute::cl_gemm::auto_heuristics::select_default_gemm_config_native()</a>, <a class="el" href="_c_l_g_e_m_m_auto_heuristics_8cpp_source.xhtml#l00089">arm_compute::cl_gemm::auto_heuristics::select_default_gemm_config_reshaped_only_rhs()</a>, <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00046">CLScheduler::target()</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a18064e0011c3869d884653e9e7c47b66">ITensorInfo::total_size()</a>, <a class="el" href="_g_e_m_m_info_8h_source.xhtml#l00047">GEMMLowpOutputStageInfo::type</a>, <a class="el" href="_quantization_info_8h_source.xhtml#l00140">QuantizationInfo::uniform()</a>, <a class="el" href="_cl_gemm_lowp_matrix_multiply_native_kernel_8cpp_source.xhtml#l00286">ClGemmLowpMatrixMultiplyNativeKernel::validate()</a>, <a class="el" href="_cl_cast_kernel_8cpp_source.xhtml#l00142">ClCastKernel::validate()</a>, <a class="el" href="_cl_gemm_reshape_rhs_matrix_kernel_8cpp_source.xhtml#l00159">ClGemmReshapeRhsMatrixKernel::validate()</a>, <a class="el" href="_cl_gemm_lowp_offset_contribution_kernel_8cpp_source.xhtml#l00182">ClGemmLowpOffsetContributionKernel::validate()</a>, <a class="el" href="_cl_gemm_lowp_offset_contribution_output_stage_kernel_8cpp_source.xhtml#l00237">ClGemmLowpOffsetContributionOutputStageKernel::validate()</a>, <a class="el" href="_cl_gemm_lowp_matrix_multiply_reshaped_only_rhs_kernel_8cpp_source.xhtml#l00475">ClGemmLowpMatrixMultiplyReshapedOnlyRhsKernel::validate()</a>, <a class="el" href="_cl_gemm_lowp_reduction_kernel_8cpp_source.xhtml#l00131">ClGemmLowpMatrixAReductionKernel::validate()</a>, <a class="el" href="_cl_gemm_lowp_reduction_kernel_8cpp_source.xhtml#l00209">ClGemmLowpMatrixBReductionKernel::validate()</a>, <a class="el" href="_c_l_2_batch_normalization_layer_8cpp_source.xhtml#l00165">arm_compute::test::validation::weights_info</a>, and <a class="el" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fae1c8555fcf0ea2bb648a6fd527d658c0">arm_compute::WRAP</a>.</p>

<p class="reference">Referenced by <a class="el" href="gpu_2cl_2operators_2_cl_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00304">ClGemmLowpMatrixMultiplyCore::configure()</a>.</p>

</div>
</div>
<a id="a74ae0d6e96f38fecd38471431786b870"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a74ae0d6e96f38fecd38471431786b870">&#9670;&nbsp;</a></span>workspace()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__compute_1_1experimental.xhtml#aa93a4d93eb22ef5445cd567ef22ca67c">experimental::MemoryRequirements</a> workspace </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Return the memory requirements required by the workspace. </p>

<p>Reimplemented from <a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml#aea714e0b46ed9e9d14440dbc0ece4013">ICLOperator</a>.</p>

<p class="definition">Definition at line <a class="el" href="gpu_2cl_2operators_2_cl_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00945">945</a> of file <a class="el" href="gpu_2cl_2operators_2_cl_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml">ClGemmLowpMatrixMultiplyCore.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00946"></a><span class="lineno">  946</span>&#160;{</div>
<div class="line"><a name="l00947"></a><span class="lineno">  947</span>&#160;    <span class="keywordflow">return</span> _aux_mem;</div>
<div class="line"><a name="l00948"></a><span class="lineno">  948</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>src/gpu/cl/operators/<a class="el" href="src_2gpu_2cl_2operators_2_c_l_g_e_m_m_lowp_matrix_multiply_core_8h_source.xhtml">ClGemmLowpMatrixMultiplyCore.h</a></li>
<li>src/gpu/cl/operators/<a class="el" href="gpu_2cl_2operators_2_cl_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml">ClGemmLowpMatrixMultiplyCore.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="anamespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a292ea0ca5cb39b9acea91a2c56fbbe60"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a292ea0ca5cb39b9acea91a2c56fbbe60">arm_compute::ACL_SRC_DST</a></div><div class="ttdeci">@ ACL_SRC_DST</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00041">Types.h:41</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a34f500e941c4df30b870126ec868ebd5"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a34f500e941c4df30b870126ec868ebd5">arm_compute::DataType::QSYMM8_PER_CHANNEL</a></div><div class="ttdeci">@ QSYMM8_PER_CHANNEL</div><div class="ttdoc">quantized, symmetric per channel fixed-point 8-bit number</div></div>
<div class="ttc" id="anamespacearm__compute_1_1misc_1_1shape__calculator_xhtml_adca241b012a5e00ddfcdc5a8db05a2a3"><div class="ttname"><a href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml#adca241b012a5e00ddfcdc5a8db05a2a3">arm_compute::misc::shape_calculator::compute_mm_shape</a></div><div class="ttdeci">TensorShape compute_mm_shape(const ITensorInfo &amp;input0, const ITensorInfo &amp;input1, bool is_interleaved_transposed, const GEMMReshapeInfo &amp;reshape_info)</div><div class="ttdoc">Calculate the matrix multiplication output shape of two tensors.</div><div class="ttdef"><b>Definition:</b> <a href="_shape_calculator_8h_source.xhtml#l00987">ShapeCalculator.h:987</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_reshape_rhs_matrix_kernel_xhtml_a7e935f10ed6c95b1d37dd46f72892154"><div class="ttname"><a href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_reshape_rhs_matrix_kernel.xhtml#a7e935f10ed6c95b1d37dd46f72892154">arm_compute::opencl::kernels::ClGemmReshapeRhsMatrixKernel::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *src, const ITensorInfo *dst, const GEMMRHSMatrixInfo &amp;rhs_info)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_gemm_reshape_rhs_matrix_kernel_8cpp_source.xhtml#l00159">ClGemmReshapeRhsMatrixKernel.cpp:159</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a7cb842ebfe255726066039853a4322f0"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a7cb842ebfe255726066039853a4322f0">arm_compute::test::validation::weights_info</a></div><div class="ttdeci">weights_info</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_batch_normalization_layer_8cpp_source.xhtml#l00165">BatchNormalizationLayer.cpp:165</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">arm_compute::DataType::QASYMM8</a></div><div class="ttdeci">@ QASYMM8</div><div class="ttdoc">quantized, asymmetric fixed-point 8-bit number unsigned</div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_adbf67dcee294e673cf796f1ed8aeb6a4"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">arm_compute::test::validation::dst</a></div><div class="ttdeci">auto dst</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00170">DFT.cpp:170</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828afbaa09ed653f4ffe6c94c2bfaa36ddc7"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828afbaa09ed653f4ffe6c94c2bfaa36ddc7">arm_compute::ACL_SHIFTS</a></div><div class="ttdeci">@ ACL_SHIFTS</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00079">Types.h:79</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a5f007421a4becd11c0666c2058b0b36c"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a5f007421a4becd11c0666c2058b0b36c">arm_compute::DataType::QSYMM8</a></div><div class="ttdeci">@ QSYMM8</div><div class="ttdoc">quantized, symmetric fixed-point 8-bit number</div></div>
<div class="ttc" id="a_error_8h_xhtml_a7cf8d8b669b8f7b05680230be30d60f4"><div class="ttname"><a href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR(msg)</div><div class="ttdoc">Print the given message then throw an std::runtime_error.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00354">Error.h:354</a></div></div>
<div class="ttc" id="astructarm__compute_1_1_g_e_m_m_lowp_output_stage_info_xhtml_a94e1801be6c3d9d6645c694d7e280cda"><div class="ttname"><a href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#a94e1801be6c3d9d6645c694d7e280cda">arm_compute::GEMMLowpOutputStageInfo::is_quantized_per_channel</a></div><div class="ttdeci">bool is_quantized_per_channel</div><div class="ttdoc">GEMMLowp quantized per-channel flag.</div><div class="ttdef"><b>Definition:</b> <a href="_g_e_m_m_info_8h_source.xhtml#l00060">GEMMInfo.h:60</a></div></div>
<div class="ttc" id="astructarm__compute_1_1_g_e_m_m_lowp_output_stage_info_xhtml_ab269b182588a158cd256f9d4bb2a00dd"><div class="ttname"><a href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#ab269b182588a158cd256f9d4bb2a00dd">arm_compute::GEMMLowpOutputStageInfo::gemmlowp_shifts</a></div><div class="ttdeci">std::vector&lt; int32_t &gt; gemmlowp_shifts</div><div class="ttdoc">GEMMLowp output stage multiplier used for quantizing to QASYMM8.</div><div class="ttdef"><b>Definition:</b> <a href="_g_e_m_m_info_8h_source.xhtml#l00058">GEMMInfo.h:58</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a922cd85c475c0d725fc030116ea57979"><div class="ttname"><a href="namespacearm__compute.xhtml#a922cd85c475c0d725fc030116ea57979">arm_compute::is_data_type_quantized_symmetric</a></div><div class="ttdeci">bool is_data_type_quantized_symmetric(DataType dt)</div><div class="ttdoc">Check if a given data type is of symmetric quantized type.</div><div class="ttdef"><b>Definition:</b> <a href="_data_type_utils_8h_source.xhtml#l00382">DataTypeUtils.h:382</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1misc_1_1shape__calculator_xhtml_a60ce6c017f70d978b48b101ce314969e"><div class="ttname"><a href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml#a60ce6c017f70d978b48b101ce314969e">arm_compute::misc::shape_calculator::compute_reductionA_shape</a></div><div class="ttdeci">TensorShape compute_reductionA_shape(const ITensorInfo &amp;b)</div><div class="ttdoc">Calculate the reductionA shape used in GEMMLowp.</div><div class="ttdef"><b>Definition:</b> <a href="_shape_calculator_8h_source.xhtml#l00350">ShapeCalculator.h:350</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1experimental_xhtml_a90cbc7f3fa8bbc097dfd0429b31efb83af8199556cf6a62ca9268aa50c99b34a1"><div class="ttname"><a href="namespacearm__compute_1_1experimental.xhtml#a90cbc7f3fa8bbc097dfd0429b31efb83af8199556cf6a62ca9268aa50c99b34a1">arm_compute::experimental::MemoryLifetime::Prepare</a></div><div class="ttdeci">@ Prepare</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5">arm_compute::ACL_SRC_0</a></div><div class="ttdeci">@ ACL_SRC_0</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00045">Types.h:45</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_tensor_info_xhtml_a0a9053e6c4729ac5201b58068050c319"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#a0a9053e6c4729ac5201b58068050c319">arm_compute::TensorInfo::set_data_type</a></div><div class="ttdeci">ITensorInfo &amp; set_data_type(DataType data_type) override</div><div class="ttdoc">Set the data type to the specified value.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_tensor_info_8cpp_source.xhtml#l00339">TensorInfo.cpp:339</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0">arm_compute::ACL_SRC_1</a></div><div class="ttdeci">@ ACL_SRC_1</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00046">Types.h:46</a></div></div>
<div class="ttc" id="aarm__compute_2core_2_validate_8h_xhtml_ae7eed178dac535c6e727061b1f5bc6eb"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#ae7eed178dac535c6e727061b1f5bc6eb">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN(t, c,...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00952">Validate.h:952</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a01cea947a24713975f86d0769bf8fad5"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a01cea947a24713975f86d0769bf8fad5">arm_compute::ACL_SRC_2</a></div><div class="ttdeci">@ ACL_SRC_2</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00047">Types.h:47</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_lowp_matrix_a_reduction_kernel_xhtml_a0f66fad62612f272ca82c4a3aeeb2454"><div class="ttname"><a href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_lowp_matrix_a_reduction_kernel.xhtml#a0f66fad62612f272ca82c4a3aeeb2454">arm_compute::opencl::kernels::ClGemmLowpMatrixAReductionKernel::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *mtx_a, const ITensorInfo *vector_sum_row, const GEMMLowpReductionKernelInfo &amp;info)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_gemm_lowp_reduction_kernel_8cpp_source.xhtml#l00131">ClGemmLowpReductionKernel.cpp:131</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_lowp_matrix_multiply_reshaped_only_rhs_kernel_xhtml_acf3c0edc128368064ed11c1df57f0e09"><div class="ttname"><a href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_lowp_matrix_multiply_reshaped_only_rhs_kernel.xhtml#acf3c0edc128368064ed11c1df57f0e09">arm_compute::opencl::kernels::ClGemmLowpMatrixMultiplyReshapedOnlyRhsKernel::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *src0, const ITensorInfo *src1, const ITensorInfo *dst, const GEMMKernelInfo &amp;gemm_info, const ITensorInfo *vector_sum_col=nullptr, const ITensorInfo *vector_sum_row=nullptr, const ITensorInfo *bias=nullptr, const ITensorInfo *output_multipliers=nullptr, const ITensorInfo *output_shifts=nullptr)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_gemm_lowp_matrix_multiply_reshaped_only_rhs_kernel_8cpp_source.xhtml#l00475">ClGemmLowpMatrixMultiplyReshapedOnlyRhsKernel.cpp:475</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a8a1e1c105f0bdaf37db408c7cfcb77a4"><div class="ttname"><a href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ON_ERROR(status)</div><div class="ttdoc">Checks if a status contains an error and returns it.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00205">Error.h:205</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1opencl_1_1_cl_gemm_lowp_matrix_multiply_core_xhtml_aff8f5e4223fd2a3020c8b252c8982d3a"><div class="ttname"><a href="classarm__compute_1_1opencl_1_1_cl_gemm_lowp_matrix_multiply_core.xhtml#aff8f5e4223fd2a3020c8b252c8982d3a">arm_compute::opencl::ClGemmLowpMatrixMultiplyCore::prepare</a></div><div class="ttdeci">void prepare(ITensorPack &amp;constants) override</div><div class="ttdoc">Prepare the function for executing.</div><div class="ttdef"><b>Definition:</b> <a href="gpu_2cl_2operators_2_cl_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00877">ClGemmLowpMatrixMultiplyCore.cpp:877</a></div></div>
<div class="ttc" id="aarm__compute_2core_2_validate_8h_xhtml_a921b705e9e3e0fe928928447869e62a5"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_NULLPTR(...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00159">Validate.h:159</a></div></div>
<div class="ttc" id="astructarm__compute_1_1experimental_1_1_memory_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1_memory_info.xhtml">arm_compute::experimental::MemoryInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00091">Types.h:91</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a82b8ac759c804bc1fb4e2d21e178fb6fae1c8555fcf0ea2bb648a6fd527d658c0"><div class="ttname"><a href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fae1c8555fcf0ea2bb648a6fd527d658c0">arm_compute::ConvertPolicy::WRAP</a></div><div class="ttdeci">@ WRAP</div><div class="ttdoc">Wrap around.</div></div>
<div class="ttc" id="aclassarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_lowp_matrix_b_reduction_kernel_xhtml_a1c41b8a7aaca0e8284958934b5fe12ab"><div class="ttname"><a href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_lowp_matrix_b_reduction_kernel.xhtml#a1c41b8a7aaca0e8284958934b5fe12ab">arm_compute::opencl::kernels::ClGemmLowpMatrixBReductionKernel::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *mtx_b, const ITensorInfo *vector_sum_col, const GEMMLowpReductionKernelInfo &amp;info)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_gemm_lowp_reduction_kernel_8cpp_source.xhtml#l00209">ClGemmLowpReductionKernel.cpp:209</a></div></div>
<div class="ttc" id="astructarm__compute_1_1cl__gemm_1_1auto__heuristics_1_1_common_query_xhtml"><div class="ttname"><a href="structarm__compute_1_1cl__gemm_1_1auto__heuristics_1_1_common_query.xhtml">arm_compute::cl_gemm::auto_heuristics::CommonQuery</a></div><div class="ttdoc">A collection of adaptor functions that enable the auto selection between mlgo-based heuristics and de...</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_g_e_m_m_auto_heuristics_8h_source.xhtml#l00040">CLGEMMAutoHeuristics.h:40</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a938dcd406ce611ef5345ad2531cdb948"><div class="ttname"><a href="_error_8h.xhtml#a938dcd406ce611ef5345ad2531cdb948">ARM_COMPUTE_ERROR_THROW_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_THROW_ON(status)</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00455">Error.h:455</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a206d6e247e0957ac3dee45d27756fc25"><div class="ttname"><a href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true, an error is returned.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00298">Error.h:298</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1cl__gemm_1_1auto__heuristics_xhtml_af53deba4e7f9f689d28e5980acef03f6"><div class="ttname"><a href="namespacearm__compute_1_1cl__gemm_1_1auto__heuristics.xhtml#af53deba4e7f9f689d28e5980acef03f6">arm_compute::cl_gemm::auto_heuristics::select_default_gemm_config_reshaped_only_rhs</a></div><div class="ttdeci">GEMMConfigResult select_default_gemm_config_reshaped_only_rhs(const CommonQuery &amp;query)</div><div class="ttdoc">Select gemm config based on default heuristics.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_g_e_m_m_auto_heuristics_8cpp_source.xhtml#l00089">CLGEMMAutoHeuristics.cpp:89</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_tensor_info_xhtml_af398466b602a02b42d8df19fb66a6c60"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#af398466b602a02b42d8df19fb66a6c60">arm_compute::TensorInfo::total_size</a></div><div class="ttdeci">size_t total_size() const override</div><div class="ttdoc">Returns the total size of the tensor in bytes.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00261">TensorInfo.h:261</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">arm_compute::ACL_DST</a></div><div class="ttdeci">@ ACL_DST</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00055">Types.h:55</a></div></div>
<div class="ttc" id="astructarm__compute_1_1cl__gemm_1_1auto__heuristics_1_1_g_e_m_m_config_result_xhtml_ab4acc1212729959d1bb6d9dbc55354dd"><div class="ttname"><a href="structarm__compute_1_1cl__gemm_1_1auto__heuristics_1_1_g_e_m_m_config_result.xhtml#ab4acc1212729959d1bb6d9dbc55354dd">arm_compute::cl_gemm::auto_heuristics::GEMMConfigResult::lhs_info</a></div><div class="ttdeci">GEMMLHSMatrixInfo lhs_info</div><div class="ttdoc">If the result is valid.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_g_e_m_m_auto_heuristics_8h_source.xhtml#l00078">CLGEMMAutoHeuristics.h:78</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a37c28ce239ce7092298245ce59694917"><div class="ttname"><a href="namespacearm__compute.xhtml#a37c28ce239ce7092298245ce59694917">arm_compute::auto_init_if_empty</a></div><div class="ttdeci">bool auto_init_if_empty(ITensorInfo &amp;info, const TensorShape &amp;shape, int num_channels, DataType data_type, QuantizationInfo quantization_info=QuantizationInfo())</div><div class="ttdoc">Auto initialize the tensor info (shape, number of channels and data type) if the current assignment i...</div><div class="ttdef"><b>Definition:</b> <a href="_auto_configuration_8h_source.xhtml#l00043">AutoConfiguration.h:43</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a329f5d0c4b0c80e3474951d2c4435dd9"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a329f5d0c4b0c80e3474951d2c4435dd9">arm_compute::DataType::QASYMM8_SIGNED</a></div><div class="ttdeci">@ QASYMM8_SIGNED</div><div class="ttdoc">quantized, asymmetric fixed-point 8-bit number signed</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a84437d80241f6a31e1a07c231ee8e3ac"><div class="ttname"><a href="namespacearm__compute.xhtml#a84437d80241f6a31e1a07c231ee8e3ac">arm_compute::is_data_type_quantized_per_channel</a></div><div class="ttdeci">bool is_data_type_quantized_per_channel(DataType dt)</div><div class="ttdoc">Check if a given data type is of per channel type.</div><div class="ttdef"><b>Definition:</b> <a href="_data_type_utils_8h_source.xhtml#l00401">DataTypeUtils.h:401</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a9da88e01e6f086c156eda117f84b89e0"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a9da88e01e6f086c156eda117f84b89e0">arm_compute::ACL_MULTIPLIERS</a></div><div class="ttdeci">@ ACL_MULTIPLIERS</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00080">Types.h:80</a></div></div>
<div class="ttc" id="astructarm__compute_1_1_g_e_m_m_lowp_output_stage_info_xhtml_ae5bd6bebbc0c7ebd9e7dbfd47d939c2a"><div class="ttname"><a href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#ae5bd6bebbc0c7ebd9e7dbfd47d939c2a">arm_compute::GEMMLowpOutputStageInfo::gemmlowp_multipliers</a></div><div class="ttdeci">std::vector&lt; int32_t &gt; gemmlowp_multipliers</div><div class="ttdoc">GEMMLowp output stage multiplier used for quantizing to QASYMM8.</div><div class="ttdef"><b>Definition:</b> <a href="_g_e_m_m_info_8h_source.xhtml#l00057">GEMMInfo.h:57</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_scheduler_xhtml_a9b58d0eb9a2af8e6d7908695e1557d6c"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">arm_compute::CLScheduler::get</a></div><div class="ttdeci">static CLScheduler &amp; get()</div><div class="ttdoc">Access the scheduler singleton.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00112">CLScheduler.cpp:112</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1misc_1_1shape__calculator_xhtml_a69f9b3191aafc4905f9d029ff9d48fea"><div class="ttname"><a href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml#a69f9b3191aafc4905f9d029ff9d48fea">arm_compute::misc::shape_calculator::compute_reductionB_shape</a></div><div class="ttdeci">TensorShape compute_reductionB_shape(const ITensorInfo &amp;a)</div><div class="ttdoc">Calculate the reductionB shape used in GEMMLowp.</div><div class="ttdef"><b>Definition:</b> <a href="_shape_calculator_8h_source.xhtml#l00367">ShapeCalculator.h:367</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a5558e2cc22f7f4771653d992c8ad8864ab50339a10e1de285ac99d4c3990b8693"><div class="ttname"><a href="namespacearm__compute.xhtml#a5558e2cc22f7f4771653d992c8ad8864ab50339a10e1de285ac99d4c3990b8693">arm_compute::GEMMLowpOutputStageType::NONE</a></div><div class="ttdeci">@ NONE</div><div class="ttdoc">No quantization.</div></div>
<div class="ttc" id="aclassarm__compute_1_1opencl_1_1_cl_gemm_lowp_matrix_multiply_core_xhtml_a8c3cf2d65afb288e39909171ada19566"><div class="ttname"><a href="classarm__compute_1_1opencl_1_1_cl_gemm_lowp_matrix_multiply_core.xhtml#a8c3cf2d65afb288e39909171ada19566">arm_compute::opencl::ClGemmLowpMatrixMultiplyCore::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *a, const ITensorInfo *b, const ITensorInfo *c, const ITensorInfo *output, const GEMMInfo &amp;gemm_info=GEMMInfo())</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration.</div><div class="ttdef"><b>Definition:</b> <a href="gpu_2cl_2operators_2_cl_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00557">ClGemmLowpMatrixMultiplyCore.cpp:557</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_scheduler_xhtml_a27561688e2fc60176608ef725a4ecb30"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a27561688e2fc60176608ef725a4ecb30">arm_compute::CLScheduler::target</a></div><div class="ttdeci">GPUTarget target() const</div><div class="ttdoc">Get the target GPU.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00046">CLScheduler.cpp:46</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a735ac6c2a02e320969625308810444f3"><div class="ttname"><a href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3">arm_compute::GPUTarget</a></div><div class="ttdeci">GPUTarget</div><div class="ttdoc">Available GPU Targets.</div><div class="ttdef"><b>Definition:</b> <a href="_g_p_u_target_8h_source.xhtml#l00034">GPUTarget.h:34</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1misc_1_1shape__calculator_xhtml_a09ad10a110d947fd9c444b2ea5e4c127"><div class="ttname"><a href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml#a09ad10a110d947fd9c444b2ea5e4c127">arm_compute::misc::shape_calculator::compute_rhs_reshaped_shape</a></div><div class="ttdeci">TensorShape compute_rhs_reshaped_shape(const ITensorInfo &amp;a, const GEMMRHSMatrixInfo &amp;rhs_info)</div><div class="ttdoc">Calculate the Right Hand Side matrix reshaped shape.</div><div class="ttdef"><b>Definition:</b> <a href="_shape_calculator_8h_source.xhtml#l00240">ShapeCalculator.h:240</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a324d709e8fb5568ada56ba4999dfb2f1"><div class="ttname"><a href="namespacearm__compute.xhtml#a324d709e8fb5568ada56ba4999dfb2f1">arm_compute::offset_int_vec</a></div><div class="ttdeci">int offset_int_vec(int offset)</div><div class="ttdef"><b>Definition:</b> <a href="_memory_helpers_8h_source.xhtml#l00038">MemoryHelpers.h:38</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_aa76b4a6e74940dabc5b7fc6b2dab3545"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">arm_compute::test::validation::b</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; b</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00157">DFT.cpp:157</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a059864283c54386b639427bc8a01e785"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a059864283c54386b639427bc8a01e785">arm_compute::ACL_BIAS</a></div><div class="ttdeci">@ ACL_BIAS</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00074">Types.h:74</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a1c69762a42ab8add645d0a949b6f4b1f"><div class="ttname"><a href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_MSG(cond, msg)</div><div class="ttdoc">If the condition is true, an error is returned.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00245">Error.h:245</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a93203bd138078ed3c19f335d84f9b3cd"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a93203bd138078ed3c19f335d84f9b3cd">arm_compute::ACL_VEC_COL_SUM</a></div><div class="ttdeci">@ ACL_VEC_COL_SUM</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00078">Types.h:78</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_lowp_offset_contribution_output_stage_kernel_xhtml_ae4368b3be8accd98e999f5b56eac1b65"><div class="ttname"><a href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_lowp_offset_contribution_output_stage_kernel.xhtml#ae4368b3be8accd98e999f5b56eac1b65">arm_compute::opencl::kernels::ClGemmLowpOffsetContributionOutputStageKernel::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *mm_result, const ITensorInfo *vector_sum_col, const ITensorInfo *vector_sum_row, const ITensorInfo *bias, const ITensorInfo *dst, int32_t a_offset, int32_t b_offset, const GEMMLowpOutputStageInfo &amp;output_stage, const ITensorInfo *output_multipliers, const ITensorInfo *output_shifts)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_gemm_lowp_offset_contribution_output_stage_kernel_8cpp_source.xhtml#l00237">ClGemmLowpOffsetContributionOutputStageKernel.cpp:237</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a6f7d2fe6b41e36d408375ad6bf9a612aa4361824f1748299245ef0ad0cb7d6111"><div class="ttname"><a href="namespacearm__compute.xhtml#a6f7d2fe6b41e36d408375ad6bf9a612aa4361824f1748299245ef0ad0cb7d6111">arm_compute::CLGEMMKernelType::RESHAPED_ONLY_RHS_MMUL</a></div><div class="ttdeci">@ RESHAPED_ONLY_RHS_MMUL</div><div class="ttdoc">Reshaped GEMM kernel where only the rhs matrix is reshaped.</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6aa1e28eee0339658d39a8b4d325b56e9c"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aa1e28eee0339658d39a8b4d325b56e9c">arm_compute::DataType::S32</a></div><div class="ttdeci">@ S32</div><div class="ttdoc">signed 32-bit number</div></div>
<div class="ttc" id="aclassarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_lowp_offset_contribution_kernel_xhtml_a0c8e9fe3b2d6411e9f75bfcfa8b8e7d2"><div class="ttname"><a href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_lowp_offset_contribution_kernel.xhtml#a0c8e9fe3b2d6411e9f75bfcfa8b8e7d2">arm_compute::opencl::kernels::ClGemmLowpOffsetContributionKernel::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *mm_result, const ITensorInfo *vector_sum_col, const ITensorInfo *vector_sum_row, const ITensorInfo *bias, int32_t a_offset, int32_t b_offset)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_gemm_lowp_offset_contribution_kernel_8cpp_source.xhtml#l00182">ClGemmLowpOffsetContributionKernel.cpp:182</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a14f46283f316e7f0fad301d5c1507e9f"><div class="ttname"><a href="namespacearm__compute.xhtml#a14f46283f316e7f0fad301d5c1507e9f">arm_compute::is_data_type_quantized_asymmetric</a></div><div class="ttdeci">bool is_data_type_quantized_asymmetric(DataType dt)</div><div class="ttdoc">Check if a given data type is of asymmetric quantized type.</div><div class="ttdef"><b>Definition:</b> <a href="_data_type_utils_8h_source.xhtml#l00346">DataTypeUtils.h:346</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_scheduler_xhtml_a5c0fc6f465cae029d60ffdfc7f3e99d9"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a5c0fc6f465cae029d60ffdfc7f3e99d9">arm_compute::CLScheduler::enqueue_op</a></div><div class="ttdeci">void enqueue_op(ICLKernel &amp;kernel, ITensorPack &amp;tensors, bool flush=true)</div><div class="ttdoc">Schedule the execution of the passed kernel if possible.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00238">CLScheduler.cpp:238</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69">arm_compute::ACL_SRC</a></div><div class="ttdeci">@ ACL_SRC</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00044">Types.h:44</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1cl__gemm_1_1auto__heuristics_xhtml_ac5401113c92afe31982eeb3634bb8321"><div class="ttname"><a href="namespacearm__compute_1_1cl__gemm_1_1auto__heuristics.xhtml#ac5401113c92afe31982eeb3634bb8321">arm_compute::cl_gemm::auto_heuristics::select_default_gemm_config_native</a></div><div class="ttdeci">GEMMConfigResult select_default_gemm_config_native(const CommonQuery &amp;query)</div><div class="ttdoc">Select gemm config based on default heuristics.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_g_e_m_m_auto_heuristics_8cpp_source.xhtml#l00166">CLGEMMAutoHeuristics.cpp:166</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_lowp_matrix_multiply_native_kernel_xhtml_a639674cca77f928fbc6beebb97aa2f1b"><div class="ttname"><a href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_gemm_lowp_matrix_multiply_native_kernel.xhtml#a639674cca77f928fbc6beebb97aa2f1b">arm_compute::opencl::kernels::ClGemmLowpMatrixMultiplyNativeKernel::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *src0, const ITensorInfo *src1, const ITensorInfo *dst, const GEMMLHSMatrixInfo &amp;lhs_info, const GEMMRHSMatrixInfo &amp;rhs_info, const GEMMReshapeInfo &amp;gemm_info)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_gemm_lowp_matrix_multiply_native_kernel_8cpp_source.xhtml#l00286">ClGemmLowpMatrixMultiplyNativeKernel.cpp:286</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a6f7d2fe6b41e36d408375ad6bf9a612aae5baae53d329b252d56acec1bc0b5868"><div class="ttname"><a href="namespacearm__compute.xhtml#a6f7d2fe6b41e36d408375ad6bf9a612aae5baae53d329b252d56acec1bc0b5868">arm_compute::CLGEMMKernelType::RESHAPED_ONLY_RHS</a></div><div class="ttdeci">@ RESHAPED_ONLY_RHS</div><div class="ttdoc">Reshaped GEMM kernel where only the rhs matrix is reshaped.</div></div>
<div class="ttc" id="aclassarm__compute_1_1opencl_1_1kernels_1_1_cl_cast_kernel_xhtml_a99ee9eafa97c4a2c2ddefa4055acbfeb"><div class="ttname"><a href="classarm__compute_1_1opencl_1_1kernels_1_1_cl_cast_kernel.xhtml#a99ee9eafa97c4a2c2ddefa4055acbfeb">arm_compute::opencl::kernels::ClCastKernel::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *src, const ITensorInfo *dst, ConvertPolicy policy)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_cast_kernel_8cpp_source.xhtml#l00142">ClCastKernel.cpp:142</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_scheduler_xhtml_a398a2582c746d28fc125487a44c9ed74"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a398a2582c746d28fc125487a44c9ed74">arm_compute::CLScheduler::queue</a></div><div class="ttdeci">cl::CommandQueue &amp; queue()</div><div class="ttdoc">Accessor for the associated CL command queue.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00040">CLScheduler.cpp:40</a></div></div>
<div class="ttc" id="astructarm__compute_1_1cl__gemm_1_1auto__heuristics_1_1_common_query_xhtml_a6118865e7371b107bd5fb4dd4a9e99a3"><div class="ttname"><a href="structarm__compute_1_1cl__gemm_1_1auto__heuristics_1_1_common_query.xhtml#a6118865e7371b107bd5fb4dd4a9e99a3">arm_compute::cl_gemm::auto_heuristics::CommonQuery::data_type</a></div><div class="ttdeci">DataType data_type</div><div class="ttdoc">Data type.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_g_e_m_m_auto_heuristics_8h_source.xhtml#l00043">CLGEMMAutoHeuristics.h:43</a></div></div>
<div class="ttc" id="asrc_2common_2utils_2_log_8h_xhtml_a3ae35e22a098d589ff54ed85647ed87e"><div class="ttname"><a href="src_2common_2utils_2_log_8h.xhtml#a3ae35e22a098d589ff54ed85647ed87e">ARM_COMPUTE_LOG_PARAMS</a></div><div class="ttdeci">#define ARM_COMPUTE_LOG_PARAMS(...)</div><div class="ttdef"><b>Definition:</b> <a href="src_2common_2utils_2_log_8h_source.xhtml#l00035">Log.h:35</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a5558e2cc22f7f4771653d992c8ad8864ab300cae200f67712c1eb9234e28158ca"><div class="ttname"><a href="namespacearm__compute.xhtml#a5558e2cc22f7f4771653d992c8ad8864ab300cae200f67712c1eb9234e28158ca">arm_compute::GEMMLowpOutputStageType::QUANTIZE_DOWN_FIXEDPOINT</a></div><div class="ttdeci">@ QUANTIZE_DOWN_FIXEDPOINT</div><div class="ttdoc">Quantize using a fixed point multiplication.</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a8201f58586be83622450924f1339d95d"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a8201f58586be83622450924f1339d95d">arm_compute::ACL_VEC_ROW_SUM</a></div><div class="ttdeci">@ ACL_VEC_ROW_SUM</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00077">Types.h:77</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_g_e_m_m_info_xhtml_a11d8f855e323a8396fe6944edcef4238"><div class="ttname"><a href="classarm__compute_1_1_g_e_m_m_info.xhtml#a11d8f855e323a8396fe6944edcef4238">arm_compute::GEMMInfo::gemmlowp_output_stage</a></div><div class="ttdeci">GEMMLowpOutputStageInfo gemmlowp_output_stage() const</div><div class="ttdoc">GEMMLowp output stage.</div><div class="ttdef"><b>Definition:</b> <a href="_g_e_m_m_info_8h_source.xhtml#l00195">GEMMInfo.h:195</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1opencl.xhtml">opencl</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm_lowp_matrix_multiply_core.xhtml">ClGemmLowpMatrixMultiplyCore</a></li>
    <li class="footer">Generated on Mon Mar 18 2024 11:32:15 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
