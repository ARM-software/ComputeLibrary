<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: ClTemplateDepthwiseConv2d Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.02.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_depthwise_conv2d.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">ClTemplateDepthwiseConv2d Class Reference<span class="mlabels"><span class="mlabel">final</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_cl_template_depthwise_conv2d_8h_source.xhtml">ClTemplateDepthwiseConv2d.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for ClTemplateDepthwiseConv2d:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_depthwise_conv2d__coll__graph.svg" width="238" height="112"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a33b39c752c191cc1214dc75d03fef688"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_depthwise_conv2d.xhtml#a33b39c752c191cc1214dc75d03fef688">Attributes</a> = <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_depthwise_conv2d.xhtml#ae539a668440f0060cfc673e955f788bf">ClComponentDepthwiseConv2d::Attributes</a></td></tr>
<tr class="separator:a33b39c752c191cc1214dc75d03fef688"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afb04fb1be5069fb72d5ca765ff2484e3"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_depthwise_conv2d.xhtml#afb04fb1be5069fb72d5ca765ff2484e3">Settings</a> = <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_depthwise_conv2d.xhtml#a03b0a94b67bc162ab8e33fffab3269a0">ClComponentDepthwiseConv2d::Settings</a></td></tr>
<tr class="separator:afb04fb1be5069fb72d5ca765ff2484e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_types_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer"><td colspan="2" onclick="javascript:toggleInherit('pub_types_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer')"><img src="closed.png" alt="-"/>&#160;Public Types inherited from <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml">IGpuTemplateComponentWriter</a></td></tr>
<tr class="memitem:a6cda2a0c50524467fbfba048298303ed inherit pub_types_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a6cda2a0c50524467fbfba048298303ed">ComponentGroup</a> = <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_group.xhtml">GpuKernelComponentGroup</a></td></tr>
<tr class="separator:a6cda2a0c50524467fbfba048298303ed inherit pub_types_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a8c19204f224bd9c5e26523ef30333682"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_depthwise_conv2d.xhtml#a8c19204f224bd9c5e26523ef30333682">ClTemplateDepthwiseConv2d</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#afff13da4ff0bb0cd14e24f19743c8225">ComponentId</a> <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a2b1fb10e2eeb3bcea23a8bd60296ca7c">id</a>, const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_argument_pack.xhtml">ArgumentPack</a>&lt; <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> &gt; &amp;<a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a6c87c6e19567bc42bc52d166728c4461">tensors</a>, const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_depthwise_conv2d.xhtml#a33b39c752c191cc1214dc75d03fef688">Attributes</a> &amp;attributes, const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_depthwise_conv2d.xhtml#afb04fb1be5069fb72d5ca765ff2484e3">Settings</a> &amp;settings)</td></tr>
<tr class="memdesc:a8c19204f224bd9c5e26523ef30333682"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_depthwise_conv2d.xhtml#a8c19204f224bd9c5e26523ef30333682">More...</a><br /></td></tr>
<tr class="separator:a8c19204f224bd9c5e26523ef30333682"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af7522ce58c049b9d2f938a033bad9911"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_depthwise_conv2d.xhtml#af7522ce58c049b9d2f938a033bad9911">ClTemplateDepthwiseConv2d</a> (const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_depthwise_conv2d.xhtml">ClTemplateDepthwiseConv2d</a> &amp;depthwise_conv2d)=delete</td></tr>
<tr class="memdesc:af7522ce58c049b9d2f938a033bad9911"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copy constructed.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_depthwise_conv2d.xhtml#af7522ce58c049b9d2f938a033bad9911">More...</a><br /></td></tr>
<tr class="separator:af7522ce58c049b9d2f938a033bad9911"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d4ad2ff023fc368a298e29b3eac5d41"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_depthwise_conv2d.xhtml">ClTemplateDepthwiseConv2d</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_depthwise_conv2d.xhtml#a3d4ad2ff023fc368a298e29b3eac5d41">operator=</a> (const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_depthwise_conv2d.xhtml">ClTemplateDepthwiseConv2d</a> &amp;depthwise_conv2d)=delete</td></tr>
<tr class="memdesc:a3d4ad2ff023fc368a298e29b3eac5d41"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_depthwise_conv2d.xhtml#a3d4ad2ff023fc368a298e29b3eac5d41">More...</a><br /></td></tr>
<tr class="separator:a3d4ad2ff023fc368a298e29b3eac5d41"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a39f916e1741f006aafed6ab8b18300c9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_depthwise_conv2d.xhtml#a39f916e1741f006aafed6ab8b18300c9">ClTemplateDepthwiseConv2d</a> (<a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_depthwise_conv2d.xhtml">ClTemplateDepthwiseConv2d</a> &amp;&amp;depthwise_conv2d)=default</td></tr>
<tr class="memdesc:a39f916e1741f006aafed6ab8b18300c9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be move constructed.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_depthwise_conv2d.xhtml#a39f916e1741f006aafed6ab8b18300c9">More...</a><br /></td></tr>
<tr class="separator:a39f916e1741f006aafed6ab8b18300c9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae5526f56c46b4343ac80f84cfbbbc8e2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_depthwise_conv2d.xhtml">ClTemplateDepthwiseConv2d</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_depthwise_conv2d.xhtml#ae5526f56c46b4343ac80f84cfbbbc8e2">operator=</a> (<a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_depthwise_conv2d.xhtml">ClTemplateDepthwiseConv2d</a> &amp;&amp;depthwise_conv2d)=default</td></tr>
<tr class="memdesc:ae5526f56c46b4343ac80f84cfbbbc8e2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be moved.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_depthwise_conv2d.xhtml#ae5526f56c46b4343ac80f84cfbbbc8e2">More...</a><br /></td></tr>
<tr class="separator:ae5526f56c46b4343ac80f84cfbbbc8e2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea9b04d36ad2b9a4e1c166589ecb0326"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_depthwise_conv2d.xhtml#aea9b04d36ad2b9a4e1c166589ecb0326">get_name</a> () const override</td></tr>
<tr class="memdesc:aea9b04d36ad2b9a4e1c166589ecb0326"><td class="mdescLeft">&#160;</td><td class="mdescRight">Generate kernel component name.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_depthwise_conv2d.xhtml#aea9b04d36ad2b9a4e1c166589ecb0326">More...</a><br /></td></tr>
<tr class="separator:aea9b04d36ad2b9a4e1c166589ecb0326"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7812833059e15b739d8dafe7c462df48"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_depthwise_conv2d.xhtml#a7812833059e15b739d8dafe7c462df48">get_component_code</a> (const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a6cda2a0c50524467fbfba048298303ed">ComponentGroup</a> &amp;comp_group) const override</td></tr>
<tr class="memdesc:a7812833059e15b739d8dafe7c462df48"><td class="mdescLeft">&#160;</td><td class="mdescRight">Generate kernel component code template.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_depthwise_conv2d.xhtml#a7812833059e15b739d8dafe7c462df48">More...</a><br /></td></tr>
<tr class="separator:a7812833059e15b739d8dafe7c462df48"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a24095ca4db22e95bd86cd88a8ff28615"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_depthwise_conv2d.xhtml#a24095ca4db22e95bd86cd88a8ff28615">declare_variables</a> (<a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table.xhtml">GpuKernelVariableTable</a> &amp;vtable, const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a6cda2a0c50524467fbfba048298303ed">ComponentGroup</a> &amp;comp_group) const override</td></tr>
<tr class="memdesc:a24095ca4db22e95bd86cd88a8ff28615"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declare all variables used by the component in the <code>vtable</code>.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_depthwise_conv2d.xhtml#a24095ca4db22e95bd86cd88a8ff28615">More...</a><br /></td></tr>
<tr class="separator:a24095ca4db22e95bd86cd88a8ff28615"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:add98b8afc43f270c3195a39f47eca5a7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#afacfec8193ed701f3646c22bc2d35455">TagLUT</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_depthwise_conv2d.xhtml#add98b8afc43f270c3195a39f47eca5a7">get_tag_lut</a> (const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table.xhtml">GpuKernelVariableTable</a> &amp;vtable, const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a6cda2a0c50524467fbfba048298303ed">ComponentGroup</a> &amp;comp_group) const override</td></tr>
<tr class="memdesc:add98b8afc43f270c3195a39f47eca5a7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Generate the tag look-up table used to instantiate the component code.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_depthwise_conv2d.xhtml#add98b8afc43f270c3195a39f47eca5a7">More...</a><br /></td></tr>
<tr class="separator:add98b8afc43f270c3195a39f47eca5a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd5efd9e0abf91fc8eb0afdbd5cebff2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_c_l_build_options.xhtml">CLBuildOptions</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_depthwise_conv2d.xhtml#acd5efd9e0abf91fc8eb0afdbd5cebff2">get_build_options</a> (const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a6cda2a0c50524467fbfba048298303ed">ComponentGroup</a> &amp;comp_group) const override</td></tr>
<tr class="memdesc:acd5efd9e0abf91fc8eb0afdbd5cebff2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Generate the build options used in the component.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_depthwise_conv2d.xhtml#acd5efd9e0abf91fc8eb0afdbd5cebff2">More...</a><br /></td></tr>
<tr class="separator:acd5efd9e0abf91fc8eb0afdbd5cebff2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c20dda39067d96aa659c5729ccebf34"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_depthwise_conv2d.xhtml#a9c20dda39067d96aa659c5729ccebf34">get_config_id</a> () const override</td></tr>
<tr class="memdesc:a9c20dda39067d96aa659c5729ccebf34"><td class="mdescLeft">&#160;</td><td class="mdescRight">Generate the component config id string used for tuning.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_depthwise_conv2d.xhtml#a9c20dda39067d96aa659c5729ccebf34">More...</a><br /></td></tr>
<tr class="separator:a9c20dda39067d96aa659c5729ccebf34"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a283deece00423ed5bd0c9486f305a6f4"><td class="memItemLeft" align="right" valign="top">std::set&lt; std::string &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_depthwise_conv2d.xhtml#a283deece00423ed5bd0c9486f305a6f4">get_headers_list</a> () const override</td></tr>
<tr class="memdesc:a283deece00423ed5bd0c9486f305a6f4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Generate the header list used in the component.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_depthwise_conv2d.xhtml#a283deece00423ed5bd0c9486f305a6f4">More...</a><br /></td></tr>
<tr class="separator:a283deece00423ed5bd0c9486f305a6f4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae744fb5fb66aa1ce9db14ba93eab24e3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_window.xhtml">Window</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_depthwise_conv2d.xhtml#ae744fb5fb66aa1ce9db14ba93eab24e3">get_window</a> () const override</td></tr>
<tr class="memdesc:ae744fb5fb66aa1ce9db14ba93eab24e3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Generate the execution window for the component.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_depthwise_conv2d.xhtml#ae744fb5fb66aa1ce9db14ba93eab24e3">More...</a><br /></td></tr>
<tr class="separator:ae744fb5fb66aa1ce9db14ba93eab24e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml">IGpuTemplateComponentWriter</a></td></tr>
<tr class="memitem:aad5a9787ce3cca66f6155f1f2cf14a66 inherit pub_methods_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#aad5a9787ce3cca66f6155f1f2cf14a66">IGpuTemplateComponentWriter</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#afff13da4ff0bb0cd14e24f19743c8225">ComponentId</a> <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a2b1fb10e2eeb3bcea23a8bd60296ca7c">id</a>, const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_argument_pack.xhtml">ArgumentPack</a>&lt; <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> &gt; &amp;<a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a6c87c6e19567bc42bc52d166728c4461">tensors</a>)</td></tr>
<tr class="memdesc:aad5a9787ce3cca66f6155f1f2cf14a66 inherit pub_methods_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#aad5a9787ce3cca66f6155f1f2cf14a66">More...</a><br /></td></tr>
<tr class="separator:aad5a9787ce3cca66f6155f1f2cf14a66 inherit pub_methods_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae1e3a095916f4fe37604c82eca7341c2 inherit pub_methods_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#ae1e3a095916f4fe37604c82eca7341c2">~IGpuTemplateComponentWriter</a> ()</td></tr>
<tr class="memdesc:ae1e3a095916f4fe37604c82eca7341c2 inherit pub_methods_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#ae1e3a095916f4fe37604c82eca7341c2">More...</a><br /></td></tr>
<tr class="separator:ae1e3a095916f4fe37604c82eca7341c2 inherit pub_methods_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a65020719815c0344b43b296cc50b10ff inherit pub_methods_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer"><td class="memItemLeft" align="right" valign="top">virtual std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a65020719815c0344b43b296cc50b10ff">get_additional_macros</a> () const</td></tr>
<tr class="memdesc:a65020719815c0344b43b296cc50b10ff inherit pub_methods_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Generate additional macros used in the component.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a65020719815c0344b43b296cc50b10ff">More...</a><br /></td></tr>
<tr class="separator:a65020719815c0344b43b296cc50b10ff inherit pub_methods_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6c87c6e19567bc42bc52d166728c4461 inherit pub_methods_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_argument_pack.xhtml">ArgumentPack</a>&lt; <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a6c87c6e19567bc42bc52d166728c4461">tensors</a> () const</td></tr>
<tr class="memdesc:a6c87c6e19567bc42bc52d166728c4461 inherit pub_methods_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get tensor arguments.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a6c87c6e19567bc42bc52d166728c4461">More...</a><br /></td></tr>
<tr class="separator:a6c87c6e19567bc42bc52d166728c4461 inherit pub_methods_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2b1fb10e2eeb3bcea23a8bd60296ca7c inherit pub_methods_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#afff13da4ff0bb0cd14e24f19743c8225">ComponentId</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a2b1fb10e2eeb3bcea23a8bd60296ca7c">id</a> () const</td></tr>
<tr class="memdesc:a2b1fb10e2eeb3bcea23a8bd60296ca7c inherit pub_methods_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get component id.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a2b1fb10e2eeb3bcea23a8bd60296ca7c">More...</a><br /></td></tr>
<tr class="separator:a2b1fb10e2eeb3bcea23a8bd60296ca7c inherit pub_methods_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_static_attribs_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer"><td colspan="2" onclick="javascript:toggleInherit('pub_static_attribs_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer')"><img src="closed.png" alt="-"/>&#160;Static Public Attributes inherited from <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml">IGpuTemplateComponentWriter</a></td></tr>
<tr class="memitem:a2b489e3eb9e7156def886030fd588e42 inherit pub_static_attribs_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer"><td class="memItemLeft" align="right" valign="top">static constexpr <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info.xhtml#a17016d41439c2e42399cc92d8a95ad1d">GpuKernelArgumentInfo::Type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a2b489e3eb9e7156def886030fd588e42">common_tensor_type</a> = <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info.xhtml#a17016d41439c2e42399cc92d8a95ad1daa735f986cc40b7d5c4fd2d5a7ba883fd">GpuKernelArgumentInfo::Type::Tensor_4D_t_Buffer</a></td></tr>
<tr class="memdesc:a2b489e3eb9e7156def886030fd588e42 inherit pub_static_attribs_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer"><td class="mdescLeft">&#160;</td><td class="mdescRight">For now all kernel intermeditate/destination tensors are expected to be of type Tensor_4D_t_Buffer.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a2b489e3eb9e7156def886030fd588e42">More...</a><br /></td></tr>
<tr class="separator:a2b489e3eb9e7156def886030fd588e42 inherit pub_static_attribs_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p class="definition">Definition at line <a class="el" href="_cl_template_depthwise_conv2d_8h_source.xhtml#l00038">38</a> of file <a class="el" href="_cl_template_depthwise_conv2d_8h_source.xhtml">ClTemplateDepthwiseConv2d.h</a>.</p>
</div><h2 class="groupheader">Member Typedef Documentation</h2>
<a id="a33b39c752c191cc1214dc75d03fef688"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a33b39c752c191cc1214dc75d03fef688">&#9670;&nbsp;</a></span>Attributes</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_depthwise_conv2d.xhtml#a33b39c752c191cc1214dc75d03fef688">Attributes</a> =  <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_depthwise_conv2d.xhtml#ae539a668440f0060cfc673e955f788bf">ClComponentDepthwiseConv2d::Attributes</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_template_depthwise_conv2d_8h_source.xhtml#l00041">41</a> of file <a class="el" href="_cl_template_depthwise_conv2d_8h_source.xhtml">ClTemplateDepthwiseConv2d.h</a>.</p>

</div>
</div>
<a id="afb04fb1be5069fb72d5ca765ff2484e3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afb04fb1be5069fb72d5ca765ff2484e3">&#9670;&nbsp;</a></span>Settings</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_depthwise_conv2d.xhtml#afb04fb1be5069fb72d5ca765ff2484e3">Settings</a> =  <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_depthwise_conv2d.xhtml#a03b0a94b67bc162ab8e33fffab3269a0">ClComponentDepthwiseConv2d::Settings</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_template_depthwise_conv2d_8h_source.xhtml#l00042">42</a> of file <a class="el" href="_cl_template_depthwise_conv2d_8h_source.xhtml">ClTemplateDepthwiseConv2d.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a8c19204f224bd9c5e26523ef30333682"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8c19204f224bd9c5e26523ef30333682">&#9670;&nbsp;</a></span>ClTemplateDepthwiseConv2d() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_depthwise_conv2d.xhtml">ClTemplateDepthwiseConv2d</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#afff13da4ff0bb0cd14e24f19743c8225">ComponentId</a>&#160;</td>
          <td class="paramname"><em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_argument_pack.xhtml">ArgumentPack</a>&lt; <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>tensors</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_depthwise_conv2d.xhtml#a33b39c752c191cc1214dc75d03fef688">Attributes</a> &amp;&#160;</td>
          <td class="paramname"><em>attributes</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_depthwise_conv2d.xhtml#afb04fb1be5069fb72d5ca765ff2484e3">Settings</a> &amp;&#160;</td>
          <td class="paramname"><em>settings</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructor. </p>
<p>Similar to <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_depthwise_conv2d.xhtml#ab0614c4d6aa01bfe9898432d426a9adc">ClComponentDepthwiseConv2d::validate()</a></p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">id</td><td>Component id </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">tensors</td><td><a class="el" href="classarm__compute_1_1_tensor.xhtml" title="Basic implementation of the tensor interface.">Tensor</a> arguments to the components </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">attributes</td><td>Component attributes </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">settings</td><td>Component settings </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_cl_template_depthwise_conv2d_8cpp_source.xhtml#l00035">35</a> of file <a class="el" href="_cl_template_depthwise_conv2d_8cpp_source.xhtml">ClTemplateDepthwiseConv2d.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    : <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#aad5a9787ce3cca66f6155f1f2cf14a66">IGpuTemplateComponentWriter</a>{<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a2b1fb10e2eeb3bcea23a8bd60296ca7c">id</a>, <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a6c87c6e19567bc42bc52d166728c4461">tensors</a>},</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;      _src{},</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;      _weight{},</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;      _bias{},</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;      _dst{},</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;      _attributes{attributes},</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;      _settings{settings}</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;{</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    _src    = this-&gt;<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a6c87c6e19567bc42bc52d166728c4461">tensors</a>().get_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5">TensorType::ACL_SRC_0</a>);</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    _weight = this-&gt;<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a6c87c6e19567bc42bc52d166728c4461">tensors</a>().get_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0">TensorType::ACL_SRC_1</a>);</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a6c87c6e19567bc42bc52d166728c4461">tensors</a>().get_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a01cea947a24713975f86d0769bf8fad5">TensorType::ACL_SRC_2</a>))</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    {</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        _bias = this-&gt;<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a6c87c6e19567bc42bc52d166728c4461">tensors</a>().get_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a01cea947a24713975f86d0769bf8fad5">TensorType::ACL_SRC_2</a>);</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    }</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    _dst = this-&gt;<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a6c87c6e19567bc42bc52d166728c4461">tensors</a>().get_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a540ce448c4606321a9e07595de6e4724">TensorType::ACL_DST_0</a>);</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(_src, _weight, _dst);</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_i_gpu_template_component_writer_8h_source.xhtml#l00128">IGpuTemplateComponentWriter::id()</a>, and <a class="el" href="_i_gpu_template_component_writer_8h_source.xhtml#l00123">IGpuTemplateComponentWriter::tensors()</a>.</p>

</div>
</div>
<a id="af7522ce58c049b9d2f938a033bad9911"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af7522ce58c049b9d2f938a033bad9911">&#9670;&nbsp;</a></span>ClTemplateDepthwiseConv2d() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_depthwise_conv2d.xhtml">ClTemplateDepthwiseConv2d</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_depthwise_conv2d.xhtml">ClTemplateDepthwiseConv2d</a> &amp;&#160;</td>
          <td class="paramname"><em>depthwise_conv2d</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class from being copy constructed. </p>

</div>
</div>
<a id="a39f916e1741f006aafed6ab8b18300c9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a39f916e1741f006aafed6ab8b18300c9">&#9670;&nbsp;</a></span>ClTemplateDepthwiseConv2d() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_depthwise_conv2d.xhtml">ClTemplateDepthwiseConv2d</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_depthwise_conv2d.xhtml">ClTemplateDepthwiseConv2d</a> &amp;&amp;&#160;</td>
          <td class="paramname"><em>depthwise_conv2d</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allow instances of this class to be move constructed. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a24095ca4db22e95bd86cd88a8ff28615"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a24095ca4db22e95bd86cd88a8ff28615">&#9670;&nbsp;</a></span>declare_variables()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void declare_variables </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table.xhtml">GpuKernelVariableTable</a> &amp;&#160;</td>
          <td class="paramname"><em>vtable</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a6cda2a0c50524467fbfba048298303ed">ComponentGroup</a> &amp;&#160;</td>
          <td class="paramname"><em>comp_group</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Declare all variables used by the component in the <code>vtable</code>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">vtable</td><td>Variable table </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">comp_group</td><td>Component group of which the component is a part of </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#ab4ca142dbeec40d6a4ab2a0b14b6f72f">IGpuTemplateComponentWriter</a>.</p>

<p class="definition">Definition at line <a class="el" href="_cl_template_depthwise_conv2d_8cpp_source.xhtml#l00201">201</a> of file <a class="el" href="_cl_template_depthwise_conv2d_8cpp_source.xhtml">ClTemplateDepthwiseConv2d.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;{</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info.xhtml#a17016d41439c2e42399cc92d8a95ad1d">GpuKernelArgumentInfo::Type</a> input_type = _settings.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_depthwise_conv2d_settings.xhtml#a139f88d802bff0d8fa0121e5e27da181">export_input_to_cl_image</a>()</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;                                                       ? <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info.xhtml#a17016d41439c2e42399cc92d8a95ad1da89e1a66e65ce2fc93995b94f32d9d928">GpuKernelArgumentInfo::Type::Tensor_4D_t_Image</a></div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;                                                       : <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info.xhtml#a17016d41439c2e42399cc92d8a95ad1daa735f986cc40b7d5c4fd2d5a7ba883fd">GpuKernelArgumentInfo::Type::Tensor_4D_t_Buffer</a>;</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160; </div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    vtable.declare_variable(comp_group, _src, GpuKernelArgumentInfo(input_type), <span class="stringliteral">&quot;src&quot;</span>);</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160; </div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info.xhtml#a17016d41439c2e42399cc92d8a95ad1d">GpuKernelArgumentInfo::Type</a> weight_type = _settings.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_depthwise_conv2d_settings.xhtml#a42f0fa81ebbef236cce85c735960f559">export_weights_to_cl_image</a>()</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;                                                        ? <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info.xhtml#a17016d41439c2e42399cc92d8a95ad1da89e1a66e65ce2fc93995b94f32d9d928">GpuKernelArgumentInfo::Type::Tensor_4D_t_Image</a></div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;                                                        : <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info.xhtml#a17016d41439c2e42399cc92d8a95ad1daa735f986cc40b7d5c4fd2d5a7ba883fd">GpuKernelArgumentInfo::Type::Tensor_4D_t_Buffer</a>;</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160; </div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    vtable.declare_variable(comp_group, _weight, GpuKernelArgumentInfo(weight_type), <span class="stringliteral">&quot;weight&quot;</span>);</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160; </div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    <span class="keywordflow">if</span> (_bias != <span class="keyword">nullptr</span> &amp;&amp; _bias-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#ac3b745acece5fb22971e8888f1d5b4a6">has_valid_id</a>()) <span class="comment">// optional bias</span></div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    {</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;        vtable.declare_variable(comp_group, _bias, GpuKernelArgumentInfo(<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info.xhtml#a17016d41439c2e42399cc92d8a95ad1da57dea6f5039281b7fee517fc43bf3110">GpuKernelArgumentInfo::Type::Vector</a>), <span class="stringliteral">&quot;bias&quot;</span>);</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    }</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    vtable.declare_variable(comp_group, _dst, GpuKernelArgumentInfo(<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info.xhtml#a17016d41439c2e42399cc92d8a95ad1daa735f986cc40b7d5c4fd2d5a7ba883fd">GpuKernelArgumentInfo::Type::Tensor_4D_t_Buffer</a>),</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;                            <span class="stringliteral">&quot;dst&quot;</span>);</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_gpu_kernel_variable_table_8cpp_source.xhtml#l00037">GpuKernelVariableTable::declare_variable()</a>, <a class="el" href="_cl_component_depthwise_conv2d_8cpp_source.xhtml#l00045">ClComponentDepthwiseConv2dSettings::export_input_to_cl_image()</a>, <a class="el" href="_cl_component_depthwise_conv2d_8cpp_source.xhtml#l00056">ClComponentDepthwiseConv2dSettings::export_weights_to_cl_image()</a>, <a class="el" href="_i_tensor_info_8h_source.xhtml#l00313">ITensorInfo::has_valid_id()</a>, <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info.xhtml#a17016d41439c2e42399cc92d8a95ad1daa735f986cc40b7d5c4fd2d5a7ba883fd">GpuKernelArgumentInfo::Tensor_4D_t_Buffer</a>, <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info.xhtml#a17016d41439c2e42399cc92d8a95ad1da89e1a66e65ce2fc93995b94f32d9d928">GpuKernelArgumentInfo::Tensor_4D_t_Image</a>, and <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info.xhtml#a17016d41439c2e42399cc92d8a95ad1da57dea6f5039281b7fee517fc43bf3110">GpuKernelArgumentInfo::Vector</a>.</p>

</div>
</div>
<a id="acd5efd9e0abf91fc8eb0afdbd5cebff2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acd5efd9e0abf91fc8eb0afdbd5cebff2">&#9670;&nbsp;</a></span>get_build_options()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_build_options.xhtml">CLBuildOptions</a> get_build_options </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a6cda2a0c50524467fbfba048298303ed">ComponentGroup</a> &amp;&#160;</td>
          <td class="paramname"><em>comp_group</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Generate the build options used in the component. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">comp_group</td><td>Component group of which the component is a part of</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="classarm__compute_1_1_c_l_build_options.xhtml" title="Build options.">CLBuildOptions</a> Build options </dd></dl>

<p>Reimplemented from <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a0a8d4ac3734eec83ef8ba51d632dd659">IGpuTemplateComponentWriter</a>.</p>

<p class="definition">Definition at line <a class="el" href="_cl_template_depthwise_conv2d_8cpp_source.xhtml#l00294">294</a> of file <a class="el" href="_cl_template_depthwise_conv2d_8cpp_source.xhtml">ClTemplateDepthwiseConv2d.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;{</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(comp_group);</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160; </div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;    constexpr <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1cpu.xhtml#a2daf774ab1f2b95de283245a361d455f">width_idx</a> = 1; <span class="comment">// Data Layout is NHWC</span></div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160; </div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> n0               = _settings.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_depthwise_conv2d_settings.xhtml#ab804ffcbe5ca3251939c728c009fc5c4">n0</a>();</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> m0               = _settings.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_depthwise_conv2d_settings.xhtml#ad3a7c413920b4965589a4c6bd0c65427">m0</a>();</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> m0_a             = _weight-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(<a class="code" href="namespacearm__compute_1_1cpu.xhtml#a2daf774ab1f2b95de283245a361d455f">width_idx</a>) + m0 - 1;</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> n0_a             = _attributes.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_depthwise_conv2d_attributes.xhtml#ab989a468bea06561668008ce18ee754b">depth_multiplier</a>() &gt; 1 ? 1 : n0;</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> partial_store_n0 = _dst-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(0) % n0;</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160; </div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;    CLBuildOptions build_opts{};</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160; </div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;    <span class="keywordflow">if</span> (_settings.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_depthwise_conv2d_settings.xhtml#abfd23d3bab15e59ffab2f27de6fb22c8">fast_relaxed_math</a>())</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;    {</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;        build_opts.add_option(<span class="stringliteral">&quot;-cl-fast-relaxed-math&quot;</span>);</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;    }</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;    {</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;        <span class="comment">// -cl-fast-relaxed-math also sets -cl-finite-math-only and -cl-unsafe-math-optimizations</span></div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;        <span class="comment">// to disable -cl-finite-math-only, we only include -cl-unsafe-math-optimizations</span></div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;        build_opts.add_option(<span class="stringliteral">&quot;-cl-unsafe-math-optimizations&quot;</span>);</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;    }</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160; </div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;    build_opts.add_option(<span class="stringliteral">&quot;-DN0=&quot;</span> + <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(n0));</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;    build_opts.add_option(<span class="stringliteral">&quot;-DM0=&quot;</span> + <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(m0));</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;    build_opts.add_option(<span class="stringliteral">&quot;-DN0_A=&quot;</span> + <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(n0_a));</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;    build_opts.add_option(<span class="stringliteral">&quot;-DM0_A=&quot;</span> + <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(m0_a));</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;    build_opts.add_option(<span class="stringliteral">&quot;-DPARTIAL_N0=&quot;</span> + <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(partial_store_n0));</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160; </div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;    <span class="keywordflow">return</span> build_opts;</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_c_l_compile_context_8cpp_source.xhtml#l00041">CLBuildOptions::add_option()</a>, <a class="el" href="_error_8h_source.xhtml#l00151">ARM_COMPUTE_UNUSED</a>, <a class="el" href="_depthwise_conv2d_attributes_8cpp_source.xhtml#l00061">DepthwiseConv2dAttributes::depth_multiplier()</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">ITensorInfo::dimension()</a>, <a class="el" href="_cl_component_depthwise_conv2d_8cpp_source.xhtml#l00067">ClComponentDepthwiseConv2dSettings::fast_relaxed_math()</a>, <a class="el" href="_cl_component_depthwise_conv2d_8cpp_source.xhtml#l00100">ClComponentDepthwiseConv2dSettings::m0()</a>, <a class="el" href="_cl_component_depthwise_conv2d_8cpp_source.xhtml#l00089">ClComponentDepthwiseConv2dSettings::n0()</a>, <a class="el" href="_string_support_8h_source.xhtml#l00168">arm_compute::support::cpp11::to_string()</a>, and <a class="el" href="depthwiseconv2d_2generic_2neon_2impl_8h_source.xhtml#l00037">arm_compute::cpu::width_idx</a>.</p>

</div>
</div>
<a id="a7812833059e15b739d8dafe7c462df48"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7812833059e15b739d8dafe7c462df48">&#9670;&nbsp;</a></span>get_component_code()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string get_component_code </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a6cda2a0c50524467fbfba048298303ed">ComponentGroup</a> &amp;&#160;</td>
          <td class="paramname"><em>comp_group</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Generate kernel component code template. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">comp_group</td><td>Component group of which the component is a part of</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>std::string Component code </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#aad06f63230f584c0cb20ffbff6779c5e">IGpuTemplateComponentWriter</a>.</p>

<p class="definition">Definition at line <a class="el" href="_cl_template_depthwise_conv2d_8cpp_source.xhtml#l00062">62</a> of file <a class="el" href="_cl_template_depthwise_conv2d_8cpp_source.xhtml">ClTemplateDepthwiseConv2d.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;{</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(comp_group);</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160; </div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    constexpr <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1cpu.xhtml#aa6d92f521dc4f05ac7f4c856dcfe263e">height_idx</a> = 2; <span class="comment">// Data Layout is NHWC</span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160; </div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    std::string code = R<span class="stringliteral">&quot;_(</span></div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="stringliteral">//------------------ START KERNEL {{meta_kernel_id}} ---------------------</span></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="stringliteral">// IN_0(src)            {{src}}</span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="stringliteral">// IN_1(wei)            {{weight}}</span></div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="stringliteral">)_&quot;;</span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="stringliteral">    </span><span class="keywordflow">if</span> (_bias != <span class="keyword">nullptr</span> &amp;&amp; _bias-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#ac3b745acece5fb22971e8888f1d5b4a6">has_valid_id</a>())</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    {</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        code += R<span class="stringliteral">&quot;_(</span></div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="stringliteral">// IN_1(bia)            {{bias}}</span></div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="stringliteral">)_&quot;;</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="stringliteral">    }</span></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="stringliteral">    code += R</span><span class="stringliteral">&quot;_(</span></div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="stringliteral">// OUT(dst, accum)      {{dst}}</span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="stringliteral">TILE(uint, M0, 1, g_dst_indirect_y);</span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="stringliteral">{</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="stringliteral">#define _IWEI_WIDTH {{WEI_WIDTH}}</span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="stringliteral">#define _IWEI_HEIGHT {{WEI_HEIGHT}}</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="stringliteral">#define _IDST_WIDTH {{arg_dst}}_w</span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="stringliteral">#define _IDST_HEIGHT {{arg_dst}}_h</span></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="stringliteral">#define _IM0_A M0_A</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="stringliteral">#define _IN0_A N0_A</span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="stringliteral">#define _IM0_B _IWEI_WIDTH</span></div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="stringliteral">#define _IN0_B N0</span></div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="stringliteral">#define _IBOUNDARY_CHECK (!((_IWEI_WIDTH == 1 &amp;&amp; _IWEI_HEIGHT == 1 &amp;&amp; {{PAD_LEFT}} == 0 &amp;&amp; {{PAD_TOP}} == 0 &amp;&amp; M0 == 1)))</span></div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="stringliteral">)_&quot;;</span></div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="stringliteral">    code += R</span><span class="stringliteral">&quot;_(</span></div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="stringliteral">    const int yo = g_ind_2 % {{arg_dst}}_h;</span></div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="stringliteral">    const int bout = g_ind_2 / {{arg_dst}}_h;</span></div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="stringliteral">)_&quot;;</span></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="stringliteral">    code += R</span><span class="stringliteral">&quot;_(</span></div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="stringliteral">    int xi = g_ind_1 * {{STRIDE_X}};</span></div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="stringliteral">    int yi = yo * {{STRIDE_Y}};</span></div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="stringliteral">    xi -= {{PAD_LEFT}};</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="stringliteral">    yi -= {{PAD_TOP}};</span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="stringliteral">    LOOP_UNROLLING(int, i, 0, 1, M0,</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="stringliteral">    {</span></div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="stringliteral">        {{dst}}[i].v = 0;</span></div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="stringliteral">    })</span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="stringliteral">)_&quot;;</span></div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="stringliteral">    </span><span class="keywordflow">if</span> (_weight-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(<a class="code" href="namespacearm__compute_1_1cpu.xhtml#aa6d92f521dc4f05ac7f4c856dcfe263e">height_idx</a>) &lt; 5)</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    {</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        code += R<span class="stringliteral">&quot;_(</span></div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="stringliteral">    LOOP_UNROLLING(int, yk, 0, 1, _IWEI_HEIGHT,</span></div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="stringliteral">)_&quot;;</span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="stringliteral">    }</span></div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="stringliteral">    </span><span class="keywordflow">else</span></div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    {</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;        code += R<span class="stringliteral">&quot;_(</span></div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="stringliteral">    for(int yk = 0; yk &lt; _IWEI_HEIGHT; ++yk)</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="stringliteral">)_&quot;;</span></div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="stringliteral">    }</span></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="stringliteral">    code += R</span><span class="stringliteral">&quot;_(</span></div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="stringliteral">    {</span></div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="stringliteral">        TILE({{SRC_DATA_TYPE}}, _IM0_A, _IN0_A, a);</span></div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="stringliteral">        LOOP_UNROLLING(int, i, 0, 1, _IM0_A,</span></div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="stringliteral">        {</span></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="stringliteral">            a[i].v = 0;</span></div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="stringliteral">        })</span></div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="stringliteral">        T_LOAD_NHWC_WITH_DILATION({{SRC_DATA_TYPE}}, 1, _IM0_A, _IN0_A, {{SRC_TENSOR_TYPE}}, {{src}}, bout, yi + yk * {{DILATION_Y}}, xi, (g_ind_0 / {{DEPTH_MULTIPLIER}}), {{src}}_w, {{src}}_h, {{DILATION_X}}, 1, _IBOUNDARY_CHECK, a);</span></div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="stringliteral">        TILE({{WEI_DATA_TYPE}}, _IM0_B, _IN0_B, b);</span></div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="stringliteral">        T_LOAD({{WEI_DATA_TYPE}}, _IM0_B, _IN0_B, {{WEI_TENSOR_TYPE}}, {{weight}}, g_ind_0, yk * _IM0_B, 1, {{weight}}_stride_y, b);</span></div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="stringliteral">        LOOP_UNROLLING(int, m0, 0, 1, M0,</span></div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="stringliteral">        {</span></div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="stringliteral">            LOOP_UNROLLING(int, xk, 0, 1, _IWEI_WIDTH,</span></div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="stringliteral">            {</span></div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="stringliteral">)_&quot;;</span></div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="stringliteral">    </span><span class="keywordflow">if</span> (!_settings.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_depthwise_conv2d_settings.xhtml#ac47ecee4ba707f3b1052ed1c30b93900">is_fma_available</a>())</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    {</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        code += R<span class="stringliteral">&quot;_(</span></div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="stringliteral">                {{dst}}[m0].v += a[xk + m0].v * b[xk].v;</span></div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="stringliteral">)_&quot;;</span></div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="stringliteral">    }</span></div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="stringliteral">    </span><span class="keywordflow">else</span></div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    {</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        code += R<span class="stringliteral">&quot;_(</span></div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="stringliteral">                {{dst}}[m0].v = fma(a[xk + m0].v, b[xk].v, {{dst}}[m0].v);</span></div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="stringliteral">)_&quot;;</span></div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="stringliteral">    }</span></div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="stringliteral">    code += R</span><span class="stringliteral">&quot;_(</span></div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="stringliteral">            })</span></div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="stringliteral">        })</span></div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="stringliteral">    }</span></div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="stringliteral">)_&quot;;</span></div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="stringliteral">    </span><span class="keywordflow">if</span> (_weight-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(<a class="code" href="namespacearm__compute_1_1cpu.xhtml#aa6d92f521dc4f05ac7f4c856dcfe263e">height_idx</a>) &lt; 5)</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    {</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;        code += R<span class="stringliteral">&quot;_(</span></div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="stringliteral">    )</span></div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="stringliteral">)_&quot;;</span></div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="stringliteral">    }</span></div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="stringliteral">    </span><span class="keywordflow">if</span> (_bias &amp;&amp; _bias-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#ac3b745acece5fb22971e8888f1d5b4a6">has_valid_id</a>())</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    {</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;        code += R<span class="stringliteral">&quot;_(</span></div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="stringliteral">        TILE({{BIA_DATA_TYPE}}, 1, N0, {{bias}});</span></div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="stringliteral">        T_LOAD({{BIA_DATA_TYPE}}, 1, N0, BUFFER, {{bias}}, g_ind_0, 0, 0, 0, {{bias}});</span></div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<span class="stringliteral">        T_ELTWISE_BROADCAST_ADD_X({{ACC_DATA_TYPE}}, M0, N0, {{dst}}, {{bias}}, {{dst}});</span></div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="stringliteral">)_&quot;;</span></div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="stringliteral">    }</span></div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="stringliteral">    code += R</span><span class="stringliteral">&quot;_(</span></div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="stringliteral">    LOOP_UNROLLING(int, i, 0, 1, M0,</span></div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="stringliteral">    {</span></div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="stringliteral">        g_dst_indirect_y[i].v = (uint)min((int)(g_ind_1 + i), (int)({{arg_dst}}_w) - 1);</span></div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="stringliteral">        g_dst_indirect_y[i].v += (int)(g_ind_2 % {{arg_dst}}_h) * (int)({{arg_dst}}_w);</span></div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="stringliteral">        g_dst_indirect_y[i].v += (int)(g_ind_2 / {{arg_dst}}_h) * (int)({{arg_dst}}_w * {{arg_dst}}_h);</span></div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;<span class="stringliteral">    })</span></div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="stringliteral">}</span></div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;<span class="stringliteral">//------------------ END KERNEL {{meta_kernel_id}} ---------------------</span></div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="stringliteral">)_&quot;;</span></div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="stringliteral">    </span><span class="keywordflow">return</span> code;</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00151">ARM_COMPUTE_UNUSED</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">ITensorInfo::dimension()</a>, <a class="el" href="_i_tensor_info_8h_source.xhtml#l00313">ITensorInfo::has_valid_id()</a>, <a class="el" href="depthwiseconv2d_2generic_2neon_2impl_8h_source.xhtml#l00038">arm_compute::cpu::height_idx</a>, and <a class="el" href="_cl_component_depthwise_conv2d_8cpp_source.xhtml#l00078">ClComponentDepthwiseConv2dSettings::is_fma_available()</a>.</p>

</div>
</div>
<a id="a9c20dda39067d96aa659c5729ccebf34"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9c20dda39067d96aa659c5729ccebf34">&#9670;&nbsp;</a></span>get_config_id()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string get_config_id </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Generate the component config id string used for tuning. </p>

<p>Reimplemented from <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a3acb4e6418931303bfda3962e4d78288">IGpuTemplateComponentWriter</a>.</p>

<p class="definition">Definition at line <a class="el" href="_cl_template_depthwise_conv2d_8cpp_source.xhtml#l00328">328</a> of file <a class="el" href="_cl_template_depthwise_conv2d_8cpp_source.xhtml">ClTemplateDepthwiseConv2d.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;{</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;    std::string config_id{};</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160; </div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;    config_id += <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(_src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(0));</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;    config_id += <span class="stringliteral">&quot;_&quot;</span>;</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;    config_id += <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(_src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(1));</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;    config_id += <span class="stringliteral">&quot;_&quot;</span>;</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;    config_id += <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(_src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(2));</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;    config_id += <span class="stringliteral">&quot;_&quot;</span>;</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;    config_id += <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(_dst-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(0));</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;    config_id += <span class="stringliteral">&quot;_&quot;</span>;</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;    config_id += <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(_dst-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(1));</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;    config_id += <span class="stringliteral">&quot;_&quot;</span>;</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;    config_id += <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(_dst-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(2));</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;    config_id += <span class="stringliteral">&quot;_&quot;</span>;</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;    config_id += <a class="code" href="namespacearm__compute.xhtml#a142b55a483cadf4e1068a1a09a55e8e9">string_from_data_type</a>(_src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>());</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160; </div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;    <span class="keywordflow">return</span> config_id;</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">ITensorInfo::data_type()</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">ITensorInfo::dimension()</a>, <a class="el" href="_data_type_utils_8cpp_source.xhtml#l00031">arm_compute::string_from_data_type()</a>, and <a class="el" href="_string_support_8h_source.xhtml#l00168">arm_compute::support::cpp11::to_string()</a>.</p>

</div>
</div>
<a id="a283deece00423ed5bd0c9486f305a6f4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a283deece00423ed5bd0c9486f305a6f4">&#9670;&nbsp;</a></span>get_headers_list()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::set&lt; std::string &gt; get_headers_list </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Generate the header list used in the component. </p>

<p>Reimplemented from <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#ad7a3eb170866dfc737d0a8842fe47fd1">IGpuTemplateComponentWriter</a>.</p>

<p class="definition">Definition at line <a class="el" href="_cl_template_depthwise_conv2d_8cpp_source.xhtml#l00349">349</a> of file <a class="el" href="_cl_template_depthwise_conv2d_8cpp_source.xhtml">ClTemplateDepthwiseConv2d.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;{</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;    <span class="keywordflow">return</span> std::set&lt;std::string&gt;{<span class="stringliteral">&quot;helpers.h&quot;</span>, <span class="stringliteral">&quot;tile_helpers.h&quot;</span>};</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="aea9b04d36ad2b9a4e1c166589ecb0326"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aea9b04d36ad2b9a4e1c166589ecb0326">&#9670;&nbsp;</a></span>get_name()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string get_name </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Generate kernel component name. </p>

<p>Implements <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a9752bfc9dd39aab02fc9487067abf9a9">IGpuTemplateComponentWriter</a>.</p>

<p class="definition">Definition at line <a class="el" href="_cl_template_depthwise_conv2d_8cpp_source.xhtml#l00057">57</a> of file <a class="el" href="_cl_template_depthwise_conv2d_8cpp_source.xhtml">ClTemplateDepthwiseConv2d.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;{</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <span class="keywordflow">return</span> <span class="stringliteral">&quot;depthwise_conv2d&quot;</span>;</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="add98b8afc43f270c3195a39f47eca5a7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#add98b8afc43f270c3195a39f47eca5a7">&#9670;&nbsp;</a></span>get_tag_lut()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#afacfec8193ed701f3646c22bc2d35455">TagLUT</a> get_tag_lut </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table.xhtml">GpuKernelVariableTable</a> &amp;&#160;</td>
          <td class="paramname"><em>vtable</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a6cda2a0c50524467fbfba048298303ed">ComponentGroup</a> &amp;&#160;</td>
          <td class="paramname"><em>comp_group</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Generate the tag look-up table used to instantiate the component code. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">vtable</td><td>Variable table </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">comp_group</td><td>Component group of which the component is a part of</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>TagLUT Tag lookup table </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#aead1fdded337d81d7f18473d4dd7fbb3">IGpuTemplateComponentWriter</a>.</p>

<p class="definition">Definition at line <a class="el" href="_cl_template_depthwise_conv2d_8cpp_source.xhtml#l00224">224</a> of file <a class="el" href="_cl_template_depthwise_conv2d_8cpp_source.xhtml">ClTemplateDepthwiseConv2d.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;{</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#afacfec8193ed701f3646c22bc2d35455">TagLUT</a> lut{};</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160; </div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    <span class="comment">// Arguments and global shared variables</span></div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    lut[<span class="stringliteral">&quot;src&quot;</span>]    = vtable.get_variable(_src);</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    lut[<span class="stringliteral">&quot;weight&quot;</span>] = vtable.get_variable(_weight);</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160; </div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    <span class="keywordflow">if</span> (_bias != <span class="keyword">nullptr</span> &amp;&amp; _bias-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#ac3b745acece5fb22971e8888f1d5b4a6">has_valid_id</a>()) <span class="comment">// optional bias</span></div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    {</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;        lut[<span class="stringliteral">&quot;bias&quot;</span>]          = vtable.get_variable(_bias);</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;        lut[<span class="stringliteral">&quot;BIA_DATA_TYPE&quot;</span>] = <a class="code" href="namespacearm__compute.xhtml#a545eeda2eaa3f5a54345ce8169e21184">get_cl_type_from_data_type</a>(_bias-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>());</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    }</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;    lut[<span class="stringliteral">&quot;dst&quot;</span>] = vtable.get_variable(_dst);</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160; </div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> dst_argument = vtable.get_variable(comp_group.get_any_dst_tensor());</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    lut[<span class="stringliteral">&quot;arg_dst&quot;</span>]          = dst_argument.uniq_name;</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160; </div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;    <span class="comment">// Local build options</span></div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;    lut[<span class="stringliteral">&quot;meta_kernel_id&quot;</span>] = <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a2b1fb10e2eeb3bcea23a8bd60296ca7c">id</a>();</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;    lut[<span class="stringliteral">&quot;ACC_DATA_TYPE&quot;</span>]  = _src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>();</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    lut[<span class="stringliteral">&quot;SRC_DATA_TYPE&quot;</span>]  = _src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>();</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    lut[<span class="stringliteral">&quot;WEI_DATA_TYPE&quot;</span>]  = _weight-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>();</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160; </div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;    <span class="keywordflow">switch</span> (vtable.get_variable(_src).kernel_argument_info.type)</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    {</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info.xhtml#a17016d41439c2e42399cc92d8a95ad1da836beefb9de19f8c238c707251af46a7">GpuKernelArgumentInfo::Type::Image_Export_To_ClImage2D</a>:</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info.xhtml#a17016d41439c2e42399cc92d8a95ad1da853491c5ec1b4957adf256ed3fbc18e0">GpuKernelArgumentInfo::Type::Image_3D_Export_To_ClImage2D</a>:</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info.xhtml#a17016d41439c2e42399cc92d8a95ad1da89e1a66e65ce2fc93995b94f32d9d928">GpuKernelArgumentInfo::Type::Tensor_4D_t_Image</a>:</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;            lut[<span class="stringliteral">&quot;SRC_TENSOR_TYPE&quot;</span>] = <span class="stringliteral">&quot;IMAGE&quot;</span>;</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;        <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;            lut[<span class="stringliteral">&quot;SRC_TENSOR_TYPE&quot;</span>] = <span class="stringliteral">&quot;BUFFER&quot;</span>;</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    }</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160; </div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    <span class="keywordflow">switch</span> (vtable.get_variable(_weight).kernel_argument_info.type)</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    {</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info.xhtml#a17016d41439c2e42399cc92d8a95ad1da836beefb9de19f8c238c707251af46a7">GpuKernelArgumentInfo::Type::Image_Export_To_ClImage2D</a>:</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info.xhtml#a17016d41439c2e42399cc92d8a95ad1da853491c5ec1b4957adf256ed3fbc18e0">GpuKernelArgumentInfo::Type::Image_3D_Export_To_ClImage2D</a>:</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info.xhtml#a17016d41439c2e42399cc92d8a95ad1da89e1a66e65ce2fc93995b94f32d9d928">GpuKernelArgumentInfo::Type::Tensor_4D_t_Image</a>:</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;            lut[<span class="stringliteral">&quot;WEI_TENSOR_TYPE&quot;</span>] = <span class="stringliteral">&quot;IMAGE&quot;</span>;</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;        <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;            lut[<span class="stringliteral">&quot;WEI_TENSOR_TYPE&quot;</span>] = <span class="stringliteral">&quot;BUFFER&quot;</span>;</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;    }</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160; </div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;    <span class="comment">// Data Layout is NHWC</span></div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;    constexpr <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1cpu.xhtml#a2daf774ab1f2b95de283245a361d455f">width_idx</a>  = 1;</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;    constexpr <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1cpu.xhtml#aa6d92f521dc4f05ac7f4c856dcfe263e">height_idx</a> = 2;</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160; </div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;    lut[<span class="stringliteral">&quot;WEI_WIDTH&quot;</span>]  = _weight-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(<a class="code" href="namespacearm__compute_1_1cpu.xhtml#a2daf774ab1f2b95de283245a361d455f">width_idx</a>);</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;    lut[<span class="stringliteral">&quot;WEI_HEIGHT&quot;</span>] = _weight-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(<a class="code" href="namespacearm__compute_1_1cpu.xhtml#aa6d92f521dc4f05ac7f4c856dcfe263e">height_idx</a>);</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160; </div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;    lut[<span class="stringliteral">&quot;STRIDE_X&quot;</span>] = _attributes.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_depthwise_conv2d_attributes.xhtml#ae99032e67ff2c5e6ae656ba389f9b033">stride</a>().x();</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;    lut[<span class="stringliteral">&quot;STRIDE_Y&quot;</span>] = _attributes.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_depthwise_conv2d_attributes.xhtml#ae99032e67ff2c5e6ae656ba389f9b033">stride</a>().y();</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160; </div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;    lut[<span class="stringliteral">&quot;PAD_LEFT&quot;</span>] = _attributes.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_depthwise_conv2d_attributes.xhtml#a568e9985d56d775bc14a540c3149c265">pad</a>().left;</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    lut[<span class="stringliteral">&quot;PAD_TOP&quot;</span>]  = _attributes.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_depthwise_conv2d_attributes.xhtml#a568e9985d56d775bc14a540c3149c265">pad</a>().top;</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160; </div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;    lut[<span class="stringliteral">&quot;DILATION_X&quot;</span>] = _attributes.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_depthwise_conv2d_attributes.xhtml#a5e575611c6881c022e20dacb0049c93e">dilation</a>().x();</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;    lut[<span class="stringliteral">&quot;DILATION_Y&quot;</span>] = _attributes.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_depthwise_conv2d_attributes.xhtml#a5e575611c6881c022e20dacb0049c93e">dilation</a>().y();</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160; </div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;    lut[<span class="stringliteral">&quot;DEPTH_MULTIPLIER&quot;</span>] = _attributes.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_depthwise_conv2d_attributes.xhtml#ab989a468bea06561668008ce18ee754b">depth_multiplier</a>();</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160; </div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;    <span class="keywordflow">return</span> lut;</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">ITensorInfo::data_type()</a>, <a class="el" href="_depthwise_conv2d_attributes_8cpp_source.xhtml#l00061">DepthwiseConv2dAttributes::depth_multiplier()</a>, <a class="el" href="_depthwise_conv2d_attributes_8cpp_source.xhtml#l00051">DepthwiseConv2dAttributes::dilation()</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">ITensorInfo::dimension()</a>, <a class="el" href="_gpu_kernel_component_group_8cpp_source.xhtml#l00292">GpuKernelComponentGroup::get_any_dst_tensor()</a>, <a class="el" href="core_2_c_l_2_c_l_helpers_8cpp_source.xhtml#l00041">arm_compute::get_cl_type_from_data_type()</a>, <a class="el" href="_gpu_kernel_variable_table_8cpp_source.xhtml#l00076">GpuKernelVariableTable::get_variable()</a>, <a class="el" href="_i_tensor_info_8h_source.xhtml#l00313">ITensorInfo::has_valid_id()</a>, <a class="el" href="depthwiseconv2d_2generic_2neon_2impl_8h_source.xhtml#l00038">arm_compute::cpu::height_idx</a>, <a class="el" href="_i_gpu_template_component_writer_8h_source.xhtml#l00128">IGpuTemplateComponentWriter::id()</a>, <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info.xhtml#a17016d41439c2e42399cc92d8a95ad1da853491c5ec1b4957adf256ed3fbc18e0">GpuKernelArgumentInfo::Image_3D_Export_To_ClImage2D</a>, <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info.xhtml#a17016d41439c2e42399cc92d8a95ad1da836beefb9de19f8c238c707251af46a7">GpuKernelArgumentInfo::Image_Export_To_ClImage2D</a>, <a class="el" href="_gpu_kernel_variable_table_8h_source.xhtml#l00064">GpuKernelVariableTable::TensorVariable::kernel_argument_info</a>, <a class="el" href="_depthwise_conv2d_attributes_8cpp_source.xhtml#l00033">DepthwiseConv2dAttributes::pad()</a>, <a class="el" href="_depthwise_conv2d_attributes_8cpp_source.xhtml#l00042">DepthwiseConv2dAttributes::stride()</a>, <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info.xhtml#a17016d41439c2e42399cc92d8a95ad1da89e1a66e65ce2fc93995b94f32d9d928">GpuKernelArgumentInfo::Tensor_4D_t_Image</a>, <a class="el" href="_gpu_kernel_argument_8h_source.xhtml#l00067">GpuKernelArgumentInfo::type</a>, <a class="el" href="_gpu_kernel_variable_table_8h_source.xhtml#l00063">GpuKernelVariableTable::TensorVariable::uniq_name</a>, and <a class="el" href="depthwiseconv2d_2generic_2neon_2impl_8h_source.xhtml#l00037">arm_compute::cpu::width_idx</a>.</p>

</div>
</div>
<a id="ae744fb5fb66aa1ce9db14ba93eab24e3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae744fb5fb66aa1ce9db14ba93eab24e3">&#9670;&nbsp;</a></span>get_window()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> get_window </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Generate the execution window for the component. </p>

<p>Reimplemented from <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a66df3fbb8781a4dfa011885356e1495f">IGpuTemplateComponentWriter</a>.</p>

<p class="definition">Definition at line <a class="el" href="_cl_template_depthwise_conv2d_8cpp_source.xhtml#l00354">354</a> of file <a class="el" href="_cl_template_depthwise_conv2d_8cpp_source.xhtml">ClTemplateDepthwiseConv2d.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;{</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;    <a class="code" href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a>(_dst-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">tensor_shape</a>().<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml#a0fdcb923dfd4c74858cc2bc326321efb">total_size</a>() == 0U, <span class="stringliteral">&quot;Destination tensor is not initialized&quot;</span>);</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160; </div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;    Window win = <a class="code" href="namespacearm__compute.xhtml#aa84c2eae36ca4b68fa36c226df6f94e7">calculate_max_window</a>(*_dst, Steps(_settings.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_depthwise_conv2d_settings.xhtml#ab804ffcbe5ca3251939c728c009fc5c4">n0</a>(), _settings.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_depthwise_conv2d_settings.xhtml#ad3a7c413920b4965589a4c6bd0c65427">m0</a>()));</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;    <span class="keywordflow">return</span> win.collapse(win, <a class="code" href="classarm__compute_1_1_window.xhtml#a893d17b56b9abc4423ce26e9a24ac5dc">Window::DimZ</a>);</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00456">ARM_COMPUTE_ERROR_ON_MSG</a>, <a class="el" href="_window_helpers_8cpp_source.xhtml#l00029">arm_compute::calculate_max_window()</a>, <a class="el" href="_window_8inl_source.xhtml#l00125">Window::collapse()</a>, <a class="el" href="_window_8h_source.xhtml#l00047">Window::DimZ</a>, <a class="el" href="_cl_component_depthwise_conv2d_8cpp_source.xhtml#l00100">ClComponentDepthwiseConv2dSettings::m0()</a>, <a class="el" href="_cl_component_depthwise_conv2d_8cpp_source.xhtml#l00089">ClComponentDepthwiseConv2dSettings::n0()</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">ITensorInfo::tensor_shape()</a>, <a class="el" href="_tensor_shape_8h_source.xhtml#l00175">TensorShape::total_size()</a>, and <a class="el" href="_saturate_cast_8h_source.xhtml#l00065">arm_compute::utils::cast::U</a>.</p>

</div>
</div>
<a id="ae5526f56c46b4343ac80f84cfbbbc8e2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae5526f56c46b4343ac80f84cfbbbc8e2">&#9670;&nbsp;</a></span>operator=() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_depthwise_conv2d.xhtml">ClTemplateDepthwiseConv2d</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_depthwise_conv2d.xhtml">ClTemplateDepthwiseConv2d</a> &amp;&amp;&#160;</td>
          <td class="paramname"><em>depthwise_conv2d</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allow instances of this class to be moved. </p>

</div>
</div>
<a id="a3d4ad2ff023fc368a298e29b3eac5d41"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3d4ad2ff023fc368a298e29b3eac5d41">&#9670;&nbsp;</a></span>operator=() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_depthwise_conv2d.xhtml">ClTemplateDepthwiseConv2d</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_depthwise_conv2d.xhtml">ClTemplateDepthwiseConv2d</a> &amp;&#160;</td>
          <td class="paramname"><em>depthwise_conv2d</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class from being copied. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>src/dynamic_fusion/sketch/gpu/template_writer/cl/<a class="el" href="_cl_template_depthwise_conv2d_8h_source.xhtml">ClTemplateDepthwiseConv2d.h</a></li>
<li>src/dynamic_fusion/sketch/gpu/template_writer/cl/<a class="el" href="_cl_template_depthwise_conv2d_8cpp_source.xhtml">ClTemplateDepthwiseConv2d.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="anamespacearm__compute_1_1support_1_1cpp11_xhtml_acc5dddee1cbe93a4eaf0a9f74ee96bb7"><div class="ttname"><a href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">arm_compute::support::cpp11::to_string</a></div><div class="ttdeci">std::string to_string(T &amp;&amp;value)</div><div class="ttdoc">Convert integer and float values to string.</div><div class="ttdef"><b>Definition:</b> <a href="_string_support_8h_source.xhtml#l00168">StringSupport.h:168</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_depthwise_conv2d_settings_xhtml_ab804ffcbe5ca3251939c728c009fc5c4"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_depthwise_conv2d_settings.xhtml#ab804ffcbe5ca3251939c728c009fc5c4">arm_compute::experimental::dynamic_fusion::ClComponentDepthwiseConv2dSettings::n0</a></div><div class="ttdeci">ClComponentDepthwiseConv2dSettings &amp; n0(unsigned int n0)</div><div class="ttdoc">Set N0: number of columns processed by each thread.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_component_depthwise_conv2d_8cpp_source.xhtml#l00089">ClComponentDepthwiseConv2d.cpp:89</a></div></div>
<div class="ttc" id="astructarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info_xhtml_a17016d41439c2e42399cc92d8a95ad1da836beefb9de19f8c238c707251af46a7"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info.xhtml#a17016d41439c2e42399cc92d8a95ad1da836beefb9de19f8c238c707251af46a7">arm_compute::experimental::dynamic_fusion::GpuKernelArgumentInfo::Type::Image_Export_To_ClImage2D</a></div><div class="ttdeci">@ Image_Export_To_ClImage2D</div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_info_xhtml_a7c66505457d00ece3aa4b34cab80757d"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">arm_compute::ITensorInfo::tensor_shape</a></div><div class="ttdeci">virtual const TensorShape &amp; tensor_shape() const =0</div><div class="ttdoc">Size for each dimension of the tensor.</div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_depthwise_conv2d_settings_xhtml_a139f88d802bff0d8fa0121e5e27da181"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_depthwise_conv2d_settings.xhtml#a139f88d802bff0d8fa0121e5e27da181">arm_compute::experimental::dynamic_fusion::ClComponentDepthwiseConv2dSettings::export_input_to_cl_image</a></div><div class="ttdeci">ClComponentDepthwiseConv2dSettings &amp; export_input_to_cl_image(bool cl_image)</div><div class="ttdoc">Set export_input_to_cl_image flag.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_component_depthwise_conv2d_8cpp_source.xhtml#l00045">ClComponentDepthwiseConv2d.cpp:45</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_aa84c2eae36ca4b68fa36c226df6f94e7"><div class="ttname"><a href="namespacearm__compute.xhtml#aa84c2eae36ca4b68fa36c226df6f94e7">arm_compute::calculate_max_window</a></div><div class="ttdeci">Window calculate_max_window(const ValidRegion &amp;valid_region, const Steps &amp;steps, bool skip_border, BorderSize border_size)</div><div class="ttdef"><b>Definition:</b> <a href="_window_helpers_8cpp_source.xhtml#l00029">WindowHelpers.cpp:29</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_depthwise_conv2d_settings_xhtml_ad3a7c413920b4965589a4c6bd0c65427"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_depthwise_conv2d_settings.xhtml#ad3a7c413920b4965589a4c6bd0c65427">arm_compute::experimental::dynamic_fusion::ClComponentDepthwiseConv2dSettings::m0</a></div><div class="ttdeci">ClComponentDepthwiseConv2dSettings &amp; m0(unsigned int m0)</div><div class="ttdoc">Set M0: number of rows processed by each thread.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_component_depthwise_conv2d_8cpp_source.xhtml#l00100">ClComponentDepthwiseConv2d.cpp:100</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_afacfec8193ed701f3646c22bc2d35455"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#afacfec8193ed701f3646c22bc2d35455">arm_compute::experimental::dynamic_fusion::TagLUT</a></div><div class="ttdeci">std::unordered_map&lt; Tag, TagVal &gt; TagLUT</div><div class="ttdoc">Tag lookup table.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_kernel_variable_table_8h_source.xhtml#l00130">GpuKernelVariableTable.h:130</a></div></div>
<div class="ttc" id="astructarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info_xhtml_a17016d41439c2e42399cc92d8a95ad1da57dea6f5039281b7fee517fc43bf3110"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info.xhtml#a17016d41439c2e42399cc92d8a95ad1da57dea6f5039281b7fee517fc43bf3110">arm_compute::experimental::dynamic_fusion::GpuKernelArgumentInfo::Type::Vector</a></div><div class="ttdeci">@ Vector</div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer_xhtml_aad5a9787ce3cca66f6155f1f2cf14a66"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#aad5a9787ce3cca66f6155f1f2cf14a66">arm_compute::experimental::dynamic_fusion::IGpuTemplateComponentWriter::IGpuTemplateComponentWriter</a></div><div class="ttdeci">IGpuTemplateComponentWriter(ComponentId id, const ArgumentPack&lt; ITensorInfo &gt; &amp;tensors)</div><div class="ttdoc">Constructor.</div><div class="ttdef"><b>Definition:</b> <a href="_i_gpu_template_component_writer_8h_source.xhtml#l00061">IGpuTemplateComponentWriter.h:61</a></div></div>
<div class="ttc" id="astructarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info_xhtml_a17016d41439c2e42399cc92d8a95ad1da89e1a66e65ce2fc93995b94f32d9d928"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info.xhtml#a17016d41439c2e42399cc92d8a95ad1da89e1a66e65ce2fc93995b94f32d9d928">arm_compute::experimental::dynamic_fusion::GpuKernelArgumentInfo::Type::Tensor_4D_t_Image</a></div><div class="ttdeci">@ Tensor_4D_t_Image</div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_depthwise_conv2d_settings_xhtml_a42f0fa81ebbef236cce85c735960f559"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_depthwise_conv2d_settings.xhtml#a42f0fa81ebbef236cce85c735960f559">arm_compute::experimental::dynamic_fusion::ClComponentDepthwiseConv2dSettings::export_weights_to_cl_image</a></div><div class="ttdeci">ClComponentDepthwiseConv2dSettings &amp; export_weights_to_cl_image(bool cl_image)</div><div class="ttdoc">Set export_weights_to_cl_image flag.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_component_depthwise_conv2d_8cpp_source.xhtml#l00056">ClComponentDepthwiseConv2d.cpp:56</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a142b55a483cadf4e1068a1a09a55e8e9"><div class="ttname"><a href="namespacearm__compute.xhtml#a142b55a483cadf4e1068a1a09a55e8e9">arm_compute::string_from_data_type</a></div><div class="ttdeci">const std::string &amp; string_from_data_type(DataType dt)</div><div class="ttdoc">Convert a data type identity into a string.</div><div class="ttdef"><b>Definition:</b> <a href="_data_type_utils_8cpp_source.xhtml#l00031">DataTypeUtils.cpp:31</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5">arm_compute::ACL_SRC_0</a></div><div class="ttdeci">@ ACL_SRC_0</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00045">Types.h:45</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0">arm_compute::ACL_SRC_1</a></div><div class="ttdeci">@ ACL_SRC_1</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00046">Types.h:46</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a01cea947a24713975f86d0769bf8fad5"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a01cea947a24713975f86d0769bf8fad5">arm_compute::ACL_SRC_2</a></div><div class="ttdeci">@ ACL_SRC_2</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00047">Types.h:47</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_info_xhtml_a178f0d3d87f959e00a743328d95359d2"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">arm_compute::ITensorInfo::dimension</a></div><div class="ttdeci">virtual size_t dimension(size_t index) const =0</div><div class="ttdoc">Return the size of the requested dimension.</div></div>
<div class="ttc" id="aarm__compute_2core_2_validate_8h_xhtml_a921b705e9e3e0fe928928447869e62a5"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_NULLPTR(...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00159">Validate.h:159</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_info_xhtml_ac3b745acece5fb22971e8888f1d5b4a6"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#ac3b745acece5fb22971e8888f1d5b4a6">arm_compute::ITensorInfo::has_valid_id</a></div><div class="ttdeci">bool has_valid_id() const</div><div class="ttdoc">Check if the tensor id is valid.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_info_8h_source.xhtml#l00313">ITensorInfo.h:313</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a540ce448c4606321a9e07595de6e4724"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a540ce448c4606321a9e07595de6e4724">arm_compute::ACL_DST_0</a></div><div class="ttdeci">@ ACL_DST_0</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00056">Types.h:56</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer_xhtml_a6c87c6e19567bc42bc52d166728c4461"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a6c87c6e19567bc42bc52d166728c4461">arm_compute::experimental::dynamic_fusion::IGpuTemplateComponentWriter::tensors</a></div><div class="ttdeci">ArgumentPack&lt; ITensorInfo &gt; tensors() const</div><div class="ttdoc">Get tensor arguments.</div><div class="ttdef"><b>Definition:</b> <a href="_i_gpu_template_component_writer_8h_source.xhtml#l00123">IGpuTemplateComponentWriter.h:123</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a0b0eb3235749a2909dc5a101afe59a1b"><div class="ttname"><a href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_MSG(cond, msg)</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00456">Error.h:456</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_tensor_shape_xhtml_a0fdcb923dfd4c74858cc2bc326321efb"><div class="ttname"><a href="classarm__compute_1_1_tensor_shape.xhtml#a0fdcb923dfd4c74858cc2bc326321efb">arm_compute::TensorShape::total_size</a></div><div class="ttdeci">size_t total_size() const</div><div class="ttdoc">Collapses all dimensions to a single linear total size.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_shape_8h_source.xhtml#l00175">TensorShape.h:175</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_depthwise_conv2d_settings_xhtml_ac47ecee4ba707f3b1052ed1c30b93900"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_depthwise_conv2d_settings.xhtml#ac47ecee4ba707f3b1052ed1c30b93900">arm_compute::experimental::dynamic_fusion::ClComponentDepthwiseConv2dSettings::is_fma_available</a></div><div class="ttdeci">ClComponentDepthwiseConv2dSettings &amp; is_fma_available(bool is_fma_available)</div><div class="ttdoc">Set is_fma_available flag.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_component_depthwise_conv2d_8cpp_source.xhtml#l00078">ClComponentDepthwiseConv2d.cpp:78</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_info_xhtml_a7cfb31af63202568efef5214acfbf3ba"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">arm_compute::ITensorInfo::data_type</a></div><div class="ttdeci">virtual DataType data_type() const =0</div><div class="ttdoc">Data type used for each element of the tensor.</div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer_xhtml_a2b1fb10e2eeb3bcea23a8bd60296ca7c"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a2b1fb10e2eeb3bcea23a8bd60296ca7c">arm_compute::experimental::dynamic_fusion::IGpuTemplateComponentWriter::id</a></div><div class="ttdeci">ComponentId id() const</div><div class="ttdoc">Get component id.</div><div class="ttdef"><b>Definition:</b> <a href="_i_gpu_template_component_writer_8h_source.xhtml#l00128">IGpuTemplateComponentWriter.h:128</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a6dc630a6ae9cc063b3924bcea8dee9d6"><div class="ttname"><a href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a></div><div class="ttdeci">#define ARM_COMPUTE_UNUSED(...)</div><div class="ttdoc">To avoid unused variables warnings.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00151">Error.h:151</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a545eeda2eaa3f5a54345ce8169e21184"><div class="ttname"><a href="namespacearm__compute.xhtml#a545eeda2eaa3f5a54345ce8169e21184">arm_compute::get_cl_type_from_data_type</a></div><div class="ttdeci">std::string get_cl_type_from_data_type(const DataType &amp;dt)</div><div class="ttdoc">Translates a tensor data type to the appropriate OpenCL type.</div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_c_l_helpers_8cpp_source.xhtml#l00041">CLHelpers.cpp:41</a></div></div>
<div class="ttc" id="astructarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info_xhtml_a17016d41439c2e42399cc92d8a95ad1daa735f986cc40b7d5c4fd2d5a7ba883fd"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info.xhtml#a17016d41439c2e42399cc92d8a95ad1daa735f986cc40b7d5c4fd2d5a7ba883fd">arm_compute::experimental::dynamic_fusion::GpuKernelArgumentInfo::Type::Tensor_4D_t_Buffer</a></div><div class="ttdeci">@ Tensor_4D_t_Buffer</div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_depthwise_conv2d_settings_xhtml_abfd23d3bab15e59ffab2f27de6fb22c8"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_depthwise_conv2d_settings.xhtml#abfd23d3bab15e59ffab2f27de6fb22c8">arm_compute::experimental::dynamic_fusion::ClComponentDepthwiseConv2dSettings::fast_relaxed_math</a></div><div class="ttdeci">ClComponentDepthwiseConv2dSettings &amp; fast_relaxed_math(bool fast_relaxed_math)</div><div class="ttdoc">Set fast_relaxed_math flag.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_component_depthwise_conv2d_8cpp_source.xhtml#l00067">ClComponentDepthwiseConv2d.cpp:67</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_depthwise_conv2d_attributes_xhtml_ab989a468bea06561668008ce18ee754b"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_depthwise_conv2d_attributes.xhtml#ab989a468bea06561668008ce18ee754b">arm_compute::experimental::dynamic_fusion::DepthwiseConv2dAttributes::depth_multiplier</a></div><div class="ttdeci">DepthwiseConv2dAttributes &amp; depth_multiplier(const uint32_t &amp;depth_multiplier)</div><div class="ttdoc">Set depth multiplier.</div><div class="ttdef"><b>Definition:</b> <a href="_depthwise_conv2d_attributes_8cpp_source.xhtml#l00061">DepthwiseConv2dAttributes.cpp:61</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_window_xhtml_a893d17b56b9abc4423ce26e9a24ac5dc"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#a893d17b56b9abc4423ce26e9a24ac5dc">arm_compute::Window::DimZ</a></div><div class="ttdeci">static constexpr size_t DimZ</div><div class="ttdoc">Alias for dimension 2 also known as Z dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00047">Window.h:47</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_depthwise_conv2d_attributes_xhtml_a568e9985d56d775bc14a540c3149c265"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_depthwise_conv2d_attributes.xhtml#a568e9985d56d775bc14a540c3149c265">arm_compute::experimental::dynamic_fusion::DepthwiseConv2dAttributes::pad</a></div><div class="ttdeci">DepthwiseConv2dAttributes &amp; pad(const Padding2D &amp;pad)</div><div class="ttdoc">Set padding.</div><div class="ttdef"><b>Definition:</b> <a href="_depthwise_conv2d_attributes_8cpp_source.xhtml#l00033">DepthwiseConv2dAttributes.cpp:33</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1cpu_xhtml_a2daf774ab1f2b95de283245a361d455f"><div class="ttname"><a href="namespacearm__compute_1_1cpu.xhtml#a2daf774ab1f2b95de283245a361d455f">arm_compute::cpu::width_idx</a></div><div class="ttdeci">const size_t width_idx</div><div class="ttdef"><b>Definition:</b> <a href="depthwiseconv2d_2generic_2neon_2impl_8h_source.xhtml#l00037">impl.h:37</a></div></div>
<div class="ttc" id="astructarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info_xhtml_a17016d41439c2e42399cc92d8a95ad1d"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info.xhtml#a17016d41439c2e42399cc92d8a95ad1d">arm_compute::experimental::dynamic_fusion::GpuKernelArgumentInfo::Type</a></div><div class="ttdeci">Type</div><div class="ttdoc">Enumerate all the tensor arguments variants used by all kernel implementations.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_kernel_argument_8h_source.xhtml#l00041">GpuKernelArgument.h:41</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_depthwise_conv2d_attributes_xhtml_a5e575611c6881c022e20dacb0049c93e"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_depthwise_conv2d_attributes.xhtml#a5e575611c6881c022e20dacb0049c93e">arm_compute::experimental::dynamic_fusion::DepthwiseConv2dAttributes::dilation</a></div><div class="ttdeci">DepthwiseConv2dAttributes &amp; dilation(const Size2D &amp;dilation)</div><div class="ttdoc">Set dilation.</div><div class="ttdef"><b>Definition:</b> <a href="_depthwise_conv2d_attributes_8cpp_source.xhtml#l00051">DepthwiseConv2dAttributes.cpp:51</a></div></div>
<div class="ttc" id="astructarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info_xhtml_a17016d41439c2e42399cc92d8a95ad1da853491c5ec1b4957adf256ed3fbc18e0"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info.xhtml#a17016d41439c2e42399cc92d8a95ad1da853491c5ec1b4957adf256ed3fbc18e0">arm_compute::experimental::dynamic_fusion::GpuKernelArgumentInfo::Type::Image_3D_Export_To_ClImage2D</a></div><div class="ttdeci">@ Image_3D_Export_To_ClImage2D</div></div>
<div class="ttc" id="anamespacearm__compute_1_1cpu_xhtml_aa6d92f521dc4f05ac7f4c856dcfe263e"><div class="ttname"><a href="namespacearm__compute_1_1cpu.xhtml#aa6d92f521dc4f05ac7f4c856dcfe263e">arm_compute::cpu::height_idx</a></div><div class="ttdeci">const size_t height_idx</div><div class="ttdef"><b>Definition:</b> <a href="depthwiseconv2d_2generic_2neon_2impl_8h_source.xhtml#l00038">impl.h:38</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_depthwise_conv2d_attributes_xhtml_ae99032e67ff2c5e6ae656ba389f9b033"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_depthwise_conv2d_attributes.xhtml#ae99032e67ff2c5e6ae656ba389f9b033">arm_compute::experimental::dynamic_fusion::DepthwiseConv2dAttributes::stride</a></div><div class="ttdeci">DepthwiseConv2dAttributes &amp; stride(const Size2D &amp;stride)</div><div class="ttdoc">Set stride.</div><div class="ttdef"><b>Definition:</b> <a href="_depthwise_conv2d_attributes_8cpp_source.xhtml#l00042">DepthwiseConv2dAttributes.cpp:42</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1experimental.xhtml">experimental</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">dynamic_fusion</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_depthwise_conv2d.xhtml">ClTemplateDepthwiseConv2d</a></li>
    <li class="footer">Generated on Mon Mar 18 2024 11:32:13 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
