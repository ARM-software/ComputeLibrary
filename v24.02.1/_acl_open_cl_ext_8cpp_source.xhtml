<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/c/cl/AclOpenClExt.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.02.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_acl_open_cl_ext_8cpp_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">AclOpenClExt.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_acl_open_cl_ext_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2021 Arm Limited.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_acl_open_cl_ext_8h.xhtml">arm_compute/AclOpenClExt.h</a>&quot;</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160; </div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_c_l_tensor_8h.xhtml">arm_compute/core/CL/ICLTensor.h</a>&quot;</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160; </div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_tensor_v2_8h.xhtml">src/common/ITensorV2.h</a>&quot;</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="src_2common_2_types_8h.xhtml">src/common/Types.h</a>&quot;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cl_context_8h.xhtml">src/gpu/cl/ClContext.h</a>&quot;</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cl_queue_8h.xhtml">src/gpu/cl/ClQueue.h</a>&quot;</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cast_8h.xhtml">support/Cast.h</a>&quot;</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160; </div>
<div class="line"><a name="l00034"></a><span class="lineno"><a class="line" href="_acl_open_cl_ext_8cpp.xhtml#aa1c6e00f2d666710db99940ed33c9ba7">   34</a></span>&#160;<span class="keyword">extern</span> <span class="stringliteral">&quot;C&quot;</span> <a class="code" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2">AclStatus</a> <a class="code" href="_acl_open_cl_ext_8cpp.xhtml#aa1c6e00f2d666710db99940ed33c9ba7">AclGetClContext</a>(<a class="code" href="struct_acl_context__.xhtml">AclContext</a> external_ctx, cl_context *opencl_context)</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;{</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    <span class="keyword">using namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a>;</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    <a class="code" href="classarm__compute_1_1_i_context.xhtml">IContext</a> *ctx = <a class="code" href="namespacearm__compute.xhtml#af6916ea927eec95c074b917eafc5a667">get_internal</a>(external_ctx);</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160; </div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="namespacearm__compute_1_1detail.xhtml#a47ecd4a65072f2ac3dab46b03e350ee2">detail::validate_internal_context</a>(ctx) != <a class="code" href="namespacearm__compute.xhtml#ae98a46f4ea1a43ca48acaf15d2eb7113a505a83f220c02df2f85c3810cd9ceb38">StatusCode::Success</a>)</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    {</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a00f188d1f6cef6e569b31a95964d26ca">AclStatus::AclInvalidArgument</a>;</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    }</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160; </div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <span class="keywordflow">if</span> (ctx-&gt;<a class="code" href="classarm__compute_1_1_i_context.xhtml#a054cc89f738468abed5544c63c5b6c21">type</a>() != <a class="code" href="namespacearm__compute.xhtml#a31488d29805a596498c0234ae392d35da89242cc7c02b5770d2b8c9e6b42fc3f3">Target::GpuOcl</a>)</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    {</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a92fd9c05491d0e6c9fb94405c8faae11">AclStatus::AclInvalidTarget</a>;</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    }</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160; </div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="keywordflow">if</span> (opencl_context == <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    {</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a00f188d1f6cef6e569b31a95964d26ca">AclStatus::AclInvalidArgument</a>;</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    }</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160; </div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    *opencl_context = utils::cast::polymorphic_downcast&lt;arm_compute::gpu::opencl::ClContext *&gt;(ctx)-&gt;cl_ctx().get();</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160; </div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a5c0200f51580173c58b156cb6c443dce">AclStatus::AclSuccess</a>;</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;}</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160; </div>
<div class="line"><a name="l00059"></a><span class="lineno"><a class="line" href="_acl_open_cl_ext_8cpp.xhtml#afd9da7bbb95ab0677bed12f575f686b2">   59</a></span>&#160;<span class="keyword">extern</span> <span class="stringliteral">&quot;C&quot;</span> <a class="code" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2">AclStatus</a> <a class="code" href="_acl_open_cl_ext_8cpp.xhtml#afd9da7bbb95ab0677bed12f575f686b2">AclSetClContext</a>(<a class="code" href="struct_acl_context__.xhtml">AclContext</a> external_ctx, cl_context opencl_context)</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;{</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <span class="keyword">using namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a>;</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <a class="code" href="classarm__compute_1_1_i_context.xhtml">IContext</a> *ctx = <a class="code" href="namespacearm__compute.xhtml#af6916ea927eec95c074b917eafc5a667">get_internal</a>(external_ctx);</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160; </div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="namespacearm__compute_1_1detail.xhtml#a47ecd4a65072f2ac3dab46b03e350ee2">detail::validate_internal_context</a>(ctx) != <a class="code" href="namespacearm__compute.xhtml#ae98a46f4ea1a43ca48acaf15d2eb7113a505a83f220c02df2f85c3810cd9ceb38">StatusCode::Success</a>)</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    {</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a00f188d1f6cef6e569b31a95964d26ca">AclStatus::AclInvalidArgument</a>;</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    }</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160; </div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <span class="keywordflow">if</span> (ctx-&gt;<a class="code" href="classarm__compute_1_1_i_context.xhtml#a054cc89f738468abed5544c63c5b6c21">type</a>() != <a class="code" href="namespacearm__compute.xhtml#a31488d29805a596498c0234ae392d35da89242cc7c02b5770d2b8c9e6b42fc3f3">Target::GpuOcl</a>)</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    {</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a92fd9c05491d0e6c9fb94405c8faae11">AclStatus::AclInvalidTarget</a>;</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    }</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160; </div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="keywordflow">if</span> (ctx-&gt;<a class="code" href="classarm__compute_1_1_i_context.xhtml#af69eba190b1a2d72856b33fd6b4cc75a">refcount</a>() != 0)</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    {</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a2216553ecd7bef833f5e07fdf31ef6c9">AclStatus::AclUnsupportedConfig</a>;</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    }</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160; </div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <span class="keyword">auto</span> cl_ctx = utils::cast::polymorphic_downcast&lt;arm_compute::gpu::opencl::ClContext *&gt;(ctx);</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <span class="keywordflow">if</span> (!cl_ctx-&gt;set_cl_ctx(::cl::Context(opencl_context)))</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    {</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a7586a308543e75989742667676cb102d">AclStatus::AclRuntimeError</a>;</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    }</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160; </div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a5c0200f51580173c58b156cb6c443dce">AclStatus::AclSuccess</a>;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;}</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160; </div>
<div class="line"><a name="l00088"></a><span class="lineno"><a class="line" href="_acl_open_cl_ext_8cpp.xhtml#a71b5c25eb1694ad0db8f6c34ceb6c4c8">   88</a></span>&#160;<span class="keyword">extern</span> <span class="stringliteral">&quot;C&quot;</span> <a class="code" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2">AclStatus</a> <a class="code" href="_acl_open_cl_ext_8cpp.xhtml#a71b5c25eb1694ad0db8f6c34ceb6c4c8">AclGetClDevice</a>(<a class="code" href="struct_acl_context__.xhtml">AclContext</a> external_ctx, cl_device_id *opencl_device)</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;{</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="keyword">using namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a>;</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <a class="code" href="classarm__compute_1_1_i_context.xhtml">IContext</a> *ctx = <a class="code" href="namespacearm__compute.xhtml#af6916ea927eec95c074b917eafc5a667">get_internal</a>(external_ctx);</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160; </div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="namespacearm__compute_1_1detail.xhtml#a47ecd4a65072f2ac3dab46b03e350ee2">detail::validate_internal_context</a>(ctx) != <a class="code" href="namespacearm__compute.xhtml#ae98a46f4ea1a43ca48acaf15d2eb7113a505a83f220c02df2f85c3810cd9ceb38">StatusCode::Success</a>)</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    {</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a00f188d1f6cef6e569b31a95964d26ca">AclStatus::AclInvalidArgument</a>;</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    }</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160; </div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <span class="keywordflow">if</span> (ctx-&gt;<a class="code" href="classarm__compute_1_1_i_context.xhtml#a054cc89f738468abed5544c63c5b6c21">type</a>() != <a class="code" href="namespacearm__compute.xhtml#a31488d29805a596498c0234ae392d35da89242cc7c02b5770d2b8c9e6b42fc3f3">Target::GpuOcl</a>)</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    {</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a92fd9c05491d0e6c9fb94405c8faae11">AclStatus::AclInvalidTarget</a>;</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    }</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160; </div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <span class="keywordflow">if</span> (opencl_device == <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    {</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a00f188d1f6cef6e569b31a95964d26ca">AclStatus::AclInvalidArgument</a>;</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    }</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160; </div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    *opencl_device = utils::cast::polymorphic_downcast&lt;arm_compute::gpu::opencl::ClContext *&gt;(ctx)-&gt;cl_dev().get();</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160; </div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a5c0200f51580173c58b156cb6c443dce">AclStatus::AclSuccess</a>;</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;}</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160; </div>
<div class="line"><a name="l00113"></a><span class="lineno"><a class="line" href="_acl_open_cl_ext_8cpp.xhtml#a6fa75243ff08a29226b64111b9e4b90f">  113</a></span>&#160;<span class="keyword">extern</span> <span class="stringliteral">&quot;C&quot;</span> <a class="code" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2">AclStatus</a> <a class="code" href="_acl_open_cl_ext_8cpp.xhtml#a6fa75243ff08a29226b64111b9e4b90f">AclGetClQueue</a>(<a class="code" href="struct_acl_queue__.xhtml">AclQueue</a> external_queue, cl_command_queue *opencl_queue)</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;{</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="keyword">using namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a>;</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <a class="code" href="classarm__compute_1_1_i_queue.xhtml">IQueue</a> *queue = <a class="code" href="namespacearm__compute.xhtml#af6916ea927eec95c074b917eafc5a667">get_internal</a>(external_queue);</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160; </div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="namespacearm__compute_1_1detail.xhtml#a855caae729317428d08d661de17d3508">detail::validate_internal_queue</a>(queue) != <a class="code" href="namespacearm__compute.xhtml#ae98a46f4ea1a43ca48acaf15d2eb7113a505a83f220c02df2f85c3810cd9ceb38">StatusCode::Success</a>)</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    {</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a00f188d1f6cef6e569b31a95964d26ca">AclStatus::AclInvalidArgument</a>;</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    }</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160; </div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <span class="keywordflow">if</span> (queue-&gt;<a class="code" href="struct_acl_queue__.xhtml#a04dbd08173d990bff2b3400bffe377eb">header</a>.<a class="code" href="structarm__compute_1_1detail_1_1_header.xhtml#a31e9633356d614461859c601156e0ea2">ctx</a>-&gt;<a class="code" href="classarm__compute_1_1_i_context.xhtml#a054cc89f738468abed5544c63c5b6c21">type</a>() != <a class="code" href="namespacearm__compute.xhtml#a31488d29805a596498c0234ae392d35da89242cc7c02b5770d2b8c9e6b42fc3f3">Target::GpuOcl</a>)</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    {</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a92fd9c05491d0e6c9fb94405c8faae11">AclStatus::AclInvalidTarget</a>;</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    }</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160; </div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    <span class="keywordflow">if</span> (opencl_queue == <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    {</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a00f188d1f6cef6e569b31a95964d26ca">AclStatus::AclInvalidArgument</a>;</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    }</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160; </div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    *opencl_queue = utils::cast::polymorphic_downcast&lt;arm_compute::gpu::opencl::ClQueue *&gt;(queue)-&gt;cl_queue().get();</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160; </div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a5c0200f51580173c58b156cb6c443dce">AclStatus::AclSuccess</a>;</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;}</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160; </div>
<div class="line"><a name="l00138"></a><span class="lineno"><a class="line" href="_acl_open_cl_ext_8cpp.xhtml#a4f9e4107cd43b521ca291226907d02f5">  138</a></span>&#160;<span class="keyword">extern</span> <span class="stringliteral">&quot;C&quot;</span> <a class="code" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2">AclStatus</a> <a class="code" href="_acl_open_cl_ext_8cpp.xhtml#a4f9e4107cd43b521ca291226907d02f5">AclSetClQueue</a>(<a class="code" href="struct_acl_queue__.xhtml">AclQueue</a> external_queue, cl_command_queue opencl_queue)</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;{</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    <span class="keyword">using namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a>;</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <a class="code" href="classarm__compute_1_1_i_queue.xhtml">IQueue</a> *queue = <a class="code" href="namespacearm__compute.xhtml#af6916ea927eec95c074b917eafc5a667">get_internal</a>(external_queue);</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160; </div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="namespacearm__compute_1_1detail.xhtml#a855caae729317428d08d661de17d3508">detail::validate_internal_queue</a>(queue) != <a class="code" href="namespacearm__compute.xhtml#ae98a46f4ea1a43ca48acaf15d2eb7113a505a83f220c02df2f85c3810cd9ceb38">StatusCode::Success</a>)</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    {</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a00f188d1f6cef6e569b31a95964d26ca">AclStatus::AclInvalidArgument</a>;</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    }</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160; </div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    <span class="keywordflow">if</span> (queue-&gt;<a class="code" href="struct_acl_queue__.xhtml#a04dbd08173d990bff2b3400bffe377eb">header</a>.<a class="code" href="structarm__compute_1_1detail_1_1_header.xhtml#a31e9633356d614461859c601156e0ea2">ctx</a>-&gt;<a class="code" href="classarm__compute_1_1_i_context.xhtml#a054cc89f738468abed5544c63c5b6c21">type</a>() != <a class="code" href="namespacearm__compute.xhtml#a31488d29805a596498c0234ae392d35da89242cc7c02b5770d2b8c9e6b42fc3f3">Target::GpuOcl</a>)</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    {</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a92fd9c05491d0e6c9fb94405c8faae11">AclStatus::AclInvalidTarget</a>;</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    }</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160; </div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <span class="keyword">auto</span> cl_queue = utils::cast::polymorphic_downcast&lt;arm_compute::gpu::opencl::ClQueue *&gt;(queue);</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    <span class="keywordflow">if</span> (!cl_queue-&gt;set_cl_queue(::cl::CommandQueue(opencl_queue)))</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    {</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a7586a308543e75989742667676cb102d">AclStatus::AclRuntimeError</a>;</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    }</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160; </div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a5c0200f51580173c58b156cb6c443dce">AclStatus::AclSuccess</a>;</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;}</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160; </div>
<div class="line"><a name="l00162"></a><span class="lineno"><a class="line" href="_acl_open_cl_ext_8cpp.xhtml#ad77e6f103ee4ded4d4635b8d0ddfddb8">  162</a></span>&#160;<span class="keyword">extern</span> <span class="stringliteral">&quot;C&quot;</span> <a class="code" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2">AclStatus</a> <a class="code" href="_acl_open_cl_ext_8cpp.xhtml#ad77e6f103ee4ded4d4635b8d0ddfddb8">AclGetClMem</a>(<a class="code" href="struct_acl_tensor__.xhtml">AclTensor</a> external_tensor, cl_mem *opencl_mem)</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;{</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    <span class="keyword">using namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a>;</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    <a class="code" href="classarm__compute_1_1_i_tensor_v2.xhtml">ITensorV2</a> *<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a> = <a class="code" href="namespacearm__compute.xhtml#af6916ea927eec95c074b917eafc5a667">get_internal</a>(external_tensor);</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160; </div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="namespacearm__compute_1_1detail.xhtml#a9fdf95bf0a83958e5ef2da382806d0a4">detail::validate_internal_tensor</a>(<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>) != <a class="code" href="namespacearm__compute.xhtml#ae98a46f4ea1a43ca48acaf15d2eb7113a505a83f220c02df2f85c3810cd9ceb38">StatusCode::Success</a>)</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    {</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a00f188d1f6cef6e569b31a95964d26ca">AclStatus::AclInvalidArgument</a>;</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    }</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160; </div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>-&gt;header.ctx-&gt;type() != <a class="code" href="namespacearm__compute.xhtml#a31488d29805a596498c0234ae392d35da89242cc7c02b5770d2b8c9e6b42fc3f3">Target::GpuOcl</a>)</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    {</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a92fd9c05491d0e6c9fb94405c8faae11">AclStatus::AclInvalidTarget</a>;</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    }</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160; </div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    <span class="keywordflow">if</span> (opencl_mem == <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    {</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a00f188d1f6cef6e569b31a95964d26ca">AclStatus::AclInvalidArgument</a>;</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    }</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160; </div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    <span class="keyword">auto</span> cl_tensor = utils::cast::polymorphic_downcast&lt;arm_compute::ICLTensor *&gt;(<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>-&gt;tensor());</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    *opencl_mem    = cl_tensor-&gt;cl_buffer().get();</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160; </div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a5c0200f51580173c58b156cb6c443dce">AclStatus::AclSuccess</a>;</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;}</div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="a_acl_open_cl_ext_8cpp_xhtml_a71b5c25eb1694ad0db8f6c34ceb6c4c8"><div class="ttname"><a href="_acl_open_cl_ext_8cpp.xhtml#a71b5c25eb1694ad0db8f6c34ceb6c4c8">AclGetClDevice</a></div><div class="ttdeci">AclStatus AclGetClDevice(AclContext external_ctx, cl_device_id *opencl_device)</div><div class="ttdoc">Extract the underlying OpenCL device id used by a given Compute Library context object.</div><div class="ttdef"><b>Definition:</b> <a href="_acl_open_cl_ext_8cpp_source.xhtml#l00088">AclOpenClExt.cpp:88</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_v2_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_v2.xhtml">arm_compute::ITensorV2</a></div><div class="ttdoc">Base class specifying the tensor interface.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_v2_8h_source.xhtml#l00045">ITensorV2.h:45</a></div></div>
<div class="ttc" id="a_cast_8h_xhtml"><div class="ttname"><a href="_cast_8h.xhtml">Cast.h</a></div></div>
<div class="ttc" id="a_acl_types_8h_xhtml_a9283721ff430c549802798b9909549d2"><div class="ttname"><a href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2">AclStatus</a></div><div class="ttdeci">AclStatus</div><div class="ttdef"><b>Definition:</b> <a href="_acl_types_8h_source.xhtml#l00050">AclTypes.h:50</a></div></div>
<div class="ttc" id="a_i_c_l_tensor_8h_xhtml"><div class="ttname"><a href="_i_c_l_tensor_8h.xhtml">ICLTensor.h</a></div></div>
<div class="ttc" id="a_acl_open_cl_ext_8cpp_xhtml_aa1c6e00f2d666710db99940ed33c9ba7"><div class="ttname"><a href="_acl_open_cl_ext_8cpp.xhtml#aa1c6e00f2d666710db99940ed33c9ba7">AclGetClContext</a></div><div class="ttdeci">AclStatus AclGetClContext(AclContext external_ctx, cl_context *opencl_context)</div><div class="ttdoc">Extract the underlying OpenCL context used by a given Compute Library context object.</div><div class="ttdef"><b>Definition:</b> <a href="_acl_open_cl_ext_8cpp_source.xhtml#l00034">AclOpenClExt.cpp:34</a></div></div>
<div class="ttc" id="a_acl_types_8h_xhtml_a9283721ff430c549802798b9909549d2a5c0200f51580173c58b156cb6c443dce"><div class="ttname"><a href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a5c0200f51580173c58b156cb6c443dce">AclSuccess</a></div><div class="ttdeci">@ AclSuccess</div><div class="ttdoc">Call succeeded, leading to valid state for all involved objects/data.</div><div class="ttdef"><b>Definition:</b> <a href="_acl_types_8h_source.xhtml#l00052">AclTypes.h:52</a></div></div>
<div class="ttc" id="a_cl_context_8h_xhtml"><div class="ttname"><a href="_cl_context_8h.xhtml">ClContext.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_context_xhtml_a054cc89f738468abed5544c63c5b6c21"><div class="ttname"><a href="classarm__compute_1_1_i_context.xhtml#a054cc89f738468abed5544c63c5b6c21">arm_compute::IContext::type</a></div><div class="ttdeci">Target type() const</div><div class="ttdoc">Target type accessor.</div><div class="ttdef"><b>Definition:</b> <a href="_i_context_8h_source.xhtml#l00066">IContext.h:66</a></div></div>
<div class="ttc" id="a_acl_open_cl_ext_8cpp_xhtml_a6fa75243ff08a29226b64111b9e4b90f"><div class="ttname"><a href="_acl_open_cl_ext_8cpp.xhtml#a6fa75243ff08a29226b64111b9e4b90f">AclGetClQueue</a></div><div class="ttdeci">AclStatus AclGetClQueue(AclQueue external_queue, cl_command_queue *opencl_queue)</div><div class="ttdoc">Extract the underlying OpenCL queue used by a given Compute Library queue object.</div><div class="ttdef"><b>Definition:</b> <a href="_acl_open_cl_ext_8cpp_source.xhtml#l00113">AclOpenClExt.cpp:113</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ae98a46f4ea1a43ca48acaf15d2eb7113a505a83f220c02df2f85c3810cd9ceb38"><div class="ttname"><a href="namespacearm__compute.xhtml#ae98a46f4ea1a43ca48acaf15d2eb7113a505a83f220c02df2f85c3810cd9ceb38">arm_compute::StatusCode::Success</a></div><div class="ttdeci">@ Success</div></div>
<div class="ttc" id="a_acl_types_8h_xhtml_a9283721ff430c549802798b9909549d2a2216553ecd7bef833f5e07fdf31ef6c9"><div class="ttname"><a href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a2216553ecd7bef833f5e07fdf31ef6c9">AclUnsupportedConfig</a></div><div class="ttdeci">@ AclUnsupportedConfig</div><div class="ttdoc">Call failed as configuration is unsupported.</div><div class="ttdef"><b>Definition:</b> <a href="_acl_types_8h_source.xhtml#l00059">AclTypes.h:59</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_queue_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_queue.xhtml">arm_compute::IQueue</a></div><div class="ttdoc">Base class specifying the queue interface.</div><div class="ttdef"><b>Definition:</b> <a href="_i_queue_8h_source.xhtml#l00041">IQueue.h:41</a></div></div>
<div class="ttc" id="a_acl_open_cl_ext_8cpp_xhtml_a4f9e4107cd43b521ca291226907d02f5"><div class="ttname"><a href="_acl_open_cl_ext_8cpp.xhtml#a4f9e4107cd43b521ca291226907d02f5">AclSetClQueue</a></div><div class="ttdeci">AclStatus AclSetClQueue(AclQueue external_queue, cl_command_queue opencl_queue)</div><div class="ttdoc">Set the underlying OpenCL queue to be used by a given Compute Library queue object.</div><div class="ttdef"><b>Definition:</b> <a href="_acl_open_cl_ext_8cpp_source.xhtml#l00138">AclOpenClExt.cpp:138</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_context_xhtml_af69eba190b1a2d72856b33fd6b4cc75a"><div class="ttname"><a href="classarm__compute_1_1_i_context.xhtml#af69eba190b1a2d72856b33fd6b4cc75a">arm_compute::IContext::refcount</a></div><div class="ttdeci">int refcount() const</div><div class="ttdoc">Reference counter accessor.</div><div class="ttdef"><b>Definition:</b> <a href="_i_context_8h_source.xhtml#l00084">IContext.h:84</a></div></div>
<div class="ttc" id="a_acl_open_cl_ext_8h_xhtml"><div class="ttname"><a href="_acl_open_cl_ext_8h.xhtml">AclOpenClExt.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_context_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_context.xhtml">arm_compute::IContext</a></div><div class="ttdoc">Context interface.</div><div class="ttdef"><b>Definition:</b> <a href="_i_context_8h_source.xhtml#l00051">IContext.h:51</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1detail_xhtml_a47ecd4a65072f2ac3dab46b03e350ee2"><div class="ttname"><a href="namespacearm__compute_1_1detail.xhtml#a47ecd4a65072f2ac3dab46b03e350ee2">arm_compute::detail::validate_internal_context</a></div><div class="ttdeci">StatusCode validate_internal_context(const IContext *ctx)</div><div class="ttdoc">Check if an internal context is valid.</div><div class="ttdef"><b>Definition:</b> <a href="_i_context_8h_source.xhtml#l00140">IContext.h:140</a></div></div>
<div class="ttc" id="a_acl_open_cl_ext_8cpp_xhtml_ad77e6f103ee4ded4d4635b8d0ddfddb8"><div class="ttname"><a href="_acl_open_cl_ext_8cpp.xhtml#ad77e6f103ee4ded4d4635b8d0ddfddb8">AclGetClMem</a></div><div class="ttdeci">AclStatus AclGetClMem(AclTensor external_tensor, cl_mem *opencl_mem)</div><div class="ttdoc">Extract the underlying OpenCL memory object by a given Compute Library tensor object.</div><div class="ttdef"><b>Definition:</b> <a href="_acl_open_cl_ext_8cpp_source.xhtml#l00162">AclOpenClExt.cpp:162</a></div></div>
<div class="ttc" id="a_acl_types_8h_xhtml_a9283721ff430c549802798b9909549d2a92fd9c05491d0e6c9fb94405c8faae11"><div class="ttname"><a href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a92fd9c05491d0e6c9fb94405c8faae11">AclInvalidTarget</a></div><div class="ttdeci">@ AclInvalidTarget</div><div class="ttdoc">Call failed as invalid argument was passed.</div><div class="ttdef"><b>Definition:</b> <a href="_acl_types_8h_source.xhtml#l00057">AclTypes.h:57</a></div></div>
<div class="ttc" id="a_acl_types_8h_xhtml_a9283721ff430c549802798b9909549d2a7586a308543e75989742667676cb102d"><div class="ttname"><a href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a7586a308543e75989742667676cb102d">AclRuntimeError</a></div><div class="ttdeci">@ AclRuntimeError</div><div class="ttdoc">Call failed during execution.</div><div class="ttdef"><b>Definition:</b> <a href="_acl_types_8h_source.xhtml#l00053">AclTypes.h:53</a></div></div>
<div class="ttc" id="astructarm__compute_1_1detail_1_1_header_xhtml_a31e9633356d614461859c601156e0ea2"><div class="ttname"><a href="structarm__compute_1_1detail_1_1_header.xhtml#a31e9633356d614461859c601156e0ea2">arm_compute::detail::Header::ctx</a></div><div class="ttdeci">IContext * ctx</div><div class="ttdef"><b>Definition:</b> <a href="_object_8h_source.xhtml#l00060">Object.h:60</a></div></div>
<div class="ttc" id="a_cl_workload_runtime_8cpp_xhtml_a5555e1497e9b84ade322d8ad8b503598"><div class="ttname"><a href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a></div><div class="ttdeci">CLTensor * tensor</div><div class="ttdoc">Pointer to the auxiliary tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_runtime_8cpp_source.xhtml#l00067">ClWorkloadRuntime.cpp:67</a></div></div>
<div class="ttc" id="a_i_tensor_v2_8h_xhtml"><div class="ttname"><a href="_i_tensor_v2_8h.xhtml">ITensorV2.h</a></div></div>
<div class="ttc" id="a_acl_types_8h_xhtml_a9283721ff430c549802798b9909549d2a00f188d1f6cef6e569b31a95964d26ca"><div class="ttname"><a href="_acl_types_8h.xhtml#a9283721ff430c549802798b9909549d2a00f188d1f6cef6e569b31a95964d26ca">AclInvalidArgument</a></div><div class="ttdeci">@ AclInvalidArgument</div><div class="ttdoc">Call failed as invalid argument was passed.</div><div class="ttdef"><b>Definition:</b> <a href="_acl_types_8h_source.xhtml#l00058">AclTypes.h:58</a></div></div>
<div class="ttc" id="astruct_acl_tensor___xhtml"><div class="ttname"><a href="struct_acl_tensor__.xhtml">AclTensor_</a></div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_v2_8h_source.xhtml#l00030">ITensorV2.h:30</a></div></div>
<div class="ttc" id="a_acl_open_cl_ext_8cpp_xhtml_afd9da7bbb95ab0677bed12f575f686b2"><div class="ttname"><a href="_acl_open_cl_ext_8cpp.xhtml#afd9da7bbb95ab0677bed12f575f686b2">AclSetClContext</a></div><div class="ttdeci">AclStatus AclSetClContext(AclContext external_ctx, cl_context opencl_context)</div><div class="ttdoc">Set the underlying OpenCL context to be used by a given Compute Library context object.</div><div class="ttdef"><b>Definition:</b> <a href="_acl_open_cl_ext_8cpp_source.xhtml#l00059">AclOpenClExt.cpp:59</a></div></div>
<div class="ttc" id="astruct_acl_queue___xhtml_a04dbd08173d990bff2b3400bffe377eb"><div class="ttname"><a href="struct_acl_queue__.xhtml#a04dbd08173d990bff2b3400bffe377eb">AclQueue_::header</a></div><div class="ttdeci">arm_compute::detail::Header header</div><div class="ttdef"><b>Definition:</b> <a href="_i_queue_8h_source.xhtml#l00031">IQueue.h:31</a></div></div>
<div class="ttc" id="asrc_2common_2_types_8h_xhtml"><div class="ttname"><a href="src_2common_2_types_8h.xhtml">Types.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2024 Arm Limited.</div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1detail_xhtml_a9fdf95bf0a83958e5ef2da382806d0a4"><div class="ttname"><a href="namespacearm__compute_1_1detail.xhtml#a9fdf95bf0a83958e5ef2da382806d0a4">arm_compute::detail::validate_internal_tensor</a></div><div class="ttdeci">StatusCode validate_internal_tensor(const ITensorV2 *tensor)</div><div class="ttdoc">Check if an internal tensor is valid.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_v2_8h_source.xhtml#l00128">ITensorV2.h:128</a></div></div>
<div class="ttc" id="astruct_acl_queue___xhtml"><div class="ttname"><a href="struct_acl_queue__.xhtml">AclQueue_</a></div><div class="ttdef"><b>Definition:</b> <a href="_i_queue_8h_source.xhtml#l00029">IQueue.h:29</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_af6916ea927eec95c074b917eafc5a667"><div class="ttname"><a href="namespacearm__compute.xhtml#af6916ea927eec95c074b917eafc5a667">arm_compute::get_internal</a></div><div class="ttdeci">IContext * get_internal(AclContext ctx)</div><div class="ttdoc">Extract internal representation of a Context.</div><div class="ttdef"><b>Definition:</b> <a href="_i_context_8h_source.xhtml#l00127">IContext.h:127</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a31488d29805a596498c0234ae392d35da89242cc7c02b5770d2b8c9e6b42fc3f3"><div class="ttname"><a href="namespacearm__compute.xhtml#a31488d29805a596498c0234ae392d35da89242cc7c02b5770d2b8c9e6b42fc3f3">arm_compute::Target::GpuOcl</a></div><div class="ttdeci">@ GpuOcl</div></div>
<div class="ttc" id="astruct_acl_context___xhtml"><div class="ttname"><a href="struct_acl_context__.xhtml">AclContext_</a></div><div class="ttdef"><b>Definition:</b> <a href="_i_context_8h_source.xhtml#l00034">IContext.h:34</a></div></div>
<div class="ttc" id="a_cl_queue_8h_xhtml"><div class="ttname"><a href="_cl_queue_8h.xhtml">ClQueue.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1detail_xhtml_a855caae729317428d08d661de17d3508"><div class="ttname"><a href="namespacearm__compute_1_1detail.xhtml#a855caae729317428d08d661de17d3508">arm_compute::detail::validate_internal_queue</a></div><div class="ttdeci">StatusCode validate_internal_queue(const IQueue *queue)</div><div class="ttdoc">Check if an internal queue is valid.</div><div class="ttdef"><b>Definition:</b> <a href="_i_queue_8h_source.xhtml#l00089">IQueue.h:89</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_3b19ecf29356981f494745fbef7e56bf.xhtml">c</a></li><li class="navelem"><a class="el" href="dir_6be4cd559a5c9d338ece913d130bae75.xhtml">cl</a></li><li class="navelem"><a class="el" href="_acl_open_cl_ext_8cpp.xhtml">AclOpenClExt.cpp</a></li>
    <li class="footer">Generated on Mon Mar 18 2024 11:31:56 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
