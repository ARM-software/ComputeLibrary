<!-- HTML header for doxygen 1.8.9.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: tests/framework/Framework.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Compute Library
   &#160;<span id="projectnumber">17.12</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>Globals</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_framework_8h_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">Framework.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_framework_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2017 ARM Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifndef ARM_COMPUTE_TEST_FRAMEWORK</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#define ARM_COMPUTE_TEST_FRAMEWORK</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_dataset_modes_8h.xhtml">DatasetModes.h</a>&quot;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_exceptions_8h.xhtml">Exceptions.h</a>&quot;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_profiler_8h.xhtml">Profiler.h</a>&quot;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_test_case_8h.xhtml">TestCase.h</a>&quot;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_test_case_factory_8h.xhtml">TestCaseFactory.h</a>&quot;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_test_filter_8h.xhtml">TestFilter.h</a>&quot;</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_test_result_8h.xhtml">TestResult.h</a>&quot;</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="tests_2framework_2_utils_8h.xhtml">Utils.h</a>&quot;</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_instruments_8h.xhtml">instruments/Instruments.h</a>&quot;</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_printer_8h.xhtml">printers/Printer.h</a>&quot;</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="preprocessor">#include &lt;algorithm&gt;</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="preprocessor">#include &lt;chrono&gt;</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="preprocessor">#include &lt;map&gt;</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="preprocessor">#include &lt;memory&gt;</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="preprocessor">#include &lt;numeric&gt;</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="preprocessor">#include &lt;ostream&gt;</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="preprocessor">#include &lt;regex&gt;</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="preprocessor">#include &lt;set&gt;</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="preprocessor">#include &lt;sstream&gt;</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="preprocessor">#include &lt;tuple&gt;</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;{</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="keyword">namespace </span>test</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;{</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="keyword">namespace </span>framework</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;{</div><div class="line"><a name="l00066"></a><span class="lineno"><a class="line" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml">   66</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml">TestInfo</a></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;{</div><div class="line"><a name="l00068"></a><span class="lineno"><a class="line" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml#a7441ef0865bcb3db9b8064dd7375c1ea">   68</a></span>&#160;    <span class="keywordtype">int</span>                     <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml#a7441ef0865bcb3db9b8064dd7375c1ea">id</a>;</div><div class="line"><a name="l00069"></a><span class="lineno"><a class="line" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml#a9b45b3e13bd9167aab02e17e08916231">   69</a></span>&#160;    std::string             <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml#a9b45b3e13bd9167aab02e17e08916231">name</a>;</div><div class="line"><a name="l00070"></a><span class="lineno"><a class="line" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml#aadbc5003f5cc399930b16ddb89b16cdc">   70</a></span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cf">DatasetMode</a>             <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml#aadbc5003f5cc399930b16ddb89b16cdc">mode</a>;</div><div class="line"><a name="l00071"></a><span class="lineno"><a class="line" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml#a9e590b7d913d38286ab0916c38bb600f">   71</a></span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_test_case_factory.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70b">TestCaseFactory::Status</a> <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml#a9e590b7d913d38286ab0916c38bb600f">status</a>;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;};</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1framework.xhtml#a9ec753fd569ec1bf169e26013898eb4a">   74</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">bool</span> <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a9ec753fd569ec1bf169e26013898eb4a">operator&lt;</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml">TestInfo</a> &amp;lhs, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml">TestInfo</a> &amp;rhs)</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;{</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <span class="keywordflow">return</span> lhs.<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml#a7441ef0865bcb3db9b8064dd7375c1ea">id</a> &lt; rhs.<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml#a7441ef0865bcb3db9b8064dd7375c1ea">id</a>;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;}</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml">   83</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml">Framework</a> final</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;{</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="keyword">static</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml">Framework</a> &amp;<span class="keyword">get</span>();</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    std::set&lt;InstrumentsDescription&gt; available_instruments() <span class="keyword">const</span>;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <span class="keywordtype">void</span> init(<span class="keyword">const</span> std::vector&lt;framework::InstrumentsDescription&gt; &amp;instruments, <span class="keywordtype">int</span> num_iterations, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cf">DatasetMode</a> <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml#aadbc5003f5cc399930b16ddb89b16cdc">mode</a>, <span class="keyword">const</span> std::string &amp;name_filter, <span class="keyword">const</span> std::string &amp;id_filter, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9">LogLevel</a> log_level);</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="keywordtype">void</span> push_suite(std::string <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml#a9b45b3e13bd9167aab02e17e08916231">name</a>);</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    <span class="keywordtype">void</span> pop_suite();</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    <span class="keywordtype">void</span> add_test_case(std::string test_name, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cf">DatasetMode</a> mode, <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_test_case_factory.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70b">TestCaseFactory::Status</a> <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml#a9e590b7d913d38286ab0916c38bb600f">status</a>);</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> D&gt;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    <span class="keywordtype">void</span> add_data_test_case(std::string test_name, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cf">DatasetMode</a> mode, <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_test_case_factory.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70b">TestCaseFactory::Status</a> status, std::string description, D &amp;&amp;data);</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <span class="keywordtype">void</span> add_test_info(std::string <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a096668313a9a819d54a2e65ec21ff0cc">info</a>);</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    <span class="keywordtype">void</span> clear_test_info();</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    <span class="keywordtype">bool</span> has_test_info() <span class="keyword">const</span>;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    <span class="keywordtype">void</span> print_test_info(std::ostream &amp;os) <span class="keyword">const</span>;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    <span class="keywordtype">void</span> log_test_start(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml">TestInfo</a> &amp;info);</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    <span class="keywordtype">void</span> log_test_skipped(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml">TestInfo</a> &amp;info);</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    <span class="keywordtype">void</span> log_test_end(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml">TestInfo</a> &amp;info);</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    <span class="keywordtype">void</span> log_failed_expectation(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_test_error.xhtml">TestError</a> &amp;<a class="code" href="namespacearm__compute.xhtml#a568b0fbfa3d903099d9c9f7b6acf188d">error</a>);</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    <span class="keywordtype">void</span> log_info(<span class="keyword">const</span> std::string &amp;info);</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    <span class="keywordtype">int</span> num_iterations() <span class="keyword">const</span>;</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    <span class="keywordtype">void</span> set_num_iterations(<span class="keywordtype">int</span> num_iterations);</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    <span class="keywordtype">bool</span> throw_errors() <span class="keyword">const</span>;</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    <span class="keywordtype">void</span> set_throw_errors(<span class="keywordtype">bool</span> throw_errors);</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    <span class="keywordtype">bool</span> stop_on_error() <span class="keyword">const</span>;</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    <span class="keywordtype">void</span> set_stop_on_error(<span class="keywordtype">bool</span> stop_on_error);</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;    <span class="keywordtype">bool</span> error_on_missing_assets() <span class="keyword">const</span>;</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    <span class="keywordtype">void</span> set_error_on_missing_assets(<span class="keywordtype">bool</span> error_on_missing_assets);</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    <span class="keywordtype">bool</span> run();</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    <span class="keywordtype">void</span> set_test_result(<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml">TestInfo</a> info, <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_result.xhtml">TestResult</a> result);</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;    <span class="keywordtype">void</span> print_test_results(<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml">Printer</a> &amp;printer) <span class="keyword">const</span>;</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_profiler.xhtml">Profiler</a> get_profiler() <span class="keyword">const</span>;</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;    <span class="keywordtype">void</span> add_printer(<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml">Printer</a> *printer);</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;    std::vector&lt;TestInfo&gt; test_infos() <span class="keyword">const</span>;</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9">LogLevel</a> log_level() <span class="keyword">const</span>;</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml">Framework</a>();</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;    ~<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml">Framework</a>() = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml">Framework</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml">Framework</a> &amp;) = <span class="keyword">delete</span>;</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml">Framework</a> &amp;operator=(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml">Framework</a> &amp;) = <span class="keyword">delete</span>;</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;    <span class="keywordtype">void</span> run_test(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml">TestInfo</a> &amp;info, <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_test_case_factory.xhtml">TestCaseFactory</a> &amp;test_factory);</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;    std::map&lt;TestResult::Status, int&gt; count_test_results() <span class="keyword">const</span>;</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;    std::string current_suite_name() <span class="keyword">const</span>;</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;    <span class="comment">/* Perform func on all printers */</span></div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> F&gt;</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;    <span class="keywordtype">void</span> func_on_all_printers(F &amp;&amp;func);</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;    std::vector&lt;std::string&gt;                      _test_suite_name{};</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;    std::vector&lt;std::unique_ptr&lt;TestCaseFactory&gt;&gt; _test_factories{};</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;    std::map&lt;TestInfo, TestResult&gt; _test_results{};</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;    <span class="keywordtype">int</span>                    _num_iterations{ 1 };</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;    <span class="keywordtype">bool</span>                   _throw_errors{ <span class="keyword">false</span> };</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;    <span class="keywordtype">bool</span>                   _stop_on_error{ <span class="keyword">false</span> };</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;    <span class="keywordtype">bool</span>                   _error_on_missing_assets{ <span class="keyword">false</span> };</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;    std::vector&lt;Printer *&gt; _printers{};</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;    <span class="keyword">using</span> create_function = std::unique_ptr&lt;Instrument&gt;();</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;    std::map&lt;InstrumentsDescription, create_function *&gt; _available_instruments{};</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;    std::set&lt;framework::InstrumentsDescription&gt; _instruments{ std::pair&lt;InstrumentType, ScaleFactor&gt;(<a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9ab50339a10e1de285ac99d4c3990b8693">InstrumentType::NONE</a>, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9ab50339a10e1de285ac99d4c3990b8693">ScaleFactor::NONE</a>) };</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_test_filter.xhtml">TestFilter</a>                                  _test_filter{};</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9">LogLevel</a>                                    _log_level{ <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfa5fb1f955b45e38e31789286a1790398d">LogLevel::ALL</a> };</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;    <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml">TestInfo</a>                             *_current_test_info{ <span class="keyword">nullptr</span> };</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;    <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_result.xhtml">TestResult</a>                                 *_current_test_result{ <span class="keyword">nullptr</span> };</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;    std::vector&lt;std::string&gt;                    _test_info{};</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;};</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00342"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#ad8e7764125fcd790e0b151d26cfe949c">  342</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#ad8e7764125fcd790e0b151d26cfe949c">Framework::add_test_case</a>(std::string test_name, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cf">DatasetMode</a> <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml#aadbc5003f5cc399930b16ddb89b16cdc">mode</a>, <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_test_case_factory.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70b">TestCaseFactory::Status</a> <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml#a9e590b7d913d38286ab0916c38bb600f">status</a>)</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;{</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;    _test_factories.emplace_back(<a class="code" href="namespacearm__compute_1_1support_1_1cpp14.xhtml#a94d8ad03db9ccb2005b06858856d0a4c">support::cpp14::make_unique</a>&lt;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_simple_test_case_factory.xhtml">SimpleTestCaseFactory&lt;T&gt;</a>&gt;(current_suite_name(), std::move(test_name), mode, status));</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;}</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> D&gt;</div><div class="line"><a name="l00348"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#aff39a3b89865624b6579d6980fb88654">  348</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#aff39a3b89865624b6579d6980fb88654">Framework::add_data_test_case</a>(std::string test_name, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cf">DatasetMode</a> <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml#aadbc5003f5cc399930b16ddb89b16cdc">mode</a>, <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_test_case_factory.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70b">TestCaseFactory::Status</a> <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml#a9e590b7d913d38286ab0916c38bb600f">status</a>, std::string description, D &amp;&amp;data)</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;{</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;    <span class="comment">// WORKAROUND for GCC 4.9</span></div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;    <span class="comment">// The function should get *it which is tuple but that seems to trigger a</span></div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;    <span class="comment">// bug in the compiler.</span></div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;    <span class="keyword">auto</span> tmp = std::unique_ptr&lt;DataTestCaseFactory&lt;T, decltype(*std::declval&lt;D&gt;())&gt;&gt;(<span class="keyword">new</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_data_test_case_factory.xhtml">DataTestCaseFactory&lt;T, decltype(*std::declval&lt;D&gt;</a>())&gt;(current_suite_name(), std::move(test_name), <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml#aadbc5003f5cc399930b16ddb89b16cdc">mode</a>, <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml#a9e590b7d913d38286ab0916c38bb600f">status</a>,</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;                                                                                     std::move(description), *data));</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;    _test_factories.emplace_back(std::move(tmp));</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;}</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;} <span class="comment">// namespace framework</span></div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;} <span class="comment">// namespace test</span></div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;} <span class="comment">// namespace arm_compute</span></div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* ARM_COMPUTE_TEST_FRAMEWORK */</span><span class="preprocessor"></span></div><div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_test_case_factory_xhtml_a67a0db04d321a74b7e7fcfd3f1a3f70b"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_test_case_factory.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70b">arm_compute::test::framework::TestCaseFactory::Status</a></div><div class="ttdeci">Status</div><div class="ttdoc">Test case status. </div><div class="ttdef"><b>Definition:</b> <a href="_test_case_factory_8h_source.xhtml#l00050">TestCaseFactory.h:50</a></div></div>
<div class="ttc" id="_profiler_8h_xhtml"><div class="ttname"><a href="_profiler_8h.xhtml">Profiler.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_framework_xhtml"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml">arm_compute::test::framework::Framework</a></div><div class="ttdoc">Main framework class. </div><div class="ttdef"><b>Definition:</b> <a href="_framework_8h_source.xhtml#l00083">Framework.h:83</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_profiler_xhtml"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_profiler.xhtml">arm_compute::test::framework::Profiler</a></div><div class="ttdoc">Profiler class to collect benchmark numbers. </div><div class="ttdef"><b>Definition:</b> <a href="_profiler_8h_source.xhtml#l00045">Profiler.h:45</a></div></div>
<div class="ttc" id="_test_case_factory_8h_xhtml"><div class="ttname"><a href="_test_case_factory_8h.xhtml">TestCaseFactory.h</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1framework_1_1_test_info_xhtml_aadbc5003f5cc399930b16ddb89b16cdc"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml#aadbc5003f5cc399930b16ddb89b16cdc">arm_compute::test::framework::TestInfo::mode</a></div><div class="ttdeci">DatasetMode mode</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8h_source.xhtml#l00070">Framework.h:70</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_framework_xhtml_ad8e7764125fcd790e0b151d26cfe949c"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#ad8e7764125fcd790e0b151d26cfe949c">arm_compute::test::framework::Framework::add_test_case</a></div><div class="ttdeci">void add_test_case(std::string test_name, DatasetMode mode, TestCaseFactory::Status status)</div><div class="ttdoc">Add a test case to the framework. </div><div class="ttdef"><b>Definition:</b> <a href="_framework_8h_source.xhtml#l00342">Framework.h:342</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_printer_xhtml"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml">arm_compute::test::framework::Printer</a></div><div class="ttdoc">Abstract printer class used by the Framework to present output. </div><div class="ttdef"><b>Definition:</b> <a href="_printer_8h_source.xhtml#l00043">Printer.h:43</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_a9ec753fd569ec1bf169e26013898eb4a"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#a9ec753fd569ec1bf169e26013898eb4a">arm_compute::test::framework::operator&lt;</a></div><div class="ttdeci">bool operator&lt;(const TestInfo &amp;lhs, const TestInfo &amp;rhs)</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8h_source.xhtml#l00074">Framework.h:74</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_data_test_case_factory_xhtml"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_data_test_case_factory.xhtml">arm_compute::test::framework::DataTestCaseFactory</a></div><div class="ttdef"><b>Definition:</b> <a href="_test_case_factory_8h_source.xhtml#l00114">TestCaseFactory.h:114</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_aca1fd1d8935433e6ba2e3918214e07f9"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9">arm_compute::test::framework::LogLevel</a></div><div class="ttdeci">LogLevel</div><div class="ttdoc">Severity of the information. </div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8h_source.xhtml#l00050">Exceptions.h:50</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a096668313a9a819d54a2e65ec21ff0cc"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a096668313a9a819d54a2e65ec21ff0cc">arm_compute::test::validation::info</a></div><div class="ttdeci">src info() -&gt; set_format(Format::S16)</div></div>
<div class="ttc" id="namespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">This file contains all available output stages for GEMMLowp on OpenCL. </div><div class="ttdef"><b>Definition:</b> <a href="01__library_8dox_source.xhtml#l00001">01_library.dox:1</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1framework_1_1_test_info_xhtml_a7441ef0865bcb3db9b8064dd7375c1ea"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml#a7441ef0865bcb3db9b8064dd7375c1ea">arm_compute::test::framework::TestInfo::id</a></div><div class="ttdeci">int id</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8h_source.xhtml#l00068">Framework.h:68</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_aca1fd1d8935433e6ba2e3918214e07f9ab50339a10e1de285ac99d4c3990b8693"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9ab50339a10e1de285ac99d4c3990b8693">arm_compute::test::framework::LogLevel::NONE</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_test_case_factory_xhtml"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_test_case_factory.xhtml">arm_compute::test::framework::TestCaseFactory</a></div><div class="ttdoc">Abstract factory class to create test cases. </div><div class="ttdef"><b>Definition:</b> <a href="_test_case_factory_8h_source.xhtml#l00041">TestCaseFactory.h:41</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1framework_1_1_test_info_xhtml_a9b45b3e13bd9167aab02e17e08916231"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml#a9b45b3e13bd9167aab02e17e08916231">arm_compute::test::framework::TestInfo::name</a></div><div class="ttdeci">std::string name</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8h_source.xhtml#l00069">Framework.h:69</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a568b0fbfa3d903099d9c9f7b6acf188d"><div class="ttname"><a href="namespacearm__compute.xhtml#a568b0fbfa3d903099d9c9f7b6acf188d">arm_compute::error</a></div><div class="ttdeci">void error(const char *function, const char *file, const int line, const char *msg,...)</div><div class="ttdoc">Print an error message then throw an std::runtime_error. </div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_a7edf31944a6144ffd493d2f9a7bfb5cf"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cf">arm_compute::test::framework::DatasetMode</a></div><div class="ttdeci">DatasetMode</div><div class="ttdoc">Possible dataset modes. </div><div class="ttdef"><b>Definition:</b> <a href="_dataset_modes_8h_source.xhtml#l00040">DatasetModes.h:40</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_simple_test_case_factory_xhtml"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_simple_test_case_factory.xhtml">arm_compute::test::framework::SimpleTestCaseFactory</a></div><div class="ttdoc">Implementation of a test case factory to create non-data test cases. </div><div class="ttdef"><b>Definition:</b> <a href="_test_case_factory_8h_source.xhtml#l00104">TestCaseFactory.h:104</a></div></div>
<div class="ttc" id="_instruments_8h_xhtml"><div class="ttname"><a href="_instruments_8h.xhtml">Instruments.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_test_filter_xhtml"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_test_filter.xhtml">arm_compute::test::framework::TestFilter</a></div><div class="ttdoc">Test filter class. </div><div class="ttdef"><b>Definition:</b> <a href="_test_filter_8h_source.xhtml#l00046">TestFilter.h:46</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1framework_1_1_test_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml">arm_compute::test::framework::TestInfo</a></div><div class="ttdoc">Information about a test case. </div><div class="ttdef"><b>Definition:</b> <a href="_framework_8h_source.xhtml#l00066">Framework.h:66</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1support_1_1cpp14_xhtml_a94d8ad03db9ccb2005b06858856d0a4c"><div class="ttname"><a href="namespacearm__compute_1_1support_1_1cpp14.xhtml#a94d8ad03db9ccb2005b06858856d0a4c">arm_compute::support::cpp14::make_unique</a></div><div class="ttdeci">_Unique_if&lt; T &gt;::_Single_object make_unique(Args &amp;&amp;...args)</div><div class="ttdef"><b>Definition:</b> <a href="_toolchain_support_8h_source.xhtml#l00361">ToolchainSupport.h:361</a></div></div>
<div class="ttc" id="_test_case_8h_xhtml"><div class="ttname"><a href="_test_case_8h.xhtml">TestCase.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_framework_xhtml_aff39a3b89865624b6579d6980fb88654"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#aff39a3b89865624b6579d6980fb88654">arm_compute::test::framework::Framework::add_data_test_case</a></div><div class="ttdeci">void add_data_test_case(std::string test_name, DatasetMode mode, TestCaseFactory::Status status, std::string description, D &amp;&amp;data)</div><div class="ttdoc">Add a data test case to the framework. </div><div class="ttdef"><b>Definition:</b> <a href="_framework_8h_source.xhtml#l00348">Framework.h:348</a></div></div>
<div class="ttc" id="tests_2framework_2_utils_8h_xhtml"><div class="ttname"><a href="tests_2framework_2_utils_8h.xhtml">Utils.h</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_a7edf31944a6144ffd493d2f9a7bfb5cfa5fb1f955b45e38e31789286a1790398d"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfa5fb1f955b45e38e31789286a1790398d">arm_compute::test::framework::DatasetMode::ALL</a></div></div>
<div class="ttc" id="_exceptions_8h_xhtml"><div class="ttname"><a href="_exceptions_8h.xhtml">Exceptions.h</a></div></div>
<div class="ttc" id="_printer_8h_xhtml"><div class="ttname"><a href="_printer_8h.xhtml">Printer.h</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1framework_1_1_test_result_xhtml"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_test_result.xhtml">arm_compute::test::framework::TestResult</a></div><div class="ttdoc">Class to store results of a test. </div><div class="ttdef"><b>Definition:</b> <a href="_test_result_8h_source.xhtml#l00039">TestResult.h:39</a></div></div>
<div class="ttc" id="_test_result_8h_xhtml"><div class="ttname"><a href="_test_result_8h.xhtml">TestResult.h</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1framework_1_1_test_info_xhtml_a9e590b7d913d38286ab0916c38bb600f"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml#a9e590b7d913d38286ab0916c38bb600f">arm_compute::test::framework::TestInfo::status</a></div><div class="ttdeci">TestCaseFactory::Status status</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8h_source.xhtml#l00071">Framework.h:71</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_test_error_xhtml"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_test_error.xhtml">arm_compute::test::framework::TestError</a></div><div class="ttdoc">Error class for failures during test execution. </div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8h_source.xhtml#l00078">Exceptions.h:78</a></div></div>
<div class="ttc" id="_test_filter_8h_xhtml"><div class="ttname"><a href="_test_filter_8h.xhtml">TestFilter.h</a></div></div>
<div class="ttc" id="_dataset_modes_8h_xhtml"><div class="ttname"><a href="_dataset_modes_8h.xhtml">DatasetModes.h</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_59425e443f801f1f2fd8bbe4959a3ccf.xhtml">tests</a></li><li class="navelem"><a class="el" href="dir_9e71e2da941d3cafc4d98a9f6ae3de4f.xhtml">framework</a></li><li class="navelem"><a class="el" href="_framework_8h.xhtml">Framework.h</a></li>
    <li class="footer">Generated on Thu Dec 14 2017 23:48:32 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
  </ul>
</div>
</body>
</html>
