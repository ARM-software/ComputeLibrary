<!-- HTML header for doxygen 1.8.9.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: arm_compute/core/NEON/kernels/winograd/tensor.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Compute Library
   &#160;<span id="projectnumber">17.12</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>Globals</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('tensor_8hpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">tensor.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="tensor_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2017 ARM Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#pragma once</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &lt;cstdio&gt;</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &lt;cstdlib&gt;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &lt;random&gt;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="alloc_8hpp.xhtml">alloc.hpp</a>&quot;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="comment">/*****************************************************************************/</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="comment">/* Padding definitions */</span></div><div class="line"><a name="l00034"></a><span class="lineno"><a class="line" href="tensor_8hpp.xhtml#a0277d10fdc0f1bb28dbec03e10941727">   34</a></span>&#160;<span class="keyword">enum</span> <a class="code" href="tensor_8hpp.xhtml#a0277d10fdc0f1bb28dbec03e10941727">PaddingType</a> {</div><div class="line"><a name="l00035"></a><span class="lineno"><a class="line" href="tensor_8hpp.xhtml#a0277d10fdc0f1bb28dbec03e10941727a1481b43461762d3d102c5b9df4cbed5a">   35</a></span>&#160;  <a class="code" href="tensor_8hpp.xhtml#a0277d10fdc0f1bb28dbec03e10941727ab86bb0563b33b2a44b577e2a133f8248">PADDING_SAME</a>, <a class="code" href="tensor_8hpp.xhtml#a0277d10fdc0f1bb28dbec03e10941727a1481b43461762d3d102c5b9df4cbed5a">PADDING_VALID</a></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;};</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="comment">/*****************************************************************************/</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="comment">/* Shape of a kernel */</span></div><div class="line"><a name="l00040"></a><span class="lineno"><a class="line" href="struct_kernel_shape.xhtml">   40</a></span>&#160;<span class="keyword">struct </span><a class="code" href="struct_kernel_shape.xhtml">KernelShape</a> {</div><div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="struct_kernel_shape.xhtml#a00116d46e13f5082d5a720a08c3047cc">   41</a></span>&#160;  <span class="keywordtype">int</span> <a class="code" href="struct_kernel_shape.xhtml#aefcb19b0c2c6aa0c389e35abefbb9c18">n_output_channels</a>, <a class="code" href="struct_kernel_shape.xhtml#a00116d46e13f5082d5a720a08c3047cc">n_rows</a>, <a class="code" href="struct_kernel_shape.xhtml#a0efeeb6a59360fdf976f6a9f2018edb3">n_cols</a>, <a class="code" href="struct_kernel_shape.xhtml#a457c06ffe7a95c7d8d8a8400d35dd1ba">n_input_channels</a>;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno"><a class="line" href="struct_kernel_shape.xhtml#ac220353c673bbf646160eec8c03b44bf">   43</a></span>&#160;  <span class="keywordtype">int</span> <a class="code" href="struct_kernel_shape.xhtml#ac220353c673bbf646160eec8c03b44bf">size</a>(<span class="keywordtype">void</span>)<span class="keyword"> const </span>{</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <span class="keywordflow">return</span> n_output_channels * n_rows * n_cols * <a class="code" href="struct_kernel_shape.xhtml#a457c06ffe7a95c7d8d8a8400d35dd1ba">n_input_channels</a>;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;  }</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;};</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div><div class="line"><a name="l00048"></a><span class="lineno"><a class="line" href="struct_tensor4_d_shape.xhtml">   48</a></span>&#160;<span class="keyword">struct </span><a class="code" href="struct_tensor4_d_shape.xhtml">Tensor4DShape</a> {</div><div class="line"><a name="l00049"></a><span class="lineno"><a class="line" href="struct_tensor4_d_shape.xhtml#a00116d46e13f5082d5a720a08c3047cc">   49</a></span>&#160;  <span class="keywordtype">int</span> n_batches,</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;      <a class="code" href="struct_tensor4_d_shape.xhtml#a00116d46e13f5082d5a720a08c3047cc">n_rows</a>,</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;      <a class="code" href="struct_kernel_shape.xhtml#a0efeeb6a59360fdf976f6a9f2018edb3">n_cols</a>,</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;      n_channels;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div><div class="line"><a name="l00054"></a><span class="lineno"><a class="line" href="struct_tensor4_d_shape.xhtml#ab8e4e3e2a7bf18888b71bdf9dda0770b">   54</a></span>&#160;  <span class="keywordtype">int</span> <a class="code" href="struct_tensor4_d_shape.xhtml#ab8e4e3e2a7bf18888b71bdf9dda0770b">size</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <span class="keywordflow">return</span> n_batches * n_rows * n_cols * n_channels;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;  }</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno"><a class="line" href="struct_tensor4_d_shape.xhtml#a4bc709a73f76342e647efdd116e075aa">   58</a></span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="struct_tensor4_d_shape.xhtml#a4bc709a73f76342e647efdd116e075aa">TestEq</a>(<span class="keyword">const</span> <a class="code" href="struct_tensor4_d_shape.xhtml">Tensor4DShape</a>&amp; other)<span class="keyword"> const </span>{</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <span class="keywordflow">return</span> (n_batches == other.<a class="code" href="struct_tensor4_d_shape.xhtml#a587d540c8ce15c4c92fb938d8a0d73eb">n_batches</a> &amp;&amp;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;            n_rows == other.<a class="code" href="struct_tensor4_d_shape.xhtml#a00116d46e13f5082d5a720a08c3047cc">n_rows</a> &amp;&amp;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;            n_cols == other.<a class="code" href="struct_tensor4_d_shape.xhtml#a0efeeb6a59360fdf976f6a9f2018edb3">n_cols</a> &amp;&amp;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;            n_channels == other.<a class="code" href="struct_tensor4_d_shape.xhtml#a97637737075924b9ed723edf11223c6a">n_channels</a>);</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;  }</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;};</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> ShapeT, <span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00067"></a><span class="lineno"><a class="line" href="class_tensor4_d.xhtml">   67</a></span>&#160;<span class="keyword">class </span><a class="code" href="class_tensor4_d.xhtml">Tensor4D</a> final {</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;  <span class="keyword">public</span>:</div><div class="line"><a name="l00069"></a><span class="lineno"><a class="line" href="class_tensor4_d.xhtml#a742e8887b4ad95d2e7243f18d161321d">   69</a></span>&#160;    <a class="code" href="class_tensor4_d.xhtml#a742e8887b4ad95d2e7243f18d161321d">Tensor4D</a>(ShapeT <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">shape</a>) :</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;      _shape(shape),</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;      _data(reinterpret_cast&lt;T*&gt;(<a class="code" href="alloc_8hpp.xhtml#af698a4bbcfbca33b19802855e5c7f47d">ALLOCATE</a>(size_bytes()))) {</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        Clear();</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    }</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="line"><a name="l00075"></a><span class="lineno"><a class="line" href="class_tensor4_d.xhtml#a0bf55095e7aebceef674a3ee40d16597">   75</a></span>&#160;    <a class="code" href="class_tensor4_d.xhtml#a0bf55095e7aebceef674a3ee40d16597">~Tensor4D</a>() {</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;      free(_data);</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    }</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div><div class="line"><a name="l00079"></a><span class="lineno"><a class="line" href="class_tensor4_d.xhtml#a8d2c0ad5a17ea241e7c80ae5537e2cd1">   79</a></span>&#160;    T* <a class="code" href="class_tensor4_d.xhtml#a8d2c0ad5a17ea241e7c80ae5537e2cd1">ptr</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;      <span class="keywordflow">return</span> _data;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    }</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno"><a class="line" href="class_tensor4_d.xhtml#a2ee0dbfbb3e8a518fd1d410fb7cdcb10">   83</a></span>&#160;    <span class="keyword">const</span> ShapeT&amp; <a class="code" href="class_tensor4_d.xhtml#a2ee0dbfbb3e8a518fd1d410fb7cdcb10">shape</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;      <span class="keywordflow">return</span> _shape;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    }</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div><div class="line"><a name="l00087"></a><span class="lineno"><a class="line" href="class_tensor4_d.xhtml#a6b7939a033faf2ab815feb05d3bb0a1d">   87</a></span>&#160;    <span class="keywordtype">size_t</span> <a class="code" href="class_tensor4_d.xhtml#a6b7939a033faf2ab815feb05d3bb0a1d">size_bytes</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;      <span class="keywordflow">return</span> _shape.size() * <span class="keyword">sizeof</span>(T);</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    }</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <span class="keywordtype">bool</span> TestEq(<a class="code" href="class_tensor4_d.xhtml">Tensor4D&lt;ShapeT, T&gt;</a>&amp; other) <span class="keyword">const</span>;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    T&amp; element(<span class="keywordtype">int</span>, <span class="keywordtype">int</span>, <span class="keywordtype">int</span>, <span class="keywordtype">int</span>) <span class="keyword">const</span>;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="keywordtype">void</span> Print() <span class="keyword">const</span>;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div><div class="line"><a name="l00095"></a><span class="lineno"><a class="line" href="class_tensor4_d.xhtml#aa71d36872f416feaa853788a7a7a7ef8">   95</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="class_tensor4_d.xhtml#aa71d36872f416feaa853788a7a7a7ef8">Clear</a>() {</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;      Fill(static_cast&lt;T&gt;(0));</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    }</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;</div><div class="line"><a name="l00099"></a><span class="lineno"><a class="line" href="class_tensor4_d.xhtml#a8b04059510886335055745c9fdf23192">   99</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="class_tensor4_d.xhtml#a8b04059510886335055745c9fdf23192">Fill</a>(T val) {</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;      <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; _shape.size(); i++)</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        _data[i] = val;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    }</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno"><a class="line" href="class_tensor4_d.xhtml#ae4b3cc88e8d5e6c811f0cfd41e1d6bc5">  104</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="class_tensor4_d.xhtml#ae4b3cc88e8d5e6c811f0cfd41e1d6bc5">TestPattern</a>() {</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;      <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; _shape.size(); i++)</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        _data[i] = static_cast&lt;T&gt;(i);</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    }</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div><div class="line"><a name="l00109"></a><span class="lineno"><a class="line" href="class_tensor4_d.xhtml#a79eb348abf0cb824ed3717aadc5d17b5">  109</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="class_tensor4_d.xhtml#a79eb348abf0cb824ed3717aadc5d17b5">Rand</a>(<span class="keyword">const</span> <span class="keywordtype">int</span> seed=2311) {</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;      std::mt19937 gen(seed);</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;      std::uniform_int_distribution&lt;&gt; dis(-50, +50);</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;      <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; _shape.size(); i++) {</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        _data[i] = <span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(dis(gen));</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;      }</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    }</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <a class="code" href="helpers_8h.xhtml#a3b8a88f73e80a621aecfe7ced12c1676">Tensor4D</a>(<span class="keyword">const</span> <a class="code" href="class_tensor4_d.xhtml">Tensor4D</a> &amp;) = <span class="keyword">delete</span>;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <a class="code" href="class_tensor4_d.xhtml">Tensor4D</a> &amp;operator=(<span class="keyword">const</span> <a class="code" href="class_tensor4_d.xhtml">Tensor4D</a> &amp;) = <span class="keyword">delete</span>;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <a class="code" href="helpers_8h.xhtml#a3b8a88f73e80a621aecfe7ced12c1676">Tensor4D</a>(<a class="code" href="class_tensor4_d.xhtml">Tensor4D</a> &amp;&amp;) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <a class="code" href="class_tensor4_d.xhtml">Tensor4D</a> &amp;operator=(<a class="code" href="class_tensor4_d.xhtml">Tensor4D</a> &amp;&amp;) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;  <span class="keyword">private</span>:</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    <span class="keyword">const</span> ShapeT _shape;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    T* <span class="keyword">const</span> _data;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;};</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="keyword">template</span> &lt;&gt;</div><div class="line"><a name="l00133"></a><span class="lineno"><a class="line" href="class_tensor4_d.xhtml#abe7caec1318b7f8333c044b88cdb12c8">  133</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">float</span>&amp; <a class="code" href="class_tensor4_d.xhtml#a7b687fd6582dc4843d70226f97957875">Tensor4D&lt;Tensor4DShape, float&gt;::element</a>(<span class="keywordtype">int</span> n, <span class="keywordtype">int</span> i, <span class="keywordtype">int</span> j, <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a497347573faa3778743ddf277f861094">c</a>)<span class="keyword"> const </span>{</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;  <span class="keywordtype">int</span> index = ((n*_shape.n_rows + i)*_shape.n_cols + j)*_shape.n_channels + <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a497347573faa3778743ddf277f861094">c</a>;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;  <span class="keywordflow">return</span> _data[index];</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;}</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="keyword">template</span> &lt;&gt;</div><div class="line"><a name="l00140"></a><span class="lineno"><a class="line" href="class_tensor4_d.xhtml#a658aa0c00b040f7f70dd407bed6b50c1">  140</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">float</span>&amp; <a class="code" href="class_tensor4_d.xhtml#a7b687fd6582dc4843d70226f97957875">Tensor4D&lt;KernelShape, float&gt;::element</a>(<span class="keywordtype">int</span> oc, <span class="keywordtype">int</span> i, <span class="keywordtype">int</span> j, <span class="keywordtype">int</span> ic)<span class="keyword"> const </span>{</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;  <span class="keywordtype">int</span> index = ((i*_shape.n_cols + j)*_shape.n_input_channels + ic)*_shape.n_output_channels + oc;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;  <span class="keywordflow">return</span> _data[index];</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;}</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="keyword">template</span> &lt;&gt;</div><div class="line"><a name="l00146"></a><span class="lineno"><a class="line" href="class_tensor4_d.xhtml#ad695f1ed7c1262e05015b27a4bba9d85">  146</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">bool</span> <a class="code" href="class_tensor4_d.xhtml#a4be251a7e61a2d077161b7e5e1a06dc3">Tensor4D&lt;Tensor4DShape, float&gt;::TestEq</a>(<a class="code" href="class_tensor4_d.xhtml">Tensor4D&lt;Tensor4DShape, float&gt;</a>&amp; other)<span class="keyword"> const </span>{</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;  <span class="comment">// Test equivalence, printing errors</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;  <span class="comment">// First test the shapes are the same</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;  <span class="keywordflow">if</span> (!_shape.TestEq(other.<a class="code" href="class_tensor4_d.xhtml#a2ee0dbfbb3e8a518fd1d410fb7cdcb10">shape</a>())) {</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    printf(<span class="stringliteral">&quot;Tensors have different shapes.\n&quot;</span>);</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;  } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <span class="keywordtype">int</span> incorrects = 0;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> n = 0; n &lt; _shape.n_batches; n++) {</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;      <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; _shape.n_rows; i++) {</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">int</span> j = 0; j &lt; _shape.n_cols; j++) {</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;          <span class="keywordflow">for</span> (<span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a497347573faa3778743ddf277f861094">c</a> = 0; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a497347573faa3778743ddf277f861094">c</a> &lt; _shape.n_channels; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a497347573faa3778743ddf277f861094">c</a>++) {</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;            <span class="comment">// Check elements for equivalence</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aac40b7097f2bda9274ae07fa33d15a79">a</a> = this-&gt;element(n, i, j, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a497347573faa3778743ddf277f861094">c</a>);</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7b8004eef325a40dd43eb80755610fff">b</a> = other.<a class="code" href="class_tensor4_d.xhtml#a7b687fd6582dc4843d70226f97957875">element</a>(n, i, j, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a497347573faa3778743ddf277f861094">c</a>);</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aac40b7097f2bda9274ae07fa33d15a79">a</a> != <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7b8004eef325a40dd43eb80755610fff">b</a>) {</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;              printf(<span class="stringliteral">&quot;Difference at element {%d, %d, %d, %d}: %.3f != %.3f\n&quot;</span>, n, i, j, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a497347573faa3778743ddf277f861094">c</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aac40b7097f2bda9274ae07fa33d15a79">a</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7b8004eef325a40dd43eb80755610fff">b</a>);</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;              <span class="keywordflow">if</span> (++incorrects &gt; 100) {</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;                printf(<span class="stringliteral">&quot;More than 100 incorrect values, stopping test.\n&quot;</span>);</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;              }</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;            }</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;          }</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;        }</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;      }</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    }</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    <span class="keywordflow">return</span> incorrects == 0;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;  }</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;}</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="keyword">template</span> &lt;&gt;</div><div class="line"><a name="l00182"></a><span class="lineno"><a class="line" href="class_tensor4_d.xhtml#a7dd1e7fb7a824bccd24b3a86b5d4e94c">  182</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="class_tensor4_d.xhtml#a11421e368566880f5aaa4f39ce8885c4">Tensor4D&lt;Tensor4DShape, float&gt;::Print</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;  <span class="keywordflow">for</span> (<span class="keywordtype">int</span> n = 0; n &lt; _shape.n_batches; n++) {</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a497347573faa3778743ddf277f861094">c</a> = 0; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a497347573faa3778743ddf277f861094">c</a> &lt; _shape.n_channels; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a497347573faa3778743ddf277f861094">c</a>++) {</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;      <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; _shape.n_rows; i++) {</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">int</span> j = 0; j &lt; _shape.n_cols; j++) {</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;          printf(<span class="stringliteral">&quot;%5.2f &quot;</span>, element(n, i, j, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a497347573faa3778743ddf277f861094">c</a>));</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;        }</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;        printf(<span class="stringliteral">&quot;\n&quot;</span>);</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;      }</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;      printf(<span class="stringliteral">&quot;\n&quot;</span>);</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    }</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;  }</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;}</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="keyword">template</span> &lt;&gt;</div><div class="line"><a name="l00198"></a><span class="lineno"><a class="line" href="class_tensor4_d.xhtml#a7dd1e7fb7a824bccd24b3a86b5d4e94c">  198</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="class_tensor4_d.xhtml#a11421e368566880f5aaa4f39ce8885c4">Tensor4D&lt;KernelShape, float&gt;::Print</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;  <span class="keywordflow">for</span> (<span class="keywordtype">int</span> oc = 0; oc &lt; _shape.n_output_channels; oc++) {</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> ic = 0; ic &lt; _shape.n_input_channels; ic++) {</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;      <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; _shape.n_rows; i++) {</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">int</span> j = 0; j &lt; _shape.n_cols; j++) {</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;          printf(<span class="stringliteral">&quot;%5.2f &quot;</span>, element(oc, i, j, ic));</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;        }</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;        printf(<span class="stringliteral">&quot;\n&quot;</span>);</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;      }</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;      printf(<span class="stringliteral">&quot;\n&quot;</span>);</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    }</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;  }</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;}</div><div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a45cde9abb508c62d67c3bb2b9bf566a5"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">arm_compute::test::validation::shape</a></div><div class="ttdeci">shape</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_min_max_location_8cpp_source.xhtml#l00089">MinMaxLocation.cpp:89</a></div></div>
<div class="ttc" id="class_tensor4_d_xhtml_a79eb348abf0cb824ed3717aadc5d17b5"><div class="ttname"><a href="class_tensor4_d.xhtml#a79eb348abf0cb824ed3717aadc5d17b5">Tensor4D::Rand</a></div><div class="ttdeci">void Rand(const int seed=2311)</div><div class="ttdef"><b>Definition:</b> <a href="tensor_8hpp_source.xhtml#l00109">tensor.hpp:109</a></div></div>
<div class="ttc" id="struct_tensor4_d_shape_xhtml"><div class="ttname"><a href="struct_tensor4_d_shape.xhtml">Tensor4DShape</a></div><div class="ttdef"><b>Definition:</b> <a href="tensor_8hpp_source.xhtml#l00048">tensor.hpp:48</a></div></div>
<div class="ttc" id="helpers_8h_xhtml_a3b8a88f73e80a621aecfe7ced12c1676"><div class="ttname"><a href="helpers_8h.xhtml#a3b8a88f73e80a621aecfe7ced12c1676">Tensor4D</a></div><div class="ttdeci">struct Tensor4D Tensor4D</div><div class="ttdoc">Structure to hold 4D tensor information. </div></div>
<div class="ttc" id="struct_kernel_shape_xhtml_ac220353c673bbf646160eec8c03b44bf"><div class="ttname"><a href="struct_kernel_shape.xhtml#ac220353c673bbf646160eec8c03b44bf">KernelShape::size</a></div><div class="ttdeci">int size(void) const </div><div class="ttdef"><b>Definition:</b> <a href="tensor_8hpp_source.xhtml#l00043">tensor.hpp:43</a></div></div>
<div class="ttc" id="class_tensor4_d_xhtml_a4be251a7e61a2d077161b7e5e1a06dc3"><div class="ttname"><a href="class_tensor4_d.xhtml#a4be251a7e61a2d077161b7e5e1a06dc3">Tensor4D::TestEq</a></div><div class="ttdeci">bool TestEq(Tensor4D&lt; ShapeT, T &gt; &amp;other) const </div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_aac40b7097f2bda9274ae07fa33d15a79"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#aac40b7097f2bda9274ae07fa33d15a79">arm_compute::test::validation::a</a></div><div class="ttdeci">Tensor a</div><div class="ttdef"><b>Definition:</b> <a href="validation_2_n_e_o_n_2_g_e_m_m_8cpp_source.xhtml#l00115">GEMM.cpp:115</a></div></div>
<div class="ttc" id="class_tensor4_d_xhtml_a2ee0dbfbb3e8a518fd1d410fb7cdcb10"><div class="ttname"><a href="class_tensor4_d.xhtml#a2ee0dbfbb3e8a518fd1d410fb7cdcb10">Tensor4D::shape</a></div><div class="ttdeci">const ShapeT &amp; shape() const </div><div class="ttdef"><b>Definition:</b> <a href="tensor_8hpp_source.xhtml#l00083">tensor.hpp:83</a></div></div>
<div class="ttc" id="tensor_8hpp_xhtml_a0277d10fdc0f1bb28dbec03e10941727"><div class="ttname"><a href="tensor_8hpp.xhtml#a0277d10fdc0f1bb28dbec03e10941727">PaddingType</a></div><div class="ttdeci">PaddingType</div><div class="ttdef"><b>Definition:</b> <a href="tensor_8hpp_source.xhtml#l00034">tensor.hpp:34</a></div></div>
<div class="ttc" id="struct_tensor4_d_shape_xhtml_a0efeeb6a59360fdf976f6a9f2018edb3"><div class="ttname"><a href="struct_tensor4_d_shape.xhtml#a0efeeb6a59360fdf976f6a9f2018edb3">Tensor4DShape::n_cols</a></div><div class="ttdeci">int n_cols</div><div class="ttdef"><b>Definition:</b> <a href="tensor_8hpp_source.xhtml#l00049">tensor.hpp:49</a></div></div>
<div class="ttc" id="struct_kernel_shape_xhtml"><div class="ttname"><a href="struct_kernel_shape.xhtml">KernelShape</a></div><div class="ttdef"><b>Definition:</b> <a href="tensor_8hpp_source.xhtml#l00040">tensor.hpp:40</a></div></div>
<div class="ttc" id="struct_tensor4_d_shape_xhtml_a00116d46e13f5082d5a720a08c3047cc"><div class="ttname"><a href="struct_tensor4_d_shape.xhtml#a00116d46e13f5082d5a720a08c3047cc">Tensor4DShape::n_rows</a></div><div class="ttdeci">int n_rows</div><div class="ttdef"><b>Definition:</b> <a href="tensor_8hpp_source.xhtml#l00049">tensor.hpp:49</a></div></div>
<div class="ttc" id="struct_kernel_shape_xhtml_aefcb19b0c2c6aa0c389e35abefbb9c18"><div class="ttname"><a href="struct_kernel_shape.xhtml#aefcb19b0c2c6aa0c389e35abefbb9c18">KernelShape::n_output_channels</a></div><div class="ttdeci">int n_output_channels</div><div class="ttdef"><b>Definition:</b> <a href="tensor_8hpp_source.xhtml#l00041">tensor.hpp:41</a></div></div>
<div class="ttc" id="struct_tensor4_d_shape_xhtml_a587d540c8ce15c4c92fb938d8a0d73eb"><div class="ttname"><a href="struct_tensor4_d_shape.xhtml#a587d540c8ce15c4c92fb938d8a0d73eb">Tensor4DShape::n_batches</a></div><div class="ttdeci">int n_batches</div><div class="ttdef"><b>Definition:</b> <a href="tensor_8hpp_source.xhtml#l00049">tensor.hpp:49</a></div></div>
<div class="ttc" id="class_tensor4_d_xhtml_a7b687fd6582dc4843d70226f97957875"><div class="ttname"><a href="class_tensor4_d.xhtml#a7b687fd6582dc4843d70226f97957875">Tensor4D::element</a></div><div class="ttdeci">T &amp; element(int, int, int, int) const </div></div>
<div class="ttc" id="tensor_8hpp_xhtml_a0277d10fdc0f1bb28dbec03e10941727ab86bb0563b33b2a44b577e2a133f8248"><div class="ttname"><a href="tensor_8hpp.xhtml#a0277d10fdc0f1bb28dbec03e10941727ab86bb0563b33b2a44b577e2a133f8248">PADDING_SAME</a></div><div class="ttdef"><b>Definition:</b> <a href="tensor_8hpp_source.xhtml#l00035">tensor.hpp:35</a></div></div>
<div class="ttc" id="tensor_8hpp_xhtml_a0277d10fdc0f1bb28dbec03e10941727a1481b43461762d3d102c5b9df4cbed5a"><div class="ttname"><a href="tensor_8hpp.xhtml#a0277d10fdc0f1bb28dbec03e10941727a1481b43461762d3d102c5b9df4cbed5a">PADDING_VALID</a></div><div class="ttdef"><b>Definition:</b> <a href="tensor_8hpp_source.xhtml#l00035">tensor.hpp:35</a></div></div>
<div class="ttc" id="struct_kernel_shape_xhtml_a457c06ffe7a95c7d8d8a8400d35dd1ba"><div class="ttname"><a href="struct_kernel_shape.xhtml#a457c06ffe7a95c7d8d8a8400d35dd1ba">KernelShape::n_input_channels</a></div><div class="ttdeci">int n_input_channels</div><div class="ttdef"><b>Definition:</b> <a href="tensor_8hpp_source.xhtml#l00041">tensor.hpp:41</a></div></div>
<div class="ttc" id="alloc_8hpp_xhtml_af698a4bbcfbca33b19802855e5c7f47d"><div class="ttname"><a href="alloc_8hpp.xhtml#af698a4bbcfbca33b19802855e5c7f47d">ALLOCATE</a></div><div class="ttdeci">#define ALLOCATE(x)</div><div class="ttdef"><b>Definition:</b> <a href="alloc_8hpp_source.xhtml#l00029">alloc.hpp:29</a></div></div>
<div class="ttc" id="class_tensor4_d_xhtml_a6b7939a033faf2ab815feb05d3bb0a1d"><div class="ttname"><a href="class_tensor4_d.xhtml#a6b7939a033faf2ab815feb05d3bb0a1d">Tensor4D::size_bytes</a></div><div class="ttdeci">size_t size_bytes() const </div><div class="ttdef"><b>Definition:</b> <a href="tensor_8hpp_source.xhtml#l00087">tensor.hpp:87</a></div></div>
<div class="ttc" id="struct_kernel_shape_xhtml_a0efeeb6a59360fdf976f6a9f2018edb3"><div class="ttname"><a href="struct_kernel_shape.xhtml#a0efeeb6a59360fdf976f6a9f2018edb3">KernelShape::n_cols</a></div><div class="ttdeci">int n_cols</div><div class="ttdef"><b>Definition:</b> <a href="tensor_8hpp_source.xhtml#l00041">tensor.hpp:41</a></div></div>
<div class="ttc" id="class_tensor4_d_xhtml_a0bf55095e7aebceef674a3ee40d16597"><div class="ttname"><a href="class_tensor4_d.xhtml#a0bf55095e7aebceef674a3ee40d16597">Tensor4D::~Tensor4D</a></div><div class="ttdeci">~Tensor4D()</div><div class="ttdef"><b>Definition:</b> <a href="tensor_8hpp_source.xhtml#l00075">tensor.hpp:75</a></div></div>
<div class="ttc" id="struct_tensor4_d_shape_xhtml_a97637737075924b9ed723edf11223c6a"><div class="ttname"><a href="struct_tensor4_d_shape.xhtml#a97637737075924b9ed723edf11223c6a">Tensor4DShape::n_channels</a></div><div class="ttdeci">int n_channels</div><div class="ttdef"><b>Definition:</b> <a href="tensor_8hpp_source.xhtml#l00049">tensor.hpp:49</a></div></div>
<div class="ttc" id="class_tensor4_d_xhtml_aa71d36872f416feaa853788a7a7a7ef8"><div class="ttname"><a href="class_tensor4_d.xhtml#aa71d36872f416feaa853788a7a7a7ef8">Tensor4D::Clear</a></div><div class="ttdeci">void Clear()</div><div class="ttdef"><b>Definition:</b> <a href="tensor_8hpp_source.xhtml#l00095">tensor.hpp:95</a></div></div>
<div class="ttc" id="alloc_8hpp_xhtml"><div class="ttname"><a href="alloc_8hpp.xhtml">alloc.hpp</a></div></div>
<div class="ttc" id="class_tensor4_d_xhtml_a11421e368566880f5aaa4f39ce8885c4"><div class="ttname"><a href="class_tensor4_d.xhtml#a11421e368566880f5aaa4f39ce8885c4">Tensor4D::Print</a></div><div class="ttdeci">void Print() const </div></div>
<div class="ttc" id="struct_tensor4_d_shape_xhtml_a4bc709a73f76342e647efdd116e075aa"><div class="ttname"><a href="struct_tensor4_d_shape.xhtml#a4bc709a73f76342e647efdd116e075aa">Tensor4DShape::TestEq</a></div><div class="ttdeci">bool TestEq(const Tensor4DShape &amp;other) const </div><div class="ttdef"><b>Definition:</b> <a href="tensor_8hpp_source.xhtml#l00058">tensor.hpp:58</a></div></div>
<div class="ttc" id="class_tensor4_d_xhtml_ae4b3cc88e8d5e6c811f0cfd41e1d6bc5"><div class="ttname"><a href="class_tensor4_d.xhtml#ae4b3cc88e8d5e6c811f0cfd41e1d6bc5">Tensor4D::TestPattern</a></div><div class="ttdeci">void TestPattern()</div><div class="ttdef"><b>Definition:</b> <a href="tensor_8hpp_source.xhtml#l00104">tensor.hpp:104</a></div></div>
<div class="ttc" id="struct_tensor4_d_shape_xhtml_ab8e4e3e2a7bf18888b71bdf9dda0770b"><div class="ttname"><a href="struct_tensor4_d_shape.xhtml#ab8e4e3e2a7bf18888b71bdf9dda0770b">Tensor4DShape::size</a></div><div class="ttdeci">int size() const </div><div class="ttdef"><b>Definition:</b> <a href="tensor_8hpp_source.xhtml#l00054">tensor.hpp:54</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a497347573faa3778743ddf277f861094"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a497347573faa3778743ddf277f861094">arm_compute::test::validation::c</a></div><div class="ttdeci">Tensor c</div><div class="ttdef"><b>Definition:</b> <a href="validation_2_n_e_o_n_2_g_e_m_m_8cpp_source.xhtml#l00117">GEMM.cpp:117</a></div></div>
<div class="ttc" id="class_tensor4_d_xhtml_a742e8887b4ad95d2e7243f18d161321d"><div class="ttname"><a href="class_tensor4_d.xhtml#a742e8887b4ad95d2e7243f18d161321d">Tensor4D::Tensor4D</a></div><div class="ttdeci">Tensor4D(ShapeT shape)</div><div class="ttdef"><b>Definition:</b> <a href="tensor_8hpp_source.xhtml#l00069">tensor.hpp:69</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a7b8004eef325a40dd43eb80755610fff"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a7b8004eef325a40dd43eb80755610fff">arm_compute::test::validation::b</a></div><div class="ttdeci">Tensor b</div><div class="ttdef"><b>Definition:</b> <a href="validation_2_n_e_o_n_2_g_e_m_m_8cpp_source.xhtml#l00116">GEMM.cpp:116</a></div></div>
<div class="ttc" id="struct_kernel_shape_xhtml_a00116d46e13f5082d5a720a08c3047cc"><div class="ttname"><a href="struct_kernel_shape.xhtml#a00116d46e13f5082d5a720a08c3047cc">KernelShape::n_rows</a></div><div class="ttdeci">int n_rows</div><div class="ttdef"><b>Definition:</b> <a href="tensor_8hpp_source.xhtml#l00041">tensor.hpp:41</a></div></div>
<div class="ttc" id="class_tensor4_d_xhtml_a8b04059510886335055745c9fdf23192"><div class="ttname"><a href="class_tensor4_d.xhtml#a8b04059510886335055745c9fdf23192">Tensor4D::Fill</a></div><div class="ttdeci">void Fill(T val)</div><div class="ttdef"><b>Definition:</b> <a href="tensor_8hpp_source.xhtml#l00099">tensor.hpp:99</a></div></div>
<div class="ttc" id="class_tensor4_d_xhtml_a8d2c0ad5a17ea241e7c80ae5537e2cd1"><div class="ttname"><a href="class_tensor4_d.xhtml#a8d2c0ad5a17ea241e7c80ae5537e2cd1">Tensor4D::ptr</a></div><div class="ttdeci">T * ptr() const </div><div class="ttdef"><b>Definition:</b> <a href="tensor_8hpp_source.xhtml#l00079">tensor.hpp:79</a></div></div>
<div class="ttc" id="class_tensor4_d_xhtml"><div class="ttname"><a href="class_tensor4_d.xhtml">Tensor4D</a></div><div class="ttdoc">Structure to hold 4D tensor information. </div><div class="ttdef"><b>Definition:</b> <a href="tensor_8hpp_source.xhtml#l00067">tensor.hpp:67</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_214608ef36d61442cb2b0c1c4e9a7def.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="dir_1fb090f0c6070330bfaccc4236d3ca0d.xhtml">core</a></li><li class="navelem"><a class="el" href="dir_315f6cf1ec0b2df3ae747ff8286a19f5.xhtml">NEON</a></li><li class="navelem"><a class="el" href="dir_2c3c4cb85e732569e2614ad40a451d53.xhtml">kernels</a></li><li class="navelem"><a class="el" href="dir_69c697bf42756a8f749f966b74064d1d.xhtml">winograd</a></li><li class="navelem"><a class="el" href="tensor_8hpp.xhtml">tensor.hpp</a></li>
    <li class="footer">Generated on Thu Dec 14 2017 23:48:31 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
  </ul>
</div>
</body>
</html>
