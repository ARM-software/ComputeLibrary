<!-- HTML header for doxygen 1.8.9.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: JSONPrinter Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Compute Library
   &#160;<span id="projectnumber">17.12</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li><a href="classes.xhtml"><span>Data&#160;Structure&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Data&#160;Fields</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarm__compute_1_1test_1_1framework_1_1_j_s_o_n_printer.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">JSONPrinter Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Implementation of a <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml">Printer</a> that produces JSON output.  
 <a href="classarm__compute_1_1test_1_1framework_1_1_j_s_o_n_printer.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_j_s_o_n_printer_8h_source.xhtml">JSONPrinter.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for JSONPrinter:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classarm__compute_1_1test_1_1framework_1_1_j_s_o_n_printer__coll__graph.svg" width="107" height="112"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a2a3ad8a62c2d169ba98b99fc849cb8c0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_j_s_o_n_printer.xhtml#a2a3ad8a62c2d169ba98b99fc849cb8c0">print_entry</a> (const std::string &amp;name, const std::string &amp;<a class="el" href="hwc_8hpp.xhtml#a0f61d63b009d0880a89c843bd50d8d76">value</a>) override</td></tr>
<tr class="memdesc:a2a3ad8a62c2d169ba98b99fc849cb8c0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Print an entry consisting of a (name, value) pair.  <a href="#a2a3ad8a62c2d169ba98b99fc849cb8c0">More...</a><br /></td></tr>
<tr class="separator:a2a3ad8a62c2d169ba98b99fc849cb8c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4e3955a20faf3bcda615ae62b0b24efa"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_j_s_o_n_printer.xhtml#a4e3955a20faf3bcda615ae62b0b24efa">print_global_header</a> () override</td></tr>
<tr class="memdesc:a4e3955a20faf3bcda615ae62b0b24efa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Print global header.  <a href="#a4e3955a20faf3bcda615ae62b0b24efa">More...</a><br /></td></tr>
<tr class="separator:a4e3955a20faf3bcda615ae62b0b24efa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a73c2cb1847e4110041efe047cb9421e6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_j_s_o_n_printer.xhtml#a73c2cb1847e4110041efe047cb9421e6">print_global_footer</a> () override</td></tr>
<tr class="memdesc:a73c2cb1847e4110041efe047cb9421e6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Print global footer.  <a href="#a73c2cb1847e4110041efe047cb9421e6">More...</a><br /></td></tr>
<tr class="separator:a73c2cb1847e4110041efe047cb9421e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa520a585d43bb30a6c483e69d40f01a1"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_j_s_o_n_printer.xhtml#aa520a585d43bb30a6c483e69d40f01a1">print_run_header</a> () override</td></tr>
<tr class="memdesc:aa520a585d43bb30a6c483e69d40f01a1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Print header before running all tests.  <a href="#aa520a585d43bb30a6c483e69d40f01a1">More...</a><br /></td></tr>
<tr class="separator:aa520a585d43bb30a6c483e69d40f01a1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a906cf0547c72a5e2c38697c7d6c669ba"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_j_s_o_n_printer.xhtml#a906cf0547c72a5e2c38697c7d6c669ba">print_run_footer</a> () override</td></tr>
<tr class="memdesc:a906cf0547c72a5e2c38697c7d6c669ba"><td class="mdescLeft">&#160;</td><td class="mdescRight">Print footer after running all tests.  <a href="#a906cf0547c72a5e2c38697c7d6c669ba">More...</a><br /></td></tr>
<tr class="separator:a906cf0547c72a5e2c38697c7d6c669ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0bd164e8c3de0910183bdb50315ab282"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_j_s_o_n_printer.xhtml#a0bd164e8c3de0910183bdb50315ab282">print_test_header</a> (const <a class="el" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml">TestInfo</a> &amp;info) override</td></tr>
<tr class="memdesc:a0bd164e8c3de0910183bdb50315ab282"><td class="mdescLeft">&#160;</td><td class="mdescRight">Print header before a test.  <a href="#a0bd164e8c3de0910183bdb50315ab282">More...</a><br /></td></tr>
<tr class="separator:a0bd164e8c3de0910183bdb50315ab282"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1012b95505daaa0be227d812b7329dc0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_j_s_o_n_printer.xhtml#a1012b95505daaa0be227d812b7329dc0">print_test_footer</a> () override</td></tr>
<tr class="memdesc:a1012b95505daaa0be227d812b7329dc0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Print footer after a test.  <a href="#a1012b95505daaa0be227d812b7329dc0">More...</a><br /></td></tr>
<tr class="separator:a1012b95505daaa0be227d812b7329dc0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a69ca6fda3763ffa3dd7a18ed70eb685b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_j_s_o_n_printer.xhtml#a69ca6fda3763ffa3dd7a18ed70eb685b">print_errors_header</a> () override</td></tr>
<tr class="memdesc:a69ca6fda3763ffa3dd7a18ed70eb685b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Print header before errors.  <a href="#a69ca6fda3763ffa3dd7a18ed70eb685b">More...</a><br /></td></tr>
<tr class="separator:a69ca6fda3763ffa3dd7a18ed70eb685b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a09777172c75440fb57577f538c3354fa"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_j_s_o_n_printer.xhtml#a09777172c75440fb57577f538c3354fa">print_errors_footer</a> () override</td></tr>
<tr class="memdesc:a09777172c75440fb57577f538c3354fa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Print footer after errors.  <a href="#a09777172c75440fb57577f538c3354fa">More...</a><br /></td></tr>
<tr class="separator:a09777172c75440fb57577f538c3354fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afb8becd7931a06d74a77ee9b51a67dd6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_j_s_o_n_printer.xhtml#afb8becd7931a06d74a77ee9b51a67dd6">print_error</a> (const std::exception &amp;<a class="el" href="namespacearm__compute.xhtml#a568b0fbfa3d903099d9c9f7b6acf188d">error</a>, bool expected) override</td></tr>
<tr class="memdesc:afb8becd7931a06d74a77ee9b51a67dd6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Print test error.  <a href="#afb8becd7931a06d74a77ee9b51a67dd6">More...</a><br /></td></tr>
<tr class="separator:afb8becd7931a06d74a77ee9b51a67dd6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1b8f26a11ed27e8d4af56b4b297e5cd2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_j_s_o_n_printer.xhtml#a1b8f26a11ed27e8d4af56b4b297e5cd2">print_info</a> (const std::string &amp;info) override</td></tr>
<tr class="memdesc:a1b8f26a11ed27e8d4af56b4b297e5cd2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Print test log info.  <a href="#a1b8f26a11ed27e8d4af56b4b297e5cd2">More...</a><br /></td></tr>
<tr class="separator:a1b8f26a11ed27e8d4af56b4b297e5cd2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1989aab0187e56f1cf45e92e892c9d2d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_j_s_o_n_printer.xhtml#a1989aab0187e56f1cf45e92e892c9d2d">print_measurements</a> (const <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_profiler.xhtml#a20bb995bb0d5415692917b2f9a36f948">Profiler::MeasurementsMap</a> &amp;measurements) override</td></tr>
<tr class="memdesc:a1989aab0187e56f1cf45e92e892c9d2d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Print measurements for a test.  <a href="#a1989aab0187e56f1cf45e92e892c9d2d">More...</a><br /></td></tr>
<tr class="separator:a1989aab0187e56f1cf45e92e892c9d2d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3109b7e2d037aafe5422e92c7388d89f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_j_s_o_n_printer.xhtml#a3109b7e2d037aafe5422e92c7388d89f">print_list_tests</a> (const std::vector&lt; <a class="el" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml">TestInfo</a> &gt; &amp;infos) override</td></tr>
<tr class="memdesc:a3109b7e2d037aafe5422e92c7388d89f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Print the list of all the tests.  <a href="#a3109b7e2d037aafe5422e92c7388d89f">More...</a><br /></td></tr>
<tr class="separator:a3109b7e2d037aafe5422e92c7388d89f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1test_1_1framework_1_1_printer"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1test_1_1framework_1_1_printer')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml">Printer</a></td></tr>
<tr class="memitem:ac2f08469bc84751d553b626f319730bf inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_printer"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#ac2f08469bc84751d553b626f319730bf">Printer</a> ()=default</td></tr>
<tr class="memdesc:ac2f08469bc84751d553b626f319730bf inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_printer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor.  <a href="#ac2f08469bc84751d553b626f319730bf">More...</a><br /></td></tr>
<tr class="separator:ac2f08469bc84751d553b626f319730bf inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_printer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae6481d49255440cc5261f751efc4e5bd inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_printer"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#ae6481d49255440cc5261f751efc4e5bd">Printer</a> (std::ostream &amp;stream)</td></tr>
<tr class="memdesc:ae6481d49255440cc5261f751efc4e5bd inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_printer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Construct printer with given output stream.  <a href="#ae6481d49255440cc5261f751efc4e5bd">More...</a><br /></td></tr>
<tr class="separator:ae6481d49255440cc5261f751efc4e5bd inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_printer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab1c9bd7e4bc60107ac6035125cf76024 inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_printer"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#ab1c9bd7e4bc60107ac6035125cf76024">Printer</a> (const <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml">Printer</a> &amp;)=delete</td></tr>
<tr class="separator:ab1c9bd7e4bc60107ac6035125cf76024 inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_printer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab85933c994519feb7bc7e12ea3db127f inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_printer"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml">Printer</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#ab85933c994519feb7bc7e12ea3db127f">operator=</a> (const <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml">Printer</a> &amp;)=delete</td></tr>
<tr class="separator:ab85933c994519feb7bc7e12ea3db127f inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_printer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9738d1a0a99daa96da890b7f2cdc7b9d inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_printer"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#a9738d1a0a99daa96da890b7f2cdc7b9d">Printer</a> (<a class="el" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml">Printer</a> &amp;&amp;)=default</td></tr>
<tr class="separator:a9738d1a0a99daa96da890b7f2cdc7b9d inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_printer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab9efee145dd3e600454d5790050051ab inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_printer"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml">Printer</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#ab9efee145dd3e600454d5790050051ab">operator=</a> (<a class="el" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml">Printer</a> &amp;&amp;)=default</td></tr>
<tr class="separator:ab9efee145dd3e600454d5790050051ab inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_printer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa62e7eb81a5dcf350ab8b677ddd8f60 inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_printer"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#aaa62e7eb81a5dcf350ab8b677ddd8f60">~Printer</a> ()=default</td></tr>
<tr class="separator:aaa62e7eb81a5dcf350ab8b677ddd8f60 inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_printer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4d2a8186429cb8b469e21c03dc4c8e33 inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_printer"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#a4d2a8186429cb8b469e21c03dc4c8e33">print</a> (const std::string &amp;str)</td></tr>
<tr class="memdesc:a4d2a8186429cb8b469e21c03dc4c8e33 inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_printer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Print given string.  <a href="#a4d2a8186429cb8b469e21c03dc4c8e33">More...</a><br /></td></tr>
<tr class="separator:a4d2a8186429cb8b469e21c03dc4c8e33 inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_printer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4c42c24c66df12502377695d5e54ffa7 inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_printer"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#a4c42c24c66df12502377695d5e54ffa7">set_stream</a> (std::ostream &amp;stream)</td></tr>
<tr class="memdesc:a4c42c24c66df12502377695d5e54ffa7 inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_printer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the output stream.  <a href="#a4c42c24c66df12502377695d5e54ffa7">More...</a><br /></td></tr>
<tr class="separator:a4c42c24c66df12502377695d5e54ffa7 inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_printer"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Implementation of a <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml">Printer</a> that produces JSON output. </p>

<p>Definition at line <a class="el" href="_j_s_o_n_printer_8h_source.xhtml#l00038">38</a> of file <a class="el" href="_j_s_o_n_printer_8h_source.xhtml">JSONPrinter.h</a>.</p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a2a3ad8a62c2d169ba98b99fc849cb8c0"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void print_entry </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Print an entry consisting of a (name, value) pair. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">name</td><td>Description of the value. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">value</td><td>Value. </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#adac997f56174b23d4e4ec5adccf1d836">Printer</a>.</p>

<p>Definition at line <a class="el" href="_j_s_o_n_printer_8cpp_source.xhtml#l00074">74</a> of file <a class="el" href="_j_s_o_n_printer_8cpp_source.xhtml">JSONPrinter.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;{</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    print_separator(_first_entry);</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    *_stream &lt;&lt; R<span class="stringliteral">&quot;(&quot;)&quot; &lt;&lt; name &lt;&lt; R</span><span class="stringliteral">&quot;(&quot; : &quot;)&quot; &lt;&lt; <a class="code" href="hwc_8hpp.xhtml#a0f61d63b009d0880a89c843bd50d8d76">value</a> &lt;&lt; R</span><span class="stringliteral">&quot;(&quot;)&quot;;</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="stringliteral">}</span></div><div class="ttc" id="hwc_8hpp_xhtml_a0f61d63b009d0880a89c843bd50d8d76"><div class="ttname"><a href="hwc_8hpp.xhtml#a0f61d63b009d0880a89c843bd50d8d76">value</a></div><div class="ttdeci">void * value</div><div class="ttdef"><b>Definition:</b> <a href="hwc_8hpp_source.xhtml#l00269">hwc.hpp:269</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="afb8becd7931a06d74a77ee9b51a67dd6"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void print_error </td>
          <td>(</td>
          <td class="paramtype">const std::exception &amp;&#160;</td>
          <td class="paramname"><em>error</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>expected</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Print test error. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">error</td><td>Description of the error. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">expected</td><td>Whether the error was expected or not. </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#a8b879125822f4f7e70d563c4f1672942">Printer</a>.</p>

<p>Definition at line <a class="el" href="_j_s_o_n_printer_8cpp_source.xhtml#l00155">155</a> of file <a class="el" href="_j_s_o_n_printer_8cpp_source.xhtml">JSONPrinter.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;{</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <span class="keywordflow">if</span>(expected)</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    {</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        _expected_errors.emplace_back(<a class="code" href="namespacearm__compute.xhtml#a568b0fbfa3d903099d9c9f7b6acf188d">error</a>.what());</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    }</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    {</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        _errors.emplace_back(<a class="code" href="namespacearm__compute.xhtml#a568b0fbfa3d903099d9c9f7b6acf188d">error</a>.what());</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    }</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;}</div><div class="ttc" id="namespacearm__compute_xhtml_a568b0fbfa3d903099d9c9f7b6acf188d"><div class="ttname"><a href="namespacearm__compute.xhtml#a568b0fbfa3d903099d9c9f7b6acf188d">arm_compute::error</a></div><div class="ttdeci">void error(const char *function, const char *file, const int line, const char *msg,...)</div><div class="ttdoc">Print an error message then throw an std::runtime_error. </div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a09777172c75440fb57577f538c3354fa"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void print_errors_footer </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Print footer after errors. </p>

<p>Implements <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#a0aa25e682d18e48c986ed28cca43ad77">Printer</a>.</p>

<p>Definition at line <a class="el" href="_j_s_o_n_printer_8cpp_source.xhtml#l00138">138</a> of file <a class="el" href="_j_s_o_n_printer_8cpp_source.xhtml">JSONPrinter.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;{</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    print_separator(_first_test_entry);</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    *_stream &lt;&lt; R<span class="stringliteral">&quot;(&quot;errors&quot; : [)&quot;;</span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="stringliteral">    print_strings(_errors.begin(), _errors.end());</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="stringliteral">    *_stream &lt;&lt; </span><span class="stringliteral">&quot;]&quot;</span>;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    *_stream &lt;&lt; R<span class="stringliteral">&quot;(, &quot;expected_errors&quot; : [)&quot;;</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="stringliteral">    print_strings(_expected_errors.begin(), _expected_errors.end());</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="stringliteral">    *_stream &lt;&lt; </span><span class="stringliteral">&quot;]&quot;</span>;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    *_stream &lt;&lt; R<span class="stringliteral">&quot;(, &quot;infos&quot; : [)&quot;;</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="stringliteral">    print_strings(_infos.begin(), _infos.end());</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="stringliteral">    *_stream &lt;&lt; </span><span class="stringliteral">&quot;]&quot;</span>;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a69ca6fda3763ffa3dd7a18ed70eb685b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void print_errors_header </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Print header before errors. </p>

<p>Implements <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#ab7cc3070c9af8540e5805f5df8b0214f">Printer</a>.</p>

<p>Definition at line <a class="el" href="_j_s_o_n_printer_8cpp_source.xhtml#l00131">131</a> of file <a class="el" href="_j_s_o_n_printer_8cpp_source.xhtml">JSONPrinter.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;{</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    _errors.clear();</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    _expected_errors.clear();</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    _infos.clear();</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a73c2cb1847e4110041efe047cb9421e6"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void print_global_footer </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Print global footer. </p>

<p>Implements <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#a4386bf1fd7f7e7b3b83b4dea9edbba58">Printer</a>.</p>

<p>Definition at line <a class="el" href="_j_s_o_n_printer_8cpp_source.xhtml#l00086">86</a> of file <a class="el" href="_j_s_o_n_printer_8cpp_source.xhtml">JSONPrinter.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;{</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    *_stream &lt;&lt; <span class="stringliteral">&quot;}\n&quot;</span>;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a4e3955a20faf3bcda615ae62b0b24efa"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void print_global_header </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Print global header. </p>

<p>Implements <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#ad15771962ae4349ff5fe189ba04f4139">Printer</a>.</p>

<p>Definition at line <a class="el" href="_j_s_o_n_printer_8cpp_source.xhtml#l00081">81</a> of file <a class="el" href="_j_s_o_n_printer_8cpp_source.xhtml">JSONPrinter.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;{</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    *_stream &lt;&lt; <span class="stringliteral">&quot;{&quot;</span>;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a1b8f26a11ed27e8d4af56b4b297e5cd2"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void print_info </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>info</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Print test log info. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">info</td><td>Description of the log. </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#a24f328af2266d153ab2ddd1ada7b02e2">Printer</a>.</p>

<p>Definition at line <a class="el" href="_j_s_o_n_printer_8cpp_source.xhtml#l00167">167</a> of file <a class="el" href="_j_s_o_n_printer_8cpp_source.xhtml">JSONPrinter.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;{</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    _infos.push_back(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a096668313a9a819d54a2e65ec21ff0cc">info</a>);</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;}</div><div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a096668313a9a819d54a2e65ec21ff0cc"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a096668313a9a819d54a2e65ec21ff0cc">arm_compute::test::validation::info</a></div><div class="ttdeci">src info() -&gt; set_format(Format::S16)</div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a3109b7e2d037aafe5422e92c7388d89f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void print_list_tests </td>
          <td>(</td>
          <td class="paramtype">const std::vector&lt; <a class="el" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml">TestInfo</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>infos</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Print the list of all the tests. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">infos</td><td>List of tests to print </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#a32ea6575b559a96e1972a9bbe8fe1252">Printer</a>.</p>

<p>Definition at line <a class="el" href="_j_s_o_n_printer_8cpp_source.xhtml#l00116">116</a> of file <a class="el" href="_j_s_o_n_printer_8cpp_source.xhtml">JSONPrinter.cpp</a>.</p>

<p>References <a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a096668313a9a819d54a2e65ec21ff0cc">arm_compute::test::validation::info()</a>.</p>
<div class="fragment"><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;{</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    *_stream &lt;&lt; R<span class="stringliteral">&quot;(, &quot;list_tests&quot; : {)&quot;;</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="stringliteral">    </span><span class="keywordtype">bool</span> first = <span class="keyword">true</span>;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="keywordflow">for</span>(<span class="keyword">auto</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a096668313a9a819d54a2e65ec21ff0cc">info</a> : infos)</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    {</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        <span class="keywordflow">if</span>(!first)</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        {</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;            *_stream &lt;&lt; <span class="stringliteral">&quot;,&quot;</span>;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        }</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        *_stream &lt;&lt; R<span class="stringliteral">&quot;(&quot;)&quot; &lt;&lt; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a096668313a9a819d54a2e65ec21ff0cc">info</a>.id &lt;&lt; R</span><span class="stringliteral">&quot;(&quot; : { &quot;name&quot;: &quot;)&quot; &lt;&lt; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a096668313a9a819d54a2e65ec21ff0cc">info</a>.name &lt;&lt; R</span><span class="stringliteral">&quot;(&quot;, &quot;mode&quot;: &quot;)&quot; &lt;&lt; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a096668313a9a819d54a2e65ec21ff0cc">info</a>.mode &lt;&lt; R</span><span class="stringliteral">&quot;(&quot;, &quot;status&quot; : &quot;)&quot; &lt;&lt; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a096668313a9a819d54a2e65ec21ff0cc">info</a>.status &lt;&lt; R</span><span class="stringliteral">&quot;(&quot; })&quot;;</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="stringliteral">        first = </span><span class="keyword">false</span>;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    }</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    *_stream &lt;&lt; <span class="stringliteral">&quot;}&quot;</span>;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;}</div><div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a096668313a9a819d54a2e65ec21ff0cc"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a096668313a9a819d54a2e65ec21ff0cc">arm_compute::test::validation::info</a></div><div class="ttdeci">src info() -&gt; set_format(Format::S16)</div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a1989aab0187e56f1cf45e92e892c9d2d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void print_measurements </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_profiler.xhtml#a20bb995bb0d5415692917b2f9a36f948">Profiler::MeasurementsMap</a> &amp;&#160;</td>
          <td class="paramname"><em>measurements</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Print measurements for a test. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">measurements</td><td>Measurements as collected by a <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_profiler.xhtml">Profiler</a>. </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#a93693778c8458ce21b0fc41b85467dd6">Printer</a>.</p>

<p>Definition at line <a class="el" href="_j_s_o_n_printer_8cpp_source.xhtml#l00172">172</a> of file <a class="el" href="_j_s_o_n_printer_8cpp_source.xhtml">JSONPrinter.cpp</a>.</p>

<p>References <a class="el" href="validation_2_n_e_o_n_2_g_e_m_m_8cpp_source.xhtml#l00115">arm_compute::test::validation::a</a>, <a class="el" href="accumulate_8cl_source.xhtml#l00041">accumulate()</a>, <a class="el" href="validation_2_n_e_o_n_2_g_e_m_m_8cpp_source.xhtml#l00116">arm_compute::test::validation::b</a>, <a class="el" href="tests_2framework_2_utils_8h_source.xhtml#l00093">arm_compute::test::join()</a>, <a class="el" href="caffe__data__extractor_8py_source.xhtml#l00019">caffe_data_extractor::str</a>, and <a class="el" href="_measurement_8h_source.xhtml#l00277">Measurement::value()</a>.</p>
<div class="fragment"><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;{</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    print_separator(_first_test_entry);</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    *_stream &lt;&lt; R<span class="stringliteral">&quot;(&quot;measurements&quot; : {)&quot;;</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="stringliteral">    </span><span class="keywordflow">for</span>(<span class="keyword">auto</span> i_it = measurements.cbegin(), i_end = measurements.cend(); i_it != i_end;)</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    {</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;        *_stream &lt;&lt; R<span class="stringliteral">&quot;(&quot;)&quot; &lt;&lt; i_it-&gt;first &lt;&lt; R</span><span class="stringliteral">&quot;(&quot; : {)&quot;;</span></div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="stringliteral">        </span><span class="keyword">auto</span> add_measurements = [](Measurement::Value <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aac40b7097f2bda9274ae07fa33d15a79">a</a>, <span class="keyword">const</span> Measurement &amp; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7b8004eef325a40dd43eb80755610fff">b</a>)</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;        {</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;            <span class="keywordflow">return</span> a + <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7b8004eef325a40dd43eb80755610fff">b</a>.value();</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        };</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;        <span class="keyword">auto</span> cmp_measurements = [](<span class="keyword">const</span> Measurement &amp; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aac40b7097f2bda9274ae07fa33d15a79">a</a>, <span class="keyword">const</span> Measurement &amp; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7b8004eef325a40dd43eb80755610fff">b</a>)</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;        {</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;            <span class="keywordflow">return</span> a.value() &lt; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7b8004eef325a40dd43eb80755610fff">b</a>.value();</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;        };</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;        <span class="keywordtype">int</span>        num_values    = i_it-&gt;second.size();</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> minmax_values = std::minmax_element(i_it-&gt;second.begin(), i_it-&gt;second.end(), cmp_measurements);</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;        Measurement::Value sum_values = <a class="code" href="accumulate_8cl.xhtml#a00e540076dd545ad59ac7482f8cdf514">std::accumulate</a>(i_it-&gt;second.cbegin(), i_it-&gt;second.cend(), Measurement::Value(minmax_values.first-&gt;value().is_floating_point), add_measurements);</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;        <span class="keywordflow">if</span>(num_values &gt; 2)</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;        {</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;            sum_values -= minmax_values.first-&gt;value() + minmax_values.second-&gt;value();</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;            num_values -= 2;</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        }</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;        <span class="keyword">auto</span> measurement_to_string = [](<span class="keyword">const</span> Measurement &amp; measurement)</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;        {</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;            <span class="keywordflow">if</span>(measurement.raw_data().size() == 1)</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;            {</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;                <span class="keywordflow">return</span> measurement.raw_data().front();</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;            }</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;            <span class="keywordflow">else</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;            {</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;                std::stringstream <a class="code" href="namespacecaffe__data__extractor.xhtml#a4b99ff73a8a869319570237b5c57ab03">str</a>;</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;                str &lt;&lt; R<span class="stringliteral">&quot;([&quot;)&quot;;</span></div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<span class="stringliteral">                str &lt;&lt; <a class="code" href="namespacearm__compute_1_1test.xhtml#aa18932675cbb5eb9c9dbf8ff4d7106c7">join</a>(measurement.raw_data().begin(), measurement.raw_data().end(), R</span><span class="stringliteral">&quot;(&quot;,&quot;)&quot;);</span></div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;<span class="stringliteral">                str &lt;&lt; R</span><span class="stringliteral">&quot;(&quot;])&quot;;</span></div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="stringliteral">                </span><span class="keywordflow">return</span> str.str();</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;            }</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;        };</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;        *_stream &lt;&lt; R<span class="stringliteral">&quot;(&quot;avg&quot; : )&quot; &lt;&lt; (sum_values / num_values) &lt;&lt; </span><span class="stringliteral">&quot;,&quot;</span>;</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;        <span class="keywordflow">if</span>(num_values &gt; 1)</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;        {</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;            *_stream &lt;&lt; R<span class="stringliteral">&quot;(&quot;min&quot; : )&quot; &lt;&lt; minmax_values.first-&gt;value() &lt;&lt; </span><span class="stringliteral">&quot;,&quot;</span>;</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;            *_stream &lt;&lt; R<span class="stringliteral">&quot;(&quot;max&quot; : )&quot; &lt;&lt; minmax_values.second-&gt;value() &lt;&lt; </span><span class="stringliteral">&quot;,&quot;</span>;</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        }</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;        *_stream &lt;&lt; R<span class="stringliteral">&quot;(&quot;raw&quot; : [)&quot; &lt;&lt; <a class="code" href="namespacearm__compute_1_1test.xhtml#aa18932675cbb5eb9c9dbf8ff4d7106c7">join</a>(i_it-&gt;second.begin(), i_it-&gt;second.end(), </span><span class="stringliteral">&quot;,&quot;</span>, measurement_to_string) &lt;&lt; <span class="stringliteral">&quot;],&quot;</span>;</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;        *_stream &lt;&lt; R<span class="stringliteral">&quot;(&quot;unit&quot; : &quot;)&quot; &lt;&lt; minmax_values.first-&gt;unit() &lt;&lt; R</span><span class="stringliteral">&quot;(&quot;)&quot;;</span></div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;<span class="stringliteral">        *_stream &lt;&lt; </span><span class="stringliteral">&quot;}&quot;</span>;</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;        <span class="keywordflow">if</span>(++i_it != i_end)</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;        {</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;            *_stream &lt;&lt; <span class="stringliteral">&quot;,&quot;</span>;</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;        }</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    }</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    *_stream &lt;&lt; <span class="stringliteral">&quot;}&quot;</span>;</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;}</div><div class="ttc" id="namespacearm__compute_1_1test_xhtml_aa18932675cbb5eb9c9dbf8ff4d7106c7"><div class="ttname"><a href="namespacearm__compute_1_1test.xhtml#aa18932675cbb5eb9c9dbf8ff4d7106c7">arm_compute::test::join</a></div><div class="ttdeci">std::string join(T first, T last, const std::string &amp;separator)</div><div class="ttdoc">Helper function to concatenate multiple strings. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2framework_2_utils_8h_source.xhtml#l00093">Utils.h:93</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_aac40b7097f2bda9274ae07fa33d15a79"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#aac40b7097f2bda9274ae07fa33d15a79">arm_compute::test::validation::a</a></div><div class="ttdeci">Tensor a</div><div class="ttdef"><b>Definition:</b> <a href="validation_2_n_e_o_n_2_g_e_m_m_8cpp_source.xhtml#l00115">GEMM.cpp:115</a></div></div>
<div class="ttc" id="namespacecaffe__data__extractor_xhtml_a4b99ff73a8a869319570237b5c57ab03"><div class="ttname"><a href="namespacecaffe__data__extractor.xhtml#a4b99ff73a8a869319570237b5c57ab03">caffe_data_extractor.str</a></div><div class="ttdeci">str</div><div class="ttdef"><b>Definition:</b> <a href="caffe__data__extractor_8py_source.xhtml#l00019">caffe_data_extractor.py:19</a></div></div>
<div class="ttc" id="accumulate_8cl_xhtml_a00e540076dd545ad59ac7482f8cdf514"><div class="ttname"><a href="accumulate_8cl.xhtml#a00e540076dd545ad59ac7482f8cdf514">accumulate</a></div><div class="ttdeci">__kernel void accumulate(__global uchar *input_ptr, uint input_stride_x, uint input_step_x, uint input_stride_y, uint input_step_y, uint input_offset_first_element_in_bytes, __global uchar *accu_ptr, uint accu_stride_x, uint accu_step_x, uint accu_stride_y, uint accu_step_y, uint accu_offset_first_element_in_bytes)</div><div class="ttdoc">This function accumulates an input image into output image. </div><div class="ttdef"><b>Definition:</b> <a href="accumulate_8cl_source.xhtml#l00041">accumulate.cl:41</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a7b8004eef325a40dd43eb80755610fff"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a7b8004eef325a40dd43eb80755610fff">arm_compute::test::validation::b</a></div><div class="ttdeci">Tensor b</div><div class="ttdef"><b>Definition:</b> <a href="validation_2_n_e_o_n_2_g_e_m_m_8cpp_source.xhtml#l00116">GEMM.cpp:116</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a906cf0547c72a5e2c38697c7d6c669ba"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void print_run_footer </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Print footer after running all tests. </p>

<p>Implements <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#a2551b01adb00e6af451202a3aa2fe30a">Printer</a>.</p>

<p>Definition at line <a class="el" href="_j_s_o_n_printer_8cpp_source.xhtml#l00098">98</a> of file <a class="el" href="_j_s_o_n_printer_8cpp_source.xhtml">JSONPrinter.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;{</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    *_stream &lt;&lt; <span class="stringliteral">&quot;}&quot;</span>;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a class="anchor" id="aa520a585d43bb30a6c483e69d40f01a1"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void print_run_header </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Print header before running all tests. </p>

<p>Implements <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#aa8974e876a9d2e4ed49aeab9b0a18a96">Printer</a>.</p>

<p>Definition at line <a class="el" href="_j_s_o_n_printer_8cpp_source.xhtml#l00091">91</a> of file <a class="el" href="_j_s_o_n_printer_8cpp_source.xhtml">JSONPrinter.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;{</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    print_separator(_first_entry);</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    *_stream &lt;&lt; R<span class="stringliteral">&quot;(&quot;tests&quot; : {)&quot;;</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="stringliteral">}</span></div></div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a1012b95505daaa0be227d812b7329dc0"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void print_test_footer </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Print footer after a test. </p>

<p>Implements <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#a983ccd98b01612e3415a74981ec7d8ab">Printer</a>.</p>

<p>Definition at line <a class="el" href="_j_s_o_n_printer_8cpp_source.xhtml#l00111">111</a> of file <a class="el" href="_j_s_o_n_printer_8cpp_source.xhtml">JSONPrinter.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;{</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    *_stream &lt;&lt; <span class="stringliteral">&quot;}&quot;</span>;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a0bd164e8c3de0910183bdb50315ab282"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void print_test_header </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml">TestInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>info</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Print header before a test. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">info</td><td>Test info. </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#a5c0a4b9fd162ee32e0e6231947b6e9b0">Printer</a>.</p>

<p>Definition at line <a class="el" href="_j_s_o_n_printer_8cpp_source.xhtml#l00103">103</a> of file <a class="el" href="_j_s_o_n_printer_8cpp_source.xhtml">JSONPrinter.cpp</a>.</p>

<p>References <a class="el" href="_framework_8h_source.xhtml#l00069">TestInfo::name</a>.</p>
<div class="fragment"><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;{</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    print_separator(_first_test);</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    _first_test_entry = <span class="keyword">true</span>;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    *_stream &lt;&lt; R<span class="stringliteral">&quot;(&quot;)&quot; &lt;&lt; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a096668313a9a819d54a2e65ec21ff0cc">info</a>.name &lt;&lt; R</span><span class="stringliteral">&quot;(&quot; : {)&quot;;</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="stringliteral">}</span></div><div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a096668313a9a819d54a2e65ec21ff0cc"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a096668313a9a819d54a2e65ec21ff0cc">arm_compute::test::validation::info</a></div><div class="ttdeci">src info() -&gt; set_format(Format::S16)</div></div>
</div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>tests/framework/printers/<a class="el" href="_j_s_o_n_printer_8h_source.xhtml">JSONPrinter.h</a></li>
<li>tests/framework/printers/<a class="el" href="_j_s_o_n_printer_8cpp_source.xhtml">JSONPrinter.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1test.xhtml">test</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml">framework</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_j_s_o_n_printer.xhtml">JSONPrinter</a></li>
    <li class="footer">Generated on Thu Dec 14 2017 23:48:38 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
  </ul>
</div>
</body>
</html>
