<!-- HTML header for doxygen 1.8.9.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: IAccessor Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Compute Library
   &#160;<span id="projectnumber">17.12</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li><a href="classes.xhtml"><span>Data&#160;Structure&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Data&#160;Fields</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarm__compute_1_1test_1_1_i_accessor.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">IAccessor Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p>Common interface to provide information and access to tensor like structures.  
 <a href="classarm__compute_1_1test_1_1_i_accessor.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_i_accessor_8h_source.xhtml">IAccessor.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a04e5197de7318cec1ebfd3cea50f5de5"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1_i_accessor.xhtml#a04e5197de7318cec1ebfd3cea50f5de5">~IAccessor</a> ()=default</td></tr>
<tr class="memdesc:a04e5197de7318cec1ebfd3cea50f5de5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Virtual destructor.  <a href="#a04e5197de7318cec1ebfd3cea50f5de5">More...</a><br /></td></tr>
<tr class="separator:a04e5197de7318cec1ebfd3cea50f5de5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1c5e120ea2712b21296aa8f62421d3c1"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1_i_accessor.xhtml#a1c5e120ea2712b21296aa8f62421d3c1">shape</a> () const =0</td></tr>
<tr class="memdesc:a1c5e120ea2712b21296aa8f62421d3c1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Shape of the tensor.  <a href="#a1c5e120ea2712b21296aa8f62421d3c1">More...</a><br /></td></tr>
<tr class="separator:a1c5e120ea2712b21296aa8f62421d3c1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa459796b5489eca8a9160cb5dcf1a103"><td class="memItemLeft" align="right" valign="top">virtual size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1_i_accessor.xhtml#aa459796b5489eca8a9160cb5dcf1a103">element_size</a> () const =0</td></tr>
<tr class="memdesc:aa459796b5489eca8a9160cb5dcf1a103"><td class="mdescLeft">&#160;</td><td class="mdescRight">Size of each element in the tensor in bytes.  <a href="#aa459796b5489eca8a9160cb5dcf1a103">More...</a><br /></td></tr>
<tr class="separator:aa459796b5489eca8a9160cb5dcf1a103"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa983ddaeded5756189f46428be79c631"><td class="memItemLeft" align="right" valign="top">virtual size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1_i_accessor.xhtml#aa983ddaeded5756189f46428be79c631">size</a> () const =0</td></tr>
<tr class="memdesc:aa983ddaeded5756189f46428be79c631"><td class="mdescLeft">&#160;</td><td class="mdescRight">Total size of the tensor in bytes.  <a href="#aa983ddaeded5756189f46428be79c631">More...</a><br /></td></tr>
<tr class="separator:aa983ddaeded5756189f46428be79c631"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a57360dd9ca408834c0ea1a8ef70a11f4"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58">Format</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1_i_accessor.xhtml#a57360dd9ca408834c0ea1a8ef70a11f4">format</a> () const =0</td></tr>
<tr class="memdesc:a57360dd9ca408834c0ea1a8ef70a11f4"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="struct_image.xhtml" title="Structure to hold Image information. ">Image</a> format of the tensor.  <a href="#a57360dd9ca408834c0ea1a8ef70a11f4">More...</a><br /></td></tr>
<tr class="separator:a57360dd9ca408834c0ea1a8ef70a11f4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7cfb31af63202568efef5214acfbf3ba"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1_i_accessor.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a> () const =0</td></tr>
<tr class="memdesc:a7cfb31af63202568efef5214acfbf3ba"><td class="mdescLeft">&#160;</td><td class="mdescRight">Data type of the tensor.  <a href="#a7cfb31af63202568efef5214acfbf3ba">More...</a><br /></td></tr>
<tr class="separator:a7cfb31af63202568efef5214acfbf3ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac492280ef2d7889f1226d34743b74459"><td class="memItemLeft" align="right" valign="top">virtual int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1_i_accessor.xhtml#ac492280ef2d7889f1226d34743b74459">num_channels</a> () const =0</td></tr>
<tr class="memdesc:ac492280ef2d7889f1226d34743b74459"><td class="mdescLeft">&#160;</td><td class="mdescRight">Number of channels of the tensor.  <a href="#ac492280ef2d7889f1226d34743b74459">More...</a><br /></td></tr>
<tr class="separator:ac492280ef2d7889f1226d34743b74459"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7596bc2928432a0ac2271bc9184d692e"><td class="memItemLeft" align="right" valign="top">virtual int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1_i_accessor.xhtml#a7596bc2928432a0ac2271bc9184d692e">num_elements</a> () const =0</td></tr>
<tr class="memdesc:a7596bc2928432a0ac2271bc9184d692e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Number of elements of the tensor.  <a href="#a7596bc2928432a0ac2271bc9184d692e">More...</a><br /></td></tr>
<tr class="separator:a7596bc2928432a0ac2271bc9184d692e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a07b929c34ad1dc823d8315876aa403ce"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespacearm__compute.xhtml#a4467b302fc9ec312c40580336ab783da">PaddingSize</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1_i_accessor.xhtml#a07b929c34ad1dc823d8315876aa403ce">padding</a> () const =0</td></tr>
<tr class="memdesc:a07b929c34ad1dc823d8315876aa403ce"><td class="mdescLeft">&#160;</td><td class="mdescRight">Available padding around the tensor.  <a href="#a07b929c34ad1dc823d8315876aa403ce">More...</a><br /></td></tr>
<tr class="separator:a07b929c34ad1dc823d8315876aa403ce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab21a362740e892b6e913bd8db03b0e67"><td class="memItemLeft" align="right" valign="top">virtual int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1_i_accessor.xhtml#ab21a362740e892b6e913bd8db03b0e67">fixed_point_position</a> () const =0</td></tr>
<tr class="memdesc:ab21a362740e892b6e913bd8db03b0e67"><td class="mdescLeft">&#160;</td><td class="mdescRight">Number of bits for the fractional part.  <a href="#ab21a362740e892b6e913bd8db03b0e67">More...</a><br /></td></tr>
<tr class="separator:ab21a362740e892b6e913bd8db03b0e67"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f3e1a3200223e6a304a533b1016e749"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="structarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1_i_accessor.xhtml#a3f3e1a3200223e6a304a533b1016e749">quantization_info</a> () const =0</td></tr>
<tr class="memdesc:a3f3e1a3200223e6a304a533b1016e749"><td class="mdescLeft">&#160;</td><td class="mdescRight">Quantization info in case of asymmetric quantized type.  <a href="#a3f3e1a3200223e6a304a533b1016e749">More...</a><br /></td></tr>
<tr class="separator:a3f3e1a3200223e6a304a533b1016e749"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a583a35e4fd72f072a6b76ce58c2e3998"><td class="memItemLeft" align="right" valign="top">virtual const void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1_i_accessor.xhtml#a583a35e4fd72f072a6b76ce58c2e3998">operator()</a> (const <a class="el" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a> &amp;coord) const =0</td></tr>
<tr class="memdesc:a583a35e4fd72f072a6b76ce58c2e3998"><td class="mdescLeft">&#160;</td><td class="mdescRight">Read only access to the specified element.  <a href="#a583a35e4fd72f072a6b76ce58c2e3998">More...</a><br /></td></tr>
<tr class="separator:a583a35e4fd72f072a6b76ce58c2e3998"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9fd1359f2b5ea45a31bd79b381281eb4"><td class="memItemLeft" align="right" valign="top">virtual void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1_i_accessor.xhtml#a9fd1359f2b5ea45a31bd79b381281eb4">operator()</a> (const <a class="el" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a> &amp;coord)=0</td></tr>
<tr class="memdesc:a9fd1359f2b5ea45a31bd79b381281eb4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Access to the specified element.  <a href="#a9fd1359f2b5ea45a31bd79b381281eb4">More...</a><br /></td></tr>
<tr class="separator:a9fd1359f2b5ea45a31bd79b381281eb4"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Common interface to provide information and access to tensor like structures. </p>

<p>Definition at line <a class="el" href="_i_accessor_8h_source.xhtml#l00037">37</a> of file <a class="el" href="_i_accessor_8h_source.xhtml">IAccessor.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a04e5197de7318cec1ebfd3cea50f5de5"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual ~<a class="el" href="classarm__compute_1_1test_1_1_i_accessor.xhtml">IAccessor</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Virtual destructor. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a7cfb31af63202568efef5214acfbf3ba"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a> data_type </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Data type of the tensor. </p>

<p>Implemented in <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#a9a3e72153aeb3ed212e9c3698774e881">SimpleTensor&lt; T &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#a9a3e72153aeb3ed212e9c3698774e881">SimpleTensor&lt; uint32_t &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#a9a3e72153aeb3ed212e9c3698774e881">SimpleTensor&lt; T2 &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#a9a3e72153aeb3ed212e9c3698774e881">SimpleTensor&lt; T3 &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#a9a3e72153aeb3ed212e9c3698774e881">SimpleTensor&lt; float &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#a9a3e72153aeb3ed212e9c3698774e881">SimpleTensor&lt; int32_t &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#a9a3e72153aeb3ed212e9c3698774e881">SimpleTensor&lt; uint8_t &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_c_l_accessor.xhtml#a9a3e72153aeb3ed212e9c3698774e881">CLAccessor</a>, <a class="el" href="classarm__compute_1_1test_1_1_g_c_accessor.xhtml#a9a3e72153aeb3ed212e9c3698774e881">GCAccessor</a>, and <a class="el" href="classarm__compute_1_1test_1_1_accessor.xhtml#a9a3e72153aeb3ed212e9c3698774e881">Accessor</a>.</p>

<p>Referenced by <a class="el" href="_validation_8cpp_source.xhtml#l00173">arm_compute::test::validation::validate()</a>, and <a class="el" href="_validation_8h_source.xhtml#l00389">arm_compute::test::validation::validate_wrap()</a>.</p>

</div>
</div>
<a class="anchor" id="aa459796b5489eca8a9160cb5dcf1a103"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual size_t element_size </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Size of each element in the tensor in bytes. </p>

<p>Implemented in <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#a62b67b578f684c4d516843c9dea86a23">SimpleTensor&lt; T &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#a62b67b578f684c4d516843c9dea86a23">SimpleTensor&lt; uint32_t &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#a62b67b578f684c4d516843c9dea86a23">SimpleTensor&lt; T2 &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#a62b67b578f684c4d516843c9dea86a23">SimpleTensor&lt; T3 &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#a62b67b578f684c4d516843c9dea86a23">SimpleTensor&lt; float &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#a62b67b578f684c4d516843c9dea86a23">SimpleTensor&lt; int32_t &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#a62b67b578f684c4d516843c9dea86a23">SimpleTensor&lt; uint8_t &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_c_l_accessor.xhtml#a62b67b578f684c4d516843c9dea86a23">CLAccessor</a>, <a class="el" href="classarm__compute_1_1test_1_1_g_c_accessor.xhtml#a62b67b578f684c4d516843c9dea86a23">GCAccessor</a>, and <a class="el" href="classarm__compute_1_1test_1_1_accessor.xhtml#a62b67b578f684c4d516843c9dea86a23">Accessor</a>.</p>

<p>Referenced by <a class="el" href="_validation_8h_source.xhtml#l00328">arm_compute::test::validation::validate()</a>, and <a class="el" href="_validation_8h_source.xhtml#l00389">arm_compute::test::validation::validate_wrap()</a>.</p>

</div>
</div>
<a class="anchor" id="ab21a362740e892b6e913bd8db03b0e67"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual int fixed_point_position </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Number of bits for the fractional part. </p>

<p>Implemented in <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#a35ccf2eb0c18a15feab2db98b307b78b">SimpleTensor&lt; T &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#a35ccf2eb0c18a15feab2db98b307b78b">SimpleTensor&lt; uint32_t &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#a35ccf2eb0c18a15feab2db98b307b78b">SimpleTensor&lt; T2 &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#a35ccf2eb0c18a15feab2db98b307b78b">SimpleTensor&lt; T3 &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#a35ccf2eb0c18a15feab2db98b307b78b">SimpleTensor&lt; float &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#a35ccf2eb0c18a15feab2db98b307b78b">SimpleTensor&lt; int32_t &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#a35ccf2eb0c18a15feab2db98b307b78b">SimpleTensor&lt; uint8_t &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_c_l_accessor.xhtml#a35ccf2eb0c18a15feab2db98b307b78b">CLAccessor</a>, <a class="el" href="classarm__compute_1_1test_1_1_g_c_accessor.xhtml#a35ccf2eb0c18a15feab2db98b307b78b">GCAccessor</a>, and <a class="el" href="classarm__compute_1_1test_1_1_accessor.xhtml#a35ccf2eb0c18a15feab2db98b307b78b">Accessor</a>.</p>

</div>
</div>
<a class="anchor" id="a57360dd9ca408834c0ea1a8ef70a11f4"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58">Format</a> format </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p><a class="el" href="struct_image.xhtml" title="Structure to hold Image information. ">Image</a> format of the tensor. </p>

<p>Implemented in <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#ac4b36cc1e56b0b7e579bb4b7196490db">SimpleTensor&lt; T &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#ac4b36cc1e56b0b7e579bb4b7196490db">SimpleTensor&lt; uint32_t &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#ac4b36cc1e56b0b7e579bb4b7196490db">SimpleTensor&lt; T2 &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#ac4b36cc1e56b0b7e579bb4b7196490db">SimpleTensor&lt; T3 &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#ac4b36cc1e56b0b7e579bb4b7196490db">SimpleTensor&lt; float &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#ac4b36cc1e56b0b7e579bb4b7196490db">SimpleTensor&lt; int32_t &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#ac4b36cc1e56b0b7e579bb4b7196490db">SimpleTensor&lt; uint8_t &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_c_l_accessor.xhtml#ac4b36cc1e56b0b7e579bb4b7196490db">CLAccessor</a>, <a class="el" href="classarm__compute_1_1test_1_1_g_c_accessor.xhtml#ac4b36cc1e56b0b7e579bb4b7196490db">GCAccessor</a>, and <a class="el" href="classarm__compute_1_1test_1_1_accessor.xhtml#ac4b36cc1e56b0b7e579bb4b7196490db">Accessor</a>.</p>

<p>Referenced by <a class="el" href="_validation_8h_source.xhtml#l00328">arm_compute::test::validation::validate()</a>, and <a class="el" href="_validation_8h_source.xhtml#l00389">arm_compute::test::validation::validate_wrap()</a>.</p>

</div>
</div>
<a class="anchor" id="ac492280ef2d7889f1226d34743b74459"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual int num_channels </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Number of channels of the tensor. </p>

<p>Implemented in <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#abdd3637f2bbde9d7d0cc0b7bbd8400bb">SimpleTensor&lt; T &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#abdd3637f2bbde9d7d0cc0b7bbd8400bb">SimpleTensor&lt; uint32_t &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#abdd3637f2bbde9d7d0cc0b7bbd8400bb">SimpleTensor&lt; T2 &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#abdd3637f2bbde9d7d0cc0b7bbd8400bb">SimpleTensor&lt; T3 &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#abdd3637f2bbde9d7d0cc0b7bbd8400bb">SimpleTensor&lt; float &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#abdd3637f2bbde9d7d0cc0b7bbd8400bb">SimpleTensor&lt; int32_t &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#abdd3637f2bbde9d7d0cc0b7bbd8400bb">SimpleTensor&lt; uint8_t &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_c_l_accessor.xhtml#abdd3637f2bbde9d7d0cc0b7bbd8400bb">CLAccessor</a>, <a class="el" href="classarm__compute_1_1test_1_1_g_c_accessor.xhtml#abdd3637f2bbde9d7d0cc0b7bbd8400bb">GCAccessor</a>, and <a class="el" href="classarm__compute_1_1test_1_1_accessor.xhtml#abdd3637f2bbde9d7d0cc0b7bbd8400bb">Accessor</a>.</p>

<p>Referenced by <a class="el" href="_validation_8cpp_source.xhtml#l00173">arm_compute::test::validation::validate()</a>, and <a class="el" href="_validation_8h_source.xhtml#l00389">arm_compute::test::validation::validate_wrap()</a>.</p>

</div>
</div>
<a class="anchor" id="a7596bc2928432a0ac2271bc9184d692e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual int num_elements </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Number of elements of the tensor. </p>

<p>Implemented in <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#aedcfdd4c3b92fe0d63b5463c7ad1d21e">SimpleTensor&lt; T &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#aedcfdd4c3b92fe0d63b5463c7ad1d21e">SimpleTensor&lt; uint32_t &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#aedcfdd4c3b92fe0d63b5463c7ad1d21e">SimpleTensor&lt; T2 &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#aedcfdd4c3b92fe0d63b5463c7ad1d21e">SimpleTensor&lt; T3 &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#aedcfdd4c3b92fe0d63b5463c7ad1d21e">SimpleTensor&lt; float &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#aedcfdd4c3b92fe0d63b5463c7ad1d21e">SimpleTensor&lt; int32_t &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#aedcfdd4c3b92fe0d63b5463c7ad1d21e">SimpleTensor&lt; uint8_t &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_c_l_accessor.xhtml#aedcfdd4c3b92fe0d63b5463c7ad1d21e">CLAccessor</a>, <a class="el" href="classarm__compute_1_1test_1_1_g_c_accessor.xhtml#aedcfdd4c3b92fe0d63b5463c7ad1d21e">GCAccessor</a>, and <a class="el" href="classarm__compute_1_1test_1_1_accessor.xhtml#aedcfdd4c3b92fe0d63b5463c7ad1d21e">Accessor</a>.</p>

<p>Referenced by <a class="el" href="_validation_8cpp_source.xhtml#l00173">arm_compute::test::validation::validate()</a>, and <a class="el" href="_validation_8h_source.xhtml#l00389">arm_compute::test::validation::validate_wrap()</a>.</p>

</div>
</div>
<a class="anchor" id="a583a35e4fd72f072a6b76ce58c2e3998"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const void* operator() </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a> &amp;&#160;</td>
          <td class="paramname"><em>coord</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Read only access to the specified element. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">coord</td><td><a class="el" href="classarm__compute_1_1_coordinates.xhtml" title="Coordinates of an item. ">Coordinates</a> of the desired element.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A pointer to the desired element. </dd></dl>

<p>Implemented in <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#a39537b09ccc3ce3d17922f4ef49a123f">SimpleTensor&lt; T &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#a39537b09ccc3ce3d17922f4ef49a123f">SimpleTensor&lt; uint32_t &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#a39537b09ccc3ce3d17922f4ef49a123f">SimpleTensor&lt; T2 &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#a39537b09ccc3ce3d17922f4ef49a123f">SimpleTensor&lt; T3 &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#a39537b09ccc3ce3d17922f4ef49a123f">SimpleTensor&lt; float &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#a39537b09ccc3ce3d17922f4ef49a123f">SimpleTensor&lt; int32_t &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#a39537b09ccc3ce3d17922f4ef49a123f">SimpleTensor&lt; uint8_t &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_raw_tensor.xhtml#a39537b09ccc3ce3d17922f4ef49a123f">RawTensor</a>, <a class="el" href="classarm__compute_1_1test_1_1_c_l_accessor.xhtml#a39537b09ccc3ce3d17922f4ef49a123f">CLAccessor</a>, <a class="el" href="classarm__compute_1_1test_1_1_g_c_accessor.xhtml#a39537b09ccc3ce3d17922f4ef49a123f">GCAccessor</a>, and <a class="el" href="classarm__compute_1_1test_1_1_accessor.xhtml#a39537b09ccc3ce3d17922f4ef49a123f">Accessor</a>.</p>

</div>
</div>
<a class="anchor" id="a9fd1359f2b5ea45a31bd79b381281eb4"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void* operator() </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a> &amp;&#160;</td>
          <td class="paramname"><em>coord</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Access to the specified element. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">coord</td><td><a class="el" href="classarm__compute_1_1_coordinates.xhtml" title="Coordinates of an item. ">Coordinates</a> of the desired element.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A pointer to the desired element. </dd></dl>

<p>Implemented in <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#a2df95f7046b81e69a1265a42202ea068">SimpleTensor&lt; T &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#a2df95f7046b81e69a1265a42202ea068">SimpleTensor&lt; uint32_t &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#a2df95f7046b81e69a1265a42202ea068">SimpleTensor&lt; T2 &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#a2df95f7046b81e69a1265a42202ea068">SimpleTensor&lt; T3 &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#a2df95f7046b81e69a1265a42202ea068">SimpleTensor&lt; float &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#a2df95f7046b81e69a1265a42202ea068">SimpleTensor&lt; int32_t &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#a2df95f7046b81e69a1265a42202ea068">SimpleTensor&lt; uint8_t &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_raw_tensor.xhtml#a2df95f7046b81e69a1265a42202ea068">RawTensor</a>, <a class="el" href="classarm__compute_1_1test_1_1_c_l_accessor.xhtml#a2df95f7046b81e69a1265a42202ea068">CLAccessor</a>, <a class="el" href="classarm__compute_1_1test_1_1_g_c_accessor.xhtml#a2df95f7046b81e69a1265a42202ea068">GCAccessor</a>, and <a class="el" href="classarm__compute_1_1test_1_1_accessor.xhtml#a2df95f7046b81e69a1265a42202ea068">Accessor</a>.</p>

</div>
</div>
<a class="anchor" id="a07b929c34ad1dc823d8315876aa403ce"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespacearm__compute.xhtml#a4467b302fc9ec312c40580336ab783da">PaddingSize</a> padding </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Available padding around the tensor. </p>

<p>Implemented in <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#a79e20eacb1e963e24a21ebd7369effd7">SimpleTensor&lt; T &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#a79e20eacb1e963e24a21ebd7369effd7">SimpleTensor&lt; uint32_t &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#a79e20eacb1e963e24a21ebd7369effd7">SimpleTensor&lt; T2 &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#a79e20eacb1e963e24a21ebd7369effd7">SimpleTensor&lt; T3 &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#a79e20eacb1e963e24a21ebd7369effd7">SimpleTensor&lt; float &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#a79e20eacb1e963e24a21ebd7369effd7">SimpleTensor&lt; int32_t &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#a79e20eacb1e963e24a21ebd7369effd7">SimpleTensor&lt; uint8_t &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_c_l_accessor.xhtml#a79e20eacb1e963e24a21ebd7369effd7">CLAccessor</a>, <a class="el" href="classarm__compute_1_1test_1_1_g_c_accessor.xhtml#a79e20eacb1e963e24a21ebd7369effd7">GCAccessor</a>, and <a class="el" href="classarm__compute_1_1test_1_1_accessor.xhtml#a79e20eacb1e963e24a21ebd7369effd7">Accessor</a>.</p>

</div>
</div>
<a class="anchor" id="a3f3e1a3200223e6a304a533b1016e749"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="structarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a> quantization_info </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Quantization info in case of asymmetric quantized type. </p>

<p>Implemented in <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#ac74736e3863207232a23b7181c1d0f44">SimpleTensor&lt; T &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#ac74736e3863207232a23b7181c1d0f44">SimpleTensor&lt; uint32_t &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#ac74736e3863207232a23b7181c1d0f44">SimpleTensor&lt; T2 &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#ac74736e3863207232a23b7181c1d0f44">SimpleTensor&lt; T3 &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#ac74736e3863207232a23b7181c1d0f44">SimpleTensor&lt; float &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#ac74736e3863207232a23b7181c1d0f44">SimpleTensor&lt; int32_t &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#ac74736e3863207232a23b7181c1d0f44">SimpleTensor&lt; uint8_t &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_c_l_accessor.xhtml#ac74736e3863207232a23b7181c1d0f44">CLAccessor</a>, <a class="el" href="classarm__compute_1_1test_1_1_g_c_accessor.xhtml#ac74736e3863207232a23b7181c1d0f44">GCAccessor</a>, and <a class="el" href="classarm__compute_1_1test_1_1_accessor.xhtml#ac74736e3863207232a23b7181c1d0f44">Accessor</a>.</p>

</div>
</div>
<a class="anchor" id="a1c5e120ea2712b21296aa8f62421d3c1"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> shape </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Shape of the tensor. </p>

<p>Implemented in <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#aba5871b3e4a65d057ec1c28fce8b00ba">SimpleTensor&lt; T &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#aba5871b3e4a65d057ec1c28fce8b00ba">SimpleTensor&lt; uint32_t &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#aba5871b3e4a65d057ec1c28fce8b00ba">SimpleTensor&lt; T2 &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#aba5871b3e4a65d057ec1c28fce8b00ba">SimpleTensor&lt; T3 &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#aba5871b3e4a65d057ec1c28fce8b00ba">SimpleTensor&lt; float &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#aba5871b3e4a65d057ec1c28fce8b00ba">SimpleTensor&lt; int32_t &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#aba5871b3e4a65d057ec1c28fce8b00ba">SimpleTensor&lt; uint8_t &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_c_l_accessor.xhtml#aba5871b3e4a65d057ec1c28fce8b00ba">CLAccessor</a>, <a class="el" href="classarm__compute_1_1test_1_1_g_c_accessor.xhtml#aba5871b3e4a65d057ec1c28fce8b00ba">GCAccessor</a>, and <a class="el" href="classarm__compute_1_1test_1_1_accessor.xhtml#aba5871b3e4a65d057ec1c28fce8b00ba">Accessor</a>.</p>

<p>Referenced by <a class="el" href="_validation_8cpp_source.xhtml#l00173">arm_compute::test::validation::validate()</a>, and <a class="el" href="_validation_8h_source.xhtml#l00321">arm_compute::test::validation::validate_wrap()</a>.</p>

</div>
</div>
<a class="anchor" id="aa983ddaeded5756189f46428be79c631"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual size_t size </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Total size of the tensor in bytes. </p>

<p>Implemented in <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#ad7701a09a964eab360a8e51fa7ad2c16">SimpleTensor&lt; T &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#ad7701a09a964eab360a8e51fa7ad2c16">SimpleTensor&lt; uint32_t &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#ad7701a09a964eab360a8e51fa7ad2c16">SimpleTensor&lt; T2 &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#ad7701a09a964eab360a8e51fa7ad2c16">SimpleTensor&lt; T3 &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#ad7701a09a964eab360a8e51fa7ad2c16">SimpleTensor&lt; float &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#ad7701a09a964eab360a8e51fa7ad2c16">SimpleTensor&lt; int32_t &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml#ad7701a09a964eab360a8e51fa7ad2c16">SimpleTensor&lt; uint8_t &gt;</a>, <a class="el" href="classarm__compute_1_1test_1_1_c_l_accessor.xhtml#ad7701a09a964eab360a8e51fa7ad2c16">CLAccessor</a>, <a class="el" href="classarm__compute_1_1test_1_1_g_c_accessor.xhtml#ad7701a09a964eab360a8e51fa7ad2c16">GCAccessor</a>, and <a class="el" href="classarm__compute_1_1test_1_1_accessor.xhtml#ad7701a09a964eab360a8e51fa7ad2c16">Accessor</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>tests/<a class="el" href="_i_accessor_8h_source.xhtml">IAccessor.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1test.xhtml">test</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1test_1_1_i_accessor.xhtml">IAccessor</a></li>
    <li class="footer">Generated on Thu Dec 14 2017 23:48:37 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
  </ul>
</div>
</body>
</html>
