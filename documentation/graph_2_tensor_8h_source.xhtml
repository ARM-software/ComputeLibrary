<!-- HTML header for doxygen 1.8.9.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: arm_compute/graph/Tensor.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Compute Library
   &#160;<span id="projectnumber">17.12</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>Globals</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('graph_2_tensor_8h_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">Tensor.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="graph_2_tensor_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2017 ARM Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifndef __ARM_COMPUTE_GRAPH_TENSOR_H__</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#define __ARM_COMPUTE_GRAPH_TENSOR_H__</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_tensor_accessor_8h.xhtml">arm_compute/graph/ITensorAccessor.h</a>&quot;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_tensor_object_8h.xhtml">arm_compute/graph/ITensorObject.h</a>&quot;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2graph_2_types_8h.xhtml">arm_compute/graph/Types.h</a>&quot;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_toolchain_support_8h.xhtml">support/ToolchainSupport.h</a>&quot;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &lt;memory&gt;</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;{</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">namespace </span>graph</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;{</div><div class="line"><a name="l00039"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1_tensor.xhtml">   39</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1graph_1_1_tensor.xhtml">Tensor</a> final : <span class="keyword">public</span> <a class="code" href="classarm__compute_1_1graph_1_1_i_tensor_object.xhtml">ITensorObject</a></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;{</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <a class="code" href="classarm__compute_1_1graph_1_1_tensor.xhtml#a781a239b3f8dcb682e738cfa6bce8157">Tensor</a>(<a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&amp;<a class="code" href="classarm__compute_1_1graph_1_1_tensor.xhtml#ad129de4883c35830834987e9b68314e1">info</a>);</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> AccessorType&gt;</div><div class="line"><a name="l00052"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1_tensor.xhtml#af4b82c01cd764b2a831d0d40a41ec1ed">   52</a></span>&#160;    <a class="code" href="classarm__compute_1_1graph_1_1_tensor.xhtml#af4b82c01cd764b2a831d0d40a41ec1ed">Tensor</a>(std::unique_ptr&lt;AccessorType&gt; accessor)</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;        : _target(<a class="code" href="namespacearm__compute_1_1graph.xhtml#a8d5e69e9a697c2007e241eb413c9833b">TargetHint</a>::<a class="code" href="namespacearm__compute_1_1graph.xhtml#a8d5e69e9a697c2007e241eb413c9833ba3d241dc381afd54422199a5e6864275a">DONT_CARE</a>), _info(), _accessor(std::move(accessor)), _tensor(nullptr)</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    {</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    }</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> AccessorType&gt;</div><div class="line"><a name="l00061"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1_tensor.xhtml#a40ff6d170e75c11d003a396855510a55">   61</a></span>&#160;    <a class="code" href="classarm__compute_1_1graph_1_1_tensor.xhtml#a40ff6d170e75c11d003a396855510a55">Tensor</a>(AccessorType &amp;&amp;accessor)</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        : _target(<a class="code" href="namespacearm__compute_1_1graph.xhtml#a8d5e69e9a697c2007e241eb413c9833b">TargetHint</a>::<a class="code" href="namespacearm__compute_1_1graph.xhtml#a8d5e69e9a697c2007e241eb413c9833ba3d241dc381afd54422199a5e6864275a">DONT_CARE</a>), _info(), _accessor(<a class="code" href="namespacearm__compute.xhtml">arm_compute</a>::support::cpp14::<a class="code" href="namespacearm__compute_1_1support_1_1cpp14.xhtml#a94d8ad03db9ccb2005b06858856d0a4c">make_unique</a>&lt;AccessorType&gt;(std::forward&lt;AccessorType&gt;(accessor))), _tensor(nullptr)</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    {</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    }</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> AccessorType&gt;</div><div class="line"><a name="l00071"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1_tensor.xhtml#ae4208480fad655053ac2a4d1308bd14f">   71</a></span>&#160;    <a class="code" href="classarm__compute_1_1graph_1_1_tensor.xhtml#ae4208480fad655053ac2a4d1308bd14f">Tensor</a>(<a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&amp;<a class="code" href="classarm__compute_1_1graph_1_1_tensor.xhtml#ad129de4883c35830834987e9b68314e1">info</a>, std::unique_ptr&lt;AccessorType&gt; &amp;&amp;accessor)</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        : _target(<a class="code" href="namespacearm__compute_1_1graph.xhtml#a8d5e69e9a697c2007e241eb413c9833b">TargetHint</a>::<a class="code" href="namespacearm__compute_1_1graph.xhtml#a8d5e69e9a697c2007e241eb413c9833ba3d241dc381afd54422199a5e6864275a">DONT_CARE</a>), _info(<a class="code" href="classarm__compute_1_1graph_1_1_tensor.xhtml#ad129de4883c35830834987e9b68314e1">info</a>), _accessor(std::move(accessor)), _tensor(nullptr)</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    {</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    }</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> AccessorType&gt;</div><div class="line"><a name="l00081"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1_tensor.xhtml#a6567f1b0f4450a0de000aa298651c719">   81</a></span>&#160;    <a class="code" href="classarm__compute_1_1graph_1_1_tensor.xhtml#a6567f1b0f4450a0de000aa298651c719">Tensor</a>(<a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&amp;<a class="code" href="classarm__compute_1_1graph_1_1_tensor.xhtml#ad129de4883c35830834987e9b68314e1">info</a>, AccessorType &amp;&amp;accessor)</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        : _target(<a class="code" href="namespacearm__compute_1_1graph.xhtml#a8d5e69e9a697c2007e241eb413c9833b">TargetHint</a>::<a class="code" href="namespacearm__compute_1_1graph.xhtml#a8d5e69e9a697c2007e241eb413c9833ba3d241dc381afd54422199a5e6864275a">DONT_CARE</a>), _info(<a class="code" href="classarm__compute_1_1graph_1_1_tensor.xhtml#ad129de4883c35830834987e9b68314e1">info</a>), _accessor(<a class="code" href="namespacearm__compute.xhtml">arm_compute</a>::support::cpp14::<a class="code" href="namespacearm__compute_1_1support_1_1cpp14.xhtml#a94d8ad03db9ccb2005b06858856d0a4c">make_unique</a>&lt;AccessorType&gt;(std::forward&lt;AccessorType&gt;(accessor))), _tensor(nullptr)</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    {</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    }</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <a class="code" href="classarm__compute_1_1graph_1_1_tensor.xhtml#ae55ef806b29ad70cd952e2c1508715ae">~Tensor</a>() = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <a class="code" href="classarm__compute_1_1graph_1_1_tensor.xhtml#a781a239b3f8dcb682e738cfa6bce8157">Tensor</a>(<a class="code" href="classarm__compute_1_1graph_1_1_tensor.xhtml">Tensor</a> &amp;&amp;src) noexcept;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1graph_1_1_tensor.xhtml#a8a47fb3f9c4a913a82e7a0b3cbd9df9e">set_info</a>(<a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&amp;<a class="code" href="classarm__compute_1_1graph_1_1_tensor.xhtml#ad129de4883c35830834987e9b68314e1">info</a>);</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="code" href="classarm__compute_1_1graph_1_1_tensor.xhtml#ad129de4883c35830834987e9b68314e1">info</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1graph_1_1_tensor.xhtml#ab910ac6d4f9e75e14584f92d7d8b8c2d">allocate_and_fill_if_needed</a>();</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <span class="comment">// Inherited methods overriden:</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <span class="keywordtype">bool</span>                  <a class="code" href="classarm__compute_1_1graph_1_1_tensor.xhtml#aa327119aa8799cde0bedceb19a72a65f">call_accessor</a>() <span class="keyword">override</span>;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <span class="keywordtype">bool</span>                  <a class="code" href="classarm__compute_1_1graph_1_1_tensor.xhtml#a5109041fda0fb64ce0d5ed9f11c1cddb">has_accessor</a>() <span class="keyword">const override</span>;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">arm_compute::ITensor</a> *<a class="code" href="classarm__compute_1_1graph_1_1_tensor.xhtml#adc3516eafe22db8f96b4cd1076137758">set_target</a>(<a class="code" href="namespacearm__compute_1_1graph.xhtml#a8d5e69e9a697c2007e241eb413c9833b">TargetHint</a> <a class="code" href="classarm__compute_1_1graph_1_1_tensor.xhtml#a55a3281e69f6661f410c64d780b69aa2">target</a>) <span class="keyword">override</span>;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">arm_compute::ITensor</a>       *<a class="code" href="classarm__compute_1_1graph_1_1_tensor.xhtml#a2ab74f480b51fb1f6816c1ebde64f0a8">tensor</a>() <span class="keyword">override</span>;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">arm_compute::ITensor</a> *<a class="code" href="classarm__compute_1_1graph_1_1_tensor.xhtml#a2ab74f480b51fb1f6816c1ebde64f0a8">tensor</a>() <span class="keyword">const override</span>;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#a8d5e69e9a697c2007e241eb413c9833b">TargetHint</a>                  <a class="code" href="classarm__compute_1_1graph_1_1_tensor.xhtml#a55a3281e69f6661f410c64d780b69aa2">target</a>() <span class="keyword">const override</span>;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <span class="keywordtype">void</span>                        <a class="code" href="classarm__compute_1_1graph_1_1_tensor.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>() <span class="keyword">override</span>;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#a8d5e69e9a697c2007e241eb413c9833b">TargetHint</a>                            _target;   </div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>                            _info;     </div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    std::unique_ptr&lt;ITensorAccessor&gt;      _accessor; </div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    std::unique_ptr&lt;arm_compute::ITensor&gt; _tensor;   </div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;};</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;} <span class="comment">// namespace graph</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;} <span class="comment">// namespace arm_compute</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* __ARM_COMPUTE_GRAPH_TENSOR_H__ */</span><span class="preprocessor"></span></div><div class="ttc" id="classarm__compute_1_1graph_1_1_tensor_xhtml_ae4208480fad655053ac2a4d1308bd14f"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_tensor.xhtml#ae4208480fad655053ac2a4d1308bd14f">arm_compute::graph::Tensor::Tensor</a></div><div class="ttdeci">Tensor(TensorInfo &amp;&amp;info, std::unique_ptr&lt; AccessorType &gt; &amp;&amp;accessor)</div><div class="ttdoc">Constructor. </div><div class="ttdef"><b>Definition:</b> <a href="graph_2_tensor_8h_source.xhtml#l00071">Tensor.h:71</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_tensor_xhtml_aa327119aa8799cde0bedceb19a72a65f"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_tensor.xhtml#aa327119aa8799cde0bedceb19a72a65f">arm_compute::graph::Tensor::call_accessor</a></div><div class="ttdeci">bool call_accessor() override</div><div class="ttdoc">Calls accessor on tensor. </div></div>
<div class="ttc" id="_toolchain_support_8h_xhtml"><div class="ttname"><a href="_toolchain_support_8h.xhtml">ToolchainSupport.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_tensor_xhtml_a8a47fb3f9c4a913a82e7a0b3cbd9df9e"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_tensor.xhtml#a8a47fb3f9c4a913a82e7a0b3cbd9df9e">arm_compute::graph::Tensor::set_info</a></div><div class="ttdeci">void set_info(TensorInfo &amp;&amp;info)</div><div class="ttdoc">Sets the given TensorInfo to the tensor. </div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_tensor_xhtml_a6e509c2a177b0b29e9e2369535094dee"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_tensor.xhtml#a6e509c2a177b0b29e9e2369535094dee">arm_compute::graph::Tensor::allocate</a></div><div class="ttdeci">void allocate() override</div><div class="ttdoc">Allocates the tensor. </div></div>
<div class="ttc" id="arm__compute_2graph_2_types_8h_xhtml"><div class="ttname"><a href="arm__compute_2graph_2_types_8h.xhtml">Types.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor.xhtml">arm_compute::ITensor</a></div><div class="ttdoc">Interface for NEON tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_8h_source.xhtml#l00036">ITensor.h:36</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">This file contains all available output stages for GEMMLowp on OpenCL. </div><div class="ttdef"><b>Definition:</b> <a href="01__library_8dox_source.xhtml#l00001">01_library.dox:1</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_tensor_xhtml_ae55ef806b29ad70cd952e2c1508715ae"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_tensor.xhtml#ae55ef806b29ad70cd952e2c1508715ae">arm_compute::graph::Tensor::~Tensor</a></div><div class="ttdeci">~Tensor()=default</div><div class="ttdoc">Default Destructor. </div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_tensor_xhtml_af4b82c01cd764b2a831d0d40a41ec1ed"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_tensor.xhtml#af4b82c01cd764b2a831d0d40a41ec1ed">arm_compute::graph::Tensor::Tensor</a></div><div class="ttdeci">Tensor(std::unique_ptr&lt; AccessorType &gt; accessor)</div><div class="ttdoc">Constructor. </div><div class="ttdef"><b>Definition:</b> <a href="graph_2_tensor_8h_source.xhtml#l00052">Tensor.h:52</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_tensor_xhtml_a55a3281e69f6661f410c64d780b69aa2"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_tensor.xhtml#a55a3281e69f6661f410c64d780b69aa2">arm_compute::graph::Tensor::target</a></div><div class="ttdeci">TargetHint target() const override</div><div class="ttdoc">Return the target that this tensor is pinned on. </div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_tensor_xhtml_a2ab74f480b51fb1f6816c1ebde64f0a8"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_tensor.xhtml#a2ab74f480b51fb1f6816c1ebde64f0a8">arm_compute::graph::Tensor::tensor</a></div><div class="ttdeci">arm_compute::ITensor * tensor() override</div><div class="ttdoc">Returns a pointer to the internal tensor. </div></div>
<div class="ttc" id="_i_tensor_accessor_8h_xhtml"><div class="ttname"><a href="_i_tensor_accessor_8h.xhtml">ITensorAccessor.h</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1support_1_1cpp14_xhtml_a94d8ad03db9ccb2005b06858856d0a4c"><div class="ttname"><a href="namespacearm__compute_1_1support_1_1cpp14.xhtml#a94d8ad03db9ccb2005b06858856d0a4c">arm_compute::support::cpp14::make_unique</a></div><div class="ttdeci">_Unique_if&lt; T &gt;::_Single_object make_unique(Args &amp;&amp;...args)</div><div class="ttdef"><b>Definition:</b> <a href="_toolchain_support_8h_source.xhtml#l00361">ToolchainSupport.h:361</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_tensor_xhtml_adc3516eafe22db8f96b4cd1076137758"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_tensor.xhtml#adc3516eafe22db8f96b4cd1076137758">arm_compute::graph::Tensor::set_target</a></div><div class="ttdeci">arm_compute::ITensor * set_target(TargetHint target) override</div><div class="ttdoc">Sets target of the tensor. </div></div>
<div class="ttc" id="_i_tensor_object_8h_xhtml"><div class="ttname"><a href="_i_tensor_object_8h.xhtml">ITensorObject.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_tensor_xhtml_a5109041fda0fb64ce0d5ed9f11c1cddb"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_tensor.xhtml#a5109041fda0fb64ce0d5ed9f11c1cddb">arm_compute::graph::Tensor::has_accessor</a></div><div class="ttdeci">bool has_accessor() const override</div><div class="ttdoc">Checks if tensor has an accessor set. </div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_tensor_xhtml_a781a239b3f8dcb682e738cfa6bce8157"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_tensor.xhtml#a781a239b3f8dcb682e738cfa6bce8157">arm_compute::graph::Tensor::Tensor</a></div><div class="ttdeci">Tensor(TensorInfo &amp;&amp;info)</div><div class="ttdoc">Constructor. </div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml_a8d5e69e9a697c2007e241eb413c9833ba3d241dc381afd54422199a5e6864275a"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#a8d5e69e9a697c2007e241eb413c9833ba3d241dc381afd54422199a5e6864275a">arm_compute::graph::TargetHint::DONT_CARE</a></div><div class="ttdoc">Run node in any device. </div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_tensor_xhtml_ad129de4883c35830834987e9b68314e1"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_tensor.xhtml#ad129de4883c35830834987e9b68314e1">arm_compute::graph::Tensor::info</a></div><div class="ttdeci">const TensorInfo &amp; info() const </div><div class="ttdoc">Returns tensor&amp;#39;s TensorInfo. </div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_tensor_xhtml_a40ff6d170e75c11d003a396855510a55"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_tensor.xhtml#a40ff6d170e75c11d003a396855510a55">arm_compute::graph::Tensor::Tensor</a></div><div class="ttdeci">Tensor(AccessorType &amp;&amp;accessor)</div><div class="ttdoc">Constructor. </div><div class="ttdef"><b>Definition:</b> <a href="graph_2_tensor_8h_source.xhtml#l00061">Tensor.h:61</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_tensor_xhtml_ab910ac6d4f9e75e14584f92d7d8b8c2d"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_tensor.xhtml#ab910ac6d4f9e75e14584f92d7d8b8c2d">arm_compute::graph::Tensor::allocate_and_fill_if_needed</a></div><div class="ttdeci">void allocate_and_fill_if_needed()</div><div class="ttdoc">Allocates and fills the tensor if needed. </div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml_a8d5e69e9a697c2007e241eb413c9833b"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#a8d5e69e9a697c2007e241eb413c9833b">arm_compute::graph::TargetHint</a></div><div class="ttdeci">TargetHint</div><div class="ttdoc">&lt; Execution hint to the graph executor </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2_types_8h_source.xhtml#l00076">Types.h:76</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml">arm_compute::TensorInfo</a></div><div class="ttdoc">Store the tensor&amp;#39;s metadata. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00044">TensorInfo.h:44</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_i_tensor_object_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_i_tensor_object.xhtml">arm_compute::graph::ITensorObject</a></div><div class="ttdoc">Tensor object interface. </div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_object_8h_source.xhtml#l00038">ITensorObject.h:38</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_tensor_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_tensor.xhtml">arm_compute::graph::Tensor</a></div><div class="ttdoc">Tensor class. </div><div class="ttdef"><b>Definition:</b> <a href="graph_2_tensor_8h_source.xhtml#l00039">Tensor.h:39</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_tensor_xhtml_a6567f1b0f4450a0de000aa298651c719"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_tensor.xhtml#a6567f1b0f4450a0de000aa298651c719">arm_compute::graph::Tensor::Tensor</a></div><div class="ttdeci">Tensor(TensorInfo &amp;&amp;info, AccessorType &amp;&amp;accessor)</div><div class="ttdoc">Constructor. </div><div class="ttdef"><b>Definition:</b> <a href="graph_2_tensor_8h_source.xhtml#l00081">Tensor.h:81</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_214608ef36d61442cb2b0c1c4e9a7def.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="dir_99ae3712d1eecd2a93fc4d38b59a99ba.xhtml">graph</a></li><li class="navelem"><a class="el" href="graph_2_tensor_8h.xhtml">Tensor.h</a></li>
    <li class="footer">Generated on Thu Dec 14 2017 23:48:31 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
  </ul>
</div>
</body>
</html>
