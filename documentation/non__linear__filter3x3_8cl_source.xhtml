<!-- HTML header for doxygen 1.8.9.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/core/CL/cl_kernels/non_linear_filter3x3.cl Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Compute Library
   &#160;<span id="projectnumber">17.12</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>Globals</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('non__linear__filter3x3_8cl_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">non_linear_filter3x3.cl</div>  </div>
</div><!--header-->
<div class="contents">
<a href="non__linear__filter3x3_8cl.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2017 ARM Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="helpers_8h.xhtml">helpers.h</a>&quot;</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="non__linear__filter__helpers_8h.xhtml">non_linear_filter_helpers.h</a>&quot;</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00044"></a><span class="lineno"><a class="line" href="non__linear__filter3x3_8cl.xhtml#ac1fc5f0f6bac8d062852df0530d3c0cb">   44</a></span>&#160;__kernel <span class="keywordtype">void</span> <a class="code" href="non__linear__filter3x3_8cl.xhtml#ac1fc5f0f6bac8d062852df0530d3c0cb">non_linear_filter_box3x3</a>(</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <a class="code" href="helpers_8h.xhtml#a22f42fcf2077d951271df83b55c1a71a">IMAGE_DECLARATION</a>(src),</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <a class="code" href="helpers_8h.xhtml#a22f42fcf2077d951271df83b55c1a71a">IMAGE_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>))</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;{</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <a class="code" href="struct_image.xhtml">Image</a> src = <a class="code" href="helpers_8h.xhtml#aebe814363556c244be043b13e7969197">CONVERT_TO_IMAGE_STRUCT</a>(src);</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <a class="code" href="struct_image.xhtml">Image</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a> = <a class="code" href="helpers_8h.xhtml#aebe814363556c244be043b13e7969197">CONVERT_TO_IMAGE_STRUCT</a>(dst);</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="comment">// Load values</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    uchar16 top    = vload16(0, <a class="code" href="helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>(&amp;src, -1, -1));</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    uchar16 middle = vload16(0, <a class="code" href="helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>(&amp;src, -1, 0));</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    uchar16 bottom = vload16(0, <a class="code" href="helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>(&amp;src, -1, 1));</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <span class="comment">// Apply respective filter</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="preprocessor">#ifdef MIN</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    uchar16 tmp = <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aabcf39e3917f842dbc5fbb0d802f24d5">min</a>(top, <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aabcf39e3917f842dbc5fbb0d802f24d5">min</a>(middle, bottom));</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    uchar8  out = <a class="code" href="non__linear__filter__helpers_8h.xhtml#ae3e09114bb887de4e20122eed42671a1">row_reduce_min_3</a>(tmp);</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="preprocessor">#elif defined(MAX)</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    uchar16 tmp = <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#ad91bb73431b4de1f4946ed949d444849">max</a>(top, <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#ad91bb73431b4de1f4946ed949d444849">max</a>(middle, bottom));</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    uchar8  out = <a class="code" href="non__linear__filter__helpers_8h.xhtml#a3138dafa8474a59f73dd837073f18ed7">row_reduce_max_3</a>(tmp);</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="preprocessor">#elif defined(MEDIAN)</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    uchar8 p0  = top.s01234567;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    uchar8 p1  = top.s12345678;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    uchar8 p2  = top.s23456789;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    uchar8 p3  = middle.s01234567;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    uchar8 p4  = middle.s12345678;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    uchar8 p5  = middle.s23456789;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    uchar8 p6  = bottom.s01234567;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    uchar8 p7  = bottom.s12345678;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    uchar8 p8  = bottom.s23456789;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    uchar8 out = <a class="code" href="non__linear__filter__helpers_8h.xhtml#a0960df49e39a9499677066c32600c17f">sort9</a>(p0, p1, p2, p3, p4, p5, p6, p7, p8);</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="preprocessor">#else </span><span class="comment">/* MIN or MAX or MEDIAN */</span><span class="preprocessor"></span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="preprocessor">#error &quot;Unsupported filter function&quot;</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* MIN or MAX or MEDIAN */</span><span class="preprocessor"></span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="comment">// Store result</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    vstore8(out, 0, dst.<a class="code" href="struct_image.xhtml#acf52c23cbd7424606c10a606524e3e32">ptr</a>);</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;}</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div><div class="line"><a name="l00099"></a><span class="lineno"><a class="line" href="non__linear__filter3x3_8cl.xhtml#a69c356d968b2ecefbf2aa06e0ac83e28">   99</a></span>&#160;__kernel <span class="keywordtype">void</span> <a class="code" href="non__linear__filter3x3_8cl.xhtml#a69c356d968b2ecefbf2aa06e0ac83e28">non_linear_filter_cross3x3</a>(</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <a class="code" href="helpers_8h.xhtml#a22f42fcf2077d951271df83b55c1a71a">IMAGE_DECLARATION</a>(src),</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <a class="code" href="helpers_8h.xhtml#a22f42fcf2077d951271df83b55c1a71a">IMAGE_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>))</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;{</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <a class="code" href="struct_image.xhtml">Image</a> src = <a class="code" href="helpers_8h.xhtml#aebe814363556c244be043b13e7969197">CONVERT_TO_IMAGE_STRUCT</a>(src);</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <a class="code" href="struct_image.xhtml">Image</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a> = <a class="code" href="helpers_8h.xhtml#aebe814363556c244be043b13e7969197">CONVERT_TO_IMAGE_STRUCT</a>(dst);</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <span class="comment">// Load values</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    uchar8  top    = vload8(0, <a class="code" href="helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>(&amp;src, 0, -1));</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    uchar16 middle = vload16(0, <a class="code" href="helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>(&amp;src, -1, 0));</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    uchar8  bottom = vload8(0, <a class="code" href="helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>(&amp;src, 0, 1));</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <span class="comment">// Apply respective filter</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="preprocessor">#ifdef MIN</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    uchar8 tmp_middle = <a class="code" href="non__linear__filter__helpers_8h.xhtml#ae3e09114bb887de4e20122eed42671a1">row_reduce_min_3</a>(middle);</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    uchar8 out        = <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aabcf39e3917f842dbc5fbb0d802f24d5">min</a>(tmp_middle, <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aabcf39e3917f842dbc5fbb0d802f24d5">min</a>(top, bottom));</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="preprocessor">#elif defined(MAX)</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    uchar8  tmp_middle = <a class="code" href="non__linear__filter__helpers_8h.xhtml#a3138dafa8474a59f73dd837073f18ed7">row_reduce_max_3</a>(middle);</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    uchar8  out        = <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#ad91bb73431b4de1f4946ed949d444849">max</a>(tmp_middle, <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#ad91bb73431b4de1f4946ed949d444849">max</a>(top, bottom));</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="preprocessor">#elif defined(MEDIAN)</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    uchar8 p0  = top.s01234567;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    uchar8 p1  = middle.s01234567;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    uchar8 p2  = middle.s12345678;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    uchar8 p3  = middle.s23456789;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    uchar8 p4  = bottom.s01234567;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    uchar8 out = <a class="code" href="non__linear__filter__helpers_8h.xhtml#a7b5c174de888c3cfa7c08c16682fd770">sort5</a>(p0, p1, p2, p3, p4);</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="preprocessor">#else </span><span class="comment">/* MIN or MAX or MEDIAN */</span><span class="preprocessor"></span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="preprocessor">#error &quot;Unsupported filter function&quot;</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* MIN or MAX or MEDIAN */</span><span class="preprocessor"></span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    <span class="comment">// Store result</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    vstore8(out, 0, dst.<a class="code" href="struct_image.xhtml#acf52c23cbd7424606c10a606524e3e32">ptr</a>);</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;}</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;</div><div class="line"><a name="l00150"></a><span class="lineno"><a class="line" href="non__linear__filter3x3_8cl.xhtml#a37f5aa2a4245f4b6b925640f73a77fdb">  150</a></span>&#160;__kernel <span class="keywordtype">void</span> <a class="code" href="non__linear__filter3x3_8cl.xhtml#a37f5aa2a4245f4b6b925640f73a77fdb">non_linear_filter_disk3x3</a>(</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    <a class="code" href="helpers_8h.xhtml#a22f42fcf2077d951271df83b55c1a71a">IMAGE_DECLARATION</a>(src),</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    <a class="code" href="helpers_8h.xhtml#a22f42fcf2077d951271df83b55c1a71a">IMAGE_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>))</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;{</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    <a class="code" href="struct_image.xhtml">Image</a> src = <a class="code" href="helpers_8h.xhtml#aebe814363556c244be043b13e7969197">CONVERT_TO_IMAGE_STRUCT</a>(src);</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <a class="code" href="struct_image.xhtml">Image</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a> = <a class="code" href="helpers_8h.xhtml#aebe814363556c244be043b13e7969197">CONVERT_TO_IMAGE_STRUCT</a>(dst);</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <span class="comment">// Load values</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    uchar16 top    = vload16(0, <a class="code" href="helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>(&amp;src, -1, -1));</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    uchar16 middle = vload16(0, <a class="code" href="helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>(&amp;src, -1, 0));</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    uchar16 bottom = vload16(0, <a class="code" href="helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>(&amp;src, -1, 1));</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    <span class="comment">// Apply respective filter</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="preprocessor">#ifdef MIN</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    uchar16 tmp = <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aabcf39e3917f842dbc5fbb0d802f24d5">min</a>(top, <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aabcf39e3917f842dbc5fbb0d802f24d5">min</a>(middle, bottom));</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    uchar8  out = <a class="code" href="non__linear__filter__helpers_8h.xhtml#ae3e09114bb887de4e20122eed42671a1">row_reduce_min_3</a>(tmp);</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="preprocessor">#elif defined(MAX)</span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    uchar16 tmp        = <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#ad91bb73431b4de1f4946ed949d444849">max</a>(top, <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#ad91bb73431b4de1f4946ed949d444849">max</a>(middle, bottom));</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    uchar8  out        = <a class="code" href="non__linear__filter__helpers_8h.xhtml#a3138dafa8474a59f73dd837073f18ed7">row_reduce_max_3</a>(tmp);</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="preprocessor">#elif defined(MEDIAN)</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    uchar8 p0  = top.s01234567;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    uchar8 p1  = top.s12345678;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    uchar8 p2  = top.s23456789;</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    uchar8 p3  = middle.s01234567;</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    uchar8 p4  = middle.s12345678;</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    uchar8 p5  = middle.s23456789;</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    uchar8 p6  = bottom.s01234567;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    uchar8 p7  = bottom.s12345678;</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    uchar8 p8  = bottom.s23456789;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    uchar8 out = <a class="code" href="non__linear__filter__helpers_8h.xhtml#a0960df49e39a9499677066c32600c17f">sort9</a>(p0, p1, p2, p3, p4, p5, p6, p7, p8);</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="preprocessor">#else </span><span class="comment">/* MIN or MAX or MEDIAN */</span><span class="preprocessor"></span></div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="preprocessor">#error &quot;Unsupported filter function&quot;</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* MIN or MAX or MEDIAN */</span><span class="preprocessor"></span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    <span class="comment">// Store result</span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    vstore8(out, 0, dst.<a class="code" href="struct_image.xhtml#acf52c23cbd7424606c10a606524e3e32">ptr</a>);</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;}</div><div class="ttc" id="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_xhtml_aabcf39e3917f842dbc5fbb0d802f24d5"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aabcf39e3917f842dbc5fbb0d802f24d5">arm_compute::test::fixed_point_arithmetic::detail::min</a></div><div class="ttdeci">fixed_point&lt; T &gt; min(fixed_point&lt; T &gt; x, fixed_point&lt; T &gt; y)</div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00884">FixedPoint.h:884</a></div></div>
<div class="ttc" id="helpers_8h_xhtml_a22f42fcf2077d951271df83b55c1a71a"><div class="ttname"><a href="helpers_8h.xhtml#a22f42fcf2077d951271df83b55c1a71a">IMAGE_DECLARATION</a></div><div class="ttdeci">#define IMAGE_DECLARATION(name)</div><div class="ttdef"><b>Definition:</b> <a href="helpers_8h_source.xhtml#l00066">helpers.h:66</a></div></div>
<div class="ttc" id="helpers_8h_xhtml_a009469e4d9b8fce3b6d5e97d2077827d"><div class="ttname"><a href="helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a></div><div class="ttdeci">__global uchar * offset(const Image *img, int x, int y)</div><div class="ttdoc">Get the pointer position of a Image. </div><div class="ttdef"><b>Definition:</b> <a href="helpers_8h_source.xhtml#l00301">helpers.h:301</a></div></div>
<div class="ttc" id="non__linear__filter__helpers_8h_xhtml"><div class="ttname"><a href="non__linear__filter__helpers_8h.xhtml">non_linear_filter_helpers.h</a></div></div>
<div class="ttc" id="non__linear__filter__helpers_8h_xhtml_a7b5c174de888c3cfa7c08c16682fd770"><div class="ttname"><a href="non__linear__filter__helpers_8h.xhtml#a7b5c174de888c3cfa7c08c16682fd770">sort5</a></div><div class="ttdeci">uchar8 sort5(uchar8 p0, uchar8 p1, uchar8 p2, uchar8 p3, uchar8 p4)</div><div class="ttdoc">Sorting network to sort 5 vectors of 8 elements and return their median. </div><div class="ttdef"><b>Definition:</b> <a href="non__linear__filter__helpers_8h_source.xhtml#l00050">non_linear_filter_helpers.h:50</a></div></div>
<div class="ttc" id="helpers_8h_xhtml"><div class="ttname"><a href="helpers_8h.xhtml">helpers.h</a></div></div>
<div class="ttc" id="helpers_8h_xhtml_aebe814363556c244be043b13e7969197"><div class="ttname"><a href="helpers_8h.xhtml#aebe814363556c244be043b13e7969197">CONVERT_TO_IMAGE_STRUCT</a></div><div class="ttdeci">#define CONVERT_TO_IMAGE_STRUCT(name)</div><div class="ttdef"><b>Definition:</b> <a href="helpers_8h_source.xhtml#l00102">helpers.h:102</a></div></div>
<div class="ttc" id="non__linear__filter3x3_8cl_xhtml_a37f5aa2a4245f4b6b925640f73a77fdb"><div class="ttname"><a href="non__linear__filter3x3_8cl.xhtml#a37f5aa2a4245f4b6b925640f73a77fdb">non_linear_filter_disk3x3</a></div><div class="ttdeci">__kernel void non_linear_filter_disk3x3(__global uchar *src_ptr, uint src_stride_x, uint src_step_x, uint src_stride_y, uint src_step_y, uint src_offset_first_element_in_bytes, __global uchar *dst_ptr, uint dst_stride_x, uint dst_step_x, uint dst_stride_y, uint dst_step_y, uint dst_offset_first_element_in_bytes)</div><div class="ttdoc">This function applies a non linear filter on a 3x3 disk basis on an input image. </div><div class="ttdef"><b>Definition:</b> <a href="non__linear__filter3x3_8cl_source.xhtml#l00150">non_linear_filter3x3.cl:150</a></div></div>
<div class="ttc" id="non__linear__filter__helpers_8h_xhtml_a3138dafa8474a59f73dd837073f18ed7"><div class="ttname"><a href="non__linear__filter__helpers_8h.xhtml#a3138dafa8474a59f73dd837073f18ed7">row_reduce_max_3</a></div><div class="ttdeci">uchar8 row_reduce_max_3(uchar16 val)</div><div class="ttdoc">Calculate the maximum of a sliding window of size 3. </div><div class="ttdef"><b>Definition:</b> <a href="non__linear__filter__helpers_8h_source.xhtml#l00120">non_linear_filter_helpers.h:120</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_adbf67dcee294e673cf796f1ed8aeb6a4"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">arm_compute::test::validation::dst</a></div><div class="ttdeci">Tensor dst</div><div class="ttdef"><b>Definition:</b> <a href="validation_2_n_e_o_n_2_g_e_m_m_8cpp_source.xhtml#l00118">GEMM.cpp:118</a></div></div>
<div class="ttc" id="struct_image_xhtml"><div class="ttname"><a href="struct_image.xhtml">Image</a></div><div class="ttdoc">Structure to hold Image information. </div><div class="ttdef"><b>Definition:</b> <a href="helpers_8h_source.xhtml#l00140">helpers.h:140</a></div></div>
<div class="ttc" id="struct_image_xhtml_acf52c23cbd7424606c10a606524e3e32"><div class="ttname"><a href="struct_image.xhtml#acf52c23cbd7424606c10a606524e3e32">Image::ptr</a></div><div class="ttdeci">__global uchar * ptr</div><div class="ttdoc">Pointer to the starting postion of the buffer. </div><div class="ttdef"><b>Definition:</b> <a href="helpers_8h_source.xhtml#l00142">helpers.h:142</a></div></div>
<div class="ttc" id="non__linear__filter3x3_8cl_xhtml_ac1fc5f0f6bac8d062852df0530d3c0cb"><div class="ttname"><a href="non__linear__filter3x3_8cl.xhtml#ac1fc5f0f6bac8d062852df0530d3c0cb">non_linear_filter_box3x3</a></div><div class="ttdeci">__kernel void non_linear_filter_box3x3(__global uchar *src_ptr, uint src_stride_x, uint src_step_x, uint src_stride_y, uint src_step_y, uint src_offset_first_element_in_bytes, __global uchar *dst_ptr, uint dst_stride_x, uint dst_step_x, uint dst_stride_y, uint dst_step_y, uint dst_offset_first_element_in_bytes)</div><div class="ttdoc">This function applies a non linear filter on a 3x3 box basis on an input image. </div><div class="ttdef"><b>Definition:</b> <a href="non__linear__filter3x3_8cl_source.xhtml#l00044">non_linear_filter3x3.cl:44</a></div></div>
<div class="ttc" id="non__linear__filter__helpers_8h_xhtml_a0960df49e39a9499677066c32600c17f"><div class="ttname"><a href="non__linear__filter__helpers_8h.xhtml#a0960df49e39a9499677066c32600c17f">sort9</a></div><div class="ttdeci">uchar8 sort9(uchar8 p0, uchar8 p1, uchar8 p2, uchar8 p3, uchar8 p4, uchar8 p5, uchar8 p6, uchar8 p7, uchar8 p8)</div><div class="ttdoc">Sorting network to sort 9 vectors of 8 elements and return their median. </div><div class="ttdef"><b>Definition:</b> <a href="non__linear__filter__helpers_8h_source.xhtml#l00078">non_linear_filter_helpers.h:78</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_xhtml_ad91bb73431b4de1f4946ed949d444849"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#ad91bb73431b4de1f4946ed949d444849">arm_compute::test::fixed_point_arithmetic::detail::max</a></div><div class="ttdeci">fixed_point&lt; T &gt; max(fixed_point&lt; T &gt; x, fixed_point&lt; T &gt; y)</div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00889">FixedPoint.h:889</a></div></div>
<div class="ttc" id="non__linear__filter3x3_8cl_xhtml_a69c356d968b2ecefbf2aa06e0ac83e28"><div class="ttname"><a href="non__linear__filter3x3_8cl.xhtml#a69c356d968b2ecefbf2aa06e0ac83e28">non_linear_filter_cross3x3</a></div><div class="ttdeci">__kernel void non_linear_filter_cross3x3(__global uchar *src_ptr, uint src_stride_x, uint src_step_x, uint src_stride_y, uint src_step_y, uint src_offset_first_element_in_bytes, __global uchar *dst_ptr, uint dst_stride_x, uint dst_step_x, uint dst_stride_y, uint dst_step_y, uint dst_offset_first_element_in_bytes)</div><div class="ttdoc">This function applies a non linear filter on a 3x3 cross basis on an input image. ...</div><div class="ttdef"><b>Definition:</b> <a href="non__linear__filter3x3_8cl_source.xhtml#l00099">non_linear_filter3x3.cl:99</a></div></div>
<div class="ttc" id="non__linear__filter__helpers_8h_xhtml_ae3e09114bb887de4e20122eed42671a1"><div class="ttname"><a href="non__linear__filter__helpers_8h.xhtml#ae3e09114bb887de4e20122eed42671a1">row_reduce_min_3</a></div><div class="ttdeci">uchar8 row_reduce_min_3(uchar16 val)</div><div class="ttdoc">Calculate the minimum of a sliding window of size 3. </div><div class="ttdef"><b>Definition:</b> <a href="non__linear__filter__helpers_8h_source.xhtml#l00109">non_linear_filter_helpers.h:109</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_aebb8dcc11953d78e620bbef0b9e2183.xhtml">core</a></li><li class="navelem"><a class="el" href="dir_8c278f79c760e5c5fbd911f9870614c1.xhtml">CL</a></li><li class="navelem"><a class="el" href="dir_25885286e9dad4fa105b7b25a8031bbf.xhtml">cl_kernels</a></li><li class="navelem"><a class="el" href="non__linear__filter3x3_8cl.xhtml">non_linear_filter3x3.cl</a></li>
    <li class="footer">Generated on Thu Dec 14 2017 23:48:31 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
  </ul>
</div>
</body>
</html>
