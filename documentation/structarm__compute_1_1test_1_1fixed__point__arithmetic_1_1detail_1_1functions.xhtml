<!-- HTML header for doxygen 1.8.9.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: functions Struct Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Compute Library
   &#160;<span id="projectnumber">17.12</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li><a href="classes.xhtml"><span>Data&#160;Structure&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Data&#160;Fields</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-static-methods">Static Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">functions Struct Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml">FixedPoint.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a69b97b34f32a6fc05665fc8605806326"><td class="memTemplParams" colspan="2">template&lt;typename T , typename U , typename traits &gt; </td></tr>
<tr class="memitem:a69b97b34f32a6fc05665fc8605806326"><td class="memTemplItemLeft" align="right" valign="top">static std::basic_ostream&lt; T, traits &gt; &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a69b97b34f32a6fc05665fc8605806326">write</a> (std::basic_ostream&lt; T, traits &gt; &amp;s, <a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; U &gt; &amp;x)</td></tr>
<tr class="memdesc:a69b97b34f32a6fc05665fc8605806326"><td class="mdescLeft">&#160;</td><td class="mdescRight">Output stream operator.  <a href="#a69b97b34f32a6fc05665fc8605806326">More...</a><br /></td></tr>
<tr class="separator:a69b97b34f32a6fc05665fc8605806326"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9efa14731a55e3d96adb961214e91734"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a9efa14731a55e3d96adb961214e91734"><td class="memTemplItemLeft" align="right" valign="top">static bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a9efa14731a55e3d96adb961214e91734">signbit</a> (<a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt; x)</td></tr>
<tr class="memdesc:a9efa14731a55e3d96adb961214e91734"><td class="mdescLeft">&#160;</td><td class="mdescRight">Signbit of a fixed point number.  <a href="#a9efa14731a55e3d96adb961214e91734">More...</a><br /></td></tr>
<tr class="separator:a9efa14731a55e3d96adb961214e91734"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a304fe6cc15deaffb14929e42a4ff1c1b"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a304fe6cc15deaffb14929e42a4ff1c1b"><td class="memTemplItemLeft" align="right" valign="top">static bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a304fe6cc15deaffb14929e42a4ff1c1b">isequal</a> (<a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt; x, <a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt; y)</td></tr>
<tr class="memdesc:a304fe6cc15deaffb14929e42a4ff1c1b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks if two fixed point numbers are equal.  <a href="#a304fe6cc15deaffb14929e42a4ff1c1b">More...</a><br /></td></tr>
<tr class="separator:a304fe6cc15deaffb14929e42a4ff1c1b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a866dbf3e096ad4a487820a8945be3dfe"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a866dbf3e096ad4a487820a8945be3dfe"><td class="memTemplItemLeft" align="right" valign="top">static bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a866dbf3e096ad4a487820a8945be3dfe">isnotequal</a> (<a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt; x, <a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt; y)</td></tr>
<tr class="memdesc:a866dbf3e096ad4a487820a8945be3dfe"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks if two fixed point number are not equal.  <a href="#a866dbf3e096ad4a487820a8945be3dfe">More...</a><br /></td></tr>
<tr class="separator:a866dbf3e096ad4a487820a8945be3dfe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abd7f7757b9edb7cdd017d439bc5ba8b0"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:abd7f7757b9edb7cdd017d439bc5ba8b0"><td class="memTemplItemLeft" align="right" valign="top">static bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#abd7f7757b9edb7cdd017d439bc5ba8b0">isgreater</a> (<a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt; x, <a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt; y)</td></tr>
<tr class="memdesc:abd7f7757b9edb7cdd017d439bc5ba8b0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks if one fixed point is greater than the other.  <a href="#abd7f7757b9edb7cdd017d439bc5ba8b0">More...</a><br /></td></tr>
<tr class="separator:abd7f7757b9edb7cdd017d439bc5ba8b0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a49abe87ad33d2900c2255e4b79322207"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a49abe87ad33d2900c2255e4b79322207"><td class="memTemplItemLeft" align="right" valign="top">static bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a49abe87ad33d2900c2255e4b79322207">isgreaterequal</a> (<a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt; x, <a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt; y)</td></tr>
<tr class="memdesc:a49abe87ad33d2900c2255e4b79322207"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks if one fixed point is greater or equal than the other.  <a href="#a49abe87ad33d2900c2255e4b79322207">More...</a><br /></td></tr>
<tr class="separator:a49abe87ad33d2900c2255e4b79322207"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac4dcad0e940cf826063ba1f6ea659c07"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:ac4dcad0e940cf826063ba1f6ea659c07"><td class="memTemplItemLeft" align="right" valign="top">static bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#ac4dcad0e940cf826063ba1f6ea659c07">isless</a> (<a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt; x, <a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt; y)</td></tr>
<tr class="memdesc:ac4dcad0e940cf826063ba1f6ea659c07"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks if one fixed point is less than the other.  <a href="#ac4dcad0e940cf826063ba1f6ea659c07">More...</a><br /></td></tr>
<tr class="separator:ac4dcad0e940cf826063ba1f6ea659c07"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a47e151d622ee6e71a0e731585b4fa7d8"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a47e151d622ee6e71a0e731585b4fa7d8"><td class="memTemplItemLeft" align="right" valign="top">static bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a47e151d622ee6e71a0e731585b4fa7d8">islessequal</a> (<a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt; x, <a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt; y)</td></tr>
<tr class="memdesc:a47e151d622ee6e71a0e731585b4fa7d8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks if one fixed point is less or equal than the other.  <a href="#a47e151d622ee6e71a0e731585b4fa7d8">More...</a><br /></td></tr>
<tr class="separator:a47e151d622ee6e71a0e731585b4fa7d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a814cf7d89e7dad18b0625b4c914dc628"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a814cf7d89e7dad18b0625b4c914dc628"><td class="memTemplItemLeft" align="right" valign="top">static bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a814cf7d89e7dad18b0625b4c914dc628">islessgreater</a> (<a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt; x, <a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt; y)</td></tr>
<tr class="memdesc:a814cf7d89e7dad18b0625b4c914dc628"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks if one fixed point is less or greater than the other.  <a href="#a814cf7d89e7dad18b0625b4c914dc628">More...</a><br /></td></tr>
<tr class="separator:a814cf7d89e7dad18b0625b4c914dc628"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2d681ad37360fc4497f147af98951ba0"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a2d681ad37360fc4497f147af98951ba0"><td class="memTemplItemLeft" align="right" valign="top">static <a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a2d681ad37360fc4497f147af98951ba0">clamp</a> (<a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt; x, T <a class="el" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aabcf39e3917f842dbc5fbb0d802f24d5">min</a>, T <a class="el" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#ad91bb73431b4de1f4946ed949d444849">max</a>)</td></tr>
<tr class="memdesc:a2d681ad37360fc4497f147af98951ba0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clamp fixed point to specific range.  <a href="#a2d681ad37360fc4497f147af98951ba0">More...</a><br /></td></tr>
<tr class="separator:a2d681ad37360fc4497f147af98951ba0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa78731a2479da19c6604b3baa3ffe33d"><td class="memTemplParams" colspan="2">template&lt;OverflowPolicy OP = OverflowPolicy::SATURATE, typename T &gt; </td></tr>
<tr class="memitem:aa78731a2479da19c6604b3baa3ffe33d"><td class="memTemplItemLeft" align="right" valign="top">static <a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#aa78731a2479da19c6604b3baa3ffe33d">negate</a> (<a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt; x)</td></tr>
<tr class="memdesc:aa78731a2479da19c6604b3baa3ffe33d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Negate number.  <a href="#aa78731a2479da19c6604b3baa3ffe33d">More...</a><br /></td></tr>
<tr class="separator:aa78731a2479da19c6604b3baa3ffe33d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a40956c61706d70b8978c2b87ac455d2a"><td class="memTemplParams" colspan="2">template&lt;OverflowPolicy OP = OverflowPolicy::SATURATE, typename T &gt; </td></tr>
<tr class="memitem:a40956c61706d70b8978c2b87ac455d2a"><td class="memTemplItemLeft" align="right" valign="top">static <a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a40956c61706d70b8978c2b87ac455d2a">add</a> (<a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt; x, <a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt; y)</td></tr>
<tr class="memdesc:a40956c61706d70b8978c2b87ac455d2a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Perform addition among two fixed point numbers.  <a href="#a40956c61706d70b8978c2b87ac455d2a">More...</a><br /></td></tr>
<tr class="separator:a40956c61706d70b8978c2b87ac455d2a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a287e18f5dec27ac32bfd30039a57dddf"><td class="memTemplParams" colspan="2">template&lt;OverflowPolicy OP = OverflowPolicy::SATURATE, typename T &gt; </td></tr>
<tr class="memitem:a287e18f5dec27ac32bfd30039a57dddf"><td class="memTemplItemLeft" align="right" valign="top">static <a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a287e18f5dec27ac32bfd30039a57dddf">sub</a> (<a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt; x, <a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt; y)</td></tr>
<tr class="memdesc:a287e18f5dec27ac32bfd30039a57dddf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Perform subtraction among two fixed point numbers.  <a href="#a287e18f5dec27ac32bfd30039a57dddf">More...</a><br /></td></tr>
<tr class="separator:a287e18f5dec27ac32bfd30039a57dddf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad02ce21c48a8f9e419a2ec5f762f3221"><td class="memTemplParams" colspan="2">template&lt;OverflowPolicy OP = OverflowPolicy::SATURATE, typename T &gt; </td></tr>
<tr class="memitem:ad02ce21c48a8f9e419a2ec5f762f3221"><td class="memTemplItemLeft" align="right" valign="top">static <a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#ad02ce21c48a8f9e419a2ec5f762f3221">mul</a> (<a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt; x, <a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt; y)</td></tr>
<tr class="memdesc:ad02ce21c48a8f9e419a2ec5f762f3221"><td class="mdescLeft">&#160;</td><td class="mdescRight">Perform multiplication among two fixed point numbers.  <a href="#ad02ce21c48a8f9e419a2ec5f762f3221">More...</a><br /></td></tr>
<tr class="separator:ad02ce21c48a8f9e419a2ec5f762f3221"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a72d043524e13bf27c605c2dee2e20a2a"><td class="memTemplParams" colspan="2">template&lt;OverflowPolicy OP = OverflowPolicy::SATURATE, typename T &gt; </td></tr>
<tr class="memitem:a72d043524e13bf27c605c2dee2e20a2a"><td class="memTemplItemLeft" align="right" valign="top">static <a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a72d043524e13bf27c605c2dee2e20a2a">div</a> (<a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt; x, <a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt; y)</td></tr>
<tr class="memdesc:a72d043524e13bf27c605c2dee2e20a2a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Perform division among two fixed point numbers.  <a href="#a72d043524e13bf27c605c2dee2e20a2a">More...</a><br /></td></tr>
<tr class="separator:a72d043524e13bf27c605c2dee2e20a2a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0e0473f8d30d0a8067f9903430ddcd85"><td class="memTemplParams" colspan="2">template&lt;OverflowPolicy OP = OverflowPolicy::SATURATE, typename T &gt; </td></tr>
<tr class="memitem:a0e0473f8d30d0a8067f9903430ddcd85"><td class="memTemplItemLeft" align="right" valign="top">static <a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a0e0473f8d30d0a8067f9903430ddcd85">shift_left</a> (<a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt; x, size_t shift)</td></tr>
<tr class="memdesc:a0e0473f8d30d0a8067f9903430ddcd85"><td class="mdescLeft">&#160;</td><td class="mdescRight">Shift left.  <a href="#a0e0473f8d30d0a8067f9903430ddcd85">More...</a><br /></td></tr>
<tr class="separator:a0e0473f8d30d0a8067f9903430ddcd85"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad1429c74912e4335cd55e6f860acf3b6"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:ad1429c74912e4335cd55e6f860acf3b6"><td class="memTemplItemLeft" align="right" valign="top">static <a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#ad1429c74912e4335cd55e6f860acf3b6">shift_right</a> (<a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt; x, size_t shift)</td></tr>
<tr class="memdesc:ad1429c74912e4335cd55e6f860acf3b6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Shift right.  <a href="#ad1429c74912e4335cd55e6f860acf3b6">More...</a><br /></td></tr>
<tr class="separator:ad1429c74912e4335cd55e6f860acf3b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c04cac868606ed11c00761f0d5b3d2c"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a3c04cac868606ed11c00761f0d5b3d2c"><td class="memTemplItemLeft" align="right" valign="top">static <a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a3c04cac868606ed11c00761f0d5b3d2c">abs</a> (<a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt; x)</td></tr>
<tr class="memdesc:a3c04cac868606ed11c00761f0d5b3d2c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculate absolute value.  <a href="#a3c04cac868606ed11c00761f0d5b3d2c">More...</a><br /></td></tr>
<tr class="separator:a3c04cac868606ed11c00761f0d5b3d2c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a33520868a877b6b9a1beccdc1aaa4ec6"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a33520868a877b6b9a1beccdc1aaa4ec6"><td class="memTemplItemLeft" align="right" valign="top">static <a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a33520868a877b6b9a1beccdc1aaa4ec6">log</a> (<a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt; x)</td></tr>
<tr class="memdesc:a33520868a877b6b9a1beccdc1aaa4ec6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculate the logarithm of a fixed point number.  <a href="#a33520868a877b6b9a1beccdc1aaa4ec6">More...</a><br /></td></tr>
<tr class="separator:a33520868a877b6b9a1beccdc1aaa4ec6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac66bdd16622d4498cc0299db1efcef54"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:ac66bdd16622d4498cc0299db1efcef54"><td class="memTemplItemLeft" align="right" valign="top">static <a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#ac66bdd16622d4498cc0299db1efcef54">exp</a> (<a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt; x)</td></tr>
<tr class="memdesc:ac66bdd16622d4498cc0299db1efcef54"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculate the exponential of a fixed point number.  <a href="#ac66bdd16622d4498cc0299db1efcef54">More...</a><br /></td></tr>
<tr class="separator:ac66bdd16622d4498cc0299db1efcef54"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a7c1ca385d21fe457259a8fd9debfbf"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a6a7c1ca385d21fe457259a8fd9debfbf"><td class="memTemplItemLeft" align="right" valign="top">static <a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a6a7c1ca385d21fe457259a8fd9debfbf">inv_sqrt</a> (<a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt; x)</td></tr>
<tr class="memdesc:a6a7c1ca385d21fe457259a8fd9debfbf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculate the inverse square root of a fixed point number.  <a href="#a6a7c1ca385d21fe457259a8fd9debfbf">More...</a><br /></td></tr>
<tr class="separator:a6a7c1ca385d21fe457259a8fd9debfbf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3260014222a62b212c096956c0605fd5"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a3260014222a62b212c096956c0605fd5"><td class="memTemplItemLeft" align="right" valign="top">static <a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a3260014222a62b212c096956c0605fd5">tanh</a> (<a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt; x)</td></tr>
<tr class="memdesc:a3260014222a62b212c096956c0605fd5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculate the hyperbolic tangent of a fixed point number.  <a href="#a3260014222a62b212c096956c0605fd5">More...</a><br /></td></tr>
<tr class="separator:a3260014222a62b212c096956c0605fd5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a74f7a6f0b0c31beaf3a0bc13e991b1c3"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a74f7a6f0b0c31beaf3a0bc13e991b1c3"><td class="memTemplItemLeft" align="right" valign="top">static <a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a74f7a6f0b0c31beaf3a0bc13e991b1c3">pow</a> (<a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt; x, <a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt; a)</td></tr>
<tr class="memdesc:a74f7a6f0b0c31beaf3a0bc13e991b1c3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculate the a-th power of a fixed point number.  <a href="#a74f7a6f0b0c31beaf3a0bc13e991b1c3">More...</a><br /></td></tr>
<tr class="separator:a74f7a6f0b0c31beaf3a0bc13e991b1c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p>Definition at line <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00365">365</a> of file <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml">FixedPoint.h</a>.</p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a3c04cac868606ed11c00761f0d5b3d2c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt;T&gt; abs </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt;&#160;</td>
          <td class="paramname"><em>x</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Calculate absolute value. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">x</td><td>Fixed point operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Absolute value of operand </dd></dl>

<p>Definition at line <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00655">655</a> of file <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml">FixedPoint.h</a>.</p>

<p>References <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00233">fixed_point&lt; T &gt;::precision()</a>, and <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00225">fixed_point&lt; T &gt;::raw()</a>.</p>

<p>Referenced by <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00914">arm_compute::test::fixed_point_arithmetic::detail::abs()</a>.</p>
<div class="fragment"><div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;    {</div><div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;        <span class="keyword">using</span> promoted_T = <span class="keyword">typename</span> <a class="code" href="namespacecaffe__data__extractor.xhtml#a7aead736a07eaf25623ad7bfa1f0ee2d">traits::promote&lt;T&gt;::type</a>;</div><div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;        T val            = (x.raw() &lt; 0) ? <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1constant__expr.xhtml#a59cfd98dfc03fbc5540092aa196d7187">constant_expr&lt;T&gt;::saturate_cast</a>(-static_cast&lt;promoted_T&gt;(x.raw())) : x.raw();</div><div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;        <span class="keywordflow">return</span> fixed_point&lt;T&gt;(val, x.precision(), <span class="keyword">true</span>);</div><div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;    }</div><div class="ttc" id="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1constant__expr_xhtml_a59cfd98dfc03fbc5540092aa196d7187"><div class="ttname"><a href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1constant__expr.xhtml#a59cfd98dfc03fbc5540092aa196d7187">arm_compute::test::fixed_point_arithmetic::detail::constant_expr::saturate_cast</a></div><div class="ttdeci">static constexpr T saturate_cast(U val)</div><div class="ttdoc">Saturate given number. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00360">FixedPoint.h:360</a></div></div>
<div class="ttc" id="namespacecaffe__data__extractor_xhtml_a7aead736a07eaf25623ad7bfa1f0ee2d"><div class="ttname"><a href="namespacecaffe__data__extractor.xhtml#a7aead736a07eaf25623ad7bfa1f0ee2d">caffe_data_extractor.type</a></div><div class="ttdeci">type</div><div class="ttdef"><b>Definition:</b> <a href="caffe__data__extractor_8py_source.xhtml#l00019">caffe_data_extractor.py:19</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a40956c61706d70b8978c2b87ac455d2a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt;T&gt; add </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt;&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt;&#160;</td>
          <td class="paramname"><em>y</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Perform addition among two fixed point numbers. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">x</td><td>First fixed point operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">y</td><td>Second fixed point operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Result fixed point with precision equal to minimum precision of both operands </dd></dl>

<p>Definition at line <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00527">527</a> of file <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml">FixedPoint.h</a>.</p>

<p>References <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00884">arm_compute::test::fixed_point_arithmetic::detail::min()</a>, <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00233">fixed_point&lt; T &gt;::precision()</a>, <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00225">fixed_point&lt; T &gt;::raw()</a>, <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00241">fixed_point&lt; T &gt;::rescale()</a>, <a class="el" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic.xhtml#a0ada8f647402027261407be09bdf25ffa4729d95f983955f0d93a30179deb2b86">arm_compute::test::fixed_point_arithmetic::SATURATE</a>, <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00360">constant_expr&lt; T &gt;::saturate_cast()</a>, and <a class="el" href="caffe__data__extractor_8py_source.xhtml#l00019">caffe_data_extractor::type</a>.</p>

<p>Referenced by <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00844">arm_compute::test::fixed_point_arithmetic::detail::operator+()</a>.</p>
<div class="fragment"><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;    {</div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;        uint8_t p = <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aabcf39e3917f842dbc5fbb0d802f24d5">std::min</a>(x.precision(), y.precision());</div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;        x.rescale(p);</div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;        y.rescale(p);</div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;        <span class="keywordflow">if</span>(OP == <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic.xhtml#a0ada8f647402027261407be09bdf25ffa4729d95f983955f0d93a30179deb2b86">OverflowPolicy::SATURATE</a>)</div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;        {</div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;            <span class="keyword">using</span> <a class="code" href="namespacecaffe__data__extractor.xhtml#a7aead736a07eaf25623ad7bfa1f0ee2d">type</a> = <span class="keyword">typename</span> <a class="code" href="namespacecaffe__data__extractor.xhtml#a7aead736a07eaf25623ad7bfa1f0ee2d">traits::promote&lt;T&gt;::type</a>;</div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;            <a class="code" href="namespacecaffe__data__extractor.xhtml#a7aead736a07eaf25623ad7bfa1f0ee2d">type</a> val   = <span class="keyword">static_cast&lt;</span><a class="code" href="namespacecaffe__data__extractor.xhtml#a7aead736a07eaf25623ad7bfa1f0ee2d">type</a><span class="keyword">&gt;</span>(x.raw()) + static_cast&lt;type&gt;(y.raw());</div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;            val        = <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1constant__expr.xhtml#a59cfd98dfc03fbc5540092aa196d7187">constant_expr&lt;T&gt;::saturate_cast</a>(val);</div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;            <span class="keywordflow">return</span> fixed_point&lt;T&gt;(<span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(val), p, <span class="keyword">true</span>);</div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;        }</div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;        <span class="keywordflow">else</span></div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;        {</div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;            <span class="keywordflow">return</span> fixed_point&lt;T&gt;(x.raw() + y.raw(), p, <span class="keyword">true</span>);</div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;        }</div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;    }</div><div class="ttc" id="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_xhtml_aabcf39e3917f842dbc5fbb0d802f24d5"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aabcf39e3917f842dbc5fbb0d802f24d5">arm_compute::test::fixed_point_arithmetic::detail::min</a></div><div class="ttdeci">fixed_point&lt; T &gt; min(fixed_point&lt; T &gt; x, fixed_point&lt; T &gt; y)</div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00884">FixedPoint.h:884</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_xhtml_a0ada8f647402027261407be09bdf25ffa4729d95f983955f0d93a30179deb2b86"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic.xhtml#a0ada8f647402027261407be09bdf25ffa4729d95f983955f0d93a30179deb2b86">arm_compute::test::fixed_point_arithmetic::OverflowPolicy::SATURATE</a></div><div class="ttdoc">Saturate policy. </div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1constant__expr_xhtml_a59cfd98dfc03fbc5540092aa196d7187"><div class="ttname"><a href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1constant__expr.xhtml#a59cfd98dfc03fbc5540092aa196d7187">arm_compute::test::fixed_point_arithmetic::detail::constant_expr::saturate_cast</a></div><div class="ttdeci">static constexpr T saturate_cast(U val)</div><div class="ttdoc">Saturate given number. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00360">FixedPoint.h:360</a></div></div>
<div class="ttc" id="namespacecaffe__data__extractor_xhtml_a7aead736a07eaf25623ad7bfa1f0ee2d"><div class="ttname"><a href="namespacecaffe__data__extractor.xhtml#a7aead736a07eaf25623ad7bfa1f0ee2d">caffe_data_extractor.type</a></div><div class="ttdeci">type</div><div class="ttdef"><b>Definition:</b> <a href="caffe__data__extractor_8py_source.xhtml#l00019">caffe_data_extractor.py:19</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a2d681ad37360fc4497f147af98951ba0"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt;T&gt; clamp </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt;&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">T&#160;</td>
          <td class="paramname"><em>min</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">T&#160;</td>
          <td class="paramname"><em>max</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Clamp fixed point to specific range. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">x</td><td>Fixed point operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">min</td><td>Minimum value to clamp to </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">max</td><td>Maximum value to clamp to</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Clamped result </dd></dl>

<p>Definition at line <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00498">498</a> of file <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml">FixedPoint.h</a>.</p>

<p>References <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00349">constant_expr&lt; T &gt;::clamp()</a>, <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00889">arm_compute::test::fixed_point_arithmetic::detail::max()</a>, <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00884">arm_compute::test::fixed_point_arithmetic::detail::min()</a>, <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00233">fixed_point&lt; T &gt;::precision()</a>, and <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00225">fixed_point&lt; T &gt;::raw()</a>.</p>

<p>Referenced by <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00919">arm_compute::test::fixed_point_arithmetic::detail::clamp()</a>.</p>
<div class="fragment"><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;    {</div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;        <span class="keywordflow">return</span> fixed_point&lt;T&gt;(<a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1constant__expr.xhtml#a996cf0a2779076326d094ef9d75ddd1f">constant_expr&lt;T&gt;::clamp</a>(x.raw(), <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aabcf39e3917f842dbc5fbb0d802f24d5">min</a>, <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#ad91bb73431b4de1f4946ed949d444849">max</a>), x.precision(), <span class="keyword">true</span>);</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;    }</div><div class="ttc" id="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_xhtml_aabcf39e3917f842dbc5fbb0d802f24d5"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aabcf39e3917f842dbc5fbb0d802f24d5">arm_compute::test::fixed_point_arithmetic::detail::min</a></div><div class="ttdeci">fixed_point&lt; T &gt; min(fixed_point&lt; T &gt; x, fixed_point&lt; T &gt; y)</div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00884">FixedPoint.h:884</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1constant__expr_xhtml_a996cf0a2779076326d094ef9d75ddd1f"><div class="ttname"><a href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1constant__expr.xhtml#a996cf0a2779076326d094ef9d75ddd1f">arm_compute::test::fixed_point_arithmetic::detail::constant_expr::clamp</a></div><div class="ttdeci">static constexpr T clamp(T val, T min, T max)</div><div class="ttdoc">Clamp value between two ranges. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00349">FixedPoint.h:349</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_xhtml_ad91bb73431b4de1f4946ed949d444849"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#ad91bb73431b4de1f4946ed949d444849">arm_compute::test::fixed_point_arithmetic::detail::max</a></div><div class="ttdeci">fixed_point&lt; T &gt; max(fixed_point&lt; T &gt; x, fixed_point&lt; T &gt; y)</div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00889">FixedPoint.h:889</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a72d043524e13bf27c605c2dee2e20a2a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt;T&gt; div </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt;&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt;&#160;</td>
          <td class="paramname"><em>y</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Perform division among two fixed point numbers. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">x</td><td>First fixed point operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">y</td><td>Second fixed point operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Result fixed point with precision equal to minimum precision of both operands </dd></dl>

<p>Definition at line <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00598">598</a> of file <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml">FixedPoint.h</a>.</p>

<p>References <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00889">arm_compute::test::fixed_point_arithmetic::detail::max()</a>, <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00884">arm_compute::test::fixed_point_arithmetic::detail::min()</a>, <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00233">fixed_point&lt; T &gt;::precision()</a>, <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00225">fixed_point&lt; T &gt;::raw()</a>, <a class="el" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic.xhtml#a0ada8f647402027261407be09bdf25ffa4729d95f983955f0d93a30179deb2b86">arm_compute::test::fixed_point_arithmetic::SATURATE</a>, and <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00360">constant_expr&lt; T &gt;::saturate_cast()</a>.</p>

<p>Referenced by <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00909">arm_compute::test::fixed_point_arithmetic::detail::div()</a>, and <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00864">arm_compute::test::fixed_point_arithmetic::detail::operator/()</a>.</p>
<div class="fragment"><div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;    {</div><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;        <span class="keyword">using</span> promoted_T = <span class="keyword">typename</span> <a class="code" href="namespacecaffe__data__extractor.xhtml#a7aead736a07eaf25623ad7bfa1f0ee2d">traits::promote&lt;T&gt;::type</a>;</div><div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;        uint8_t    p     = <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aabcf39e3917f842dbc5fbb0d802f24d5">std::min</a>(x.precision(), y.precision());</div><div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;        promoted_T denom = <span class="keyword">static_cast&lt;</span>promoted_T<span class="keyword">&gt;</span>(y.raw());</div><div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;        <span class="keywordflow">if</span>(denom != 0)</div><div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;        {</div><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;            promoted_T val = (<span class="keyword">static_cast&lt;</span>promoted_T<span class="keyword">&gt;</span>(x.raw()) &lt;&lt; <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#ad91bb73431b4de1f4946ed949d444849">std::max</a>(x.precision(), y.precision())) / denom;</div><div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;            <span class="keywordflow">if</span>(OP == <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic.xhtml#a0ada8f647402027261407be09bdf25ffa4729d95f983955f0d93a30179deb2b86">OverflowPolicy::SATURATE</a>)</div><div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;            {</div><div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;                val = <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1constant__expr.xhtml#a59cfd98dfc03fbc5540092aa196d7187">constant_expr&lt;T&gt;::saturate_cast</a>(val);</div><div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;            }</div><div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;            <span class="keywordflow">return</span> fixed_point&lt;T&gt;(<span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(val), p, <span class="keyword">true</span>);</div><div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;        }</div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;        <span class="keywordflow">else</span></div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;        {</div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;            T val = (x.raw() &lt; 0) ? <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aabcf39e3917f842dbc5fbb0d802f24d5">std::numeric_limits&lt;T&gt;::min</a>() : <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#ad91bb73431b4de1f4946ed949d444849">std::numeric_limits&lt;T&gt;::max</a>();</div><div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;            <span class="keywordflow">return</span> fixed_point&lt;T&gt;(val, p, <span class="keyword">true</span>);</div><div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;        }</div><div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;    }</div><div class="ttc" id="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_xhtml_aabcf39e3917f842dbc5fbb0d802f24d5"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aabcf39e3917f842dbc5fbb0d802f24d5">arm_compute::test::fixed_point_arithmetic::detail::min</a></div><div class="ttdeci">fixed_point&lt; T &gt; min(fixed_point&lt; T &gt; x, fixed_point&lt; T &gt; y)</div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00884">FixedPoint.h:884</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_xhtml_a0ada8f647402027261407be09bdf25ffa4729d95f983955f0d93a30179deb2b86"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic.xhtml#a0ada8f647402027261407be09bdf25ffa4729d95f983955f0d93a30179deb2b86">arm_compute::test::fixed_point_arithmetic::OverflowPolicy::SATURATE</a></div><div class="ttdoc">Saturate policy. </div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1constant__expr_xhtml_a59cfd98dfc03fbc5540092aa196d7187"><div class="ttname"><a href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1constant__expr.xhtml#a59cfd98dfc03fbc5540092aa196d7187">arm_compute::test::fixed_point_arithmetic::detail::constant_expr::saturate_cast</a></div><div class="ttdeci">static constexpr T saturate_cast(U val)</div><div class="ttdoc">Saturate given number. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00360">FixedPoint.h:360</a></div></div>
<div class="ttc" id="namespacecaffe__data__extractor_xhtml_a7aead736a07eaf25623ad7bfa1f0ee2d"><div class="ttname"><a href="namespacecaffe__data__extractor.xhtml#a7aead736a07eaf25623ad7bfa1f0ee2d">caffe_data_extractor.type</a></div><div class="ttdeci">type</div><div class="ttdef"><b>Definition:</b> <a href="caffe__data__extractor_8py_source.xhtml#l00019">caffe_data_extractor.py:19</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_xhtml_ad91bb73431b4de1f4946ed949d444849"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#ad91bb73431b4de1f4946ed949d444849">arm_compute::test::fixed_point_arithmetic::detail::max</a></div><div class="ttdeci">fixed_point&lt; T &gt; max(fixed_point&lt; T &gt; x, fixed_point&lt; T &gt; y)</div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00889">FixedPoint.h:889</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ac66bdd16622d4498cc0299db1efcef54"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt;T&gt; exp </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt;&#160;</td>
          <td class="paramname"><em>x</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Calculate the exponential of a fixed point number. </p>
<p>exp(x) = exp(floor(x)) * exp(x - floor(x)) = pow(2, floor(x) / ln(2)) * exp(x - floor(x)) = exp(x - floor(x)) &lt;&lt; (floor(x) / ln(2))</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">x</td><td>Fixed point operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Exponential value of operand </dd></dl>

<p>Definition at line <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00715">715</a> of file <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml">FixedPoint.h</a>.</p>

<p>References <a class="el" href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa7fc56270e7a70fa81a5935b72eacbe29">arm_compute::A</a>, <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00894">arm_compute::test::fixed_point_arithmetic::detail::add()</a>, <a class="el" href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa9d5ed678fe57bcca610140957afab571">arm_compute::B</a>, <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00276">arm_compute::test::fixed_point_arithmetic::detail::clz()</a>, <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00889">arm_compute::test::fixed_point_arithmetic::detail::max()</a>, <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00904">arm_compute::test::fixed_point_arithmetic::detail::mul()</a>, <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00233">fixed_point&lt; T &gt;::precision()</a>, <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00899">arm_compute::test::fixed_point_arithmetic::detail::sub()</a>, and <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00326">constant_expr&lt; T &gt;::to_int()</a>.</p>

<p>Referenced by <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00924">arm_compute::test::fixed_point_arithmetic::detail::exp()</a>.</p>
<div class="fragment"><div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;    {</div><div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;        uint8_t p = x.precision();</div><div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;        <span class="comment">// Constants</span></div><div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;        <span class="keyword">auto</span> const_one = fixed_point&lt;T&gt;(1, p);</div><div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;        <span class="keyword">auto</span> ln2       = fixed_point&lt;T&gt;(0.6931471, p);</div><div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;        <span class="keyword">auto</span> inv_ln2   = fixed_point&lt;T&gt;(1.442695, p);</div><div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;        <span class="keyword">auto</span> <a class="code" href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa7fc56270e7a70fa81a5935b72eacbe29">A</a>         = fixed_point&lt;T&gt;(0.9978546, p);</div><div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;        <span class="keyword">auto</span> <a class="code" href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa9d5ed678fe57bcca610140957afab571">B</a>         = fixed_point&lt;T&gt;(0.4994721, p);</div><div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;        <span class="keyword">auto</span> C         = fixed_point&lt;T&gt;(0.1763723, p);</div><div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;        <span class="keyword">auto</span> D         = fixed_point&lt;T&gt;(0.0435108, p);</div><div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;</div><div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;        T scaled_int_part = <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1constant__expr.xhtml#a918ab57096fdfe5e2cbf70de5145b9fa">detail::constant_expr&lt;T&gt;::to_int</a>(<a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#ad02ce21c48a8f9e419a2ec5f762f3221">mul</a>(x, inv_ln2).raw(), p);</div><div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;</div><div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;        <span class="comment">// Polynomial expansion</span></div><div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;        <span class="keyword">auto</span> frac_part = <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a287e18f5dec27ac32bfd30039a57dddf">sub</a>(x, <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#ad02ce21c48a8f9e419a2ec5f762f3221">mul</a>(ln2, fixed_point&lt;T&gt;(scaled_int_part, p)));</div><div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;        <span class="keyword">auto</span> taylor    = <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a40956c61706d70b8978c2b87ac455d2a">add</a>(<a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#ad02ce21c48a8f9e419a2ec5f762f3221">mul</a>(frac_part, D), C);</div><div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;        taylor         = <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a40956c61706d70b8978c2b87ac455d2a">add</a>(<a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#ad02ce21c48a8f9e419a2ec5f762f3221">mul</a>(frac_part, taylor), B);</div><div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;        taylor         = <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a40956c61706d70b8978c2b87ac455d2a">add</a>(<a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#ad02ce21c48a8f9e419a2ec5f762f3221">mul</a>(frac_part, taylor), A);</div><div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;        taylor         = <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#ad02ce21c48a8f9e419a2ec5f762f3221">mul</a>(frac_part, taylor);</div><div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;        taylor         = <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a40956c61706d70b8978c2b87ac455d2a">add</a>(taylor, const_one);</div><div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;</div><div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;        <span class="comment">// Saturate value</span></div><div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;        <span class="keywordflow">if</span>(static_cast&lt;T&gt;(<a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aa43c67a536c661ec28398d06bc8ba5af">clz</a>(taylor.raw())) &lt;= scaled_int_part)</div><div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;        {</div><div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;            <span class="keywordflow">return</span> fixed_point&lt;T&gt;(<a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#ad91bb73431b4de1f4946ed949d444849">std::numeric_limits&lt;T&gt;::max</a>(), p, <span class="keyword">true</span>);</div><div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;        }</div><div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;</div><div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;        <span class="keywordflow">return</span> (scaled_int_part &lt; 0) ? <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#ad1429c74912e4335cd55e6f860acf3b6">shift_right</a>(taylor, -scaled_int_part) : <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a0e0473f8d30d0a8067f9903430ddcd85">shift_left</a>(taylor, scaled_int_part);</div><div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;    }</div><div class="ttc" id="namespacearm__compute_xhtml_a1ce9b523fd4f3b5bbcadcd796183455aa7fc56270e7a70fa81a5935b72eacbe29"><div class="ttname"><a href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa7fc56270e7a70fa81a5935b72eacbe29">arm_compute::Channel::A</a></div><div class="ttdoc">Alpha channel. </div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1constant__expr_xhtml_a918ab57096fdfe5e2cbf70de5145b9fa"><div class="ttname"><a href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1constant__expr.xhtml#a918ab57096fdfe5e2cbf70de5145b9fa">arm_compute::test::fixed_point_arithmetic::detail::constant_expr::to_int</a></div><div class="ttdeci">static constexpr T to_int(T val, uint8_t p)</div><div class="ttdoc">Convert a fixed point value to integer given its precision. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00326">FixedPoint.h:326</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a1ce9b523fd4f3b5bbcadcd796183455aa9d5ed678fe57bcca610140957afab571"><div class="ttname"><a href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa9d5ed678fe57bcca610140957afab571">arm_compute::Channel::B</a></div><div class="ttdoc">Blue channel. </div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions_xhtml_a40956c61706d70b8978c2b87ac455d2a"><div class="ttname"><a href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a40956c61706d70b8978c2b87ac455d2a">arm_compute::test::fixed_point_arithmetic::detail::functions::add</a></div><div class="ttdeci">static fixed_point&lt; T &gt; add(fixed_point&lt; T &gt; x, fixed_point&lt; T &gt; y)</div><div class="ttdoc">Perform addition among two fixed point numbers. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00527">FixedPoint.h:527</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions_xhtml_a0e0473f8d30d0a8067f9903430ddcd85"><div class="ttname"><a href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a0e0473f8d30d0a8067f9903430ddcd85">arm_compute::test::fixed_point_arithmetic::detail::functions::shift_left</a></div><div class="ttdeci">static fixed_point&lt; T &gt; shift_left(fixed_point&lt; T &gt; x, size_t shift)</div><div class="ttdoc">Shift left. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00626">FixedPoint.h:626</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions_xhtml_a287e18f5dec27ac32bfd30039a57dddf"><div class="ttname"><a href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a287e18f5dec27ac32bfd30039a57dddf">arm_compute::test::fixed_point_arithmetic::detail::functions::sub</a></div><div class="ttdeci">static fixed_point&lt; T &gt; sub(fixed_point&lt; T &gt; x, fixed_point&lt; T &gt; y)</div><div class="ttdoc">Perform subtraction among two fixed point numbers. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00552">FixedPoint.h:552</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions_xhtml_ad1429c74912e4335cd55e6f860acf3b6"><div class="ttname"><a href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#ad1429c74912e4335cd55e6f860acf3b6">arm_compute::test::fixed_point_arithmetic::detail::functions::shift_right</a></div><div class="ttdeci">static fixed_point&lt; T &gt; shift_right(fixed_point&lt; T &gt; x, size_t shift)</div><div class="ttdoc">Shift right. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00644">FixedPoint.h:644</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions_xhtml_ad02ce21c48a8f9e419a2ec5f762f3221"><div class="ttname"><a href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#ad02ce21c48a8f9e419a2ec5f762f3221">arm_compute::test::fixed_point_arithmetic::detail::functions::mul</a></div><div class="ttdeci">static fixed_point&lt; T &gt; mul(fixed_point&lt; T &gt; x, fixed_point&lt; T &gt; y)</div><div class="ttdoc">Perform multiplication among two fixed point numbers. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00577">FixedPoint.h:577</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_xhtml_aa43c67a536c661ec28398d06bc8ba5af"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aa43c67a536c661ec28398d06bc8ba5af">arm_compute::test::fixed_point_arithmetic::detail::clz</a></div><div class="ttdeci">constexpr int clz(T value)</div><div class="ttdoc">Count the number of leading zero bits in the given value. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00276">FixedPoint.h:276</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_xhtml_ad91bb73431b4de1f4946ed949d444849"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#ad91bb73431b4de1f4946ed949d444849">arm_compute::test::fixed_point_arithmetic::detail::max</a></div><div class="ttdeci">fixed_point&lt; T &gt; max(fixed_point&lt; T &gt; x, fixed_point&lt; T &gt; y)</div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00889">FixedPoint.h:889</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a6a7c1ca385d21fe457259a8fd9debfbf"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt;T&gt; inv_sqrt </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt;&#160;</td>
          <td class="paramname"><em>x</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Calculate the inverse square root of a fixed point number. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">x</td><td>Fixed point operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Inverse square root value of operand </dd></dl>

<p>Definition at line <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00752">752</a> of file <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml">FixedPoint.h</a>.</p>

<p>References <a class="el" href="validation_2_n_e_o_n_2_g_e_m_m_8cpp_source.xhtml#l00115">arm_compute::test::validation::a</a>, <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00276">arm_compute::test::fixed_point_arithmetic::detail::clz()</a>, <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00904">arm_compute::test::fixed_point_arithmetic::detail::mul()</a>, <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00233">fixed_point&lt; T &gt;::precision()</a>, <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00225">fixed_point&lt; T &gt;::raw()</a>, <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00899">arm_compute::test::fixed_point_arithmetic::detail::sub()</a>, and <a class="el" href="hwc_8hpp_source.xhtml#l00269">value</a>.</p>

<p>Referenced by <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00934">arm_compute::test::fixed_point_arithmetic::detail::inv_sqrt()</a>.</p>
<div class="fragment"><div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;    {</div><div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;        <span class="keyword">const</span> uint8_t p     = x.precision();</div><div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;        int8_t        shift = std::numeric_limits&lt;T&gt;::digits - (p + <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aa43c67a536c661ec28398d06bc8ba5af">detail::clz</a>(x.raw()));</div><div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;</div><div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;        shift += std::numeric_limits&lt;T&gt;::is_signed ? 1 : 0;</div><div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;</div><div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;        <span class="comment">// Use volatile to restrict compiler optimizations on shift as compiler reports maybe-uninitialized error on Android</span></div><div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;        <span class="keyword">volatile</span> int8_t *shift_ptr = &amp;shift;</div><div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;</div><div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;        <span class="keyword">auto</span>           const_three = fixed_point&lt;T&gt;(3, p);</div><div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;        <span class="keyword">auto</span>           <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aac40b7097f2bda9274ae07fa33d15a79">a</a>           = (*shift_ptr &lt; 0) ? <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a0e0473f8d30d0a8067f9903430ddcd85">shift_left</a>(x, -(shift)) : <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#ad1429c74912e4335cd55e6f860acf3b6">shift_right</a>(x, shift);</div><div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;        fixed_point&lt;T&gt; x2          = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aac40b7097f2bda9274ae07fa33d15a79">a</a>;</div><div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;</div><div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;        <span class="comment">// We need three iterations to find the result for QS8 and five for QS16</span></div><div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;        constexpr <span class="keywordtype">int</span> num_iterations = <a class="code" href="hwc_8hpp.xhtml#a0f61d63b009d0880a89c843bd50d8d76">std::is_same&lt;T, int8_t&gt;::value</a> ? 3 : 5;</div><div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;        <span class="keywordflow">for</span>(<span class="keywordtype">int</span> i = 0; i &lt; num_iterations; ++i)</div><div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;        {</div><div class="line"><a name="l00770"></a><span class="lineno">  770</span>&#160;            fixed_point&lt;T&gt; three_minus_dx = <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a287e18f5dec27ac32bfd30039a57dddf">sub</a>(const_three, <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#ad02ce21c48a8f9e419a2ec5f762f3221">mul</a>(a, <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#ad02ce21c48a8f9e419a2ec5f762f3221">mul</a>(x2, x2)));</div><div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;            x2                            = <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#ad1429c74912e4335cd55e6f860acf3b6">shift_right</a>(<a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#ad02ce21c48a8f9e419a2ec5f762f3221">mul</a>(x2, three_minus_dx), 1);</div><div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;        }</div><div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;</div><div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;        <span class="keywordflow">return</span> (shift &lt; 0) ? <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a0e0473f8d30d0a8067f9903430ddcd85">shift_left</a>(x2, (-shift) &gt;&gt; 1) : <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#ad1429c74912e4335cd55e6f860acf3b6">shift_right</a>(x2, shift &gt;&gt; 1);</div><div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;    }</div><div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_aac40b7097f2bda9274ae07fa33d15a79"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#aac40b7097f2bda9274ae07fa33d15a79">arm_compute::test::validation::a</a></div><div class="ttdeci">Tensor a</div><div class="ttdef"><b>Definition:</b> <a href="validation_2_n_e_o_n_2_g_e_m_m_8cpp_source.xhtml#l00115">GEMM.cpp:115</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions_xhtml_a0e0473f8d30d0a8067f9903430ddcd85"><div class="ttname"><a href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a0e0473f8d30d0a8067f9903430ddcd85">arm_compute::test::fixed_point_arithmetic::detail::functions::shift_left</a></div><div class="ttdeci">static fixed_point&lt; T &gt; shift_left(fixed_point&lt; T &gt; x, size_t shift)</div><div class="ttdoc">Shift left. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00626">FixedPoint.h:626</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions_xhtml_a287e18f5dec27ac32bfd30039a57dddf"><div class="ttname"><a href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a287e18f5dec27ac32bfd30039a57dddf">arm_compute::test::fixed_point_arithmetic::detail::functions::sub</a></div><div class="ttdeci">static fixed_point&lt; T &gt; sub(fixed_point&lt; T &gt; x, fixed_point&lt; T &gt; y)</div><div class="ttdoc">Perform subtraction among two fixed point numbers. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00552">FixedPoint.h:552</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions_xhtml_ad1429c74912e4335cd55e6f860acf3b6"><div class="ttname"><a href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#ad1429c74912e4335cd55e6f860acf3b6">arm_compute::test::fixed_point_arithmetic::detail::functions::shift_right</a></div><div class="ttdeci">static fixed_point&lt; T &gt; shift_right(fixed_point&lt; T &gt; x, size_t shift)</div><div class="ttdoc">Shift right. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00644">FixedPoint.h:644</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions_xhtml_ad02ce21c48a8f9e419a2ec5f762f3221"><div class="ttname"><a href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#ad02ce21c48a8f9e419a2ec5f762f3221">arm_compute::test::fixed_point_arithmetic::detail::functions::mul</a></div><div class="ttdeci">static fixed_point&lt; T &gt; mul(fixed_point&lt; T &gt; x, fixed_point&lt; T &gt; y)</div><div class="ttdoc">Perform multiplication among two fixed point numbers. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00577">FixedPoint.h:577</a></div></div>
<div class="ttc" id="hwc_8hpp_xhtml_a0f61d63b009d0880a89c843bd50d8d76"><div class="ttname"><a href="hwc_8hpp.xhtml#a0f61d63b009d0880a89c843bd50d8d76">value</a></div><div class="ttdeci">void * value</div><div class="ttdef"><b>Definition:</b> <a href="hwc_8hpp_source.xhtml#l00269">hwc.hpp:269</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_xhtml_aa43c67a536c661ec28398d06bc8ba5af"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aa43c67a536c661ec28398d06bc8ba5af">arm_compute::test::fixed_point_arithmetic::detail::clz</a></div><div class="ttdeci">constexpr int clz(T value)</div><div class="ttdoc">Count the number of leading zero bits in the given value. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00276">FixedPoint.h:276</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a304fe6cc15deaffb14929e42a4ff1c1b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static bool isequal </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt;&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt;&#160;</td>
          <td class="paramname"><em>y</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Checks if two fixed point numbers are equal. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">x</td><td>First fixed point operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">y</td><td>Second fixed point operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True if fixed points are equal else false </dd></dl>

<p>Definition at line <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00398">398</a> of file <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml">FixedPoint.h</a>.</p>

<p>References <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00884">arm_compute::test::fixed_point_arithmetic::detail::min()</a>, <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00233">fixed_point&lt; T &gt;::precision()</a>, <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00225">fixed_point&lt; T &gt;::raw()</a>, and <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00241">fixed_point&lt; T &gt;::rescale()</a>.</p>

<p>Referenced by <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00814">arm_compute::test::fixed_point_arithmetic::detail::operator==()</a>.</p>
<div class="fragment"><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;    {</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;        uint8_t p = <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aabcf39e3917f842dbc5fbb0d802f24d5">std::min</a>(x.precision(), y.precision());</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;        x.rescale(p);</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;        y.rescale(p);</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;        <span class="keywordflow">return</span> (x.raw() == y.raw());</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;    }</div><div class="ttc" id="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_xhtml_aabcf39e3917f842dbc5fbb0d802f24d5"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aabcf39e3917f842dbc5fbb0d802f24d5">arm_compute::test::fixed_point_arithmetic::detail::min</a></div><div class="ttdeci">fixed_point&lt; T &gt; min(fixed_point&lt; T &gt; x, fixed_point&lt; T &gt; y)</div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00884">FixedPoint.h:884</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="abd7f7757b9edb7cdd017d439bc5ba8b0"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static bool isgreater </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt;&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt;&#160;</td>
          <td class="paramname"><em>y</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Checks if one fixed point is greater than the other. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">x</td><td>First fixed point operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">y</td><td>Second fixed point operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True if fixed point is greater than other </dd></dl>

<p>Definition at line <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00425">425</a> of file <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml">FixedPoint.h</a>.</p>

<p>References <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00884">arm_compute::test::fixed_point_arithmetic::detail::min()</a>, <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00233">fixed_point&lt; T &gt;::precision()</a>, <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00225">fixed_point&lt; T &gt;::raw()</a>, and <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00241">fixed_point&lt; T &gt;::rescale()</a>.</p>
<div class="fragment"><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;    {</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;        uint8_t p = <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aabcf39e3917f842dbc5fbb0d802f24d5">std::min</a>(x.precision(), y.precision());</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;        x.rescale(p);</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;        y.rescale(p);</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;        <span class="keywordflow">return</span> (x.raw() &gt; y.raw());</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;    }</div><div class="ttc" id="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_xhtml_aabcf39e3917f842dbc5fbb0d802f24d5"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aabcf39e3917f842dbc5fbb0d802f24d5">arm_compute::test::fixed_point_arithmetic::detail::min</a></div><div class="ttdeci">fixed_point&lt; T &gt; min(fixed_point&lt; T &gt; x, fixed_point&lt; T &gt; y)</div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00884">FixedPoint.h:884</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a49abe87ad33d2900c2255e4b79322207"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static bool isgreaterequal </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt;&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt;&#160;</td>
          <td class="paramname"><em>y</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Checks if one fixed point is greater or equal than the other. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">x</td><td>First fixed point operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">y</td><td>Second fixed point operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True if fixed point is greater or equal than other </dd></dl>

<p>Definition at line <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00440">440</a> of file <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml">FixedPoint.h</a>.</p>

<p>References <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00884">arm_compute::test::fixed_point_arithmetic::detail::min()</a>, <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00233">fixed_point&lt; T &gt;::precision()</a>, <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00225">fixed_point&lt; T &gt;::raw()</a>, and <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00241">fixed_point&lt; T &gt;::rescale()</a>.</p>
<div class="fragment"><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;    {</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;        uint8_t p = <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aabcf39e3917f842dbc5fbb0d802f24d5">std::min</a>(x.precision(), y.precision());</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;        x.rescale(p);</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;        y.rescale(p);</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;        <span class="keywordflow">return</span> (x.raw() &gt;= y.raw());</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;    }</div><div class="ttc" id="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_xhtml_aabcf39e3917f842dbc5fbb0d802f24d5"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aabcf39e3917f842dbc5fbb0d802f24d5">arm_compute::test::fixed_point_arithmetic::detail::min</a></div><div class="ttdeci">fixed_point&lt; T &gt; min(fixed_point&lt; T &gt; x, fixed_point&lt; T &gt; y)</div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00884">FixedPoint.h:884</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ac4dcad0e940cf826063ba1f6ea659c07"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static bool isless </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt;&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt;&#160;</td>
          <td class="paramname"><em>y</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Checks if one fixed point is less than the other. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">x</td><td>First fixed point operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">y</td><td>Second fixed point operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True if fixed point is less than other </dd></dl>

<p>Definition at line <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00455">455</a> of file <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml">FixedPoint.h</a>.</p>

<p>References <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00884">arm_compute::test::fixed_point_arithmetic::detail::min()</a>, <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00233">fixed_point&lt; T &gt;::precision()</a>, <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00225">fixed_point&lt; T &gt;::raw()</a>, and <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00241">fixed_point&lt; T &gt;::rescale()</a>.</p>

<p>Referenced by <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00824">arm_compute::test::fixed_point_arithmetic::detail::operator&lt;()</a>.</p>
<div class="fragment"><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;    {</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;        uint8_t p = <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aabcf39e3917f842dbc5fbb0d802f24d5">std::min</a>(x.precision(), y.precision());</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;        x.rescale(p);</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;        y.rescale(p);</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;        <span class="keywordflow">return</span> (x.raw() &lt; y.raw());</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;    }</div><div class="ttc" id="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_xhtml_aabcf39e3917f842dbc5fbb0d802f24d5"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aabcf39e3917f842dbc5fbb0d802f24d5">arm_compute::test::fixed_point_arithmetic::detail::min</a></div><div class="ttdeci">fixed_point&lt; T &gt; min(fixed_point&lt; T &gt; x, fixed_point&lt; T &gt; y)</div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00884">FixedPoint.h:884</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a47e151d622ee6e71a0e731585b4fa7d8"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static bool islessequal </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt;&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt;&#160;</td>
          <td class="paramname"><em>y</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Checks if one fixed point is less or equal than the other. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">x</td><td>First fixed point operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">y</td><td>Second fixed point operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True if fixed point is less or equal than other </dd></dl>

<p>Definition at line <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00470">470</a> of file <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml">FixedPoint.h</a>.</p>

<p>References <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00884">arm_compute::test::fixed_point_arithmetic::detail::min()</a>, <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00233">fixed_point&lt; T &gt;::precision()</a>, <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00225">fixed_point&lt; T &gt;::raw()</a>, and <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00241">fixed_point&lt; T &gt;::rescale()</a>.</p>
<div class="fragment"><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;    {</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;        uint8_t p = <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aabcf39e3917f842dbc5fbb0d802f24d5">std::min</a>(x.precision(), y.precision());</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;        x.rescale(p);</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;        y.rescale(p);</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;        <span class="keywordflow">return</span> (x.raw() &lt;= y.raw());</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;    }</div><div class="ttc" id="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_xhtml_aabcf39e3917f842dbc5fbb0d802f24d5"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aabcf39e3917f842dbc5fbb0d802f24d5">arm_compute::test::fixed_point_arithmetic::detail::min</a></div><div class="ttdeci">fixed_point&lt; T &gt; min(fixed_point&lt; T &gt; x, fixed_point&lt; T &gt; y)</div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00884">FixedPoint.h:884</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a814cf7d89e7dad18b0625b4c914dc628"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static bool islessgreater </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt;&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt;&#160;</td>
          <td class="paramname"><em>y</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Checks if one fixed point is less or greater than the other. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">x</td><td>First fixed point operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">y</td><td>Second fixed point operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True if fixed point is less or greater than other </dd></dl>

<p>Definition at line <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00485">485</a> of file <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml">FixedPoint.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;    {</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a866dbf3e096ad4a487820a8945be3dfe">isnotequal</a>(x, y);</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;    }</div><div class="ttc" id="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions_xhtml_a866dbf3e096ad4a487820a8945be3dfe"><div class="ttname"><a href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a866dbf3e096ad4a487820a8945be3dfe">arm_compute::test::fixed_point_arithmetic::detail::functions::isnotequal</a></div><div class="ttdeci">static bool isnotequal(fixed_point&lt; T &gt; x, fixed_point&lt; T &gt; y)</div><div class="ttdoc">Checks if two fixed point number are not equal. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00413">FixedPoint.h:413</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a866dbf3e096ad4a487820a8945be3dfe"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static bool isnotequal </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt;&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt;&#160;</td>
          <td class="paramname"><em>y</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Checks if two fixed point number are not equal. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">x</td><td>First fixed point operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">y</td><td>Second fixed point operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True if fixed points are not equal else false </dd></dl>

<p>Definition at line <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00413">413</a> of file <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml">FixedPoint.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;    {</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;        <span class="keywordflow">return</span> !<a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a304fe6cc15deaffb14929e42a4ff1c1b">isequal</a>(x, y);</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;    }</div><div class="ttc" id="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions_xhtml_a304fe6cc15deaffb14929e42a4ff1c1b"><div class="ttname"><a href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a304fe6cc15deaffb14929e42a4ff1c1b">arm_compute::test::fixed_point_arithmetic::detail::functions::isequal</a></div><div class="ttdeci">static bool isequal(fixed_point&lt; T &gt; x, fixed_point&lt; T &gt; y)</div><div class="ttdoc">Checks if two fixed point numbers are equal. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00398">FixedPoint.h:398</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a33520868a877b6b9a1beccdc1aaa4ec6"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt;T&gt; log </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt;&#160;</td>
          <td class="paramname"><em>x</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Calculate the logarithm of a fixed point number. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">x</td><td>Fixed point operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Logarithm value of operand </dd></dl>

<p>Definition at line <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00668">668</a> of file <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml">FixedPoint.h</a>.</p>

<p>References <a class="el" href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa7fc56270e7a70fa81a5935b72eacbe29">arm_compute::A</a>, <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00894">arm_compute::test::fixed_point_arithmetic::detail::add()</a>, <a class="el" href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa9d5ed678fe57bcca610140957afab571">arm_compute::B</a>, <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00909">arm_compute::test::fixed_point_arithmetic::detail::div()</a>, <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00929">arm_compute::test::fixed_point_arithmetic::detail::log()</a>, <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00904">arm_compute::test::fixed_point_arithmetic::detail::mul()</a>, <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00233">fixed_point&lt; T &gt;::precision()</a>, <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00225">fixed_point&lt; T &gt;::raw()</a>, <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00899">arm_compute::test::fixed_point_arithmetic::detail::sub()</a>, and <a class="el" href="reduction__operation_8cl_source.xhtml#l00052">sum()</a>.</p>

<p>Referenced by <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00929">arm_compute::test::fixed_point_arithmetic::detail::log()</a>.</p>
<div class="fragment"><div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;    {</div><div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;        uint8_t p         = x.precision();</div><div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;        <span class="keyword">auto</span>    const_one = fixed_point&lt;T&gt;(<span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(1), p);</div><div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;</div><div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;        <span class="comment">// Logarithm of 1 is zero and logarithm of negative values is not defined in R, so return 0.</span></div><div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;        <span class="comment">// Also, log(x) == -log(1/x) for 0 &lt; x &lt; 1.</span></div><div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;        <span class="keywordflow">if</span>(<a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a304fe6cc15deaffb14929e42a4ff1c1b">isequal</a>(x, const_one) || <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a47e151d622ee6e71a0e731585b4fa7d8">islessequal</a>(x, fixed_point&lt;T&gt;(static_cast&lt;T&gt;(0), p)))</div><div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;        {</div><div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;            <span class="keywordflow">return</span> fixed_point&lt;T&gt;(<span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(0), p, <span class="keyword">true</span>);</div><div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;        }</div><div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span>(<a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#ac4dcad0e940cf826063ba1f6ea659c07">isless</a>(x, const_one))</div><div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;        {</div><div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#ad02ce21c48a8f9e419a2ec5f762f3221">mul</a>(<a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a33520868a877b6b9a1beccdc1aaa4ec6">log</a>(<a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a72d043524e13bf27c605c2dee2e20a2a">div</a>(const_one, x)), fixed_point&lt;T&gt;(-1, p));</div><div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;        }</div><div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;</div><div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;        <span class="comment">// Remove even powers of 2</span></div><div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;        T shift_val = 31 - __builtin_clz(x.raw() &gt;&gt; p);</div><div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;        x           = <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#ad1429c74912e4335cd55e6f860acf3b6">shift_right</a>(x, shift_val);</div><div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;        x           = <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a287e18f5dec27ac32bfd30039a57dddf">sub</a>(x, const_one);</div><div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;</div><div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;        <span class="comment">// Constants</span></div><div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;        <span class="keyword">auto</span> ln2 = fixed_point&lt;T&gt;(0.6931471, p);</div><div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;        <span class="keyword">auto</span> <a class="code" href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa7fc56270e7a70fa81a5935b72eacbe29">A</a>   = fixed_point&lt;T&gt;(1.4384189, p);</div><div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;        <span class="keyword">auto</span> <a class="code" href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa9d5ed678fe57bcca610140957afab571">B</a>   = fixed_point&lt;T&gt;(-0.67719, p);</div><div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;        <span class="keyword">auto</span> C   = fixed_point&lt;T&gt;(0.3218538, p);</div><div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;        <span class="keyword">auto</span> D   = fixed_point&lt;T&gt;(-0.0832229, p);</div><div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;</div><div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;        <span class="comment">// Polynomial expansion</span></div><div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;        <span class="keyword">auto</span> <a class="code" href="reduction__operation_8cl.xhtml#ab0df00f5333da51860deb93deb44a782">sum</a> = <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a40956c61706d70b8978c2b87ac455d2a">add</a>(<a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#ad02ce21c48a8f9e419a2ec5f762f3221">mul</a>(x, D), C);</div><div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;        sum      = <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a40956c61706d70b8978c2b87ac455d2a">add</a>(<a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#ad02ce21c48a8f9e419a2ec5f762f3221">mul</a>(x, sum), B);</div><div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;        sum      = <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a40956c61706d70b8978c2b87ac455d2a">add</a>(<a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#ad02ce21c48a8f9e419a2ec5f762f3221">mul</a>(x, sum), A);</div><div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;        sum      = <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#ad02ce21c48a8f9e419a2ec5f762f3221">mul</a>(x, sum);</div><div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;</div><div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#ad02ce21c48a8f9e419a2ec5f762f3221">mul</a>(<a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a40956c61706d70b8978c2b87ac455d2a">add</a>(sum, fixed_point&lt;T&gt;(static_cast&lt;T&gt;(shift_val), p)), ln2);</div><div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;    }</div><div class="ttc" id="namespacearm__compute_xhtml_a1ce9b523fd4f3b5bbcadcd796183455aa7fc56270e7a70fa81a5935b72eacbe29"><div class="ttname"><a href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa7fc56270e7a70fa81a5935b72eacbe29">arm_compute::Channel::A</a></div><div class="ttdoc">Alpha channel. </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a1ce9b523fd4f3b5bbcadcd796183455aa9d5ed678fe57bcca610140957afab571"><div class="ttname"><a href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa9d5ed678fe57bcca610140957afab571">arm_compute::Channel::B</a></div><div class="ttdoc">Blue channel. </div></div>
<div class="ttc" id="reduction__operation_8cl_xhtml_ab0df00f5333da51860deb93deb44a782"><div class="ttname"><a href="reduction__operation_8cl.xhtml#ab0df00f5333da51860deb93deb44a782">sum</a></div><div class="ttdeci">DATA_TYPE sum(__global const DATA_TYPE *input)</div><div class="ttdoc">Calculate sum of a vector. </div><div class="ttdef"><b>Definition:</b> <a href="reduction__operation_8cl_source.xhtml#l00052">reduction_operation.cl:52</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions_xhtml_a40956c61706d70b8978c2b87ac455d2a"><div class="ttname"><a href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a40956c61706d70b8978c2b87ac455d2a">arm_compute::test::fixed_point_arithmetic::detail::functions::add</a></div><div class="ttdeci">static fixed_point&lt; T &gt; add(fixed_point&lt; T &gt; x, fixed_point&lt; T &gt; y)</div><div class="ttdoc">Perform addition among two fixed point numbers. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00527">FixedPoint.h:527</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions_xhtml_a304fe6cc15deaffb14929e42a4ff1c1b"><div class="ttname"><a href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a304fe6cc15deaffb14929e42a4ff1c1b">arm_compute::test::fixed_point_arithmetic::detail::functions::isequal</a></div><div class="ttdeci">static bool isequal(fixed_point&lt; T &gt; x, fixed_point&lt; T &gt; y)</div><div class="ttdoc">Checks if two fixed point numbers are equal. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00398">FixedPoint.h:398</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions_xhtml_a287e18f5dec27ac32bfd30039a57dddf"><div class="ttname"><a href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a287e18f5dec27ac32bfd30039a57dddf">arm_compute::test::fixed_point_arithmetic::detail::functions::sub</a></div><div class="ttdeci">static fixed_point&lt; T &gt; sub(fixed_point&lt; T &gt; x, fixed_point&lt; T &gt; y)</div><div class="ttdoc">Perform subtraction among two fixed point numbers. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00552">FixedPoint.h:552</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions_xhtml_a72d043524e13bf27c605c2dee2e20a2a"><div class="ttname"><a href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a72d043524e13bf27c605c2dee2e20a2a">arm_compute::test::fixed_point_arithmetic::detail::functions::div</a></div><div class="ttdeci">static fixed_point&lt; T &gt; div(fixed_point&lt; T &gt; x, fixed_point&lt; T &gt; y)</div><div class="ttdoc">Perform division among two fixed point numbers. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00598">FixedPoint.h:598</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions_xhtml_ad1429c74912e4335cd55e6f860acf3b6"><div class="ttname"><a href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#ad1429c74912e4335cd55e6f860acf3b6">arm_compute::test::fixed_point_arithmetic::detail::functions::shift_right</a></div><div class="ttdeci">static fixed_point&lt; T &gt; shift_right(fixed_point&lt; T &gt; x, size_t shift)</div><div class="ttdoc">Shift right. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00644">FixedPoint.h:644</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions_xhtml_ad02ce21c48a8f9e419a2ec5f762f3221"><div class="ttname"><a href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#ad02ce21c48a8f9e419a2ec5f762f3221">arm_compute::test::fixed_point_arithmetic::detail::functions::mul</a></div><div class="ttdeci">static fixed_point&lt; T &gt; mul(fixed_point&lt; T &gt; x, fixed_point&lt; T &gt; y)</div><div class="ttdoc">Perform multiplication among two fixed point numbers. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00577">FixedPoint.h:577</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions_xhtml_ac4dcad0e940cf826063ba1f6ea659c07"><div class="ttname"><a href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#ac4dcad0e940cf826063ba1f6ea659c07">arm_compute::test::fixed_point_arithmetic::detail::functions::isless</a></div><div class="ttdeci">static bool isless(fixed_point&lt; T &gt; x, fixed_point&lt; T &gt; y)</div><div class="ttdoc">Checks if one fixed point is less than the other. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00455">FixedPoint.h:455</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions_xhtml_a47e151d622ee6e71a0e731585b4fa7d8"><div class="ttname"><a href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a47e151d622ee6e71a0e731585b4fa7d8">arm_compute::test::fixed_point_arithmetic::detail::functions::islessequal</a></div><div class="ttdeci">static bool islessequal(fixed_point&lt; T &gt; x, fixed_point&lt; T &gt; y)</div><div class="ttdoc">Checks if one fixed point is less or equal than the other. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00470">FixedPoint.h:470</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions_xhtml_a33520868a877b6b9a1beccdc1aaa4ec6"><div class="ttname"><a href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a33520868a877b6b9a1beccdc1aaa4ec6">arm_compute::test::fixed_point_arithmetic::detail::functions::log</a></div><div class="ttdeci">static fixed_point&lt; T &gt; log(fixed_point&lt; T &gt; x)</div><div class="ttdoc">Calculate the logarithm of a fixed point number. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00668">FixedPoint.h:668</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ad02ce21c48a8f9e419a2ec5f762f3221"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt;T&gt; mul </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt;&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt;&#160;</td>
          <td class="paramname"><em>y</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Perform multiplication among two fixed point numbers. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">x</td><td>First fixed point operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">y</td><td>Second fixed point operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Result fixed point with precision equal to minimum precision of both operands </dd></dl>

<p>Definition at line <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00577">577</a> of file <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml">FixedPoint.h</a>.</p>

<p>References <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00889">arm_compute::test::fixed_point_arithmetic::detail::max()</a>, <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00884">arm_compute::test::fixed_point_arithmetic::detail::min()</a>, <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00233">fixed_point&lt; T &gt;::precision()</a>, <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00225">fixed_point&lt; T &gt;::raw()</a>, <a class="el" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic.xhtml#a0ada8f647402027261407be09bdf25ffa4729d95f983955f0d93a30179deb2b86">arm_compute::test::fixed_point_arithmetic::SATURATE</a>, and <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00360">constant_expr&lt; T &gt;::saturate_cast()</a>.</p>

<p>Referenced by <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00859">arm_compute::test::fixed_point_arithmetic::detail::operator*()</a>.</p>
<div class="fragment"><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;    {</div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;        <span class="keyword">using</span> promoted_T        = <span class="keyword">typename</span> <a class="code" href="namespacecaffe__data__extractor.xhtml#a7aead736a07eaf25623ad7bfa1f0ee2d">traits::promote&lt;T&gt;::type</a>;</div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;        uint8_t    p_min        = <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aabcf39e3917f842dbc5fbb0d802f24d5">std::min</a>(x.precision(), y.precision());</div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;        uint8_t    p_max        = <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#ad91bb73431b4de1f4946ed949d444849">std::max</a>(x.precision(), y.precision());</div><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;        promoted_T round_factor = (1 &lt;&lt; (p_max - 1));</div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;        promoted_T val          = ((<span class="keyword">static_cast&lt;</span>promoted_T<span class="keyword">&gt;</span>(x.raw()) * static_cast&lt;promoted_T&gt;(y.raw())) + round_factor) &gt;&gt; p_max;</div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;        <span class="keywordflow">if</span>(OP == <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic.xhtml#a0ada8f647402027261407be09bdf25ffa4729d95f983955f0d93a30179deb2b86">OverflowPolicy::SATURATE</a>)</div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;        {</div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;            val = <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1constant__expr.xhtml#a59cfd98dfc03fbc5540092aa196d7187">constant_expr&lt;T&gt;::saturate_cast</a>(val);</div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;        }</div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;        <span class="keywordflow">return</span> fixed_point&lt;T&gt;(<span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(val), p_min, <span class="keyword">true</span>);</div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;    }</div><div class="ttc" id="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_xhtml_aabcf39e3917f842dbc5fbb0d802f24d5"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aabcf39e3917f842dbc5fbb0d802f24d5">arm_compute::test::fixed_point_arithmetic::detail::min</a></div><div class="ttdeci">fixed_point&lt; T &gt; min(fixed_point&lt; T &gt; x, fixed_point&lt; T &gt; y)</div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00884">FixedPoint.h:884</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_xhtml_a0ada8f647402027261407be09bdf25ffa4729d95f983955f0d93a30179deb2b86"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic.xhtml#a0ada8f647402027261407be09bdf25ffa4729d95f983955f0d93a30179deb2b86">arm_compute::test::fixed_point_arithmetic::OverflowPolicy::SATURATE</a></div><div class="ttdoc">Saturate policy. </div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1constant__expr_xhtml_a59cfd98dfc03fbc5540092aa196d7187"><div class="ttname"><a href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1constant__expr.xhtml#a59cfd98dfc03fbc5540092aa196d7187">arm_compute::test::fixed_point_arithmetic::detail::constant_expr::saturate_cast</a></div><div class="ttdeci">static constexpr T saturate_cast(U val)</div><div class="ttdoc">Saturate given number. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00360">FixedPoint.h:360</a></div></div>
<div class="ttc" id="namespacecaffe__data__extractor_xhtml_a7aead736a07eaf25623ad7bfa1f0ee2d"><div class="ttname"><a href="namespacecaffe__data__extractor.xhtml#a7aead736a07eaf25623ad7bfa1f0ee2d">caffe_data_extractor.type</a></div><div class="ttdeci">type</div><div class="ttdef"><b>Definition:</b> <a href="caffe__data__extractor_8py_source.xhtml#l00019">caffe_data_extractor.py:19</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_xhtml_ad91bb73431b4de1f4946ed949d444849"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#ad91bb73431b4de1f4946ed949d444849">arm_compute::test::fixed_point_arithmetic::detail::max</a></div><div class="ttdeci">fixed_point&lt; T &gt; max(fixed_point&lt; T &gt; x, fixed_point&lt; T &gt; y)</div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00889">FixedPoint.h:889</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="aa78731a2479da19c6604b3baa3ffe33d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt;T&gt; negate </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt;&#160;</td>
          <td class="paramname"><em>x</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Negate number. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">x</td><td>Fixed point operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Negated fixed point result </dd></dl>

<p>Definition at line <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00509">509</a> of file <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml">FixedPoint.h</a>.</p>

<p>References <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00233">fixed_point&lt; T &gt;::precision()</a>, <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00225">fixed_point&lt; T &gt;::raw()</a>, <a class="el" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic.xhtml#a0ada8f647402027261407be09bdf25ffa4729d95f983955f0d93a30179deb2b86">arm_compute::test::fixed_point_arithmetic::SATURATE</a>, and <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00360">constant_expr&lt; T &gt;::saturate_cast()</a>.</p>

<p>Referenced by <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00854">arm_compute::test::fixed_point_arithmetic::detail::operator-()</a>.</p>
<div class="fragment"><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;    {</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;        <span class="keyword">using</span> promoted_T = <span class="keyword">typename</span> <a class="code" href="namespacecaffe__data__extractor.xhtml#a7aead736a07eaf25623ad7bfa1f0ee2d">traits::promote&lt;T&gt;::type</a>;</div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;        promoted_T val   = -x.raw();</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;        <span class="keywordflow">if</span>(OP == <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic.xhtml#a0ada8f647402027261407be09bdf25ffa4729d95f983955f0d93a30179deb2b86">OverflowPolicy::SATURATE</a>)</div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;        {</div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;            val = <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1constant__expr.xhtml#a59cfd98dfc03fbc5540092aa196d7187">constant_expr&lt;T&gt;::saturate_cast</a>(val);</div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;        }</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;        <span class="keywordflow">return</span> fixed_point&lt;T&gt;(<span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(val), x.precision(), <span class="keyword">true</span>);</div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;    }</div><div class="ttc" id="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_xhtml_a0ada8f647402027261407be09bdf25ffa4729d95f983955f0d93a30179deb2b86"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic.xhtml#a0ada8f647402027261407be09bdf25ffa4729d95f983955f0d93a30179deb2b86">arm_compute::test::fixed_point_arithmetic::OverflowPolicy::SATURATE</a></div><div class="ttdoc">Saturate policy. </div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1constant__expr_xhtml_a59cfd98dfc03fbc5540092aa196d7187"><div class="ttname"><a href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1constant__expr.xhtml#a59cfd98dfc03fbc5540092aa196d7187">arm_compute::test::fixed_point_arithmetic::detail::constant_expr::saturate_cast</a></div><div class="ttdeci">static constexpr T saturate_cast(U val)</div><div class="ttdoc">Saturate given number. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00360">FixedPoint.h:360</a></div></div>
<div class="ttc" id="namespacecaffe__data__extractor_xhtml_a7aead736a07eaf25623ad7bfa1f0ee2d"><div class="ttname"><a href="namespacecaffe__data__extractor.xhtml#a7aead736a07eaf25623ad7bfa1f0ee2d">caffe_data_extractor.type</a></div><div class="ttdeci">type</div><div class="ttdef"><b>Definition:</b> <a href="caffe__data__extractor_8py_source.xhtml#l00019">caffe_data_extractor.py:19</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a74f7a6f0b0c31beaf3a0bc13e991b1c3"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt;T&gt; pow </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt;&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt;&#160;</td>
          <td class="paramname"><em>a</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Calculate the a-th power of a fixed point number. </p>
<p>The power is computed as x^a = e^(log(x) * a)</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">x</td><td>Fixed point operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">a</td><td>Fixed point exponent</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>a-th power of the operand </dd></dl>

<p>Definition at line <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00807">807</a> of file <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml">FixedPoint.h</a>.</p>

<p>References <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00924">arm_compute::test::fixed_point_arithmetic::detail::exp()</a>, and <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00929">arm_compute::test::fixed_point_arithmetic::detail::log()</a>.</p>

<p>Referenced by <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00944">arm_compute::test::fixed_point_arithmetic::detail::pow()</a>.</p>
<div class="fragment"><div class="line"><a name="l00808"></a><span class="lineno">  808</span>&#160;    {</div><div class="line"><a name="l00809"></a><span class="lineno">  809</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#ac66bdd16622d4498cc0299db1efcef54">exp</a>(<a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a33520868a877b6b9a1beccdc1aaa4ec6">log</a>(x) * <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aac40b7097f2bda9274ae07fa33d15a79">a</a>);</div><div class="line"><a name="l00810"></a><span class="lineno">  810</span>&#160;    }</div><div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_aac40b7097f2bda9274ae07fa33d15a79"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#aac40b7097f2bda9274ae07fa33d15a79">arm_compute::test::validation::a</a></div><div class="ttdeci">Tensor a</div><div class="ttdef"><b>Definition:</b> <a href="validation_2_n_e_o_n_2_g_e_m_m_8cpp_source.xhtml#l00115">GEMM.cpp:115</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions_xhtml_ac66bdd16622d4498cc0299db1efcef54"><div class="ttname"><a href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#ac66bdd16622d4498cc0299db1efcef54">arm_compute::test::fixed_point_arithmetic::detail::functions::exp</a></div><div class="ttdeci">static fixed_point&lt; T &gt; exp(fixed_point&lt; T &gt; x)</div><div class="ttdoc">Calculate the exponential of a fixed point number. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00715">FixedPoint.h:715</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions_xhtml_a33520868a877b6b9a1beccdc1aaa4ec6"><div class="ttname"><a href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a33520868a877b6b9a1beccdc1aaa4ec6">arm_compute::test::fixed_point_arithmetic::detail::functions::log</a></div><div class="ttdeci">static fixed_point&lt; T &gt; log(fixed_point&lt; T &gt; x)</div><div class="ttdoc">Calculate the logarithm of a fixed point number. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00668">FixedPoint.h:668</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a0e0473f8d30d0a8067f9903430ddcd85"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt;T&gt; shift_left </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt;&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>shift</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Shift left. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">x</td><td>Fixed point operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">shift</td><td>Shift value</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Shifted value </dd></dl>

<p>Definition at line <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00626">626</a> of file <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml">FixedPoint.h</a>.</p>

<p>References <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00233">fixed_point&lt; T &gt;::precision()</a>, <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00225">fixed_point&lt; T &gt;::raw()</a>, <a class="el" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic.xhtml#a0ada8f647402027261407be09bdf25ffa4729d95f983955f0d93a30179deb2b86">arm_compute::test::fixed_point_arithmetic::SATURATE</a>, and <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00360">constant_expr&lt; T &gt;::saturate_cast()</a>.</p>

<p>Referenced by <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00874">arm_compute::test::fixed_point_arithmetic::detail::operator&lt;&lt;()</a>.</p>
<div class="fragment"><div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;    {</div><div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;        <span class="keyword">using</span> promoted_T = <span class="keyword">typename</span> <a class="code" href="namespacecaffe__data__extractor.xhtml#a7aead736a07eaf25623ad7bfa1f0ee2d">traits::promote&lt;T&gt;::type</a>;</div><div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;        promoted_T val   = <span class="keyword">static_cast&lt;</span>promoted_T<span class="keyword">&gt;</span>(x.raw()) &lt;&lt; shift;</div><div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;        <span class="keywordflow">if</span>(OP == <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic.xhtml#a0ada8f647402027261407be09bdf25ffa4729d95f983955f0d93a30179deb2b86">OverflowPolicy::SATURATE</a>)</div><div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;        {</div><div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;            val = <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1constant__expr.xhtml#a59cfd98dfc03fbc5540092aa196d7187">constant_expr&lt;T&gt;::saturate_cast</a>(val);</div><div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;        }</div><div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;        <span class="keywordflow">return</span> fixed_point&lt;T&gt;(<span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(val), x.precision(), <span class="keyword">true</span>);</div><div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;    }</div><div class="ttc" id="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_xhtml_a0ada8f647402027261407be09bdf25ffa4729d95f983955f0d93a30179deb2b86"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic.xhtml#a0ada8f647402027261407be09bdf25ffa4729d95f983955f0d93a30179deb2b86">arm_compute::test::fixed_point_arithmetic::OverflowPolicy::SATURATE</a></div><div class="ttdoc">Saturate policy. </div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1constant__expr_xhtml_a59cfd98dfc03fbc5540092aa196d7187"><div class="ttname"><a href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1constant__expr.xhtml#a59cfd98dfc03fbc5540092aa196d7187">arm_compute::test::fixed_point_arithmetic::detail::constant_expr::saturate_cast</a></div><div class="ttdeci">static constexpr T saturate_cast(U val)</div><div class="ttdoc">Saturate given number. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00360">FixedPoint.h:360</a></div></div>
<div class="ttc" id="namespacecaffe__data__extractor_xhtml_a7aead736a07eaf25623ad7bfa1f0ee2d"><div class="ttname"><a href="namespacecaffe__data__extractor.xhtml#a7aead736a07eaf25623ad7bfa1f0ee2d">caffe_data_extractor.type</a></div><div class="ttdeci">type</div><div class="ttdef"><b>Definition:</b> <a href="caffe__data__extractor_8py_source.xhtml#l00019">caffe_data_extractor.py:19</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ad1429c74912e4335cd55e6f860acf3b6"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt;T&gt; shift_right </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt;&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>shift</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Shift right. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">x</td><td>Fixed point operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">shift</td><td>Shift value</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Shifted value </dd></dl>

<p>Definition at line <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00644">644</a> of file <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml">FixedPoint.h</a>.</p>

<p>References <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00233">fixed_point&lt; T &gt;::precision()</a>, and <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00225">fixed_point&lt; T &gt;::raw()</a>.</p>

<p>Referenced by <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00869">arm_compute::test::fixed_point_arithmetic::detail::operator&gt;&gt;()</a>.</p>
<div class="fragment"><div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;    {</div><div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;        <span class="keywordflow">return</span> fixed_point&lt;T&gt;(x.raw() &gt;&gt; shift, x.precision(), <span class="keyword">true</span>);</div><div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a9efa14731a55e3d96adb961214e91734"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static bool signbit </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt;&#160;</td>
          <td class="paramname"><em>x</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Signbit of a fixed point number. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">x</td><td>Fixed point number</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True if negative else false. </dd></dl>

<p>Definition at line <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00386">386</a> of file <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml">FixedPoint.h</a>.</p>

<p>References <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00225">fixed_point&lt; T &gt;::raw()</a>.</p>
<div class="fragment"><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;    {</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;        <span class="keywordflow">return</span> ((x.raw() &gt;&gt; std::numeric_limits&lt;T&gt;::digits) != 0);</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a287e18f5dec27ac32bfd30039a57dddf"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt;T&gt; sub </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt;&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt;&#160;</td>
          <td class="paramname"><em>y</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Perform subtraction among two fixed point numbers. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">x</td><td>First fixed point operand </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">y</td><td>Second fixed point operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Result fixed point with precision equal to minimum precision of both operands </dd></dl>

<p>Definition at line <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00552">552</a> of file <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml">FixedPoint.h</a>.</p>

<p>References <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00884">arm_compute::test::fixed_point_arithmetic::detail::min()</a>, <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00233">fixed_point&lt; T &gt;::precision()</a>, <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00225">fixed_point&lt; T &gt;::raw()</a>, <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00241">fixed_point&lt; T &gt;::rescale()</a>, <a class="el" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic.xhtml#a0ada8f647402027261407be09bdf25ffa4729d95f983955f0d93a30179deb2b86">arm_compute::test::fixed_point_arithmetic::SATURATE</a>, <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00360">constant_expr&lt; T &gt;::saturate_cast()</a>, and <a class="el" href="caffe__data__extractor_8py_source.xhtml#l00019">caffe_data_extractor::type</a>.</p>

<p>Referenced by <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00849">arm_compute::test::fixed_point_arithmetic::detail::operator-()</a>.</p>
<div class="fragment"><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;    {</div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;        uint8_t p = <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aabcf39e3917f842dbc5fbb0d802f24d5">std::min</a>(x.precision(), y.precision());</div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;        x.rescale(p);</div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;        y.rescale(p);</div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;        <span class="keywordflow">if</span>(OP == <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic.xhtml#a0ada8f647402027261407be09bdf25ffa4729d95f983955f0d93a30179deb2b86">OverflowPolicy::SATURATE</a>)</div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;        {</div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;            <span class="keyword">using</span> <a class="code" href="namespacecaffe__data__extractor.xhtml#a7aead736a07eaf25623ad7bfa1f0ee2d">type</a> = <span class="keyword">typename</span> <a class="code" href="namespacecaffe__data__extractor.xhtml#a7aead736a07eaf25623ad7bfa1f0ee2d">traits::promote&lt;T&gt;::type</a>;</div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;            <a class="code" href="namespacecaffe__data__extractor.xhtml#a7aead736a07eaf25623ad7bfa1f0ee2d">type</a> val   = <span class="keyword">static_cast&lt;</span><a class="code" href="namespacecaffe__data__extractor.xhtml#a7aead736a07eaf25623ad7bfa1f0ee2d">type</a><span class="keyword">&gt;</span>(x.raw()) - static_cast&lt;type&gt;(y.raw());</div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;            val        = <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1constant__expr.xhtml#a59cfd98dfc03fbc5540092aa196d7187">constant_expr&lt;T&gt;::saturate_cast</a>(val);</div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;            <span class="keywordflow">return</span> fixed_point&lt;T&gt;(<span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(val), p, <span class="keyword">true</span>);</div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;        }</div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;        <span class="keywordflow">else</span></div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;        {</div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;            <span class="keywordflow">return</span> fixed_point&lt;T&gt;(x.raw() - y.raw(), p, <span class="keyword">true</span>);</div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;        }</div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;    }</div><div class="ttc" id="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_xhtml_aabcf39e3917f842dbc5fbb0d802f24d5"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aabcf39e3917f842dbc5fbb0d802f24d5">arm_compute::test::fixed_point_arithmetic::detail::min</a></div><div class="ttdeci">fixed_point&lt; T &gt; min(fixed_point&lt; T &gt; x, fixed_point&lt; T &gt; y)</div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00884">FixedPoint.h:884</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_xhtml_a0ada8f647402027261407be09bdf25ffa4729d95f983955f0d93a30179deb2b86"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic.xhtml#a0ada8f647402027261407be09bdf25ffa4729d95f983955f0d93a30179deb2b86">arm_compute::test::fixed_point_arithmetic::OverflowPolicy::SATURATE</a></div><div class="ttdoc">Saturate policy. </div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1constant__expr_xhtml_a59cfd98dfc03fbc5540092aa196d7187"><div class="ttname"><a href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1constant__expr.xhtml#a59cfd98dfc03fbc5540092aa196d7187">arm_compute::test::fixed_point_arithmetic::detail::constant_expr::saturate_cast</a></div><div class="ttdeci">static constexpr T saturate_cast(U val)</div><div class="ttdoc">Saturate given number. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00360">FixedPoint.h:360</a></div></div>
<div class="ttc" id="namespacecaffe__data__extractor_xhtml_a7aead736a07eaf25623ad7bfa1f0ee2d"><div class="ttname"><a href="namespacecaffe__data__extractor.xhtml#a7aead736a07eaf25623ad7bfa1f0ee2d">caffe_data_extractor.type</a></div><div class="ttdeci">type</div><div class="ttdef"><b>Definition:</b> <a href="caffe__data__extractor_8py_source.xhtml#l00019">caffe_data_extractor.py:19</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a3260014222a62b212c096956c0605fd5"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt;T&gt; tanh </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; T &gt;&#160;</td>
          <td class="paramname"><em>x</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Calculate the hyperbolic tangent of a fixed point number. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">x</td><td>Fixed point operand</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Hyperbolic tangent of the operand </dd></dl>

<p>Definition at line <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00783">783</a> of file <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml">FixedPoint.h</a>.</p>

<p>References <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00924">arm_compute::test::fixed_point_arithmetic::detail::exp()</a>, <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00233">fixed_point&lt; T &gt;::precision()</a>, and <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00939">arm_compute::test::fixed_point_arithmetic::detail::tanh()</a>.</p>

<p>Referenced by <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00939">arm_compute::test::fixed_point_arithmetic::detail::tanh()</a>.</p>
<div class="fragment"><div class="line"><a name="l00784"></a><span class="lineno">  784</span>&#160;    {</div><div class="line"><a name="l00785"></a><span class="lineno">  785</span>&#160;        uint8_t p = x.precision();</div><div class="line"><a name="l00786"></a><span class="lineno">  786</span>&#160;        <span class="comment">// Constants</span></div><div class="line"><a name="l00787"></a><span class="lineno">  787</span>&#160;        <span class="keyword">auto</span> const_one = fixed_point&lt;T&gt;(1, p);</div><div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;        <span class="keyword">auto</span> const_two = fixed_point&lt;T&gt;(2, p);</div><div class="line"><a name="l00789"></a><span class="lineno">  789</span>&#160;</div><div class="line"><a name="l00790"></a><span class="lineno">  790</span>&#160;        <span class="keyword">auto</span> exp2x = <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#ac66bdd16622d4498cc0299db1efcef54">exp</a>(const_two * x);</div><div class="line"><a name="l00791"></a><span class="lineno">  791</span>&#160;        <span class="keyword">auto</span> num   = exp2x - const_one;</div><div class="line"><a name="l00792"></a><span class="lineno">  792</span>&#160;        <span class="keyword">auto</span> den   = exp2x + const_one;</div><div class="line"><a name="l00793"></a><span class="lineno">  793</span>&#160;        <span class="keyword">auto</span> <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a3260014222a62b212c096956c0605fd5">tanh</a>  = num / den;</div><div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160;</div><div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a3260014222a62b212c096956c0605fd5">tanh</a>;</div><div class="line"><a name="l00796"></a><span class="lineno">  796</span>&#160;    }</div><div class="ttc" id="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions_xhtml_a3260014222a62b212c096956c0605fd5"><div class="ttname"><a href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a3260014222a62b212c096956c0605fd5">arm_compute::test::fixed_point_arithmetic::detail::functions::tanh</a></div><div class="ttdeci">static fixed_point&lt; T &gt; tanh(fixed_point&lt; T &gt; x)</div><div class="ttdoc">Calculate the hyperbolic tangent of a fixed point number. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00783">FixedPoint.h:783</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions_xhtml_ac66bdd16622d4498cc0299db1efcef54"><div class="ttname"><a href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#ac66bdd16622d4498cc0299db1efcef54">arm_compute::test::fixed_point_arithmetic::detail::functions::exp</a></div><div class="ttdeci">static fixed_point&lt; T &gt; exp(fixed_point&lt; T &gt; x)</div><div class="ttdoc">Calculate the exponential of a fixed point number. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00715">FixedPoint.h:715</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a69b97b34f32a6fc05665fc8605806326"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static std::basic_ostream&lt;T, traits&gt;&amp; write </td>
          <td>(</td>
          <td class="paramtype">std::basic_ostream&lt; T, traits &gt; &amp;&#160;</td>
          <td class="paramname"><em>s</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>&lt; U &gt; &amp;&#160;</td>
          <td class="paramname"><em>x</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Output stream operator. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">s</td><td>Output stream </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">x</td><td>Fixed point value</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Reference output to updated stream </dd></dl>

<p>Definition at line <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00375">375</a> of file <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml">FixedPoint.h</a>.</p>

<p>Referenced by <a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml#l00879">arm_compute::test::fixed_point_arithmetic::detail::operator&lt;&lt;()</a>.</p>
<div class="fragment"><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;    {</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;        <span class="keywordflow">return</span> s &lt;&lt; static_cast&lt;float&gt;(x);</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this struct was generated from the following file:<ul>
<li>tests/validation/<a class="el" href="tests_2validation_2_fixed_point_8h_source.xhtml">FixedPoint.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1test.xhtml">test</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic.xhtml">fixed_point_arithmetic</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml">detail</a></li><li class="navelem"><a class="el" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml">functions</a></li>
    <li class="footer">Generated on Thu Dec 14 2017 23:48:38 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
  </ul>
</div>
</body>
</html>
