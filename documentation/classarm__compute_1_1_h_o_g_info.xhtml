<!-- HTML header for doxygen 1.8.9.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: HOGInfo Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Compute Library
   &#160;<span id="projectnumber">17.12</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li><a href="classes.xhtml"><span>Data&#160;Structure&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Data&#160;Fields</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarm__compute_1_1_h_o_g_info.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">HOGInfo Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Store the <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object. ">HOG</a>'s metadata.  
 <a href="classarm__compute_1_1_h_o_g_info.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_h_o_g_info_8h_source.xhtml">HOGInfo.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:aed28257d62b9129062bfd61600531648"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml#aed28257d62b9129062bfd61600531648">HOGInfo</a> ()</td></tr>
<tr class="memdesc:aed28257d62b9129062bfd61600531648"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor.  <a href="#aed28257d62b9129062bfd61600531648">More...</a><br /></td></tr>
<tr class="separator:aed28257d62b9129062bfd61600531648"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ada121d63992678a09e1b3db5a2002bfa"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml#ada121d63992678a09e1b3db5a2002bfa">~HOGInfo</a> ()=default</td></tr>
<tr class="memdesc:ada121d63992678a09e1b3db5a2002bfa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default destructor.  <a href="#ada121d63992678a09e1b3db5a2002bfa">More...</a><br /></td></tr>
<tr class="separator:ada121d63992678a09e1b3db5a2002bfa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a10dcbc6006d1e12ba2cd1ae524c66122"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml#a10dcbc6006d1e12ba2cd1ae524c66122">HOGInfo</a> (const <a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml">HOGInfo</a> &amp;)=default</td></tr>
<tr class="memdesc:a10dcbc6006d1e12ba2cd1ae524c66122"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be copy constructed.  <a href="#a10dcbc6006d1e12ba2cd1ae524c66122">More...</a><br /></td></tr>
<tr class="separator:a10dcbc6006d1e12ba2cd1ae524c66122"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a64f60c469394d4f5f621546fc3108590"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml">HOGInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml#a64f60c469394d4f5f621546fc3108590">operator=</a> (const <a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml">HOGInfo</a> &amp;)=default</td></tr>
<tr class="memdesc:a64f60c469394d4f5f621546fc3108590"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be copied.  <a href="#a64f60c469394d4f5f621546fc3108590">More...</a><br /></td></tr>
<tr class="separator:a64f60c469394d4f5f621546fc3108590"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a21c3fbc2803bbf3d975bec8977307f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml#a6a21c3fbc2803bbf3d975bec8977307f">HOGInfo</a> (<a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml">HOGInfo</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:a6a21c3fbc2803bbf3d975bec8977307f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be move constructed.  <a href="#a6a21c3fbc2803bbf3d975bec8977307f">More...</a><br /></td></tr>
<tr class="separator:a6a21c3fbc2803bbf3d975bec8977307f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f48ffe9fe37db10eb23de67101c1500"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml">HOGInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml#a3f48ffe9fe37db10eb23de67101c1500">operator=</a> (<a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml">HOGInfo</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:a3f48ffe9fe37db10eb23de67101c1500"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be moved.  <a href="#a3f48ffe9fe37db10eb23de67101c1500">More...</a><br /></td></tr>
<tr class="separator:a3f48ffe9fe37db10eb23de67101c1500"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeaa7d619922de47d6239b0167a58e2c7"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml#aeaa7d619922de47d6239b0167a58e2c7">HOGInfo</a> (const <a class="el" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp;<a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml#a4b7434680a85c2ac14df737ac7cca91e">cell_size</a>, const <a class="el" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp;<a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml#a13a9a6f5cfa21b3ab15b1e4315311aeb">block_size</a>, const <a class="el" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp;<a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml#a0279e383beb758e477ce0673c5db8d57">detection_window_size</a>, const <a class="el" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp;<a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml#aa9a69eade27460f843fcfba5abb7ae52">block_stride</a>, size_t <a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml#ae3664b841732a09d7749953ca5b81373">num_bins</a>, <a class="el" href="namespacearm__compute.xhtml#a673665b4587a2956fcbad5f0e9ba89d3">HOGNormType</a> <a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml#aed90de2ef57929727bb2159b66d04487">normalization_type</a>=<a class="el" href="namespacearm__compute.xhtml#a673665b4587a2956fcbad5f0e9ba89d3ac9e68c0594494ec85805b225a7acb9c2">HOGNormType::L2HYS_NORM</a>, float <a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml#a954d05635b1ff48daffdd70d8a1a6443">l2_hyst_threshold</a>=0.2f, PhaseType phase_type=PhaseType::UNSIGNED)</td></tr>
<tr class="memdesc:aeaa7d619922de47d6239b0167a58e2c7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="#aeaa7d619922de47d6239b0167a58e2c7">More...</a><br /></td></tr>
<tr class="separator:aeaa7d619922de47d6239b0167a58e2c7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a75215e8ba07a5ec88ee8c902e306e887"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml#a75215e8ba07a5ec88ee8c902e306e887">init</a> (const <a class="el" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp;<a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml#a4b7434680a85c2ac14df737ac7cca91e">cell_size</a>, const <a class="el" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp;<a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml#a13a9a6f5cfa21b3ab15b1e4315311aeb">block_size</a>, const <a class="el" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp;<a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml#a0279e383beb758e477ce0673c5db8d57">detection_window_size</a>, const <a class="el" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp;<a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml#aa9a69eade27460f843fcfba5abb7ae52">block_stride</a>, size_t <a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml#ae3664b841732a09d7749953ca5b81373">num_bins</a>, <a class="el" href="namespacearm__compute.xhtml#a673665b4587a2956fcbad5f0e9ba89d3">HOGNormType</a> <a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml#aed90de2ef57929727bb2159b66d04487">normalization_type</a>=<a class="el" href="namespacearm__compute.xhtml#a673665b4587a2956fcbad5f0e9ba89d3ac9e68c0594494ec85805b225a7acb9c2">HOGNormType::L2HYS_NORM</a>, float <a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml#a954d05635b1ff48daffdd70d8a1a6443">l2_hyst_threshold</a>=0.2f, PhaseType phase_type=PhaseType::UNSIGNED)</td></tr>
<tr class="memdesc:a75215e8ba07a5ec88ee8c902e306e887"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialize the metadata structure with the given parameters.  <a href="#a75215e8ba07a5ec88ee8c902e306e887">More...</a><br /></td></tr>
<tr class="separator:a75215e8ba07a5ec88ee8c902e306e887"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b7434680a85c2ac14df737ac7cca91e"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml#a4b7434680a85c2ac14df737ac7cca91e">cell_size</a> () const </td></tr>
<tr class="memdesc:a4b7434680a85c2ac14df737ac7cca91e"><td class="mdescLeft">&#160;</td><td class="mdescRight">The cell size in pixels.  <a href="#a4b7434680a85c2ac14df737ac7cca91e">More...</a><br /></td></tr>
<tr class="separator:a4b7434680a85c2ac14df737ac7cca91e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a13a9a6f5cfa21b3ab15b1e4315311aeb"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml#a13a9a6f5cfa21b3ab15b1e4315311aeb">block_size</a> () const </td></tr>
<tr class="memdesc:a13a9a6f5cfa21b3ab15b1e4315311aeb"><td class="mdescLeft">&#160;</td><td class="mdescRight">The block size in pixels.  <a href="#a13a9a6f5cfa21b3ab15b1e4315311aeb">More...</a><br /></td></tr>
<tr class="separator:a13a9a6f5cfa21b3ab15b1e4315311aeb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0279e383beb758e477ce0673c5db8d57"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml#a0279e383beb758e477ce0673c5db8d57">detection_window_size</a> () const </td></tr>
<tr class="memdesc:a0279e383beb758e477ce0673c5db8d57"><td class="mdescLeft">&#160;</td><td class="mdescRight">The detection window size in pixels.  <a href="#a0279e383beb758e477ce0673c5db8d57">More...</a><br /></td></tr>
<tr class="separator:a0279e383beb758e477ce0673c5db8d57"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa9a69eade27460f843fcfba5abb7ae52"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml#aa9a69eade27460f843fcfba5abb7ae52">block_stride</a> () const </td></tr>
<tr class="memdesc:aa9a69eade27460f843fcfba5abb7ae52"><td class="mdescLeft">&#160;</td><td class="mdescRight">The block stride in pixels.  <a href="#aa9a69eade27460f843fcfba5abb7ae52">More...</a><br /></td></tr>
<tr class="separator:aa9a69eade27460f843fcfba5abb7ae52"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae3664b841732a09d7749953ca5b81373"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml#ae3664b841732a09d7749953ca5b81373">num_bins</a> () const </td></tr>
<tr class="memdesc:ae3664b841732a09d7749953ca5b81373"><td class="mdescLeft">&#160;</td><td class="mdescRight">The number of histogram bins for each cell.  <a href="#ae3664b841732a09d7749953ca5b81373">More...</a><br /></td></tr>
<tr class="separator:ae3664b841732a09d7749953ca5b81373"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed90de2ef57929727bb2159b66d04487"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute.xhtml#a673665b4587a2956fcbad5f0e9ba89d3">HOGNormType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml#aed90de2ef57929727bb2159b66d04487">normalization_type</a> () const </td></tr>
<tr class="memdesc:aed90de2ef57929727bb2159b66d04487"><td class="mdescLeft">&#160;</td><td class="mdescRight">The normalization type.  <a href="#aed90de2ef57929727bb2159b66d04487">More...</a><br /></td></tr>
<tr class="separator:aed90de2ef57929727bb2159b66d04487"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a954d05635b1ff48daffdd70d8a1a6443"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml#a954d05635b1ff48daffdd70d8a1a6443">l2_hyst_threshold</a> () const </td></tr>
<tr class="memdesc:a954d05635b1ff48daffdd70d8a1a6443"><td class="mdescLeft">&#160;</td><td class="mdescRight">Threshold used for L2HYS_NORM normalization type.  <a href="#a954d05635b1ff48daffdd70d8a1a6443">More...</a><br /></td></tr>
<tr class="separator:a954d05635b1ff48daffdd70d8a1a6443"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a96823b4d7dc642aa9f51a0077899d3f9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute.xhtml#af00a42ecad444bbda75cde1b64bd7e72">PhaseType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml#a96823b4d7dc642aa9f51a0077899d3f9">phase_type</a> () const </td></tr>
<tr class="memdesc:a96823b4d7dc642aa9f51a0077899d3f9"><td class="mdescLeft">&#160;</td><td class="mdescRight">The type of <a class="el" href="namespacearm__compute.xhtml#af00a42ecad444bbda75cde1b64bd7e72">PhaseType</a>.  <a href="#a96823b4d7dc642aa9f51a0077899d3f9">More...</a><br /></td></tr>
<tr class="separator:a96823b4d7dc642aa9f51a0077899d3f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8f6435e0a7c016e3cb0fc94b33067e50"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml#a8f6435e0a7c016e3cb0fc94b33067e50">descriptor_size</a> () const </td></tr>
<tr class="memdesc:a8f6435e0a7c016e3cb0fc94b33067e50"><td class="mdescLeft">&#160;</td><td class="mdescRight">The size of <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object. ">HOG</a> descriptor.  <a href="#a8f6435e0a7c016e3cb0fc94b33067e50">More...</a><br /></td></tr>
<tr class="separator:a8f6435e0a7c016e3cb0fc94b33067e50"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adb20b5249eedf180a461ea097622fe7f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml#adb20b5249eedf180a461ea097622fe7f">num_cells_per_block</a> () const </td></tr>
<tr class="memdesc:adb20b5249eedf180a461ea097622fe7f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculates the number of cells for each block.  <a href="#adb20b5249eedf180a461ea097622fe7f">More...</a><br /></td></tr>
<tr class="separator:adb20b5249eedf180a461ea097622fe7f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a649a86d58ff88cfd8523d6cb71d64332"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml#a649a86d58ff88cfd8523d6cb71d64332">num_blocks_per_image</a> (const <a class="el" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp;image_size) const </td></tr>
<tr class="memdesc:a649a86d58ff88cfd8523d6cb71d64332"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculates the number of blocks for the given image size.  <a href="#a649a86d58ff88cfd8523d6cb71d64332">More...</a><br /></td></tr>
<tr class="separator:a649a86d58ff88cfd8523d6cb71d64332"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Store the <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object. ">HOG</a>'s metadata. </p>

<p>Definition at line <a class="el" href="_h_o_g_info_8h_source.xhtml#l00035">35</a> of file <a class="el" href="_h_o_g_info_8h_source.xhtml">HOGInfo.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="aed28257d62b9129062bfd61600531648"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml">HOGInfo</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Default constructor. </p>

</div>
</div>
<a class="anchor" id="ada121d63992678a09e1b3db5a2002bfa"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual ~<a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml">HOGInfo</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default destructor. </p>

</div>
</div>
<a class="anchor" id="a10dcbc6006d1e12ba2cd1ae524c66122"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml">HOGInfo</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml">HOGInfo</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allow instances of this class to be copy constructed. </p>

</div>
</div>
<a class="anchor" id="a6a21c3fbc2803bbf3d975bec8977307f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml">HOGInfo</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml">HOGInfo</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allow instances of this class to be move constructed. </p>

</div>
</div>
<a class="anchor" id="aeaa7d619922de47d6239b0167a58e2c7"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml">HOGInfo</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp;&#160;</td>
          <td class="paramname"><em>cell_size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp;&#160;</td>
          <td class="paramname"><em>block_size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp;&#160;</td>
          <td class="paramname"><em>detection_window_size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp;&#160;</td>
          <td class="paramname"><em>block_stride</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>num_bins</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute.xhtml#a673665b4587a2956fcbad5f0e9ba89d3">HOGNormType</a>&#160;</td>
          <td class="paramname"><em>normalization_type</em> = <code><a class="el" href="namespacearm__compute.xhtml#a673665b4587a2956fcbad5f0e9ba89d3ac9e68c0594494ec85805b225a7acb9c2">HOGNormType::L2HYS_NORM</a></code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>l2_hyst_threshold</em> = <code>0.2f</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute.xhtml#af00a42ecad444bbda75cde1b64bd7e72">PhaseType</a>&#160;</td>
          <td class="paramname"><em>phase_type</em> = <code><a class="el" href="namespacearm__compute.xhtml#af00a42ecad444bbda75cde1b64bd7e72aaf36b47f395cd01f48b8fc1013665054">PhaseType::UNSIGNED</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cell_size</td><td>Cell size in pixels </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">block_size</td><td>Block size in pixels. Must be a multiple of cell_size. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">detection_window_size</td><td>Detection window size in pixels. Must be a multiple of block_size and block_stride. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">block_stride</td><td>Distance in pixels between 2 consecutive blocks along the x and y direction. Must be a multiple of cell size </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">num_bins</td><td>Number of histogram bins for each cell </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">normalization_type</td><td>(Optional) Normalization type to use for each block </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">l2_hyst_threshold</td><td>(Optional) Threshold used for L2HYS_NORM normalization method </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">phase_type</td><td>(Optional) Type of <a class="el" href="namespacearm__compute.xhtml#af00a42ecad444bbda75cde1b64bd7e72">PhaseType</a> </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a13a9a6f5cfa21b3ab15b1e4315311aeb"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>&amp; block_size </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>The block size in pixels. </p>
<dl class="section return"><dt>Returns</dt><dd>The block size in pixels </dd></dl>

</div>
</div>
<a class="anchor" id="aa9a69eade27460f843fcfba5abb7ae52"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>&amp; block_stride </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>The block stride in pixels. </p>
<p>The block stride is the distance between 2 consecutive blocks</p>
<dl class="section return"><dt>Returns</dt><dd>The block stride in pixels </dd></dl>

</div>
</div>
<a class="anchor" id="a4b7434680a85c2ac14df737ac7cca91e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>&amp; cell_size </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>The cell size in pixels. </p>
<dl class="section return"><dt>Returns</dt><dd>The cell size in pixels </dd></dl>

</div>
</div>
<a class="anchor" id="a8f6435e0a7c016e3cb0fc94b33067e50"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t descriptor_size </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>The size of <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object. ">HOG</a> descriptor. </p>
<dl class="section return"><dt>Returns</dt><dd>The size of <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object. ">HOG</a> descriptor </dd></dl>

</div>
</div>
<a class="anchor" id="a0279e383beb758e477ce0673c5db8d57"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>&amp; detection_window_size </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>The detection window size in pixels. </p>
<dl class="section return"><dt>Returns</dt><dd>The detection window size in pixels </dd></dl>

</div>
</div>
<a class="anchor" id="a75215e8ba07a5ec88ee8c902e306e887"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void init </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp;&#160;</td>
          <td class="paramname"><em>cell_size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp;&#160;</td>
          <td class="paramname"><em>block_size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp;&#160;</td>
          <td class="paramname"><em>detection_window_size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp;&#160;</td>
          <td class="paramname"><em>block_stride</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>num_bins</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute.xhtml#a673665b4587a2956fcbad5f0e9ba89d3">HOGNormType</a>&#160;</td>
          <td class="paramname"><em>normalization_type</em> = <code><a class="el" href="namespacearm__compute.xhtml#a673665b4587a2956fcbad5f0e9ba89d3ac9e68c0594494ec85805b225a7acb9c2">HOGNormType::L2HYS_NORM</a></code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>l2_hyst_threshold</em> = <code>0.2f</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute.xhtml#af00a42ecad444bbda75cde1b64bd7e72">PhaseType</a>&#160;</td>
          <td class="paramname"><em>phase_type</em> = <code><a class="el" href="namespacearm__compute.xhtml#af00a42ecad444bbda75cde1b64bd7e72aaf36b47f395cd01f48b8fc1013665054">PhaseType::UNSIGNED</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialize the metadata structure with the given parameters. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cell_size</td><td>Cell size in pixels </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">block_size</td><td>Block size in pixels. Must be a multiple of cell_size. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">detection_window_size</td><td>Detection window size in pixels. Must be a multiple of block_size and block_stride. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">block_stride</td><td>Distance in pixels between 2 consecutive blocks along the x and y direction. Must be a multiple of cell size </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">num_bins</td><td>Number of histogram bins for each cell </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">normalization_type</td><td>(Optional) Normalization type to use for each block </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">l2_hyst_threshold</td><td>(Optional) Threshold used for L2HYS_NORM normalization method </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">phase_type</td><td>(Optional) Type of <a class="el" href="namespacearm__compute.xhtml#af00a42ecad444bbda75cde1b64bd7e72">PhaseType</a> </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a954d05635b1ff48daffdd70d8a1a6443"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float l2_hyst_threshold </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Threshold used for L2HYS_NORM normalization type. </p>
<dl class="section return"><dt>Returns</dt><dd>Threshold used for L2HYS_NORM normalization type </dd></dl>

</div>
</div>
<a class="anchor" id="aed90de2ef57929727bb2159b66d04487"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__compute.xhtml#a673665b4587a2956fcbad5f0e9ba89d3">HOGNormType</a> normalization_type </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>The normalization type. </p>
<dl class="section return"><dt>Returns</dt><dd>The normalization type </dd></dl>

</div>
</div>
<a class="anchor" id="ae3664b841732a09d7749953ca5b81373"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t num_bins </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>The number of histogram bins for each cell. </p>
<dl class="section return"><dt>Returns</dt><dd>The number of histogram bins for each cell </dd></dl>

</div>
</div>
<a class="anchor" id="a649a86d58ff88cfd8523d6cb71d64332"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> num_blocks_per_image </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp;&#160;</td>
          <td class="paramname"><em>image_size</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Calculates the number of blocks for the given image size. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">image_size</td><td>The input image size data object</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The <a class="el" href="classarm__compute_1_1_size2_d.xhtml" title="Class for specifying the size of an image or rectangle. ">Size2D</a> data object which stores the number of blocks along the x and y directions </dd></dl>

</div>
</div>
<a class="anchor" id="adb20b5249eedf180a461ea097622fe7f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> num_cells_per_block </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Calculates the number of cells for each block. </p>
<dl class="section return"><dt>Returns</dt><dd>The <a class="el" href="classarm__compute_1_1_size2_d.xhtml" title="Class for specifying the size of an image or rectangle. ">Size2D</a> data object which stores the number of cells along the x and y directions </dd></dl>

</div>
</div>
<a class="anchor" id="a64f60c469394d4f5f621546fc3108590"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml">HOGInfo</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml">HOGInfo</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allow instances of this class to be copied. </p>

</div>
</div>
<a class="anchor" id="a3f48ffe9fe37db10eb23de67101c1500"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml">HOGInfo</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml">HOGInfo</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allow instances of this class to be moved. </p>

</div>
</div>
<a class="anchor" id="a96823b4d7dc642aa9f51a0077899d3f9"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__compute.xhtml#af00a42ecad444bbda75cde1b64bd7e72">PhaseType</a> phase_type </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>The type of <a class="el" href="namespacearm__compute.xhtml#af00a42ecad444bbda75cde1b64bd7e72">PhaseType</a>. </p>
<dl class="section return"><dt>Returns</dt><dd>The type of <a class="el" href="namespacearm__compute.xhtml#af00a42ecad444bbda75cde1b64bd7e72">PhaseType</a> </dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>arm_compute/core/<a class="el" href="_h_o_g_info_8h_source.xhtml">HOGInfo.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml">HOGInfo</a></li>
    <li class="footer">Generated on Thu Dec 14 2017 23:48:36 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
  </ul>
</div>
</body>
</html>
