<!-- HTML header for doxygen 1.8.9.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: tests/validation/fixtures/DepthwiseSeparableConvolutionLayerFixture.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Compute Library
   &#160;<span id="projectnumber">17.12</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>Globals</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('validation_2fixtures_2_depthwise_separable_convolution_layer_fixture_8h_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">DepthwiseSeparableConvolutionLayerFixture.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="validation_2fixtures_2_depthwise_separable_convolution_layer_fixture_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2017 ARM Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifndef ARM_COMPUTE_TEST_DEPTHWISE_SEPARABLE_CONVOLUTION_LAYER_FIXTURE</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#define ARM_COMPUTE_TEST_DEPTHWISE_SEPARABLE_CONVOLUTION_LAYER_FIXTURE</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_tensor_shape_8h.xhtml">arm_compute/core/TensorShape.h</a>&quot;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2core_2_types_8h.xhtml">arm_compute/core/Types.h</a>&quot;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_assets_library_8h.xhtml">tests/AssetsLibrary.h</a>&quot;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_globals_8h.xhtml">tests/Globals.h</a>&quot;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_accessor_8h.xhtml">tests/IAccessor.h</a>&quot;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_asserts_8h.xhtml">tests/framework/Asserts.h</a>&quot;</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_fixture_8h.xhtml">tests/framework/Fixture.h</a>&quot;</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="tests_2validation_2_helpers_8h.xhtml">tests/validation/Helpers.h</a>&quot;</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_depthwise_separable_convolution_layer_8h.xhtml">tests/validation/reference/DepthwiseSeparableConvolutionLayer.h</a>&quot;</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="preprocessor">#include &lt;random&gt;</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;{</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="keyword">namespace </span>test</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;{</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="keyword">namespace </span>validation</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;{</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> TensorType, <span class="keyword">typename</span> AccessorType, <span class="keyword">typename</span> FunctionType, <span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00046"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1validation_1_1_depthwise_separable_convolution_validation_fixture.xhtml">   46</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1test_1_1validation_1_1_depthwise_separable_convolution_validation_fixture.xhtml">DepthwiseSeparableConvolutionValidationFixture</a> : <span class="keyword">public</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_fixture.xhtml">framework::Fixture</a></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;{</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span>...&gt;</div><div class="line"><a name="l00050"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1validation_1_1_depthwise_separable_convolution_validation_fixture.xhtml#a77caff90f8f366e00b1870f84469c283">   50</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1validation_1_1_depthwise_separable_convolution_validation_fixture.xhtml#a77caff90f8f366e00b1870f84469c283">setup</a>(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> in_shape, <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> depthwise_weights_shape, <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> depthwise_biases_shape, <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> depthwise_out_shape, <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> pointwise_weights_shape,</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;               <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> pointwise_biases_shape, <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7fc93f37dac131a1a40b7921f9df3a9a">output_shape</a>,</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;               <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a> pad_stride_depthwise_info, <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a> pad_stride_pointwise_info)</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    {</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        _target = compute_target(in_shape, depthwise_weights_shape, depthwise_biases_shape, depthwise_out_shape, pointwise_weights_shape, pointwise_biases_shape, output_shape, pad_stride_depthwise_info,</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;                                 pad_stride_pointwise_info);</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        _reference = compute_reference(in_shape, depthwise_weights_shape, depthwise_biases_shape, depthwise_out_shape, pointwise_weights_shape, pointwise_biases_shape, output_shape, pad_stride_depthwise_info,</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;                                       pad_stride_pointwise_info);</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    }</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="keyword">protected</span>:</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> U&gt;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <span class="keywordtype">void</span> fill(<a class="code" href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa4c614360da93c0a041b22e537de151eb">U</a> &amp;&amp;tensor, <span class="keywordtype">int</span> i, <span class="keywordtype">bool</span> zero_fill = <span class="keyword">false</span>)</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    {</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        <span class="keywordflow">switch</span>(tensor.data_type())</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        {</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;            <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>:</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;            {</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;                std::uniform_real_distribution&lt;&gt; distribution((zero_fill) ? 0.f : -1.0f, (zero_fill) ? 0.f : 1.0f);</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;                <a class="code" href="namespacearm__compute_1_1test.xhtml#a71326f0909d77386e29b511e1990a11f">library</a>-&gt;fill(tensor, distribution, i);</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;                <span class="keywordflow">break</span>;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;            }</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;            <span class="keywordflow">default</span>:</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;                <a class="code" href="namespacearm__compute_1_1test.xhtml#a71326f0909d77386e29b511e1990a11f">library</a>-&gt;fill_tensor_uniform(tensor, i);</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        }</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    }</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    TensorType compute_target(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> &amp;input_shape, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> &amp;depthwise_weights_shape, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> &amp;depthwise_biases_shape, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> &amp;depthwise_out_shape,</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;                              <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> &amp;pointwise_weights_shape, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> &amp;pointwise_biases_shape, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7fc93f37dac131a1a40b7921f9df3a9a">output_shape</a>,</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;                              <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a> &amp;pad_stride_depthwise_info, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a> &amp;pad_stride_pointwise_info)</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    {</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        <span class="comment">// Create tensors</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        TensorType src               = create_tensor&lt;TensorType&gt;(input_shape, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>);</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        TensorType depthwise_weights = create_tensor&lt;TensorType&gt;(depthwise_weights_shape, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>);</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        TensorType depthwise_biases  = create_tensor&lt;TensorType&gt;(depthwise_biases_shape, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>);</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        TensorType depthwise_out     = create_tensor&lt;TensorType&gt;(depthwise_out_shape, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>);</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        TensorType pointwise_weights = create_tensor&lt;TensorType&gt;(pointwise_weights_shape, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>);</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        TensorType pointwise_biases  = create_tensor&lt;TensorType&gt;(pointwise_biases_shape, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>);</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        TensorType <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>               = create_tensor&lt;TensorType&gt;(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7fc93f37dac131a1a40b7921f9df3a9a">output_shape</a>, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>);</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        <span class="comment">// Create Depthwise Separable Convolution Layer configure function</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        FunctionType <a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a71dcbc5f08da9ae1a8981746d7a62322">depthwise_separable_convolution_layer</a>;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        depthwise_separable_convolution_layer.configure(&amp;src, &amp;depthwise_weights, &amp;depthwise_biases, &amp;depthwise_out, &amp;pointwise_weights, &amp;pointwise_biases, &amp;dst, pad_stride_depthwise_info,</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;                                                        pad_stride_pointwise_info);</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        <span class="comment">// Allocate tensors</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        src.allocator()-&gt;allocate();</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        depthwise_weights.allocator()-&gt;allocate();</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        depthwise_biases.allocator()-&gt;allocate();</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        depthwise_out.allocator()-&gt;allocate();</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        pointwise_weights.allocator()-&gt;allocate();</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        pointwise_biases.allocator()-&gt;allocate();</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        dst.allocator()-&gt;allocate();</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a09b036c709fc72912ee5fdb2231faca2">ARM_COMPUTE_EXPECT</a>(!src.info()-&gt;is_resizable(), <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9a6f3a603fac4d817f1848c3173b243b57">framework::LogLevel::ERRORS</a>);</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a09b036c709fc72912ee5fdb2231faca2">ARM_COMPUTE_EXPECT</a>(!depthwise_weights.info()-&gt;is_resizable(), <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9a6f3a603fac4d817f1848c3173b243b57">framework::LogLevel::ERRORS</a>);</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a09b036c709fc72912ee5fdb2231faca2">ARM_COMPUTE_EXPECT</a>(!depthwise_biases.info()-&gt;is_resizable(), <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9a6f3a603fac4d817f1848c3173b243b57">framework::LogLevel::ERRORS</a>);</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a09b036c709fc72912ee5fdb2231faca2">ARM_COMPUTE_EXPECT</a>(!depthwise_out.info()-&gt;is_resizable(), <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9a6f3a603fac4d817f1848c3173b243b57">framework::LogLevel::ERRORS</a>);</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a09b036c709fc72912ee5fdb2231faca2">ARM_COMPUTE_EXPECT</a>(!pointwise_weights.info()-&gt;is_resizable(), <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9a6f3a603fac4d817f1848c3173b243b57">framework::LogLevel::ERRORS</a>);</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a09b036c709fc72912ee5fdb2231faca2">ARM_COMPUTE_EXPECT</a>(!pointwise_biases.info()-&gt;is_resizable(), <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9a6f3a603fac4d817f1848c3173b243b57">framework::LogLevel::ERRORS</a>);</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a09b036c709fc72912ee5fdb2231faca2">ARM_COMPUTE_EXPECT</a>(!dst.info()-&gt;is_resizable(), <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9a6f3a603fac4d817f1848c3173b243b57">framework::LogLevel::ERRORS</a>);</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        <span class="comment">// Fill tensors</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        fill(AccessorType(src), 0);</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        fill(AccessorType(depthwise_weights), 1);</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        fill(AccessorType(depthwise_biases), 2, <span class="keyword">true</span>);</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        fill(AccessorType(pointwise_weights), 3);</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;        fill(AccessorType(pointwise_biases), 4);</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        <span class="comment">// Compute function</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        depthwise_separable_convolution_layer.run();</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    }</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml">SimpleTensor&lt;T&gt;</a> compute_reference(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> &amp;in_shape, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> &amp;depthwise_weights_shape, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> &amp;depthwise_biases_shape, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> &amp;depthwise_out_shape,</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;                                      <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> &amp;pointwise_weights_shape, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> &amp;pointwise_biases_shape, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> &amp;dst_shape,</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;                                      <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a> &amp;pad_stride_depthwise_info, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a> &amp;pad_stride_pointwise_info)</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    {</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        <a class="code" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml">SimpleTensor&lt;T&gt;</a> src(in_shape, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>);</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;        <a class="code" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml">SimpleTensor&lt;T&gt;</a> depthwise_weights(depthwise_weights_shape, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>);</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        <a class="code" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml">SimpleTensor&lt;T&gt;</a> depthwise_biases(depthwise_biases_shape, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>);</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        <a class="code" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml">SimpleTensor&lt;T&gt;</a> pointwise_weights(pointwise_weights_shape, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>);</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        <a class="code" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml">SimpleTensor&lt;T&gt;</a> pointwise_biases(pointwise_biases_shape, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>);</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        fill(src, 0);</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        fill(depthwise_weights, 1);</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        fill(depthwise_biases, 2, <span class="keyword">true</span>);</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        fill(pointwise_weights, 3);</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        fill(pointwise_biases, 4);</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a71dcbc5f08da9ae1a8981746d7a62322">reference::depthwise_separable_convolution_layer</a>(src,</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;                                                                depthwise_weights, depthwise_biases, depthwise_out_shape,</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;                                                                pointwise_weights, pointwise_biases,</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;                                                                dst_shape,</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;                                                                pad_stride_depthwise_info, pad_stride_pointwise_info);</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    }</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    TensorType      _target{};</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml">SimpleTensor&lt;T&gt;</a> _reference{};</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;};</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;} <span class="comment">// namespace validation</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;} <span class="comment">// namespace test</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;} <span class="comment">// namespace arm_compute</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* ARM_COMPUTE_TEST_DEPTHWISE_SEPARABLE_CONVOLUTION_LAYER_FIXTURE */</span><span class="preprocessor"></span></div><div class="ttc" id="_i_accessor_8h_xhtml"><div class="ttname"><a href="_i_accessor_8h.xhtml">IAccessor.h</a></div></div>
<div class="ttc" id="_depthwise_separable_convolution_layer_8h_xhtml"><div class="ttname"><a href="_depthwise_separable_convolution_layer_8h.xhtml">DepthwiseSeparableConvolutionLayer.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_shape_xhtml"><div class="ttname"><a href="classarm__compute_1_1_tensor_shape.xhtml">arm_compute::TensorShape</a></div><div class="ttdoc">Shape of a tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_shape_8h_source.xhtml#l00038">TensorShape.h:38</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a09b036c709fc72912ee5fdb2231faca2"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a09b036c709fc72912ee5fdb2231faca2">arm_compute::test::validation::ARM_COMPUTE_EXPECT</a></div><div class="ttdeci">ARM_COMPUTE_EXPECT(a.info() -&gt;is_resizable(), framework::LogLevel::ERRORS)</div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">arm_compute::Format::F32</a></div><div class="ttdoc">1 channel, 1 F32 per channel </div></div>
<div class="ttc" id="tests_2validation_2_helpers_8h_xhtml"><div class="ttname"><a href="tests_2validation_2_helpers_8h.xhtml">Helpers.h</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">This file contains all available output stages for GEMMLowp on OpenCL. </div><div class="ttdef"><b>Definition:</b> <a href="01__library_8dox_source.xhtml#l00001">01_library.dox:1</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_fixture_xhtml"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_fixture.xhtml">arm_compute::test::framework::Fixture</a></div><div class="ttdoc">Abstract fixture class. </div><div class="ttdef"><b>Definition:</b> <a href="_fixture_8h_source.xhtml#l00037">Fixture.h:37</a></div></div>
<div class="ttc" id="_globals_8h_xhtml"><div class="ttname"><a href="_globals_8h.xhtml">Globals.h</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_xhtml_a71326f0909d77386e29b511e1990a11f"><div class="ttname"><a href="namespacearm__compute_1_1test.xhtml#a71326f0909d77386e29b511e1990a11f">arm_compute::test::library</a></div><div class="ttdeci">std::unique_ptr&lt; AssetsLibrary &gt; library</div><div class="ttdef"><b>Definition:</b> <a href="main_8cpp_source.xhtml#l00058">main.cpp:58</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a1ce9b523fd4f3b5bbcadcd796183455aa4c614360da93c0a041b22e537de151eb"><div class="ttname"><a href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa4c614360da93c0a041b22e537de151eb">arm_compute::Channel::U</a></div><div class="ttdoc">Cb/U channel. </div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1validation_1_1_depthwise_separable_convolution_validation_fixture_xhtml"><div class="ttname"><a href="classarm__compute_1_1test_1_1validation_1_1_depthwise_separable_convolution_validation_fixture.xhtml">arm_compute::test::validation::DepthwiseSeparableConvolutionValidationFixture</a></div><div class="ttdef"><b>Definition:</b> <a href="validation_2fixtures_2_depthwise_separable_convolution_layer_fixture_8h_source.xhtml#l00046">DepthwiseSeparableConvolutionLayerFixture.h:46</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a7fc93f37dac131a1a40b7921f9df3a9a"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a7fc93f37dac131a1a40b7921f9df3a9a">arm_compute::test::validation::output_shape</a></div><div class="ttdeci">output_shape</div><div class="ttdef"><b>Definition:</b> <a href="validation_2_n_e_o_n_2_g_e_m_m_8cpp_source.xhtml#l00109">GEMM.cpp:109</a></div></div>
<div class="ttc" id="_assets_library_8h_xhtml"><div class="ttname"><a href="_assets_library_8h.xhtml">AssetsLibrary.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_pad_stride_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_pad_stride_info.xhtml">arm_compute::PadStrideInfo</a></div><div class="ttdoc">Padding and stride information class. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00460">Types.h:460</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_adbf67dcee294e673cf796f1ed8aeb6a4"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">arm_compute::test::validation::dst</a></div><div class="ttdeci">Tensor dst</div><div class="ttdef"><b>Definition:</b> <a href="validation_2_n_e_o_n_2_g_e_m_m_8cpp_source.xhtml#l00118">GEMM.cpp:118</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1_simple_tensor_xhtml"><div class="ttname"><a href="classarm__compute_1_1test_1_1_simple_tensor.xhtml">arm_compute::test::SimpleTensor</a></div><div class="ttdoc">Simple tensor object that stores elements in a consecutive chunk of memory. </div><div class="ttdef"><b>Definition:</b> <a href="_simple_tensor_8h_source.xhtml#l00059">SimpleTensor.h:59</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_1_1reference_xhtml_a71dcbc5f08da9ae1a8981746d7a62322"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a71dcbc5f08da9ae1a8981746d7a62322">arm_compute::test::validation::reference::depthwise_separable_convolution_layer</a></div><div class="ttdeci">SimpleTensor&lt; T &gt; depthwise_separable_convolution_layer(const SimpleTensor&lt; T &gt; &amp;src, const SimpleTensor&lt; T &gt; &amp;depthwise_weights, const SimpleTensor&lt; T &gt; &amp;depthwise_biases, const TensorShape &amp;depthwise_out_shape, const SimpleTensor&lt; T &gt; &amp;pointwise_weights, const SimpleTensor&lt; T &gt; &amp;pointwise_biases, const TensorShape &amp;dst_shape, const PadStrideInfo &amp;depthwise_conv_info, const PadStrideInfo &amp;pointwise_conv_info)</div><div class="ttdef"><b>Definition:</b> <a href="validation_2reference_2_depthwise_separable_convolution_layer_8cpp_source.xhtml#l00043">DepthwiseSeparableConvolutionLayer.cpp:43</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1validation_1_1_depthwise_separable_convolution_validation_fixture_xhtml_a77caff90f8f366e00b1870f84469c283"><div class="ttname"><a href="classarm__compute_1_1test_1_1validation_1_1_depthwise_separable_convolution_validation_fixture.xhtml#a77caff90f8f366e00b1870f84469c283">arm_compute::test::validation::DepthwiseSeparableConvolutionValidationFixture::setup</a></div><div class="ttdeci">void setup(TensorShape in_shape, TensorShape depthwise_weights_shape, TensorShape depthwise_biases_shape, TensorShape depthwise_out_shape, TensorShape pointwise_weights_shape, TensorShape pointwise_biases_shape, TensorShape output_shape, PadStrideInfo pad_stride_depthwise_info, PadStrideInfo pad_stride_pointwise_info)</div><div class="ttdef"><b>Definition:</b> <a href="validation_2fixtures_2_depthwise_separable_convolution_layer_fixture_8h_source.xhtml#l00050">DepthwiseSeparableConvolutionLayerFixture.h:50</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_aca1fd1d8935433e6ba2e3918214e07f9a6f3a603fac4d817f1848c3173b243b57"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9a6f3a603fac4d817f1848c3173b243b57">arm_compute::test::framework::LogLevel::ERRORS</a></div></div>
<div class="ttc" id="arm__compute_2core_2_types_8h_xhtml"><div class="ttname"><a href="arm__compute_2core_2_types_8h.xhtml">Types.h</a></div></div>
<div class="ttc" id="_tensor_shape_8h_xhtml"><div class="ttname"><a href="_tensor_shape_8h.xhtml">TensorShape.h</a></div></div>
<div class="ttc" id="_asserts_8h_xhtml"><div class="ttname"><a href="_asserts_8h.xhtml">Asserts.h</a></div></div>
<div class="ttc" id="_fixture_8h_xhtml"><div class="ttname"><a href="_fixture_8h.xhtml">Fixture.h</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_59425e443f801f1f2fd8bbe4959a3ccf.xhtml">tests</a></li><li class="navelem"><a class="el" href="dir_e7c7b16542faa38cb4655ff1750d3604.xhtml">validation</a></li><li class="navelem"><a class="el" href="dir_043de5624456f8ee1a676650b1e35f53.xhtml">fixtures</a></li><li class="navelem"><a class="el" href="validation_2fixtures_2_depthwise_separable_convolution_layer_fixture_8h.xhtml">DepthwiseSeparableConvolutionLayerFixture.h</a></li>
    <li class="footer">Generated on Thu Dec 14 2017 23:48:32 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
  </ul>
</div>
</body>
</html>
