<!-- HTML header for doxygen 1.8.9.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: tests/NEON/Accessor.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Compute Library
   &#160;<span id="projectnumber">17.12</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>Globals</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_accessor_8h_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">Accessor.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_accessor_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2017 ARM Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifndef __ARM_COMPUTE_TEST_ACCESSOR_H__</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#define __ARM_COMPUTE_TEST_ACCESSOR_H__</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="runtime_2_tensor_8h.xhtml">arm_compute/runtime/Tensor.h</a>&quot;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_accessor_8h.xhtml">tests/IAccessor.h</a>&quot;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;{</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keyword">namespace </span>test</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;{</div><div class="line"><a name="l00035"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1_accessor.xhtml">   35</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1test_1_1_accessor.xhtml">Accessor</a> : <span class="keyword">public</span> <a class="code" href="classarm__compute_1_1test_1_1_i_accessor.xhtml">IAccessor</a></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;{</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1_accessor.xhtml#a07899949ec789695420c2e13544ef9a5">Accessor</a>(<a class="code" href="classarm__compute_1_1_tensor.xhtml">Tensor</a> &amp;tensor);</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1_accessor.xhtml#a07899949ec789695420c2e13544ef9a5">Accessor</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1test_1_1_accessor.xhtml">Accessor</a> &amp;) = <span class="keyword">delete</span>;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1_accessor.xhtml">Accessor</a> &amp;<a class="code" href="classarm__compute_1_1test_1_1_accessor.xhtml#a75dae34a374af1dc690c73cda2605586">operator=</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1test_1_1_accessor.xhtml">Accessor</a> &amp;) = <span class="keyword">delete</span>;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1_accessor.xhtml#a07899949ec789695420c2e13544ef9a5">Accessor</a>(<a class="code" href="classarm__compute_1_1test_1_1_accessor.xhtml">Accessor</a> &amp;&amp;)                 = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1_accessor.xhtml">Accessor</a> &amp;<a class="code" href="classarm__compute_1_1test_1_1_accessor.xhtml#a75dae34a374af1dc690c73cda2605586">operator=</a>(<a class="code" href="classarm__compute_1_1test_1_1_accessor.xhtml">Accessor</a> &amp;&amp;) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>      <a class="code" href="classarm__compute_1_1test_1_1_accessor.xhtml#aba5871b3e4a65d057ec1c28fce8b00ba">shape</a>() <span class="keyword">const override</span>;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="keywordtype">size_t</span>           <a class="code" href="classarm__compute_1_1test_1_1_accessor.xhtml#a62b67b578f684c4d516843c9dea86a23">element_size</a>() <span class="keyword">const override</span>;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="keywordtype">size_t</span>           <a class="code" href="classarm__compute_1_1test_1_1_accessor.xhtml#ad7701a09a964eab360a8e51fa7ad2c16">size</a>() <span class="keyword">const override</span>;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58">Format</a>           <a class="code" href="classarm__compute_1_1test_1_1_accessor.xhtml#ac4b36cc1e56b0b7e579bb4b7196490db">format</a>() <span class="keyword">const override</span>;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a>         <a class="code" href="classarm__compute_1_1test_1_1_accessor.xhtml#a9a3e72153aeb3ed212e9c3698774e881">data_type</a>() <span class="keyword">const override</span>;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <span class="keywordtype">int</span>              <a class="code" href="classarm__compute_1_1test_1_1_accessor.xhtml#abdd3637f2bbde9d7d0cc0b7bbd8400bb">num_channels</a>() <span class="keyword">const override</span>;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <span class="keywordtype">int</span>              <a class="code" href="classarm__compute_1_1test_1_1_accessor.xhtml#aedcfdd4c3b92fe0d63b5463c7ad1d21e">num_elements</a>() <span class="keyword">const override</span>;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <a class="code" href="structarm__compute_1_1_border_size.xhtml">PaddingSize</a>      <a class="code" href="classarm__compute_1_1test_1_1_accessor.xhtml#a79e20eacb1e963e24a21ebd7369effd7">padding</a>() <span class="keyword">const override</span>;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="keywordtype">int</span>              <a class="code" href="classarm__compute_1_1test_1_1_accessor.xhtml#a35ccf2eb0c18a15feab2db98b307b78b">fixed_point_position</a>() <span class="keyword">const override</span>;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <a class="code" href="structarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a> <a class="code" href="classarm__compute_1_1test_1_1_accessor.xhtml#ac74736e3863207232a23b7181c1d0f44">quantization_info</a>() <span class="keyword">const override</span>;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">void</span> *<a class="code" href="classarm__compute_1_1test_1_1_accessor.xhtml#a39537b09ccc3ce3d17922f4ef49a123f">operator()</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a> &amp;coord) <span class="keyword">const override</span>;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <span class="keywordtype">void</span> *<a class="code" href="classarm__compute_1_1test_1_1_accessor.xhtml#a39537b09ccc3ce3d17922f4ef49a123f">operator()</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a> &amp;coord) <span class="keyword">override</span>;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">void</span> *<a class="code" href="classarm__compute_1_1test_1_1_accessor.xhtml#ad3b74abc0bab69f337c70783e73f5bef">data</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <span class="keywordtype">void</span>       *<a class="code" href="classarm__compute_1_1test_1_1_accessor.xhtml#ad3b74abc0bab69f337c70783e73f5bef">data</a>();</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor.xhtml">Tensor</a> &amp;_tensor;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;};</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1_accessor.xhtml#a07899949ec789695420c2e13544ef9a5">   68</a></span>&#160;<span class="keyword">inline</span> <a class="code" href="classarm__compute_1_1test_1_1_accessor.xhtml#a07899949ec789695420c2e13544ef9a5">Accessor::Accessor</a>(<a class="code" href="classarm__compute_1_1_tensor.xhtml">Tensor</a> &amp;tensor)</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    : _tensor{ tensor }</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;{</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;}</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div><div class="line"><a name="l00073"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1_accessor.xhtml#aba5871b3e4a65d057ec1c28fce8b00ba">   73</a></span>&#160;<span class="keyword">inline</span> <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> <a class="code" href="classarm__compute_1_1test_1_1_accessor.xhtml#aba5871b3e4a65d057ec1c28fce8b00ba">Accessor::shape</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <span class="keywordflow">return</span> _tensor.<a class="code" href="classarm__compute_1_1_tensor.xhtml#aa68535e0983cc60a425253a72b162661">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">tensor_shape</a>();</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;}</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div><div class="line"><a name="l00078"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1_accessor.xhtml#a62b67b578f684c4d516843c9dea86a23">   78</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">size_t</span> <a class="code" href="classarm__compute_1_1test_1_1_accessor.xhtml#a62b67b578f684c4d516843c9dea86a23">Accessor::element_size</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <span class="keywordflow">return</span> _tensor.<a class="code" href="classarm__compute_1_1_tensor.xhtml#aa68535e0983cc60a425253a72b162661">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#aa459796b5489eca8a9160cb5dcf1a103">element_size</a>();</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;}</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1_accessor.xhtml#ad7701a09a964eab360a8e51fa7ad2c16">   83</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">size_t</span> <a class="code" href="classarm__compute_1_1test_1_1_accessor.xhtml#ad7701a09a964eab360a8e51fa7ad2c16">Accessor::size</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <span class="keywordflow">return</span> _tensor.<a class="code" href="classarm__compute_1_1_tensor.xhtml#aa68535e0983cc60a425253a72b162661">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a18064e0011c3869d884653e9e7c47b66">total_size</a>();</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;}</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div><div class="line"><a name="l00088"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1_accessor.xhtml#ac4b36cc1e56b0b7e579bb4b7196490db">   88</a></span>&#160;<span class="keyword">inline</span> <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58">Format</a> <a class="code" href="classarm__compute_1_1test_1_1_accessor.xhtml#ac4b36cc1e56b0b7e579bb4b7196490db">Accessor::format</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="keywordflow">return</span> _tensor.<a class="code" href="classarm__compute_1_1_tensor.xhtml#aa68535e0983cc60a425253a72b162661">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a57360dd9ca408834c0ea1a8ef70a11f4">format</a>();</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;}</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div><div class="line"><a name="l00093"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1_accessor.xhtml#a9a3e72153aeb3ed212e9c3698774e881">   93</a></span>&#160;<span class="keyword">inline</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a> <a class="code" href="classarm__compute_1_1test_1_1_accessor.xhtml#a9a3e72153aeb3ed212e9c3698774e881">Accessor::data_type</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="keywordflow">return</span> _tensor.<a class="code" href="classarm__compute_1_1_tensor.xhtml#aa68535e0983cc60a425253a72b162661">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>();</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;}</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div><div class="line"><a name="l00098"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1_accessor.xhtml#abdd3637f2bbde9d7d0cc0b7bbd8400bb">   98</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">int</span> <a class="code" href="classarm__compute_1_1test_1_1_accessor.xhtml#abdd3637f2bbde9d7d0cc0b7bbd8400bb">Accessor::num_channels</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <span class="keywordflow">return</span> _tensor.<a class="code" href="classarm__compute_1_1_tensor.xhtml#aa68535e0983cc60a425253a72b162661">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#ad7829ae79223ab87f9da4c0bd7d229ba">num_channels</a>();</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;}</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div><div class="line"><a name="l00103"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1_accessor.xhtml#aedcfdd4c3b92fe0d63b5463c7ad1d21e">  103</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">int</span> <a class="code" href="classarm__compute_1_1test_1_1_accessor.xhtml#aedcfdd4c3b92fe0d63b5463c7ad1d21e">Accessor::num_elements</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <span class="keywordflow">return</span> _tensor.<a class="code" href="classarm__compute_1_1_tensor.xhtml#aa68535e0983cc60a425253a72b162661">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">tensor_shape</a>().<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml#a4eaec01ba2c12093db609d1034ad0bc1">total_size</a>();</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;}</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;</div><div class="line"><a name="l00108"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1_accessor.xhtml#a79e20eacb1e963e24a21ebd7369effd7">  108</a></span>&#160;<span class="keyword">inline</span> <a class="code" href="structarm__compute_1_1_border_size.xhtml">PaddingSize</a> <a class="code" href="classarm__compute_1_1test_1_1_accessor.xhtml#a79e20eacb1e963e24a21ebd7369effd7">Accessor::padding</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <span class="keywordflow">return</span> _tensor.<a class="code" href="classarm__compute_1_1_tensor.xhtml#aa68535e0983cc60a425253a72b162661">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a07b929c34ad1dc823d8315876aa403ce">padding</a>();</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;}</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00113"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1_accessor.xhtml#a35ccf2eb0c18a15feab2db98b307b78b">  113</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">int</span> <a class="code" href="classarm__compute_1_1test_1_1_accessor.xhtml#a35ccf2eb0c18a15feab2db98b307b78b">Accessor::fixed_point_position</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="keywordflow">return</span> _tensor.<a class="code" href="classarm__compute_1_1_tensor.xhtml#aa68535e0983cc60a425253a72b162661">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#ab21a362740e892b6e913bd8db03b0e67">fixed_point_position</a>();</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;}</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div><div class="line"><a name="l00118"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1_accessor.xhtml#ac74736e3863207232a23b7181c1d0f44">  118</a></span>&#160;<span class="keyword">inline</span> <a class="code" href="structarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a> <a class="code" href="classarm__compute_1_1test_1_1_accessor.xhtml#ac74736e3863207232a23b7181c1d0f44">Accessor::quantization_info</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="keywordflow">return</span> _tensor.<a class="code" href="classarm__compute_1_1_tensor.xhtml#aa68535e0983cc60a425253a72b162661">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a3f3e1a3200223e6a304a533b1016e749">quantization_info</a>();</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;}</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div><div class="line"><a name="l00123"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1_accessor.xhtml#ad3b74abc0bab69f337c70783e73f5bef">  123</a></span>&#160;<span class="keyword">inline</span> <span class="keyword">const</span> <span class="keywordtype">void</span> *<a class="code" href="classarm__compute_1_1test_1_1_accessor.xhtml#ad3b74abc0bab69f337c70783e73f5bef">Accessor::data</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    <span class="keywordflow">return</span> _tensor.<a class="code" href="classarm__compute_1_1_tensor.xhtml#ace7b855e3c647d29cc37a1ce147901dc">buffer</a>();</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;}</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;</div><div class="line"><a name="l00128"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1_accessor.xhtml#a0189be0971a32a0171c51b90a1ab1020">  128</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">void</span> *<a class="code" href="classarm__compute_1_1test_1_1_accessor.xhtml#ad3b74abc0bab69f337c70783e73f5bef">Accessor::data</a>()</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;{</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <span class="keywordflow">return</span> _tensor.<a class="code" href="classarm__compute_1_1_tensor.xhtml#ace7b855e3c647d29cc37a1ce147901dc">buffer</a>();</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;}</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;</div><div class="line"><a name="l00133"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1_accessor.xhtml#a39537b09ccc3ce3d17922f4ef49a123f">  133</a></span>&#160;<span class="keyword">inline</span> <span class="keyword">const</span> <span class="keywordtype">void</span> *<a class="code" href="classarm__compute_1_1test_1_1_accessor.xhtml#a39537b09ccc3ce3d17922f4ef49a123f">Accessor::operator()</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a> &amp;coord)<span class="keyword"> const</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    <span class="keywordflow">return</span> _tensor.<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a48c7a05cc63f541d732250e39339cee2">ptr_to_element</a>(coord);</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;}</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div><div class="line"><a name="l00138"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1_accessor.xhtml#a2df95f7046b81e69a1265a42202ea068">  138</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">void</span> *<a class="code" href="classarm__compute_1_1test_1_1_accessor.xhtml#a39537b09ccc3ce3d17922f4ef49a123f">Accessor::operator()</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a> &amp;coord)</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;{</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    <span class="keywordflow">return</span> _tensor.<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a48c7a05cc63f541d732250e39339cee2">ptr_to_element</a>(coord);</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;}</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;} <span class="comment">// namespace test</span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;} <span class="comment">// namespace arm_compute</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* __ARM_COMPUTE_TEST_ACCESSOR_H__ */</span><span class="preprocessor"></span></div><div class="ttc" id="_i_accessor_8h_xhtml"><div class="ttname"><a href="_i_accessor_8h.xhtml">IAccessor.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1_accessor_xhtml_abdd3637f2bbde9d7d0cc0b7bbd8400bb"><div class="ttname"><a href="classarm__compute_1_1test_1_1_accessor.xhtml#abdd3637f2bbde9d7d0cc0b7bbd8400bb">arm_compute::test::Accessor::num_channels</a></div><div class="ttdeci">int num_channels() const override</div><div class="ttdoc">Number of channels of the tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_accessor_8h_source.xhtml#l00098">Accessor.h:98</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_shape_xhtml"><div class="ttname"><a href="classarm__compute_1_1_tensor_shape.xhtml">arm_compute::TensorShape</a></div><div class="ttdoc">Shape of a tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_shape_8h_source.xhtml#l00038">TensorShape.h:38</a></div></div>
<div class="ttc" id="structarm__compute_1_1_border_size_xhtml"><div class="ttname"><a href="structarm__compute_1_1_border_size.xhtml">arm_compute::BorderSize</a></div><div class="ttdoc">Container for 2D border size. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00198">Types.h:198</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1_accessor_xhtml_ac4b36cc1e56b0b7e579bb4b7196490db"><div class="ttname"><a href="classarm__compute_1_1test_1_1_accessor.xhtml#ac4b36cc1e56b0b7e579bb4b7196490db">arm_compute::test::Accessor::format</a></div><div class="ttdeci">Format format() const override</div><div class="ttdoc">Image format of the tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_accessor_8h_source.xhtml#l00088">Accessor.h:88</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_xhtml_ace7b855e3c647d29cc37a1ce147901dc"><div class="ttname"><a href="classarm__compute_1_1_tensor.xhtml#ace7b855e3c647d29cc37a1ce147901dc">arm_compute::Tensor::buffer</a></div><div class="ttdeci">uint8_t * buffer() const override</div><div class="ttdoc">Interface to be implemented by the child class to return a pointer to CPU memory. ...</div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a7cfb31af63202568efef5214acfbf3ba"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">arm_compute::ITensorInfo::data_type</a></div><div class="ttdeci">virtual DataType data_type() const =0</div><div class="ttdoc">Data type used for each element of the tensor. </div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1_accessor_xhtml_aba5871b3e4a65d057ec1c28fce8b00ba"><div class="ttname"><a href="classarm__compute_1_1test_1_1_accessor.xhtml#aba5871b3e4a65d057ec1c28fce8b00ba">arm_compute::test::Accessor::shape</a></div><div class="ttdeci">TensorShape shape() const override</div><div class="ttdoc">Shape of the tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_accessor_8h_source.xhtml#l00073">Accessor.h:73</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1_accessor_xhtml_a75dae34a374af1dc690c73cda2605586"><div class="ttname"><a href="classarm__compute_1_1test_1_1_accessor.xhtml#a75dae34a374af1dc690c73cda2605586">arm_compute::test::Accessor::operator=</a></div><div class="ttdeci">Accessor &amp; operator=(const Accessor &amp;)=delete</div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1_accessor_xhtml_a07899949ec789695420c2e13544ef9a5"><div class="ttname"><a href="classarm__compute_1_1test_1_1_accessor.xhtml#a07899949ec789695420c2e13544ef9a5">arm_compute::test::Accessor::Accessor</a></div><div class="ttdeci">Accessor(Tensor &amp;tensor)</div><div class="ttdoc">Create an accessor for the given tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_accessor_8h_source.xhtml#l00068">Accessor.h:68</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">This file contains all available output stages for GEMMLowp on OpenCL. </div><div class="ttdef"><b>Definition:</b> <a href="01__library_8dox_source.xhtml#l00001">01_library.dox:1</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1_accessor_xhtml_a62b67b578f684c4d516843c9dea86a23"><div class="ttname"><a href="classarm__compute_1_1test_1_1_accessor.xhtml#a62b67b578f684c4d516843c9dea86a23">arm_compute::test::Accessor::element_size</a></div><div class="ttdeci">size_t element_size() const override</div><div class="ttdoc">Size of each element in the tensor in bytes. </div><div class="ttdef"><b>Definition:</b> <a href="_accessor_8h_source.xhtml#l00078">Accessor.h:78</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a57360dd9ca408834c0ea1a8ef70a11f4"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a57360dd9ca408834c0ea1a8ef70a11f4">arm_compute::ITensorInfo::format</a></div><div class="ttdeci">virtual Format format() const =0</div><div class="ttdoc">Colour format of the image. </div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1_accessor_xhtml"><div class="ttname"><a href="classarm__compute_1_1test_1_1_accessor.xhtml">arm_compute::test::Accessor</a></div><div class="ttdoc">Accessor implementation for Tensor objects. </div><div class="ttdef"><b>Definition:</b> <a href="_accessor_8h_source.xhtml#l00035">Accessor.h:35</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_xhtml_a48c7a05cc63f541d732250e39339cee2"><div class="ttname"><a href="classarm__compute_1_1_i_tensor.xhtml#a48c7a05cc63f541d732250e39339cee2">arm_compute::ITensor::ptr_to_element</a></div><div class="ttdeci">uint8_t * ptr_to_element(const Coordinates &amp;id) const </div><div class="ttdoc">Return a pointer to the element at the passed coordinates. </div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_8h_source.xhtml#l00063">ITensor.h:63</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a7c66505457d00ece3aa4b34cab80757d"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">arm_compute::ITensorInfo::tensor_shape</a></div><div class="ttdeci">virtual const TensorShape &amp; tensor_shape() const =0</div><div class="ttdoc">Size for each dimension of the tensor. </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58">arm_compute::Format</a></div><div class="ttdeci">Format</div><div class="ttdoc">Image colour formats. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00049">Types.h:49</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_ab21a362740e892b6e913bd8db03b0e67"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#ab21a362740e892b6e913bd8db03b0e67">arm_compute::ITensorInfo::fixed_point_position</a></div><div class="ttdeci">virtual int fixed_point_position() const =0</div><div class="ttdoc">Fixed point position used when the tensor data type is QS8 or QS16. </div></div>
<div class="ttc" id="classarm__compute_1_1_coordinates_xhtml"><div class="ttname"><a href="classarm__compute_1_1_coordinates.xhtml">arm_compute::Coordinates</a></div><div class="ttdoc">Coordinates of an item. </div><div class="ttdef"><b>Definition:</b> <a href="_coordinates_8h_source.xhtml#l00037">Coordinates.h:37</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1_accessor_xhtml_a79e20eacb1e963e24a21ebd7369effd7"><div class="ttname"><a href="classarm__compute_1_1test_1_1_accessor.xhtml#a79e20eacb1e963e24a21ebd7369effd7">arm_compute::test::Accessor::padding</a></div><div class="ttdeci">PaddingSize padding() const override</div><div class="ttdoc">Available padding around the tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_accessor_8h_source.xhtml#l00108">Accessor.h:108</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_xhtml"><div class="ttname"><a href="classarm__compute_1_1_tensor.xhtml">arm_compute::Tensor</a></div><div class="ttdoc">Basic implementation of the tensor interface. </div><div class="ttdef"><b>Definition:</b> <a href="runtime_2_tensor_8h_source.xhtml#l00037">Tensor.h:37</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1_accessor_xhtml_ad3b74abc0bab69f337c70783e73f5bef"><div class="ttname"><a href="classarm__compute_1_1test_1_1_accessor.xhtml#ad3b74abc0bab69f337c70783e73f5bef">arm_compute::test::Accessor::data</a></div><div class="ttdeci">const void * data() const </div><div class="ttdef"><b>Definition:</b> <a href="_accessor_8h_source.xhtml#l00123">Accessor.h:123</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_aa459796b5489eca8a9160cb5dcf1a103"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#aa459796b5489eca8a9160cb5dcf1a103">arm_compute::ITensorInfo::element_size</a></div><div class="ttdeci">virtual size_t element_size() const =0</div><div class="ttdoc">Element size in bytes calculated as data_size() * num_channels() </div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a07b929c34ad1dc823d8315876aa403ce"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a07b929c34ad1dc823d8315876aa403ce">arm_compute::ITensorInfo::padding</a></div><div class="ttdeci">virtual PaddingSize padding() const =0</div><div class="ttdoc">Padding of tensor. </div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a3f3e1a3200223e6a304a533b1016e749"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a3f3e1a3200223e6a304a533b1016e749">arm_compute::ITensorInfo::quantization_info</a></div><div class="ttdeci">virtual QuantizationInfo quantization_info() const =0</div><div class="ttdoc">Get the quantization settings (scale and offset) of the tensor. </div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1_accessor_xhtml_a39537b09ccc3ce3d17922f4ef49a123f"><div class="ttname"><a href="classarm__compute_1_1test_1_1_accessor.xhtml#a39537b09ccc3ce3d17922f4ef49a123f">arm_compute::test::Accessor::operator()</a></div><div class="ttdeci">const void * operator()(const Coordinates &amp;coord) const override</div><div class="ttdoc">Read only access to the specified element. </div><div class="ttdef"><b>Definition:</b> <a href="_accessor_8h_source.xhtml#l00133">Accessor.h:133</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1_accessor_xhtml_ac74736e3863207232a23b7181c1d0f44"><div class="ttname"><a href="classarm__compute_1_1test_1_1_accessor.xhtml#ac74736e3863207232a23b7181c1d0f44">arm_compute::test::Accessor::quantization_info</a></div><div class="ttdeci">QuantizationInfo quantization_info() const override</div><div class="ttdoc">Quantization info in case of asymmetric quantized type. </div><div class="ttdef"><b>Definition:</b> <a href="_accessor_8h_source.xhtml#l00118">Accessor.h:118</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1_accessor_xhtml_aedcfdd4c3b92fe0d63b5463c7ad1d21e"><div class="ttname"><a href="classarm__compute_1_1test_1_1_accessor.xhtml#aedcfdd4c3b92fe0d63b5463c7ad1d21e">arm_compute::test::Accessor::num_elements</a></div><div class="ttdeci">int num_elements() const override</div><div class="ttdoc">Number of elements of the tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_accessor_8h_source.xhtml#l00103">Accessor.h:103</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a18064e0011c3869d884653e9e7c47b66"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a18064e0011c3869d884653e9e7c47b66">arm_compute::ITensorInfo::total_size</a></div><div class="ttdeci">virtual size_t total_size() const =0</div><div class="ttdoc">Returns the total size of the tensor in bytes. </div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1_i_accessor_xhtml"><div class="ttname"><a href="classarm__compute_1_1test_1_1_i_accessor.xhtml">arm_compute::test::IAccessor</a></div><div class="ttdoc">Common interface to provide information and access to tensor like structures. </div><div class="ttdef"><b>Definition:</b> <a href="_i_accessor_8h_source.xhtml#l00037">IAccessor.h:37</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1_accessor_xhtml_a9a3e72153aeb3ed212e9c3698774e881"><div class="ttname"><a href="classarm__compute_1_1test_1_1_accessor.xhtml#a9a3e72153aeb3ed212e9c3698774e881">arm_compute::test::Accessor::data_type</a></div><div class="ttdeci">DataType data_type() const override</div><div class="ttdoc">Data type of the tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_accessor_8h_source.xhtml#l00093">Accessor.h:93</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_shape_xhtml_a4eaec01ba2c12093db609d1034ad0bc1"><div class="ttname"><a href="classarm__compute_1_1_tensor_shape.xhtml#a4eaec01ba2c12093db609d1034ad0bc1">arm_compute::TensorShape::total_size</a></div><div class="ttdeci">size_t total_size() const </div><div class="ttdoc">Collapses all dimensions to a single linear total size. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_shape_8h_source.xhtml#l00135">TensorShape.h:135</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1_accessor_xhtml_a35ccf2eb0c18a15feab2db98b307b78b"><div class="ttname"><a href="classarm__compute_1_1test_1_1_accessor.xhtml#a35ccf2eb0c18a15feab2db98b307b78b">arm_compute::test::Accessor::fixed_point_position</a></div><div class="ttdeci">int fixed_point_position() const override</div><div class="ttdoc">Number of bits for the fractional part. </div><div class="ttdef"><b>Definition:</b> <a href="_accessor_8h_source.xhtml#l00113">Accessor.h:113</a></div></div>
<div class="ttc" id="structarm__compute_1_1_quantization_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1_quantization_info.xhtml">arm_compute::QuantizationInfo</a></div><div class="ttdoc">Quantization settings (used for QASYMM8 data type) </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00109">Types.h:109</a></div></div>
<div class="ttc" id="runtime_2_tensor_8h_xhtml"><div class="ttname"><a href="runtime_2_tensor_8h.xhtml">Tensor.h</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">arm_compute::DataType</a></div><div class="ttdeci">DataType</div><div class="ttdoc">Available data types. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00071">Types.h:71</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_ad7829ae79223ab87f9da4c0bd7d229ba"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#ad7829ae79223ab87f9da4c0bd7d229ba">arm_compute::ITensorInfo::num_channels</a></div><div class="ttdeci">virtual size_t num_channels() const =0</div><div class="ttdoc">The number of channels for each tensor element. </div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1_accessor_xhtml_ad7701a09a964eab360a8e51fa7ad2c16"><div class="ttname"><a href="classarm__compute_1_1test_1_1_accessor.xhtml#ad7701a09a964eab360a8e51fa7ad2c16">arm_compute::test::Accessor::size</a></div><div class="ttdeci">size_t size() const override</div><div class="ttdoc">Total size of the tensor in bytes. </div><div class="ttdef"><b>Definition:</b> <a href="_accessor_8h_source.xhtml#l00083">Accessor.h:83</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_xhtml_aa68535e0983cc60a425253a72b162661"><div class="ttname"><a href="classarm__compute_1_1_tensor.xhtml#aa68535e0983cc60a425253a72b162661">arm_compute::Tensor::info</a></div><div class="ttdeci">ITensorInfo * info() const override</div><div class="ttdoc">Interface to be implemented by the child class to return the tensor&amp;#39;s metadata. </div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_59425e443f801f1f2fd8bbe4959a3ccf.xhtml">tests</a></li><li class="navelem"><a class="el" href="dir_445738e6fed662d0b65e690e3f1e1de0.xhtml">NEON</a></li><li class="navelem"><a class="el" href="_accessor_8h.xhtml">Accessor.h</a></li>
    <li class="footer">Generated on Thu Dec 14 2017 23:48:32 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
  </ul>
</div>
</body>
</html>
