<!-- HTML header for doxygen 1.8.9.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: CLLut Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Compute Library
   &#160;<span id="projectnumber">17.12</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li><a href="classes.xhtml"><span>Data&#160;Structure&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Data&#160;Fields</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarm__compute_1_1_c_l_lut.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">CLLut Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Basic implementation of the OpenCL lut interface.  
 <a href="classarm__compute_1_1_c_l_lut.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_c_l_lut_8h_source.xhtml">CLLut.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for CLLut:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classarm__compute_1_1_c_l_lut__coll__graph.svg" width="72" height="187"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a0d6c553d858ee767dfd8c13114353556"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_lut.xhtml#a0d6c553d858ee767dfd8c13114353556">CLLut</a> ()</td></tr>
<tr class="memdesc:a0d6c553d858ee767dfd8c13114353556"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="#a0d6c553d858ee767dfd8c13114353556">More...</a><br /></td></tr>
<tr class="separator:a0d6c553d858ee767dfd8c13114353556"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad2b54d8d7daf7f067cda8ea9e8a795f3"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_lut.xhtml#ad2b54d8d7daf7f067cda8ea9e8a795f3">CLLut</a> (size_t <a class="el" href="classarm__compute_1_1_c_l_lut.xhtml#a6dac829b4ddf4a5729ac090e73696958">num_elements</a>, <a class="el" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a> data_type)</td></tr>
<tr class="memdesc:ad2b54d8d7daf7f067cda8ea9e8a795f3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor: initializes a LUT which can contain num_values values of data_type type.  <a href="#ad2b54d8d7daf7f067cda8ea9e8a795f3">More...</a><br /></td></tr>
<tr class="separator:ad2b54d8d7daf7f067cda8ea9e8a795f3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5330adc6ef4a662806ec236e2be07bbe"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_i_lut_allocator.xhtml">ILutAllocator</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_lut.xhtml#a5330adc6ef4a662806ec236e2be07bbe">allocator</a> ()</td></tr>
<tr class="memdesc:a5330adc6ef4a662806ec236e2be07bbe"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return a pointer to the lut's allocator.  <a href="#a5330adc6ef4a662806ec236e2be07bbe">More...</a><br /></td></tr>
<tr class="separator:a5330adc6ef4a662806ec236e2be07bbe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a14c53d2d17be6fa8a2c9861527c7b002"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_lut.xhtml#a14c53d2d17be6fa8a2c9861527c7b002">map</a> (bool blocking=true)</td></tr>
<tr class="memdesc:a14c53d2d17be6fa8a2c9861527c7b002"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enqueue a map operation of the allocated buffer.  <a href="#a14c53d2d17be6fa8a2c9861527c7b002">More...</a><br /></td></tr>
<tr class="separator:a14c53d2d17be6fa8a2c9861527c7b002"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ffeb3b5abb3d61f62b58a391816201c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_lut.xhtml#a1ffeb3b5abb3d61f62b58a391816201c">unmap</a> ()</td></tr>
<tr class="memdesc:a1ffeb3b5abb3d61f62b58a391816201c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enqueue an unmap operation of the allocated and mapped buffer.  <a href="#a1ffeb3b5abb3d61f62b58a391816201c">More...</a><br /></td></tr>
<tr class="separator:a1ffeb3b5abb3d61f62b58a391816201c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6dac829b4ddf4a5729ac090e73696958"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_lut.xhtml#a6dac829b4ddf4a5729ac090e73696958">num_elements</a> () const override</td></tr>
<tr class="memdesc:a6dac829b4ddf4a5729ac090e73696958"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the total number of elements in the LUT.  <a href="#a6dac829b4ddf4a5729ac090e73696958">More...</a><br /></td></tr>
<tr class="separator:a6dac829b4ddf4a5729ac090e73696958"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaf3f51cd25e1651cccf04064a9888f4e"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_lut.xhtml#aaf3f51cd25e1651cccf04064a9888f4e">index_offset</a> () const override</td></tr>
<tr class="memdesc:aaf3f51cd25e1651cccf04064a9888f4e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Indicates the offset that needs to be applied to the raw index before performing a lookup in the LUT.  <a href="#aaf3f51cd25e1651cccf04064a9888f4e">More...</a><br /></td></tr>
<tr class="separator:aaf3f51cd25e1651cccf04064a9888f4e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a68f33e9afee896dc24b32093d25c6766"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_lut.xhtml#a68f33e9afee896dc24b32093d25c6766">size_in_bytes</a> () const override</td></tr>
<tr class="memdesc:a68f33e9afee896dc24b32093d25c6766"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the total size in bytes of the LUT.  <a href="#a68f33e9afee896dc24b32093d25c6766">More...</a><br /></td></tr>
<tr class="separator:a68f33e9afee896dc24b32093d25c6766"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6dc9c052a2732f899adccfaeee468364"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_lut.xhtml#a6dc9c052a2732f899adccfaeee468364">type</a> () const override</td></tr>
<tr class="memdesc:a6dc9c052a2732f899adccfaeee468364"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the type of the LUT.  <a href="#a6dc9c052a2732f899adccfaeee468364">More...</a><br /></td></tr>
<tr class="separator:a6dc9c052a2732f899adccfaeee468364"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd44a3d7dad6d984b1b87bc9f1b4fa02"><td class="memItemLeft" align="right" valign="top">const cl::Buffer &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_lut.xhtml#afd44a3d7dad6d984b1b87bc9f1b4fa02">cl_buffer</a> () const override</td></tr>
<tr class="memdesc:afd44a3d7dad6d984b1b87bc9f1b4fa02"><td class="mdescLeft">&#160;</td><td class="mdescRight">Interface to be implemented by the child class to return a reference to the OpenCL buffer containing the lut's data.  <a href="#afd44a3d7dad6d984b1b87bc9f1b4fa02">More...</a><br /></td></tr>
<tr class="separator:afd44a3d7dad6d984b1b87bc9f1b4fa02"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aee7cb2065b88d21ac4ad05bc997ecf82"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_lut.xhtml#aee7cb2065b88d21ac4ad05bc997ecf82">clear</a> () override</td></tr>
<tr class="memdesc:aee7cb2065b88d21ac4ad05bc997ecf82"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clears the LUT by setting every element to zero.  <a href="#aee7cb2065b88d21ac4ad05bc997ecf82">More...</a><br /></td></tr>
<tr class="separator:aee7cb2065b88d21ac4ad05bc997ecf82"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1_i_c_l_lut"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1_i_c_l_lut')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1_i_c_l_lut.xhtml">ICLLut</a></td></tr>
<tr class="memitem:abc0b83809a3a81a4dced0bdf7d4d5ed7 inherit pub_methods_classarm__compute_1_1_i_c_l_lut"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_lut.xhtml#abc0b83809a3a81a4dced0bdf7d4d5ed7">ICLLut</a> ()</td></tr>
<tr class="separator:abc0b83809a3a81a4dced0bdf7d4d5ed7 inherit pub_methods_classarm__compute_1_1_i_c_l_lut"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a783d0c1fadb33a4a6d0beca4d4d3ab81 inherit pub_methods_classarm__compute_1_1_i_c_l_lut"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_lut.xhtml#a783d0c1fadb33a4a6d0beca4d4d3ab81">ICLLut</a> (const <a class="el" href="classarm__compute_1_1_i_c_l_lut.xhtml">ICLLut</a> &amp;)=delete</td></tr>
<tr class="separator:a783d0c1fadb33a4a6d0beca4d4d3ab81 inherit pub_methods_classarm__compute_1_1_i_c_l_lut"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8740c6498dafc80428e500a056135bf1 inherit pub_methods_classarm__compute_1_1_i_c_l_lut"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_i_c_l_lut.xhtml">ICLLut</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_lut.xhtml#a8740c6498dafc80428e500a056135bf1">operator=</a> (const <a class="el" href="classarm__compute_1_1_i_c_l_lut.xhtml">ICLLut</a> &amp;)=delete</td></tr>
<tr class="separator:a8740c6498dafc80428e500a056135bf1 inherit pub_methods_classarm__compute_1_1_i_c_l_lut"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac0abc7a5c0d172947f0e6a0c0dde3df0 inherit pub_methods_classarm__compute_1_1_i_c_l_lut"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_lut.xhtml#ac0abc7a5c0d172947f0e6a0c0dde3df0">map</a> (cl::CommandQueue &amp;q, bool blocking=true)</td></tr>
<tr class="memdesc:ac0abc7a5c0d172947f0e6a0c0dde3df0 inherit pub_methods_classarm__compute_1_1_i_c_l_lut"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enqueue a map operation of the allocated buffer on the given queue.  <a href="#ac0abc7a5c0d172947f0e6a0c0dde3df0">More...</a><br /></td></tr>
<tr class="separator:ac0abc7a5c0d172947f0e6a0c0dde3df0 inherit pub_methods_classarm__compute_1_1_i_c_l_lut"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af974a2360069c2ef8df4496d00e4f6cc inherit pub_methods_classarm__compute_1_1_i_c_l_lut"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_lut.xhtml#af974a2360069c2ef8df4496d00e4f6cc">unmap</a> (cl::CommandQueue &amp;q)</td></tr>
<tr class="memdesc:af974a2360069c2ef8df4496d00e4f6cc inherit pub_methods_classarm__compute_1_1_i_c_l_lut"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enqueue an unmap operation of the allocated and mapped buffer on the given queue.  <a href="#af974a2360069c2ef8df4496d00e4f6cc">More...</a><br /></td></tr>
<tr class="separator:af974a2360069c2ef8df4496d00e4f6cc inherit pub_methods_classarm__compute_1_1_i_c_l_lut"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ace7b855e3c647d29cc37a1ce147901dc inherit pub_methods_classarm__compute_1_1_i_c_l_lut"><td class="memItemLeft" align="right" valign="top">uint8_t *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_lut.xhtml#ace7b855e3c647d29cc37a1ce147901dc">buffer</a> () const override</td></tr>
<tr class="memdesc:ace7b855e3c647d29cc37a1ce147901dc inherit pub_methods_classarm__compute_1_1_i_c_l_lut"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a pointer to the start of the LUT.  <a href="#ace7b855e3c647d29cc37a1ce147901dc">More...</a><br /></td></tr>
<tr class="separator:ace7b855e3c647d29cc37a1ce147901dc inherit pub_methods_classarm__compute_1_1_i_c_l_lut"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1_i_lut"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1_i_lut')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1_i_lut.xhtml">ILut</a></td></tr>
<tr class="memitem:ab90dd1556851ce4b6b1529dfb9107f68 inherit pub_methods_classarm__compute_1_1_i_lut"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_lut.xhtml#ab90dd1556851ce4b6b1529dfb9107f68">~ILut</a> ()=default</td></tr>
<tr class="memdesc:ab90dd1556851ce4b6b1529dfb9107f68 inherit pub_methods_classarm__compute_1_1_i_lut"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default virtual destructor.  <a href="#ab90dd1556851ce4b6b1529dfb9107f68">More...</a><br /></td></tr>
<tr class="separator:ab90dd1556851ce4b6b1529dfb9107f68 inherit pub_methods_classarm__compute_1_1_i_lut"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Basic implementation of the OpenCL lut interface. </p>

<p>Definition at line <a class="el" href="_c_l_lut_8h_source.xhtml#l00040">40</a> of file <a class="el" href="_c_l_lut_8h_source.xhtml">CLLut.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a0d6c553d858ee767dfd8c13114353556"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_lut.xhtml">CLLut</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructor. </p>

</div>
</div>
<a class="anchor" id="ad2b54d8d7daf7f067cda8ea9e8a795f3"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_lut.xhtml">CLLut</a> </td>
          <td>(</td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>num_elements</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a>&#160;</td>
          <td class="paramname"><em>data_type</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructor: initializes a LUT which can contain num_values values of data_type type. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">num_elements</td><td>Number of elements of the LUT. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">data_type</td><td>Data type of each element. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a5330adc6ef4a662806ec236e2be07bbe"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_i_lut_allocator.xhtml">ILutAllocator</a>* allocator </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return a pointer to the lut's allocator. </p>
<dl class="section return"><dt>Returns</dt><dd>A pointer to the lut's allocator </dd></dl>

</div>
</div>
<a class="anchor" id="afd44a3d7dad6d984b1b87bc9f1b4fa02"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const cl::Buffer&amp; cl_buffer </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Interface to be implemented by the child class to return a reference to the OpenCL buffer containing the lut's data. </p>
<dl class="section return"><dt>Returns</dt><dd>A reference to an OpenCL buffer containing the lut's data. </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_c_l_lut.xhtml#a1fb4c50755a0ef424652246838ed91a6">ICLLut</a>.</p>

</div>
</div>
<a class="anchor" id="aee7cb2065b88d21ac4ad05bc997ecf82"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void clear </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Clears the LUT by setting every element to zero. </p>

<p>Implements <a class="el" href="classarm__compute_1_1_i_lut.xhtml#a5eeb94d22b8366d1b68d0614384802fe">ILut</a>.</p>

</div>
</div>
<a class="anchor" id="aaf3f51cd25e1651cccf04064a9888f4e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t index_offset </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Indicates the offset that needs to be applied to the raw index before performing a lookup in the LUT. </p>
<dl class="section return"><dt>Returns</dt><dd>The normalization offset. </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_lut.xhtml#a786de36dda3773c5fb35d6700e64621e">ILut</a>.</p>

<p>Referenced by <a class="el" href="_c_l_lut_accessor_8h_source.xhtml#l00062">CLLutAccessor&lt; T &gt;::operator[]()</a>.</p>

</div>
</div>
<a class="anchor" id="a14c53d2d17be6fa8a2c9861527c7b002"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void map </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>blocking</em> = <code>true</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enqueue a map operation of the allocated buffer. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">blocking</td><td>If true, then the mapping will be ready to use by the time this method returns, else it is the caller's responsibility to flush the queue and wait for the mapping operation to have completed. </td></tr>
  </table>
  </dd>
</dl>

<p>Referenced by <a class="el" href="_c_l_lut_accessor_8h_source.xhtml#l00042">CLLutAccessor&lt; T &gt;::CLLutAccessor()</a>.</p>

</div>
</div>
<a class="anchor" id="a6dac829b4ddf4a5729ac090e73696958"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t num_elements </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the total number of elements in the LUT. </p>
<dl class="section return"><dt>Returns</dt><dd>Total number of elements. </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_lut.xhtml#a7a826fbb4f639c556352d1ede69187d7">ILut</a>.</p>

<p>Referenced by <a class="el" href="_c_l_lut_accessor_8h_source.xhtml#l00057">CLLutAccessor&lt; T &gt;::num_elements()</a>.</p>

</div>
</div>
<a class="anchor" id="a68f33e9afee896dc24b32093d25c6766"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t size_in_bytes </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the total size in bytes of the LUT. </p>
<dl class="section return"><dt>Returns</dt><dd>Total size of the LUT in bytes. </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_lut.xhtml#a6314b1e589ffe32277858c018ac3c630">ILut</a>.</p>

</div>
</div>
<a class="anchor" id="a6dc9c052a2732f899adccfaeee468364"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a> type </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the type of the LUT. </p>
<dl class="section return"><dt>Returns</dt><dd>The type of the LUT. </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_lut.xhtml#aa1917b40b57ce0a0f1c69722b46f3f46">ILut</a>.</p>

</div>
</div>
<a class="anchor" id="a1ffeb3b5abb3d61f62b58a391816201c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void unmap </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enqueue an unmap operation of the allocated and mapped buffer. </p>
<dl class="section note"><dt>Note</dt><dd>This method simply enqueues the unmap operation, it is the caller's responsibility to flush the queue and make sure the unmap is finished before the memory is accessed by the device. </dd></dl>

<p>Referenced by <a class="el" href="_c_l_lut_accessor_8h_source.xhtml#l00047">CLLutAccessor&lt; T &gt;::~CLLutAccessor()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>arm_compute/runtime/CL/<a class="el" href="_c_l_lut_8h_source.xhtml">CLLut.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1_c_l_lut.xhtml">CLLut</a></li>
    <li class="footer">Generated on Thu Dec 14 2017 23:48:35 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
  </ul>
</div>
</body>
</html>
