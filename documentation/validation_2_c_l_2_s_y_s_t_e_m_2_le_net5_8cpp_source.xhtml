<!-- HTML header for doxygen 1.8.9.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: tests/validation/CL/SYSTEM/LeNet5.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Compute Library
   &#160;<span id="projectnumber">17.12</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>Globals</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('validation_2_c_l_2_s_y_s_t_e_m_2_le_net5_8cpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">LeNet5.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="validation_2_c_l_2_s_y_s_t_e_m_2_le_net5_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2017 ARM Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_c_l_activation_layer_8h.xhtml">arm_compute/runtime/CL/functions/CLActivationLayer.h</a>&quot;</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_c_l_convolution_layer_8h.xhtml">arm_compute/runtime/CL/functions/CLConvolutionLayer.h</a>&quot;</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_c_l_fully_connected_layer_8h.xhtml">arm_compute/runtime/CL/functions/CLFullyConnectedLayer.h</a>&quot;</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_c_l_pooling_layer_8h.xhtml">arm_compute/runtime/CL/functions/CLPoolingLayer.h</a>&quot;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_c_l_softmax_layer_8h.xhtml">arm_compute/runtime/CL/functions/CLSoftmaxLayer.h</a>&quot;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_c_l_accessor_8h.xhtml">tests/CL/CLAccessor.h</a>&quot;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_asserts_8h.xhtml">tests/framework/Asserts.h</a>&quot;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="tests_2framework_2_macros_8h.xhtml">tests/framework/Macros.h</a>&quot;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_le_net5_network_8h.xhtml">tests/networks/LeNet5Network.h</a>&quot;</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_validation_8h.xhtml">tests/validation/Validation.h</a>&quot;</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;{</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">namespace </span>test</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;{</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keyword">namespace </span>validation</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;{</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="keyword">namespace</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;{</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="keyword">using</span> CLLeNet5Model = <a class="code" href="classarm__compute_1_1test_1_1networks_1_1_le_net5_network.xhtml">networks::LeNet5Network</a>&lt;<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a>,</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;      <a class="code" href="classarm__compute_1_1test_1_1_c_l_accessor.xhtml">CLAccessor</a>,</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;      <a class="code" href="classarm__compute_1_1_c_l_activation_layer.xhtml">CLActivationLayer</a>,</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;      <a class="code" href="classarm__compute_1_1_c_l_convolution_layer.xhtml">CLConvolutionLayer</a>,</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;      <a class="code" href="classarm__compute_1_1_c_l_fully_connected_layer.xhtml">CLFullyConnectedLayer</a>,</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;      <a class="code" href="classarm__compute_1_1_c_l_pooling_layer.xhtml">CLPoolingLayer</a>,</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;      <a class="code" href="classarm__compute_1_1_c_l_softmax_layer.xhtml">CLSoftmaxLayer</a>&gt;;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;std::vector&lt;unsigned int&gt; compute_lenet5(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> batches, std::string input_file)</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;{</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    std::vector&lt;std::string&gt; weight_files = { <span class="stringliteral">&quot;cnn_data/lenet_model/conv1_w.npy&quot;</span>,</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;                                              <span class="stringliteral">&quot;cnn_data/lenet_model/conv2_w.npy&quot;</span>,</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;                                              <span class="stringliteral">&quot;cnn_data/lenet_model/ip1_w.npy&quot;</span>,</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;                                              <span class="stringliteral">&quot;cnn_data/lenet_model/ip2_w.npy&quot;</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;                                            };</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    std::vector&lt;std::string&gt; bias_files = { <span class="stringliteral">&quot;cnn_data/lenet_model/conv1_b.npy&quot;</span>,</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;                                            <span class="stringliteral">&quot;cnn_data/lenet_model/conv2_b.npy&quot;</span>,</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                                            <span class="stringliteral">&quot;cnn_data/lenet_model/ip1_b.npy&quot;</span>,</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;                                            <span class="stringliteral">&quot;cnn_data/lenet_model/ip2_b.npy&quot;</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;                                          };</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    CLLeNet5Model network{};</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    network.init(batches);</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    network.build();</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    network.allocate();</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    network.fill(weight_files, bias_files);</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    network.feed(std::move(input_file));</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    network.<a class="code" href="classarm__compute_1_1_c_l_softmax_layer.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="keywordflow">return</span> network.get_classifications();</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;}</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;} <span class="comment">// namespace</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<a class="code" href="tests_2framework_2_macros_8h.xhtml#acd09bed517e43d28823e69494f259835">TEST_SUITE</a>(CL)</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<a class="code" href="tests_2framework_2_macros_8h.xhtml#acd09bed517e43d28823e69494f259835">TEST_SUITE</a>(SYSTEM_TESTS)</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div><div class="line"><a name="l00081"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3a79f969cb1a721c7dd4163a3ee79f81">   81</a></span>&#160;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ab9422bc3143de824fa792e9740c27e79">TEST_CASE</a>(LeNet5, framework::<a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cf">DatasetMode</a>::PRECOMMIT)</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;{</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="comment">// Compute alexnet</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    std::vector&lt;unsigned int&gt; classified_labels = compute_lenet5(10, <span class="stringliteral">&quot;cnn_data/mnist_data/input10.npy&quot;</span>);</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <span class="comment">// Expected labels</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    std::vector&lt;unsigned int&gt; expected_labels = { 7, 2, 1, 0, 4, 1, 4, 9, 5, 9 };</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="comment">// Validate labels</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7730e17dc901bdffefcf45b08bab135f">validate</a>(classified_labels, expected_labels);</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;}</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#af77b34bd2ffc2b5b0b87daa9b5e63ea8">TEST_SUITE_END</a>()</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#af77b34bd2ffc2b5b0b87daa9b5e63ea8">TEST_SUITE_END</a>()</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;} <span class="comment">// namespace validation</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;} <span class="comment">// namespace test</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;} <span class="comment">// namespace arm_compute</span></div><div class="ttc" id="_c_l_convolution_layer_8h_xhtml"><div class="ttname"><a href="_c_l_convolution_layer_8h.xhtml">CLConvolutionLayer.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_fully_connected_layer_xhtml"><div class="ttname"><a href="classarm__compute_1_1_c_l_fully_connected_layer.xhtml">arm_compute::CLFullyConnectedLayer</a></div><div class="ttdoc">Basic function to compute a Fully Connected layer on OpenCL. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_fully_connected_layer_8h_source.xhtml#l00066">CLFullyConnectedLayer.h:66</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_softmax_layer_xhtml"><div class="ttname"><a href="classarm__compute_1_1_c_l_softmax_layer.xhtml">arm_compute::CLSoftmaxLayer</a></div><div class="ttdoc">Basic function to compute a SoftmaxLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_softmax_layer_8h_source.xhtml#l00049">CLSoftmaxLayer.h:49</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_activation_layer_xhtml"><div class="ttname"><a href="classarm__compute_1_1_c_l_activation_layer.xhtml">arm_compute::CLActivationLayer</a></div><div class="ttdoc">Basic function to run CLActivationLayerKernel. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_activation_layer_8h_source.xhtml#l00039">CLActivationLayer.h:39</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_af77b34bd2ffc2b5b0b87daa9b5e63ea8"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#af77b34bd2ffc2b5b0b87daa9b5e63ea8">arm_compute::test::validation::TEST_SUITE_END</a></div><div class="ttdeci">TEST_SUITE_END() const auto quantize_down_int32_to_uint8_scale_cases</div></div>
<div class="ttc" id="_c_l_accessor_8h_xhtml"><div class="ttname"><a href="_c_l_accessor_8h.xhtml">CLAccessor.h</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">This file contains all available output stages for GEMMLowp on OpenCL. </div><div class="ttdef"><b>Definition:</b> <a href="01__library_8dox_source.xhtml#l00001">01_library.dox:1</a></div></div>
<div class="ttc" id="tests_2framework_2_macros_8h_xhtml_acd09bed517e43d28823e69494f259835"><div class="ttname"><a href="tests_2framework_2_macros_8h.xhtml#acd09bed517e43d28823e69494f259835">TEST_SUITE</a></div><div class="ttdeci">#define TEST_SUITE(SUITE_NAME)</div><div class="ttdef"><b>Definition:</b> <a href="tests_2framework_2_macros_8h_source.xhtml#l00034">Macros.h:34</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_a7edf31944a6144ffd493d2f9a7bfb5cf"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cf">arm_compute::test::framework::DatasetMode</a></div><div class="ttdeci">DatasetMode</div><div class="ttdoc">Possible dataset modes. </div><div class="ttdef"><b>Definition:</b> <a href="_dataset_modes_8h_source.xhtml#l00040">DatasetModes.h:40</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1_c_l_accessor_xhtml"><div class="ttname"><a href="classarm__compute_1_1test_1_1_c_l_accessor.xhtml">arm_compute::test::CLAccessor</a></div><div class="ttdoc">Accessor implementation for CLTensor objects. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_accessor_8h_source.xhtml#l00035">CLAccessor.h:35</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_softmax_layer_xhtml_ad1717410afd0be936c6213a63c8005fb"><div class="ttname"><a href="classarm__compute_1_1_c_l_softmax_layer.xhtml#ad1717410afd0be936c6213a63c8005fb">arm_compute::CLSoftmaxLayer::run</a></div><div class="ttdeci">void run() override</div><div class="ttdoc">Run the kernels contained in the function. </div></div>
<div class="ttc" id="tests_2framework_2_macros_8h_xhtml"><div class="ttname"><a href="tests_2framework_2_macros_8h.xhtml">Macros.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_convolution_layer_xhtml"><div class="ttname"><a href="classarm__compute_1_1_c_l_convolution_layer.xhtml">arm_compute::CLConvolutionLayer</a></div><div class="ttdoc">Basic function to compute the convolution layer. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_convolution_layer_8h_source.xhtml#l00089">CLConvolutionLayer.h:89</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_ab9422bc3143de824fa792e9740c27e79"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ab9422bc3143de824fa792e9740c27e79">arm_compute::test::validation::TEST_CASE</a></div><div class="ttdeci">TEST_CASE(AlexNet, framework::DatasetMode::PRECOMMIT)</div><div class="ttdef"><b>Definition:</b> <a href="validation_2_c_l_2_s_y_s_t_e_m_2_alex_net_8cpp_source.xhtml#l00096">AlexNet.cpp:96</a></div></div>
<div class="ttc" id="_c_l_fully_connected_layer_8h_xhtml"><div class="ttname"><a href="_c_l_fully_connected_layer_8h.xhtml">CLFullyConnectedLayer.h</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a7730e17dc901bdffefcf45b08bab135f"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a7730e17dc901bdffefcf45b08bab135f">arm_compute::test::validation::validate</a></div><div class="ttdeci">void validate(const arm_compute::ValidRegion &amp;region, const arm_compute::ValidRegion &amp;reference)</div><div class="ttdoc">Validate valid regions. </div><div class="ttdef"><b>Definition:</b> <a href="_validation_8cpp_source.xhtml#l00149">Validation.cpp:149</a></div></div>
<div class="ttc" id="_c_l_softmax_layer_8h_xhtml"><div class="ttname"><a href="_c_l_softmax_layer_8h.xhtml">CLSoftmaxLayer.h</a></div></div>
<div class="ttc" id="_validation_8h_xhtml"><div class="ttname"><a href="_validation_8h.xhtml">Validation.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1networks_1_1_le_net5_network_xhtml"><div class="ttname"><a href="classarm__compute_1_1test_1_1networks_1_1_le_net5_network.xhtml">arm_compute::test::networks::LeNet5Network</a></div><div class="ttdoc">Lenet5 model object. </div><div class="ttdef"><b>Definition:</b> <a href="_le_net5_network_8h_source.xhtml#l00050">LeNet5Network.h:50</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_pooling_layer_xhtml"><div class="ttname"><a href="classarm__compute_1_1_c_l_pooling_layer.xhtml">arm_compute::CLPoolingLayer</a></div><div class="ttdoc">Basic function to simulate a pooling layer with the specified pooling operation. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_pooling_layer_8h_source.xhtml#l00041">CLPoolingLayer.h:41</a></div></div>
<div class="ttc" id="_le_net5_network_8h_xhtml"><div class="ttname"><a href="_le_net5_network_8h.xhtml">LeNet5Network.h</a></div></div>
<div class="ttc" id="_c_l_activation_layer_8h_xhtml"><div class="ttname"><a href="_c_l_activation_layer_8h.xhtml">CLActivationLayer.h</a></div></div>
<div class="ttc" id="_asserts_8h_xhtml"><div class="ttname"><a href="_asserts_8h.xhtml">Asserts.h</a></div></div>
<div class="ttc" id="_c_l_pooling_layer_8h_xhtml"><div class="ttname"><a href="_c_l_pooling_layer_8h.xhtml">CLPoolingLayer.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_tensor_xhtml"><div class="ttname"><a href="classarm__compute_1_1_c_l_tensor.xhtml">arm_compute::CLTensor</a></div><div class="ttdoc">Basic implementation of the OpenCL tensor interface. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_tensor_8h_source.xhtml#l00039">CLTensor.h:39</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_59425e443f801f1f2fd8bbe4959a3ccf.xhtml">tests</a></li><li class="navelem"><a class="el" href="dir_e7c7b16542faa38cb4655ff1750d3604.xhtml">validation</a></li><li class="navelem"><a class="el" href="dir_f7024513cd67abef53e86ee9382ac5ce.xhtml">CL</a></li><li class="navelem"><a class="el" href="dir_23221f641cabea68e0f604f0420281b4.xhtml">SYSTEM</a></li><li class="navelem"><a class="el" href="validation_2_c_l_2_s_y_s_t_e_m_2_le_net5_8cpp.xhtml">LeNet5.cpp</a></li>
    <li class="footer">Generated on Thu Dec 14 2017 23:48:32 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
  </ul>
</div>
</body>
</html>
