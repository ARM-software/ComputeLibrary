<!-- HTML header for doxygen 1.8.9.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: tests/main.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Compute Library
   &#160;<span id="projectnumber">17.12</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>Globals</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('main_8cpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">main.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="main_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2017 ARM Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_toolchain_support_8h.xhtml">support/ToolchainSupport.h</a>&quot;</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_assets_library_8h.xhtml">tests/AssetsLibrary.h</a>&quot;</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_dataset_modes_8h.xhtml">tests/framework/DatasetModes.h</a>&quot;</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_exceptions_8h.xhtml">tests/framework/Exceptions.h</a>&quot;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_framework_8h.xhtml">tests/framework/Framework.h</a>&quot;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="tests_2framework_2_macros_8h.xhtml">tests/framework/Macros.h</a>&quot;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_profiler_8h.xhtml">tests/framework/Profiler.h</a>&quot;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_command_line_options_8h.xhtml">tests/framework/command_line/CommandLineOptions.h</a>&quot;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_command_line_parser_8h.xhtml">tests/framework/command_line/CommandLineParser.h</a>&quot;</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_instruments_8h.xhtml">tests/framework/instruments/Instruments.h</a>&quot;</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="tests_2framework_2printers_2_printers_8h.xhtml">tests/framework/printers/Printers.h</a>&quot;</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor">#ifdef ARM_COMPUTE_CL</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_c_l_scheduler_8h.xhtml">arm_compute/runtime/CL/CLScheduler.h</a>&quot;</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* ARM_COMPUTE_CL */</span><span class="preprocessor"></span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="preprocessor">#ifdef ARM_COMPUTE_GC</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_g_c_scheduler_8h.xhtml">arm_compute/runtime/GLES_COMPUTE/GCScheduler.h</a>&quot;</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* ARM_COMPUTE_GC */</span><span class="preprocessor"></span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_scheduler_8h.xhtml">arm_compute/runtime/Scheduler.h</a>&quot;</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="preprocessor">#include &lt;fstream&gt;</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="preprocessor">#include &lt;initializer_list&gt;</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="preprocessor">#include &lt;iostream&gt;</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="preprocessor">#include &lt;memory&gt;</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="preprocessor">#include &lt;random&gt;</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="preprocessor">#include &lt;utility&gt;</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="keyword">using namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a>;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="keyword">using namespace </span><a class="code" href="namespacearm__compute_1_1test.xhtml">arm_compute::test</a>;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;{</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="keyword">namespace </span>test</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;{</div><div class="line"><a name="l00058"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test.xhtml#a71326f0909d77386e29b511e1990a11f">   58</a></span>&#160;std::unique_ptr&lt;AssetsLibrary&gt; <a class="code" href="namespacearm__compute_1_1test.xhtml#a71326f0909d77386e29b511e1990a11f">library</a>;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;} <span class="comment">// namespace test</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;} <span class="comment">// namespace arm_compute</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div><div class="line"><a name="l00062"></a><span class="lineno"><a class="line" href="main_8cpp.xhtml#a3c04138a5bfe5d72780bb7e82a18e627">   62</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="main_8cpp.xhtml#a3c04138a5bfe5d72780bb7e82a18e627">main</a>(<span class="keywordtype">int</span> argc, <span class="keywordtype">char</span> **argv)</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;{</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="preprocessor">#ifdef ARM_COMPUTE_CL</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a60f9a6836b628a7171914c4afe43b4a7">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a46ecf9ef0fe80ba2ed35acfc29856b7d">default_init</a>();</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* ARM_COMPUTE_CL */</span><span class="preprocessor"></span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="preprocessor">#ifdef ARM_COMPUTE_GC</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <a class="code" href="classarm__compute_1_1_g_c_scheduler.xhtml#ac758c6b5a7ccc31b7193cfde59c32109">GCScheduler::get</a>().<a class="code" href="classarm__compute_1_1_g_c_scheduler.xhtml#a19bb5002a62b62e050e89c975f7b9fdf">default_init</a>();</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* ARM_COMPUTE_GC */</span><span class="preprocessor"></span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml">framework::Framework</a> &amp;framework = <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#af8fbb8b386d3cce307a89002bcdbcfc9">framework::Framework::get</a>();</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_command_line_parser.xhtml">framework::CommandLineParser</a> <a class="code" href="namespacecaffe__data__extractor.xhtml#a90eee7a4677ca8b1ed116364a24367f9">parser</a>;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    std::set&lt;framework::InstrumentsDescription&gt; allowed_instruments</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    {</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        std::pair&lt;framework::InstrumentType, framework::ScaleFactor&gt;(<a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfa5fb1f955b45e38e31789286a1790398d">framework::InstrumentType::ALL</a>, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9ab50339a10e1de285ac99d4c3990b8693">framework::ScaleFactor::NONE</a>),</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        std::pair&lt;framework::InstrumentType, framework::ScaleFactor&gt;(<a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9ab50339a10e1de285ac99d4c3990b8693">framework::InstrumentType::NONE</a>, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9ab50339a10e1de285ac99d4c3990b8693">framework::ScaleFactor::NONE</a>),</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    };</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <span class="keywordflow">for</span>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;<a class="code" href="namespacecaffe__data__extractor.xhtml#a7aead736a07eaf25623ad7bfa1f0ee2d">type</a> : framework.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a19a641ac841ecb3f867a75b374b36f61">available_instruments</a>())</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    {</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        allowed_instruments.insert(<a class="code" href="namespacecaffe__data__extractor.xhtml#a7aead736a07eaf25623ad7bfa1f0ee2d">type</a>);</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    }</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    std::set&lt;framework::DatasetMode&gt; allowed_modes</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    {</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfab829534c7b40afdbd3c3ffea05202a97">framework::DatasetMode::PRECOMMIT</a>,</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfad791cd54143e331164a2b216451a5dd3">framework::DatasetMode::NIGHTLY</a>,</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfa5fb1f955b45e38e31789286a1790398d">framework::DatasetMode::ALL</a></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    };</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    std::set&lt;framework::LogFormat&gt; supported_log_formats</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    {</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9ab50339a10e1de285ac99d4c3990b8693">framework::LogFormat::NONE</a>,</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a043aa97de3c71ad015852f46ec4cc6ada2b908e3bfd5ebc739a3ce26d5045b76f">framework::LogFormat::PRETTY</a>,</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a043aa97de3c71ad015852f46ec4cc6ada0ecd11c1d7a287401d148a23bbd7a2f8">framework::LogFormat::JSON</a>,</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    };</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    std::set&lt;framework::LogLevel&gt; supported_log_levels</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    {</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9ab50339a10e1de285ac99d4c3990b8693">framework::LogLevel::NONE</a>,</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9a73e99d350a4aa6f1a5af04ec29173f73">framework::LogLevel::CONFIG</a>,</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9ac769ef7bddc01ed21a9f7c5fecbe2430">framework::LogLevel::TESTS</a>,</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9a6f3a603fac4d817f1848c3173b243b57">framework::LogLevel::ERRORS</a>,</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9adc30ec20708ef7b0f641ef78b7880a15">framework::LogLevel::DEBUG</a>,</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9a9632e44563b724240d9299f0ab14aae8">framework::LogLevel::MEASUREMENTS</a>,</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfa5fb1f955b45e38e31789286a1790398d">framework::LogLevel::ALL</a>,</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    };</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <span class="keyword">auto</span> <a class="code" href="namespacecaffe__data__extractor.xhtml#a81ae9faedaa69e3e28e2960a0548df8d">help</a> = parser.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_command_line_parser.xhtml#a533951910a8df4f26eac7e534a226c5f">add_option</a>&lt;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_toggle_option.xhtml">framework::ToggleOption</a>&gt;(<span class="stringliteral">&quot;help&quot;</span>);</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <a class="code" href="namespacecaffe__data__extractor.xhtml#a81ae9faedaa69e3e28e2960a0548df8d">help</a>-&gt;set_help(<span class="stringliteral">&quot;Show this help message&quot;</span>);</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <span class="keyword">auto</span> dataset_mode = parser.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_command_line_parser.xhtml#a533951910a8df4f26eac7e534a226c5f">add_option</a>&lt;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_enum_option.xhtml">framework::EnumOption&lt;framework::DatasetMode&gt;</a>&gt;(<span class="stringliteral">&quot;mode&quot;</span>, allowed_modes, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfab829534c7b40afdbd3c3ffea05202a97">framework::DatasetMode::PRECOMMIT</a>);</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    dataset_mode-&gt;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_option.xhtml#a48a2672f362eeed9a3e93403f4d3de37">set_help</a>(<span class="stringliteral">&quot;For managed datasets select which group to use&quot;</span>);</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <span class="keyword">auto</span> instruments = parser.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_command_line_parser.xhtml#a533951910a8df4f26eac7e534a226c5f">add_option</a>&lt;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_enum_list_option.xhtml">framework::EnumListOption&lt;framework::InstrumentsDescription&gt;</a>&gt;(<span class="stringliteral">&quot;instruments&quot;</span>, allowed_instruments, std::initializer_list&lt;framework::InstrumentsDescription&gt; { std::pair&lt;framework::InstrumentType, framework::ScaleFactor&gt;(<a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005aabf534ee93a5bd6473d70f13a7414d92">framework::InstrumentType::WALL_CLOCK_TIMER</a>, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9ab50339a10e1de285ac99d4c3990b8693">framework::ScaleFactor::NONE</a>) });</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    instruments-&gt;set_help(<span class="stringliteral">&quot;Set the profiling instruments to use&quot;</span>);</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <span class="keyword">auto</span> iterations = parser.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_command_line_parser.xhtml#a533951910a8df4f26eac7e534a226c5f">add_option</a>&lt;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_simple_option.xhtml">framework::SimpleOption&lt;int&gt;</a>&gt;(<span class="stringliteral">&quot;iterations&quot;</span>, 1);</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    iterations-&gt;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_option.xhtml#a48a2672f362eeed9a3e93403f4d3de37">set_help</a>(<span class="stringliteral">&quot;Number of iterations per test case&quot;</span>);</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="keyword">auto</span> threads = parser.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_command_line_parser.xhtml#a533951910a8df4f26eac7e534a226c5f">add_option</a>&lt;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_simple_option.xhtml">framework::SimpleOption&lt;int&gt;</a>&gt;(<span class="stringliteral">&quot;threads&quot;</span>, 1);</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    threads-&gt;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_option.xhtml#a48a2672f362eeed9a3e93403f4d3de37">set_help</a>(<span class="stringliteral">&quot;Number of threads to use&quot;</span>);</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <span class="keyword">auto</span> log_format = parser.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_command_line_parser.xhtml#a533951910a8df4f26eac7e534a226c5f">add_option</a>&lt;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_enum_option.xhtml">framework::EnumOption&lt;framework::LogFormat&gt;</a>&gt;(<span class="stringliteral">&quot;log-format&quot;</span>, supported_log_formats, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a043aa97de3c71ad015852f46ec4cc6ada2b908e3bfd5ebc739a3ce26d5045b76f">framework::LogFormat::PRETTY</a>);</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    log_format-&gt;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_option.xhtml#a48a2672f362eeed9a3e93403f4d3de37">set_help</a>(<span class="stringliteral">&quot;Output format for measurements and failures (affects only log-file)&quot;</span>);</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <span class="keyword">auto</span> filter = parser.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_command_line_parser.xhtml#a533951910a8df4f26eac7e534a226c5f">add_option</a>&lt;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_simple_option.xhtml">framework::SimpleOption&lt;std::string&gt;</a>&gt;(<span class="stringliteral">&quot;filter&quot;</span>, <span class="stringliteral">&quot;.*&quot;</span>);</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    filter-&gt;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_option.xhtml#a48a2672f362eeed9a3e93403f4d3de37">set_help</a>(<span class="stringliteral">&quot;Regular expression to select test cases&quot;</span>);</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    <span class="keyword">auto</span> filter_id = parser.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_command_line_parser.xhtml#a533951910a8df4f26eac7e534a226c5f">add_option</a>&lt;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_simple_option.xhtml">framework::SimpleOption&lt;std::string&gt;</a>&gt;(<span class="stringliteral">&quot;filter-id&quot;</span>);</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    filter_id-&gt;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_option.xhtml#a48a2672f362eeed9a3e93403f4d3de37">set_help</a>(<span class="stringliteral">&quot;List of test ids. ... can be used to define a range.&quot;</span>);</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    <span class="keyword">auto</span> log_file = parser.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_command_line_parser.xhtml#a533951910a8df4f26eac7e534a226c5f">add_option</a>&lt;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_simple_option.xhtml">framework::SimpleOption&lt;std::string&gt;</a>&gt;(<span class="stringliteral">&quot;log-file&quot;</span>);</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    log_file-&gt;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_option.xhtml#a48a2672f362eeed9a3e93403f4d3de37">set_help</a>(<span class="stringliteral">&quot;Write output to file instead of to the console (affected by log-format)&quot;</span>);</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <span class="keyword">auto</span> log_level = parser.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_command_line_parser.xhtml#a533951910a8df4f26eac7e534a226c5f">add_option</a>&lt;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_enum_option.xhtml">framework::EnumOption&lt;framework::LogLevel&gt;</a>&gt;(<span class="stringliteral">&quot;log-level&quot;</span>, supported_log_levels, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfa5fb1f955b45e38e31789286a1790398d">framework::LogLevel::ALL</a>);</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    log_level-&gt;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_option.xhtml#a48a2672f362eeed9a3e93403f4d3de37">set_help</a>(<span class="stringliteral">&quot;Verbosity of the output&quot;</span>);</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <span class="keyword">auto</span> throw_errors = parser.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_command_line_parser.xhtml#a533951910a8df4f26eac7e534a226c5f">add_option</a>&lt;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_toggle_option.xhtml">framework::ToggleOption</a>&gt;(<span class="stringliteral">&quot;throw-errors&quot;</span>);</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    throw_errors-&gt;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_option.xhtml#a48a2672f362eeed9a3e93403f4d3de37">set_help</a>(<span class="stringliteral">&quot;Don&#39;t catch fatal errors (useful for debugging)&quot;</span>);</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <span class="keyword">auto</span> stop_on_error = parser.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_command_line_parser.xhtml#a533951910a8df4f26eac7e534a226c5f">add_option</a>&lt;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_toggle_option.xhtml">framework::ToggleOption</a>&gt;(<span class="stringliteral">&quot;stop-on-error&quot;</span>);</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    stop_on_error-&gt;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_option.xhtml#a48a2672f362eeed9a3e93403f4d3de37">set_help</a>(<span class="stringliteral">&quot;Abort execution after the first failed test (useful for debugging)&quot;</span>);</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    <span class="keyword">auto</span> seed = parser.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_command_line_parser.xhtml#a533951910a8df4f26eac7e534a226c5f">add_option</a>&lt;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_simple_option.xhtml">framework::SimpleOption&lt;std::random_device::result_type&gt;</a>&gt;(<span class="stringliteral">&quot;seed&quot;</span>, std::random_device()());</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    seed-&gt;set_help(<span class="stringliteral">&quot;Global seed for random number generation&quot;</span>);</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <span class="keyword">auto</span> color_output = parser.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_command_line_parser.xhtml#a533951910a8df4f26eac7e534a226c5f">add_option</a>&lt;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_toggle_option.xhtml">framework::ToggleOption</a>&gt;(<span class="stringliteral">&quot;color-output&quot;</span>, <span class="keyword">true</span>);</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    color_output-&gt;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_option.xhtml#a48a2672f362eeed9a3e93403f4d3de37">set_help</a>(<span class="stringliteral">&quot;Produce colored output on the console&quot;</span>);</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    <span class="keyword">auto</span> list_tests = parser.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_command_line_parser.xhtml#a533951910a8df4f26eac7e534a226c5f">add_option</a>&lt;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_toggle_option.xhtml">framework::ToggleOption</a>&gt;(<span class="stringliteral">&quot;list-tests&quot;</span>, <span class="keyword">false</span>);</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    list_tests-&gt;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_option.xhtml#a48a2672f362eeed9a3e93403f4d3de37">set_help</a>(<span class="stringliteral">&quot;List all test names&quot;</span>);</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    <span class="keyword">auto</span> test_instruments = parser.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_command_line_parser.xhtml#a533951910a8df4f26eac7e534a226c5f">add_option</a>&lt;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_toggle_option.xhtml">framework::ToggleOption</a>&gt;(<span class="stringliteral">&quot;test-instruments&quot;</span>, <span class="keyword">false</span>);</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    test_instruments-&gt;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_option.xhtml#a48a2672f362eeed9a3e93403f4d3de37">set_help</a>(<span class="stringliteral">&quot;Test if the instruments work on the platform&quot;</span>);</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    <span class="keyword">auto</span> error_on_missing_assets = parser.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_command_line_parser.xhtml#a533951910a8df4f26eac7e534a226c5f">add_option</a>&lt;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_toggle_option.xhtml">framework::ToggleOption</a>&gt;(<span class="stringliteral">&quot;error-on-missing-assets&quot;</span>, <span class="keyword">false</span>);</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    error_on_missing_assets-&gt;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_option.xhtml#a48a2672f362eeed9a3e93403f4d3de37">set_help</a>(<span class="stringliteral">&quot;Mark a test as failed instead of skipping it when assets are missing&quot;</span>);</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <span class="keyword">auto</span> assets = parser.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_command_line_parser.xhtml#a079cbecac60787502777460ef65491c0">add_positional_option</a>&lt;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_simple_option.xhtml">framework::SimpleOption&lt;std::string&gt;</a>&gt;(<span class="stringliteral">&quot;assets&quot;</span>);</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    assets-&gt;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_option.xhtml#a48a2672f362eeed9a3e93403f4d3de37">set_help</a>(<span class="stringliteral">&quot;Path to the assets directory&quot;</span>);</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    <span class="keyword">auto</span> pretty_console = parser.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_command_line_parser.xhtml#a533951910a8df4f26eac7e534a226c5f">add_option</a>&lt;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_toggle_option.xhtml">framework::ToggleOption</a>&gt;(<span class="stringliteral">&quot;pretty-console&quot;</span>, <span class="keyword">false</span>);</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    pretty_console-&gt;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_option.xhtml#a48a2672f362eeed9a3e93403f4d3de37">set_help</a>(<span class="stringliteral">&quot;Produce pretty output on the console&quot;</span>);</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    <span class="keyword">auto</span> json_file = parser.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_command_line_parser.xhtml#a533951910a8df4f26eac7e534a226c5f">add_option</a>&lt;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_simple_option.xhtml">framework::SimpleOption&lt;std::string&gt;</a>&gt;(<span class="stringliteral">&quot;json-file&quot;</span>);</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    json_file-&gt;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_option.xhtml#a48a2672f362eeed9a3e93403f4d3de37">set_help</a>(<span class="stringliteral">&quot;Write output to a json file.&quot;</span>);</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    <span class="keyword">auto</span> pretty_file = parser.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_command_line_parser.xhtml#a533951910a8df4f26eac7e534a226c5f">add_option</a>&lt;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_simple_option.xhtml">framework::SimpleOption&lt;std::string&gt;</a>&gt;(<span class="stringliteral">&quot;pretty-file&quot;</span>);</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    pretty_file-&gt;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_option.xhtml#a48a2672f362eeed9a3e93403f4d3de37">set_help</a>(<span class="stringliteral">&quot;Write output to a text file&quot;</span>);</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <span class="keywordflow">try</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    {</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        parser.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_command_line_parser.xhtml#a66fa8f960eac1bf561ba2cb8be0cc58a">parse</a>(argc, argv);</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        <span class="keywordflow">if</span>(<a class="code" href="namespacecaffe__data__extractor.xhtml#a81ae9faedaa69e3e28e2960a0548df8d">help</a>-&gt;is_set() &amp;&amp; <a class="code" href="namespacecaffe__data__extractor.xhtml#a81ae9faedaa69e3e28e2960a0548df8d">help</a>-&gt;value())</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        {</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;            parser.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_command_line_parser.xhtml#a5ff56e81c580d778a11ef91d5757be80">print_help</a>(argv[0]);</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;            <span class="keywordflow">return</span> 0;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        }</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;        std::vector&lt;std::unique_ptr&lt;framework::Printer&gt;&gt; printers;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;        std::vector&lt;std::shared_ptr&lt;std::ofstream&gt;&gt;      log_streams;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        <span class="keywordflow">if</span>(pretty_console-&gt;value() &amp;&amp; (log_file-&gt;is_set() || log_format-&gt;value() != <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a043aa97de3c71ad015852f46ec4cc6ada2b908e3bfd5ebc739a3ce26d5045b76f">framework::LogFormat::PRETTY</a>))</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;        {</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;            <span class="keyword">auto</span> pretty_printer = support::cpp14::make_unique&lt;framework::PrettyPrinter&gt;();</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;            pretty_printer-&gt;set_color_output(color_output-&gt;value());</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;            printers.push_back(std::move(pretty_printer));</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;        }</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;        std::unique_ptr&lt;framework::Printer&gt; printer;</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        <span class="keywordflow">switch</span>(log_format-&gt;value())</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        {</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;            <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a043aa97de3c71ad015852f46ec4cc6ada0ecd11c1d7a287401d148a23bbd7a2f8">framework::LogFormat::JSON</a>:</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;                printer = support::cpp14::make_unique&lt;framework::JSONPrinter&gt;();</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;                <span class="keywordflow">break</span>;</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;            <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9ab50339a10e1de285ac99d4c3990b8693">framework::LogFormat::NONE</a>:</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;                <span class="keywordflow">break</span>;</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;            <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a043aa97de3c71ad015852f46ec4cc6ada2b908e3bfd5ebc739a3ce26d5045b76f">framework::LogFormat::PRETTY</a>:</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;            <span class="keywordflow">default</span>:</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;                <span class="keyword">auto</span> pretty_printer = support::cpp14::make_unique&lt;framework::PrettyPrinter&gt;();</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;                <span class="comment">// Don&#39;t use colours if we print to a file:</span></div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;                pretty_printer-&gt;set_color_output((!log_file-&gt;is_set()) &amp;&amp; color_output-&gt;value());</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;                printer = std::move(pretty_printer);</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;                <span class="keywordflow">break</span>;</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;        }</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;        <span class="keywordflow">if</span>(log_file-&gt;is_set())</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;        {</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;            log_streams.push_back(std::make_shared&lt;std::ofstream&gt;(log_file-&gt;value()));</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;            <span class="keywordflow">if</span>(printer != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;            {</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;                printer-&gt;set_stream(*log_streams.back().get());</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;            }</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;        }</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;        <span class="keywordflow">if</span>(printer != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;        {</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;            printers.push_back(std::move(printer));</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;        }</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;        <span class="keywordflow">if</span>(json_file-&gt;is_set())</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;        {</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;            printers.push_back(support::cpp14::make_unique&lt;framework::JSONPrinter&gt;());</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;            log_streams.push_back(std::make_shared&lt;std::ofstream&gt;(json_file-&gt;value()));</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;            printers.back()-&gt;set_stream(*log_streams.back().get());</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;        }</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;        <span class="keywordflow">if</span>(pretty_file-&gt;is_set())</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;        {</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;            printers.push_back(support::cpp14::make_unique&lt;framework::PrettyPrinter&gt;());</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;            log_streams.push_back(std::make_shared&lt;std::ofstream&gt;(pretty_file-&gt;value()));</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;            printers.back()-&gt;set_stream(*log_streams.back().get());</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;        }</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;        <a class="code" href="classarm__compute_1_1_scheduler.xhtml#acb4f87f1831680d8d1b70e1bef06bb81">Scheduler::get</a>().<a class="code" href="classarm__compute_1_1_i_scheduler.xhtml#a645ac2d9d4144fd0174296de7eb1e1b5">set_num_threads</a>(threads-&gt;value());</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        <span class="keywordflow">if</span>(log_level-&gt;value() &gt; <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9ab50339a10e1de285ac99d4c3990b8693">framework::LogLevel::NONE</a>)</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;        {</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;            <span class="keywordflow">for</span>(<span class="keyword">auto</span> &amp;p : printers)</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;            {</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;                p-&gt;print_global_header();</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;            }</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;        }</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;        <span class="keywordflow">if</span>(log_level-&gt;value() &gt;= <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9a73e99d350a4aa6f1a5af04ec29173f73">framework::LogLevel::CONFIG</a>)</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;        {</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;            <span class="keywordflow">for</span>(<span class="keyword">auto</span> &amp;p : printers)</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;            {</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;                p-&gt;print_entry(<span class="stringliteral">&quot;Seed&quot;</span>, <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(seed-&gt;value()));</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;                p-&gt;print_entry(<span class="stringliteral">&quot;Iterations&quot;</span>, <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(iterations-&gt;value()));</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;                p-&gt;print_entry(<span class="stringliteral">&quot;Threads&quot;</span>, <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(threads-&gt;value()));</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;                {</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;                    <span class="keyword">using</span> <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>;</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;                    p-&gt;print_entry(<span class="stringliteral">&quot;Dataset mode&quot;</span>, <a class="code" href="namespacearm__compute.xhtml#aabe16be22edb41656e66ed9eae3b69e6">to_string</a>(dataset_mode-&gt;value()));</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;                }</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;            }</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;        }</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;        framework.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a47fbbce86aea0ba4a9d539c069f840c9">init</a>(instruments-&gt;value(), iterations-&gt;value(), dataset_mode-&gt;value(), filter-&gt;value(), filter_id-&gt;value(), log_level-&gt;value());</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;        <span class="keywordflow">for</span>(<span class="keyword">auto</span> &amp;p : printers)</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;        {</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;            framework.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a5f16ced78873ee3a193490197fbf57a5">add_printer</a>(p.get());</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;        }</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;        framework.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a5e61ba4403f0d2bd4f755f59193af692">set_throw_errors</a>(throw_errors-&gt;value());</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;        framework.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#ab4b7e9757ad7e9d23b608b617c5dffa6">set_stop_on_error</a>(stop_on_error-&gt;value());</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;        framework.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a46a0cefc3b9a13645548ec705f438ce9">set_error_on_missing_assets</a>(error_on_missing_assets-&gt;value());</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;        <span class="keywordtype">bool</span> success = <span class="keyword">true</span>;</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;        <span class="keywordflow">if</span>(list_tests-&gt;value())</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;        {</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;            <span class="keywordflow">for</span>(<span class="keyword">auto</span> &amp;p : printers)</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;            {</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;                p-&gt;print_list_tests(framework.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#af77825496fa0fbf840b676d2c9aabaf4">test_infos</a>());</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;                p-&gt;print_global_footer();</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;            }</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;            <span class="keywordflow">return</span> 0;</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;        }</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;        <span class="keywordflow">if</span>(test_instruments-&gt;value())</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;        {</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;            <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_profiler.xhtml">framework::Profiler</a> <a class="code" href="classprofiler.xhtml">profiler</a> = framework.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a0e42876589150f9ae9ad78d6446ef3b6">get_profiler</a>();</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;            profiler.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_profiler.xhtml#a60de64d75454385b23995437f1d72669">start</a>();</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;            profiler.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_profiler.xhtml#a8c528baf37154d347366083f0f816846">stop</a>();</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;            <span class="keywordflow">for</span>(<span class="keyword">auto</span> &amp;p : printers)</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;            {</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;                p-&gt;print_measurements(profiler.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_profiler.xhtml#a89d7c3c7bab828a9e87e23b269935ee4">measurements</a>());</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;            }</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;            <span class="keywordflow">return</span> 0;</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;        }</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;        <a class="code" href="namespacearm__compute_1_1test.xhtml#a71326f0909d77386e29b511e1990a11f">library</a> = support::cpp14::make_unique&lt;AssetsLibrary&gt;(assets-&gt;value(), seed-&gt;value());</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;        <span class="keywordflow">if</span>(!parser.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_command_line_parser.xhtml#afd5aa83cd390b855c74887fca8407e84">validate</a>())</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;        {</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;            <span class="keywordflow">return</span> 1;</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;        }</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;        success = framework.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a149ad6701e3e2414cb566bb414029841">run</a>();</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;        <span class="keywordflow">if</span>(log_level-&gt;value() &gt; <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9ab50339a10e1de285ac99d4c3990b8693">framework::LogLevel::NONE</a>)</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;        {</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;            <span class="keywordflow">for</span>(<span class="keyword">auto</span> &amp;p : printers)</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;            {</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;                p-&gt;print_global_footer();</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;            }</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;        }</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;        <span class="keywordflow">return</span> (success ? 0 : 1);</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;    }</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;    <span class="keywordflow">catch</span>(<span class="keyword">const</span> std::exception &amp;<a class="code" href="namespacearm__compute.xhtml#a568b0fbfa3d903099d9c9f7b6acf188d">error</a>)</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;    {</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;        std::cerr &lt;&lt; error.what() &lt;&lt; <span class="stringliteral">&quot;\n&quot;</span>;</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;        <span class="keywordflow">if</span>(throw_errors-&gt;value())</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;        {</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;            <span class="keywordflow">throw</span>;</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;        }</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;        <span class="keywordflow">return</span> 1;</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;    }</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;    <span class="keywordflow">return</span> 0;</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;}</div><div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_aca1fd1d8935433e6ba2e3918214e07f9a9632e44563b724240d9299f0ab14aae8"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9a9632e44563b724240d9299f0ab14aae8">arm_compute::test::framework::LogLevel::MEASUREMENTS</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_toggle_option_xhtml"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_toggle_option.xhtml">arm_compute::test::framework::ToggleOption</a></div><div class="ttdoc">Implementation of an option that can be either true or false. </div><div class="ttdef"><b>Definition:</b> <a href="_toggle_option_8h_source.xhtml#l00038">ToggleOption.h:38</a></div></div>
<div class="ttc" id="_profiler_8h_xhtml"><div class="ttname"><a href="_profiler_8h.xhtml">Profiler.h</a></div></div>
<div class="ttc" id="_toolchain_support_8h_xhtml"><div class="ttname"><a href="_toolchain_support_8h.xhtml">ToolchainSupport.h</a></div></div>
<div class="ttc" id="main_8cpp_xhtml_a3c04138a5bfe5d72780bb7e82a18e627"><div class="ttname"><a href="main_8cpp.xhtml#a3c04138a5bfe5d72780bb7e82a18e627">main</a></div><div class="ttdeci">int main(int argc, char **argv)</div><div class="ttdef"><b>Definition:</b> <a href="main_8cpp_source.xhtml#l00062">main.cpp:62</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_xhtml"><div class="ttname"><a href="namespacearm__compute_1_1test.xhtml">arm_compute::test</a></div><div class="ttdef"><b>Definition:</b> <a href="02__tests_8dox_source.xhtml#l00003">02_tests.dox:3</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_command_line_parser_xhtml_a533951910a8df4f26eac7e534a226c5f"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_command_line_parser.xhtml#a533951910a8df4f26eac7e534a226c5f">arm_compute::test::framework::CommandLineParser::add_option</a></div><div class="ttdeci">T * add_option(const std::string &amp;name, As &amp;&amp;...args)</div><div class="ttdoc">Function to add a new option to the parser. </div><div class="ttdef"><b>Definition:</b> <a href="_command_line_parser_8h_source.xhtml#l00102">CommandLineParser.h:102</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_framework_xhtml"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml">arm_compute::test::framework::Framework</a></div><div class="ttdoc">Main framework class. </div><div class="ttdef"><b>Definition:</b> <a href="_framework_8h_source.xhtml#l00083">Framework.h:83</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_profiler_xhtml"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_profiler.xhtml">arm_compute::test::framework::Profiler</a></div><div class="ttdoc">Profiler class to collect benchmark numbers. </div><div class="ttdef"><b>Definition:</b> <a href="_profiler_8h_source.xhtml#l00045">Profiler.h:45</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_scheduler_xhtml_a645ac2d9d4144fd0174296de7eb1e1b5"><div class="ttname"><a href="classarm__compute_1_1_i_scheduler.xhtml#a645ac2d9d4144fd0174296de7eb1e1b5">arm_compute::IScheduler::set_num_threads</a></div><div class="ttdeci">virtual void set_num_threads(unsigned int num_threads)=0</div><div class="ttdoc">Sets the number of threads the scheduler will use to run the kernels. </div></div>
<div class="ttc" id="namespacearm__compute_1_1support_1_1cpp11_xhtml_acc5dddee1cbe93a4eaf0a9f74ee96bb7"><div class="ttname"><a href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">arm_compute::support::cpp11::to_string</a></div><div class="ttdeci">std::string to_string(T &amp;&amp;value)</div><div class="ttdoc">Convert integer and float values to string. </div><div class="ttdef"><b>Definition:</b> <a href="_toolchain_support_8h_source.xhtml#l00187">ToolchainSupport.h:187</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_framework_xhtml_a5e61ba4403f0d2bd4f755f59193af692"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a5e61ba4403f0d2bd4f755f59193af692">arm_compute::test::framework::Framework::set_throw_errors</a></div><div class="ttdeci">void set_throw_errors(bool throw_errors)</div><div class="ttdoc">Set whether errors are caught or thrown by the framework. </div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00235">Framework.cpp:235</a></div></div>
<div class="ttc" id="_command_line_parser_8h_xhtml"><div class="ttname"><a href="_command_line_parser_8h.xhtml">CommandLineParser.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_simple_option_xhtml"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_simple_option.xhtml">arm_compute::test::framework::SimpleOption</a></div><div class="ttdoc">Implementation of an option that accepts a single value. </div><div class="ttdef"><b>Definition:</b> <a href="_simple_option_8h_source.xhtml#l00041">SimpleOption.h:41</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_command_line_parser_xhtml_a66fa8f960eac1bf561ba2cb8be0cc58a"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_command_line_parser.xhtml#a66fa8f960eac1bf561ba2cb8be0cc58a">arm_compute::test::framework::CommandLineParser::parse</a></div><div class="ttdeci">void parse(int argc, char **argv)</div><div class="ttdoc">Parses the command line arguments and updates the options accordingly. </div><div class="ttdef"><b>Definition:</b> <a href="_command_line_parser_8cpp_source.xhtml#l00035">CommandLineParser.cpp:35</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_framework_xhtml_a19a641ac841ecb3f867a75b374b36f61"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a19a641ac841ecb3f867a75b374b36f61">arm_compute::test::framework::Framework::available_instruments</a></div><div class="ttdeci">std::set&lt; InstrumentsDescription &gt; available_instruments() const </div><div class="ttdoc">Supported instrument types for benchmarking. </div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00072">Framework.cpp:72</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_framework_xhtml_a46a0cefc3b9a13645548ec705f438ce9"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a46a0cefc3b9a13645548ec705f438ce9">arm_compute::test::framework::Framework::set_error_on_missing_assets</a></div><div class="ttdeci">void set_error_on_missing_assets(bool error_on_missing_assets)</div><div class="ttdoc">Set whether a test should be considered as failed if its assets cannot be found. </div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00255">Framework.cpp:255</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_command_line_parser_xhtml_a079cbecac60787502777460ef65491c0"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_command_line_parser.xhtml#a079cbecac60787502777460ef65491c0">arm_compute::test::framework::CommandLineParser::add_positional_option</a></div><div class="ttdeci">T * add_positional_option(As &amp;&amp;...args)</div><div class="ttdoc">Function to add a new positional argument to the parser. </div><div class="ttdef"><b>Definition:</b> <a href="_command_line_parser_8h_source.xhtml#l00109">CommandLineParser.h:109</a></div></div>
<div class="ttc" id="tests_2framework_2printers_2_printers_8h_xhtml"><div class="ttname"><a href="tests_2framework_2printers_2_printers_8h.xhtml">Printers.h</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_aabe16be22edb41656e66ed9eae3b69e6"><div class="ttname"><a href="namespacearm__compute.xhtml#aabe16be22edb41656e66ed9eae3b69e6">arm_compute::to_string</a></div><div class="ttdeci">std::string to_string(const NonLinearFilterFunction &amp;function)</div><div class="ttdef"><b>Definition:</b> <a href="_type_printer_8h_source.xhtml#l00079">TypePrinter.h:79</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_a7edf31944a6144ffd493d2f9a7bfb5cfab829534c7b40afdbd3c3ffea05202a97"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfab829534c7b40afdbd3c3ffea05202a97">arm_compute::test::framework::DatasetMode::PRECOMMIT</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">This file contains all available output stages for GEMMLowp on OpenCL. </div><div class="ttdef"><b>Definition:</b> <a href="01__library_8dox_source.xhtml#l00001">01_library.dox:1</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_aac6b258eb313f96447f4f0e273431005aabf534ee93a5bd6473d70f13a7414d92"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005aabf534ee93a5bd6473d70f13a7414d92">arm_compute::test::framework::InstrumentType::WALL_CLOCK_TIMER</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_aca1fd1d8935433e6ba2e3918214e07f9a73e99d350a4aa6f1a5af04ec29173f73"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9a73e99d350a4aa6f1a5af04ec29173f73">arm_compute::test::framework::LogLevel::CONFIG</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_framework_xhtml_af8fbb8b386d3cce307a89002bcdbcfc9"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#af8fbb8b386d3cce307a89002bcdbcfc9">arm_compute::test::framework::Framework::get</a></div><div class="ttdeci">static Framework &amp; get()</div><div class="ttdoc">Access to the singleton. </div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00096">Framework.cpp:96</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_aca1fd1d8935433e6ba2e3918214e07f9ab50339a10e1de285ac99d4c3990b8693"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9ab50339a10e1de285ac99d4c3990b8693">arm_compute::test::framework::LogLevel::NONE</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_aca1fd1d8935433e6ba2e3918214e07f9ac769ef7bddc01ed21a9f7c5fecbe2430"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9ac769ef7bddc01ed21a9f7c5fecbe2430">arm_compute::test::framework::LogLevel::TESTS</a></div></div>
<div class="ttc" id="_c_l_scheduler_8h_xhtml"><div class="ttname"><a href="_c_l_scheduler_8h.xhtml">CLScheduler.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_framework_xhtml_a47fbbce86aea0ba4a9d539c069f840c9"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a47fbbce86aea0ba4a9d539c069f840c9">arm_compute::test::framework::Framework::init</a></div><div class="ttdeci">void init(const std::vector&lt; framework::InstrumentsDescription &gt; &amp;instruments, int num_iterations, DatasetMode mode, const std::string &amp;name_filter, const std::string &amp;id_filter, LogLevel log_level)</div><div class="ttdoc">Init the framework. </div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00102">Framework.cpp:102</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a568b0fbfa3d903099d9c9f7b6acf188d"><div class="ttname"><a href="namespacearm__compute.xhtml#a568b0fbfa3d903099d9c9f7b6acf188d">arm_compute::error</a></div><div class="ttdeci">void error(const char *function, const char *file, const int line, const char *msg,...)</div><div class="ttdoc">Print an error message then throw an std::runtime_error. </div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_framework_xhtml_a149ad6701e3e2414cb566bb414029841"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a149ad6701e3e2414cb566bb414029841">arm_compute::test::framework::Framework::run</a></div><div class="ttdeci">bool run()</div><div class="ttdoc">Run all enabled test cases. </div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00514">Framework.cpp:514</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_framework_xhtml_af77825496fa0fbf840b676d2c9aabaf4"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#af77825496fa0fbf840b676d2c9aabaf4">arm_compute::test::framework::Framework::test_infos</a></div><div class="ttdeci">std::vector&lt; TestInfo &gt; test_infos() const </div><div class="ttdoc">List of TestInfo&amp;#39;s. </div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00625">Framework.cpp:625</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_command_line_parser_xhtml_afd5aa83cd390b855c74887fca8407e84"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_command_line_parser.xhtml#afd5aa83cd390b855c74887fca8407e84">arm_compute::test::framework::CommandLineParser::validate</a></div><div class="ttdeci">bool validate() const </div><div class="ttdoc">Validates the previously parsed command line arguments. </div><div class="ttdef"><b>Definition:</b> <a href="_command_line_parser_8cpp_source.xhtml#l00101">CommandLineParser.cpp:101</a></div></div>
<div class="ttc" id="_instruments_8h_xhtml"><div class="ttname"><a href="_instruments_8h.xhtml">Instruments.h</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_xhtml_a71326f0909d77386e29b511e1990a11f"><div class="ttname"><a href="namespacearm__compute_1_1test.xhtml#a71326f0909d77386e29b511e1990a11f">arm_compute::test::library</a></div><div class="ttdeci">std::unique_ptr&lt; AssetsLibrary &gt; library</div><div class="ttdef"><b>Definition:</b> <a href="main_8cpp_source.xhtml#l00058">main.cpp:58</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_enum_list_option_xhtml"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_enum_list_option.xhtml">arm_compute::test::framework::EnumListOption</a></div><div class="ttdoc">Implementation of an option that accepts any number of values from a fixed set. </div><div class="ttdef"><b>Definition:</b> <a href="_enum_list_option_8h_source.xhtml#l00044">EnumListOption.h:44</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_scheduler_xhtml_a60f9a6836b628a7171914c4afe43b4a7"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a60f9a6836b628a7171914c4afe43b4a7">arm_compute::CLScheduler::get</a></div><div class="ttdeci">static CLScheduler &amp; get()</div><div class="ttdoc">Access the scheduler singleton. </div></div>
<div class="ttc" id="_assets_library_8h_xhtml"><div class="ttname"><a href="_assets_library_8h.xhtml">AssetsLibrary.h</a></div></div>
<div class="ttc" id="namespacecaffe__data__extractor_xhtml_a90eee7a4677ca8b1ed116364a24367f9"><div class="ttname"><a href="namespacecaffe__data__extractor.xhtml#a90eee7a4677ca8b1ed116364a24367f9">caffe_data_extractor.parser</a></div><div class="ttdeci">parser</div><div class="ttdef"><b>Definition:</b> <a href="caffe__data__extractor_8py_source.xhtml#l00018">caffe_data_extractor.py:18</a></div></div>
<div class="ttc" id="_scheduler_8h_xhtml"><div class="ttname"><a href="_scheduler_8h.xhtml">Scheduler.h</a></div></div>
<div class="ttc" id="tests_2framework_2_macros_8h_xhtml"><div class="ttname"><a href="tests_2framework_2_macros_8h.xhtml">Macros.h</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_a043aa97de3c71ad015852f46ec4cc6ada2b908e3bfd5ebc739a3ce26d5045b76f"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#a043aa97de3c71ad015852f46ec4cc6ada2b908e3bfd5ebc739a3ce26d5045b76f">arm_compute::test::framework::LogFormat::PRETTY</a></div></div>
<div class="ttc" id="_command_line_options_8h_xhtml"><div class="ttname"><a href="_command_line_options_8h.xhtml">CommandLineOptions.h</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_a7edf31944a6144ffd493d2f9a7bfb5cfad791cd54143e331164a2b216451a5dd3"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfad791cd54143e331164a2b216451a5dd3">arm_compute::test::framework::DatasetMode::NIGHTLY</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_enum_option_xhtml"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_enum_option.xhtml">arm_compute::test::framework::EnumOption</a></div><div class="ttdoc">Implementation of a simple option that accepts a value from a fixed set. </div><div class="ttdef"><b>Definition:</b> <a href="_enum_option_8h_source.xhtml#l00042">EnumOption.h:42</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_a7edf31944a6144ffd493d2f9a7bfb5cfa5fb1f955b45e38e31789286a1790398d"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfa5fb1f955b45e38e31789286a1790398d">arm_compute::test::framework::DatasetMode::ALL</a></div></div>
<div class="ttc" id="namespacecaffe__data__extractor_xhtml_a7aead736a07eaf25623ad7bfa1f0ee2d"><div class="ttname"><a href="namespacecaffe__data__extractor.xhtml#a7aead736a07eaf25623ad7bfa1f0ee2d">caffe_data_extractor.type</a></div><div class="ttdeci">type</div><div class="ttdef"><b>Definition:</b> <a href="caffe__data__extractor_8py_source.xhtml#l00019">caffe_data_extractor.py:19</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_aca1fd1d8935433e6ba2e3918214e07f9adc30ec20708ef7b0f641ef78b7880a15"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9adc30ec20708ef7b0f641ef78b7880a15">arm_compute::test::framework::LogLevel::DEBUG</a></div></div>
<div class="ttc" id="_exceptions_8h_xhtml"><div class="ttname"><a href="_exceptions_8h.xhtml">Exceptions.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_profiler_xhtml_a89d7c3c7bab828a9e87e23b269935ee4"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_profiler.xhtml#a89d7c3c7bab828a9e87e23b269935ee4">arm_compute::test::framework::Profiler::measurements</a></div><div class="ttdeci">const MeasurementsMap &amp; measurements() const </div><div class="ttdoc">Return measurements for all instruments. </div><div class="ttdef"><b>Definition:</b> <a href="_profiler_8cpp_source.xhtml#l00064">Profiler.cpp:64</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_profiler_xhtml_a60de64d75454385b23995437f1d72669"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_profiler.xhtml#a60de64d75454385b23995437f1d72669">arm_compute::test::framework::Profiler::start</a></div><div class="ttdeci">void start()</div><div class="ttdoc">Start all added instruments to measure performance. </div><div class="ttdef"><b>Definition:</b> <a href="_profiler_8cpp_source.xhtml#l00040">Profiler.cpp:40</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_framework_xhtml_a0e42876589150f9ae9ad78d6446ef3b6"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a0e42876589150f9ae9ad78d6446ef3b6">arm_compute::test::framework::Framework::get_profiler</a></div><div class="ttdeci">Profiler get_profiler() const </div><div class="ttdoc">Factory method to obtain a configured profiler. </div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00591">Framework.cpp:591</a></div></div>
<div class="ttc" id="classprofiler_xhtml"><div class="ttname"><a href="classprofiler.xhtml">profiler</a></div><div class="ttdef"><b>Definition:</b> <a href="profiler_8hpp_source.xhtml#l00088">profiler.hpp:88</a></div></div>
<div class="ttc" id="_g_c_scheduler_8h_xhtml"><div class="ttname"><a href="_g_c_scheduler_8h.xhtml">GCScheduler.h</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_aca1fd1d8935433e6ba2e3918214e07f9a6f3a603fac4d817f1848c3173b243b57"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9a6f3a603fac4d817f1848c3173b243b57">arm_compute::test::framework::LogLevel::ERRORS</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_command_line_parser_xhtml"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_command_line_parser.xhtml">arm_compute::test::framework::CommandLineParser</a></div><div class="ttdoc">Class to parse command line arguments. </div><div class="ttdef"><b>Definition:</b> <a href="_command_line_parser_8h_source.xhtml#l00043">CommandLineParser.h:43</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_framework_xhtml_a5f16ced78873ee3a193490197fbf57a5"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a5f16ced78873ee3a193490197fbf57a5">arm_compute::test::framework::Framework::add_printer</a></div><div class="ttdeci">void add_printer(Printer *printer)</div><div class="ttdoc">Set the printer used for the output of test results. </div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00620">Framework.cpp:620</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_profiler_xhtml_a8c528baf37154d347366083f0f816846"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_profiler.xhtml#a8c528baf37154d347366083f0f816846">arm_compute::test::framework::Profiler::stop</a></div><div class="ttdeci">void stop()</div><div class="ttdoc">Stop all added instruments. </div><div class="ttdef"><b>Definition:</b> <a href="_profiler_8cpp_source.xhtml#l00048">Profiler.cpp:48</a></div></div>
<div class="ttc" id="namespacecaffe__data__extractor_xhtml_a81ae9faedaa69e3e28e2960a0548df8d"><div class="ttname"><a href="namespacecaffe__data__extractor.xhtml#a81ae9faedaa69e3e28e2960a0548df8d">caffe_data_extractor.help</a></div><div class="ttdeci">help</div><div class="ttdef"><b>Definition:</b> <a href="caffe__data__extractor_8py_source.xhtml#l00019">caffe_data_extractor.py:19</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_option_xhtml_a48a2672f362eeed9a3e93403f4d3de37"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_option.xhtml#a48a2672f362eeed9a3e93403f4d3de37">arm_compute::test::framework::Option::set_help</a></div><div class="ttdeci">void set_help(std::string help)</div><div class="ttdoc">Set the help message for the option. </div><div class="ttdef"><b>Definition:</b> <a href="_option_8cpp_source.xhtml#l00052">Option.cpp:52</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_scheduler_xhtml_ac758c6b5a7ccc31b7193cfde59c32109"><div class="ttname"><a href="classarm__compute_1_1_g_c_scheduler.xhtml#ac758c6b5a7ccc31b7193cfde59c32109">arm_compute::GCScheduler::get</a></div><div class="ttdeci">static GCScheduler &amp; get()</div><div class="ttdoc">Access the scheduler singleton. </div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_command_line_parser_xhtml_a5ff56e81c580d778a11ef91d5757be80"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_command_line_parser.xhtml#a5ff56e81c580d778a11ef91d5757be80">arm_compute::test::framework::CommandLineParser::print_help</a></div><div class="ttdeci">void print_help(const std::string &amp;program_name) const </div><div class="ttdoc">Prints a help message for all configured options. </div><div class="ttdef"><b>Definition:</b> <a href="_command_line_parser_8cpp_source.xhtml#l00136">CommandLineParser.cpp:136</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_framework_xhtml_ab4b7e9757ad7e9d23b608b617c5dffa6"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#ab4b7e9757ad7e9d23b608b617c5dffa6">arm_compute::test::framework::Framework::set_stop_on_error</a></div><div class="ttdeci">void set_stop_on_error(bool stop_on_error)</div><div class="ttdoc">Set whether to abort execution after the first failed test. </div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00245">Framework.cpp:245</a></div></div>
<div class="ttc" id="_framework_8h_xhtml"><div class="ttname"><a href="_framework_8h.xhtml">Framework.h</a></div></div>
<div class="ttc" id="_dataset_modes_8h_xhtml"><div class="ttname"><a href="_dataset_modes_8h.xhtml">DatasetModes.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_scheduler_xhtml_a19bb5002a62b62e050e89c975f7b9fdf"><div class="ttname"><a href="classarm__compute_1_1_g_c_scheduler.xhtml#a19bb5002a62b62e050e89c975f7b9fdf">arm_compute::GCScheduler::default_init</a></div><div class="ttdeci">void default_init()</div><div class="ttdoc">Initialises the context and command queue used by the scheduler to default values and sets a default ...</div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_scheduler_xhtml_a46ecf9ef0fe80ba2ed35acfc29856b7d"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a46ecf9ef0fe80ba2ed35acfc29856b7d">arm_compute::CLScheduler::default_init</a></div><div class="ttdeci">void default_init(ICLTuner *cl_tuner=nullptr)</div><div class="ttdoc">Initialises the context and command queue used by the scheduler to default values and sets a default ...</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8h_source.xhtml#l00083">CLScheduler.h:83</a></div></div>
<div class="ttc" id="classarm__compute_1_1_scheduler_xhtml_acb4f87f1831680d8d1b70e1bef06bb81"><div class="ttname"><a href="classarm__compute_1_1_scheduler.xhtml#acb4f87f1831680d8d1b70e1bef06bb81">arm_compute::Scheduler::get</a></div><div class="ttdeci">static IScheduler &amp; get()</div><div class="ttdoc">Access the scheduler singleton. </div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_a043aa97de3c71ad015852f46ec4cc6ada0ecd11c1d7a287401d148a23bbd7a2f8"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#a043aa97de3c71ad015852f46ec4cc6ada0ecd11c1d7a287401d148a23bbd7a2f8">arm_compute::test::framework::LogFormat::JSON</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_59425e443f801f1f2fd8bbe4959a3ccf.xhtml">tests</a></li><li class="navelem"><a class="el" href="main_8cpp.xhtml">main.cpp</a></li>
    <li class="footer">Generated on Thu Dec 14 2017 23:48:32 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
  </ul>
</div>
</body>
</html>
