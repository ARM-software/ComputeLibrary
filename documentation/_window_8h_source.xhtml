<!-- HTML header for doxygen 1.8.9.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: arm_compute/core/Window.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Compute Library
   &#160;<span id="projectnumber">18.03</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>Globals</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_window_8h_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">Window.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_window_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2016-2018 ARM Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifndef __ARM_COMPUTE_WINDOW_H__</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#define __ARM_COMPUTE_WINDOW_H__</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &lt;algorithm&gt;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &lt;array&gt;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &lt;cstddef&gt;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_coordinates_8h.xhtml">arm_compute/core/Coordinates.h</a>&quot;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="core_2_error_8h.xhtml">arm_compute/core/Error.h</a>&quot;</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_tensor_info_8h.xhtml">arm_compute/core/ITensorInfo.h</a>&quot;</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2core_2_utils_8h.xhtml">arm_compute/core/Utils.h</a>&quot;</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;{</div><div class="line"><a name="l00039"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_window.xhtml">   39</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1_window.xhtml">Window</a></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;{</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00043"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">   43</a></span>&#160;    <span class="keyword">static</span> constexpr <span class="keywordtype">size_t</span> <a class="code" href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">DimX</a> = 0;</div><div class="line"><a name="l00045"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">   45</a></span>&#160;    <span class="keyword">static</span> constexpr <span class="keywordtype">size_t</span> <a class="code" href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">DimY</a> = 1;</div><div class="line"><a name="l00047"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_window.xhtml#a893d17b56b9abc4423ce26e9a24ac5dc">   47</a></span>&#160;    <span class="keyword">static</span> constexpr <span class="keywordtype">size_t</span> <a class="code" href="classarm__compute_1_1_window.xhtml#a893d17b56b9abc4423ce26e9a24ac5dc">DimZ</a> = 2;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00050"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_window.xhtml#ab242a9d3683ac8f480f7944ff6f40534">   50</a></span>&#160;    constexpr <a class="code" href="classarm__compute_1_1_window.xhtml#ab242a9d3683ac8f480f7944ff6f40534">Window</a>()</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        : _dims()</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    {</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    }</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <a class="code" href="classarm__compute_1_1_window.xhtml#ab242a9d3683ac8f480f7944ff6f40534">Window</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6743f0a130e8311e6f5b1a23df102472">src</a>);</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_window_1_1_dimension.xhtml">   68</a></span>&#160;    <span class="keyword">class </span><a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml">Dimension</a></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    {</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <span class="keyword">public</span>:</div><div class="line"><a name="l00078"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_window_1_1_dimension.xhtml#a2c532d398a5661ff04367252701fa3d4">   78</a></span>&#160;        constexpr <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#a2c532d398a5661ff04367252701fa3d4">Dimension</a>(<span class="keywordtype">int</span> <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#a27c3790df96e9523b0370e7e10c0d375">start</a> = 0, <span class="keywordtype">int</span> <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#aa9a8509af319b9e47f00c8fba23d368b">end</a> = 1, <span class="keywordtype">int</span> <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#a992b375fc3254afe2e38f63bc29a43d4">step</a> = 1)</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;            : _start(<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#a27c3790df96e9523b0370e7e10c0d375">start</a>), _end(<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#aa9a8509af319b9e47f00c8fba23d368b">end</a>), _step(<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#a992b375fc3254afe2e38f63bc29a43d4">step</a>)</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        {</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        }</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml">Dimension</a> &amp;<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#a7768b7b80a8b640dae911af38e3315a2">operator=</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml">Dimension</a> &amp;d) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00085"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_window_1_1_dimension.xhtml#a27c3790df96e9523b0370e7e10c0d375">   85</a></span>&#160;        constexpr <span class="keywordtype">int</span> <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#a27c3790df96e9523b0370e7e10c0d375">start</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="keyword">        </span>{</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;            <span class="keywordflow">return</span> _start;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        }</div><div class="line"><a name="l00090"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_window_1_1_dimension.xhtml#aa9a8509af319b9e47f00c8fba23d368b">   90</a></span>&#160;        constexpr <span class="keywordtype">int</span> <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#aa9a8509af319b9e47f00c8fba23d368b">end</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="keyword">        </span>{</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;            <span class="keywordflow">return</span> _end;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        }</div><div class="line"><a name="l00095"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_window_1_1_dimension.xhtml#a992b375fc3254afe2e38f63bc29a43d4">   95</a></span>&#160;        constexpr <span class="keywordtype">int</span> <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#a992b375fc3254afe2e38f63bc29a43d4">step</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="keyword">        </span>{</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;            <span class="keywordflow">return</span> _step;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        }</div><div class="line"><a name="l00103"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_window_1_1_dimension.xhtml#aa84a724344a983832279fe13f047b52d">  103</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#aa84a724344a983832279fe13f047b52d">set_step</a>(<span class="keywordtype">int</span> <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#a992b375fc3254afe2e38f63bc29a43d4">step</a>)</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        {</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;            _step = <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#a992b375fc3254afe2e38f63bc29a43d4">step</a>;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        }</div><div class="line"><a name="l00111"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_window_1_1_dimension.xhtml#ad04b3b858cfdad2a7c64a6a014c3b773">  111</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#ad04b3b858cfdad2a7c64a6a014c3b773">set_end</a>(<span class="keywordtype">int</span> <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#aa9a8509af319b9e47f00c8fba23d368b">end</a>)</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        {</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;            _end = <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#aa9a8509af319b9e47f00c8fba23d368b">end</a>;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        }</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <span class="keyword">private</span>:</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;        <span class="keywordtype">int</span> _start; </div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        <span class="keywordtype">int</span> _end;   </div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        <span class="keywordtype">int</span> _step;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    };</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    constexpr <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml">Dimension</a> &amp;<a class="code" href="classarm__compute_1_1_window.xhtml#a677b385d536f4f81706f729e9b1c91da">operator[]</a>(<span class="keywordtype">size_t</span> dimension) <span class="keyword">const</span>;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div><div class="line"><a name="l00136"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_window.xhtml#ade63ce331b49eb66d330aab444e57ca9">  136</a></span>&#160;    constexpr <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml">Dimension</a> &amp;<a class="code" href="classarm__compute_1_1_window.xhtml#ade63ce331b49eb66d330aab444e57ca9">x</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        <span class="keywordflow">return</span> _dims.at(<a class="code" href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">Window::DimX</a>);</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    }</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div><div class="line"><a name="l00145"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_window.xhtml#aedd49c804f269c0e2c251c4efd44a275">  145</a></span>&#160;    constexpr <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml">Dimension</a> &amp;<a class="code" href="classarm__compute_1_1_window.xhtml#aedd49c804f269c0e2c251c4efd44a275">y</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        <span class="keywordflow">return</span> _dims.at(<a class="code" href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">Window::DimY</a>);</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    }</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;</div><div class="line"><a name="l00154"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_window.xhtml#ade6a04ff1f61b38e07ddb8ef741c996b">  154</a></span>&#160;    constexpr <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml">Dimension</a> &amp;<a class="code" href="classarm__compute_1_1_window.xhtml#ade6a04ff1f61b38e07ddb8ef741c996b">z</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        <span class="keywordflow">return</span> _dims.at(<a class="code" href="classarm__compute_1_1_window.xhtml#a893d17b56b9abc4423ce26e9a24ac5dc">Window::DimZ</a>);</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    }</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    <span class="keywordtype">void</span> <span class="keyword">set</span>(<span class="keywordtype">size_t</span> dimension, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml">Dimension</a> &amp;dim);</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_window.xhtml#a14470b4cb59140a1b6ff3b8f16c89ab6">use_tensor_dimensions</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">shape</a>, <span class="keywordtype">size_t</span> first_dimension = <a class="code" href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">Window::DimX</a>);</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_window.xhtml#ae688f3eb6c2673216d12d5490e1e88dc">shift</a>(<span class="keywordtype">size_t</span> dimension, <span class="keywordtype">int</span> shift_value);</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> <a class="code" href="classarm__compute_1_1_window.xhtml#a53623f00e49a6d4ddc4bc1bbde5e2eaa">shift_dimensions</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> shift_value) <span class="keyword">const</span>;</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_window.xhtml#a69496c7cb46a4101813d7456a6bd097b">adjust</a>(<span class="keywordtype">size_t</span> dimension, <span class="keywordtype">int</span> adjust_value, <span class="keywordtype">bool</span> is_at_start);</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_window.xhtml#a5e8e5ab06329702df09ab7eb07e9b84d">scale</a>(<span class="keywordtype">size_t</span> dimension, <span class="keywordtype">float</span> scale_value);</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_window.xhtml#a55ed4ad2395fd25ba847cbf6c54b85e4">set_dimension_step</a>(<span class="keywordtype">size_t</span> dimension, <span class="keywordtype">int</span> <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#a992b375fc3254afe2e38f63bc29a43d4">step</a>);</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_window.xhtml#a048aaadf42ac725952523dd9546e96b5">validate</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    constexpr <span class="keywordtype">size_t</span> <a class="code" href="classarm__compute_1_1_window.xhtml#a7b83048403721ed7e90d402e7cf3999b">num_iterations</a>(<span class="keywordtype">size_t</span> dimension) <span class="keyword">const</span>;</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> <a class="code" href="classarm__compute_1_1_window.xhtml#aa4ce41fc0f8c3203753a4fbee8211f5a">split_window</a>(<span class="keywordtype">size_t</span> dimension, <span class="keywordtype">size_t</span> <span class="keywordtype">id</span>, <span class="keywordtype">size_t</span> total) <span class="keyword">const</span>;</div><div class="line"><a name="l00246"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_window.xhtml#a3676505cf898acf69de5cd1724ae9330">  246</a></span>&#160;    <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> <a class="code" href="classarm__compute_1_1_window.xhtml#a3676505cf898acf69de5cd1724ae9330">first_slice_window_1D</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;        <span class="keywordflow">return</span> first_slice_window&lt;1&gt;();</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;    };</div><div class="line"><a name="l00254"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_window.xhtml#ade2fffd59eaeb4db72526174f504f209">  254</a></span>&#160;    <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> <a class="code" href="classarm__compute_1_1_window.xhtml#ade2fffd59eaeb4db72526174f504f209">first_slice_window_2D</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;        <span class="keywordflow">return</span> first_slice_window&lt;2&gt;();</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    };</div><div class="line"><a name="l00262"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_window.xhtml#a76441f1deaa44bcc1a3b402680ed646b">  262</a></span>&#160;    <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> <a class="code" href="classarm__compute_1_1_window.xhtml#a76441f1deaa44bcc1a3b402680ed646b">first_slice_window_3D</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;        <span class="keywordflow">return</span> first_slice_window&lt;3&gt;();</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;    };</div><div class="line"><a name="l00270"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_window.xhtml#ad1d50c623e1bcf24f3a32cf61ed6330f">  270</a></span>&#160;    <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> <a class="code" href="classarm__compute_1_1_window.xhtml#ad1d50c623e1bcf24f3a32cf61ed6330f">first_slice_window_4D</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;        <span class="keywordflow">return</span> first_slice_window&lt;4&gt;();</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;    };</div><div class="line"><a name="l00282"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_window.xhtml#a5cdf746368c9cfe7b07f1ebbb43810af">  282</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1_window.xhtml#a5cdf746368c9cfe7b07f1ebbb43810af">slide_window_slice_1D</a>(<a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;slice)<span class="keyword"> const</span></div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;        <span class="keywordflow">return</span> slide_window_slice&lt;1&gt;(slice);</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;    }</div><div class="line"><a name="l00294"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_window.xhtml#a25e4deca6ce9a7b258e791851eec3f05">  294</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1_window.xhtml#a25e4deca6ce9a7b258e791851eec3f05">slide_window_slice_2D</a>(<a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;slice)<span class="keyword"> const</span></div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;        <span class="keywordflow">return</span> slide_window_slice&lt;2&gt;(slice);</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;    }</div><div class="line"><a name="l00306"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_window.xhtml#a96febcbb5f48b24a562ae60353665654">  306</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1_window.xhtml#a96febcbb5f48b24a562ae60353665654">slide_window_slice_3D</a>(<a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;slice)<span class="keyword"> const</span></div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;        <span class="keywordflow">return</span> slide_window_slice&lt;3&gt;(slice);</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;    }</div><div class="line"><a name="l00318"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_window.xhtml#af17a73ce230dc8ff4df86c5730781783">  318</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1_window.xhtml#af17a73ce230dc8ff4df86c5730781783">slide_window_slice_4D</a>(<a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;slice)<span class="keyword"> const</span></div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;        <span class="keywordflow">return</span> slide_window_slice&lt;4&gt;(slice);</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;    }</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;    <span class="comment">/* Collapse the dimensions between @p first and @p last if possible.</span></div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;<span class="comment">     * A dimension is collapsable if it starts from 0 and matches the corresponding dimension in the full_window</span></div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;<span class="comment">     * @param[in]  full_window   Full window @p window has been created from.</span></div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;<span class="comment">     * @param[in]  first         Start dimension into which the following are collapsed.</span></div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;<span class="comment">     * @param[in]  last          End (exclusive) dimension to collapse.</span></div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;<span class="comment">     * @param[out] has_collapsed (Optional) Whether the window was collapsed.</span></div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;<span class="comment">     * @return Collapsed window.</span></div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;    <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> <a class="code" href="classarm__compute_1_1_window.xhtml#abf85e7e29bfbe8b7acf6ad7cb4fd01b9">collapse_if_possible</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;full_window, <span class="keywordtype">size_t</span> first, <span class="keywordtype">size_t</span> last, <span class="keywordtype">bool</span> *has_collapsed = <span class="keyword">nullptr</span>) <span class="keyword">const</span>;</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;    <span class="comment">/* Collapse the dimensions higher than @p first if possible.</span></div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;<span class="comment">     * A dimension is collapsable if it starts from 0 and matches the corresponding dimension in the full_window</span></div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;<span class="comment">     * @param[in]  full_window   Full window @p window has been created from.</span></div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;<span class="comment">     * @param[in]  first         Start dimension into which the following are collapsed.</span></div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;<span class="comment">     * @param[out] has_collapsed (Optional) Whether the window was collapsed.</span></div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;<span class="comment">     * @return Collapsed window.</span></div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00346"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_window.xhtml#a996935dcbb9d70bdcec3525ca0c03ba3">  346</a></span>&#160;    <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> <a class="code" href="classarm__compute_1_1_window.xhtml#a996935dcbb9d70bdcec3525ca0c03ba3">collapse_if_possible</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;full_window, <span class="keywordtype">size_t</span> first, <span class="keywordtype">bool</span> *has_collapsed = <span class="keyword">nullptr</span>)<span class="keyword"> const</span></div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_window.xhtml#abf85e7e29bfbe8b7acf6ad7cb4fd01b9">collapse_if_possible</a>(full_window, first, <a class="code" href="classarm__compute_1_1_dimensions.xhtml#a1b67d5b720119d50faa286c774579ecc">Coordinates::num_max_dimensions</a>, has_collapsed);</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;    }</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;    <span class="comment">/* Collapse the dimensions between @p first and @p last.</span></div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;<span class="comment">     * A dimension is collapsable if it starts from 0 and matches the corresponding dimension in the full_window</span></div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;<span class="comment">     * @param[in] full_window Full window @p window has been created from.</span></div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;<span class="comment">     * @param[in] first       Start dimension into which the following are collapsed.</span></div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;<span class="comment">     * @param[in] last        End (exclusive) dimension to collapse.</span></div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;<span class="comment">     * @return Collapsed window if successful.</span></div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;    <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> <a class="code" href="classarm__compute_1_1_window.xhtml#a3a941af3830a95de75deaba899c5f145">collapse</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;full_window, <span class="keywordtype">size_t</span> first, <span class="keywordtype">size_t</span> last = <a class="code" href="classarm__compute_1_1_dimensions.xhtml#a1b67d5b720119d50faa286c774579ecc">Coordinates::num_max_dimensions</a>) <span class="keyword">const</span>;</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;    <span class="comment">/* Don&#39;t advance in the dimension where @p shape is less equal to 1.</span></div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;<span class="comment">     * @param[in] shape A TensorShape.</span></div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;<span class="comment">     * @return Broadcast window.</span></div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;    <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> <a class="code" href="classarm__compute_1_1_window.xhtml#aa73cf57bfb6898839c5681df1db0a3d0">broadcast_if_dimension_le_one</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> &amp;shape) <span class="keyword">const</span>;</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;    <span class="comment">/* Don&#39;t advance in the dimension where shape of @p info is less equal to 1.</span></div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;<span class="comment">     * @param[in] info An ITensorInfo.</span></div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;<span class="comment">     * @return Broadcast window.</span></div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00377"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_window.xhtml#a516930a0dfd85fcfc5af68e0e60e9786">  377</a></span>&#160;    <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> <a class="code" href="classarm__compute_1_1_window.xhtml#a516930a0dfd85fcfc5af68e0e60e9786">broadcast_if_dimension_le_one</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a096668313a9a819d54a2e65ec21ff0cc">info</a>)<span class="keyword"> const</span></div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_window.xhtml#aa73cf57bfb6898839c5681df1db0a3d0">broadcast_if_dimension_le_one</a>(info.<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">tensor_shape</a>());</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;    }</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;    <span class="keyword">template</span> &lt;<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> window_dimension&gt;</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;    <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a>                 first_slice_window() <span class="keyword">const</span>;</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;    <span class="keyword">template</span> &lt;<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> window_dimension&gt;</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;    <span class="keywordtype">bool</span> slide_window_slice(<a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;slice) <span class="keyword">const</span>;</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;    std::array&lt;Dimension, Coordinates::num_max_dimensions&gt; _dims;</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;};</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;}</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_window_8inl.xhtml">Window.inl</a>&quot;</span></div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/*__ARM_COMPUTE_WINDOW_H__ */</span><span class="preprocessor"></span></div><div class="ttc" id="_window_8inl_xhtml"><div class="ttname"><a href="_window_8inl.xhtml">Window.inl</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_a5e8e5ab06329702df09ab7eb07e9b84d"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#a5e8e5ab06329702df09ab7eb07e9b84d">arm_compute::Window::scale</a></div><div class="ttdeci">void scale(size_t dimension, float scale_value)</div><div class="ttdoc">Scale the values of a given dimension by the given scale_value. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8inl_source.xhtml#l00134">Window.inl:134</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a45cde9abb508c62d67c3bb2b9bf566a5"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">arm_compute::test::validation::shape</a></div><div class="ttdeci">shape</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_convolution_8cpp_source.xhtml#l00133">Convolution.cpp:133</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_shape_xhtml"><div class="ttname"><a href="classarm__compute_1_1_tensor_shape.xhtml">arm_compute::TensorShape</a></div><div class="ttdoc">Shape of a tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_shape_8h_source.xhtml#l00039">TensorShape.h:39</a></div></div>
<div class="ttc" id="core_2_error_8h_xhtml"><div class="ttname"><a href="core_2_error_8h.xhtml">Error.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_1_1_dimension_xhtml_ad04b3b858cfdad2a7c64a6a014c3b773"><div class="ttname"><a href="classarm__compute_1_1_window_1_1_dimension.xhtml#ad04b3b858cfdad2a7c64a6a014c3b773">arm_compute::Window::Dimension::set_end</a></div><div class="ttdeci">void set_end(int end)</div><div class="ttdoc">Set the dimension&amp;#39;s end. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00111">Window.h:111</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_ae688f3eb6c2673216d12d5490e1e88dc"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#ae688f3eb6c2673216d12d5490e1e88dc">arm_compute::Window::shift</a></div><div class="ttdeci">void shift(size_t dimension, int shift_value)</div><div class="ttdoc">Shift the values of a given dimension by the given shift_value. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8inl_source.xhtml#l00112">Window.inl:112</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_a5cdf746368c9cfe7b07f1ebbb43810af"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#a5cdf746368c9cfe7b07f1ebbb43810af">arm_compute::Window::slide_window_slice_1D</a></div><div class="ttdeci">bool slide_window_slice_1D(Window &amp;slice) const </div><div class="ttdoc">Slide the passed 1D window slice. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00282">Window.h:282</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_a76441f1deaa44bcc1a3b402680ed646b"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#a76441f1deaa44bcc1a3b402680ed646b">arm_compute::Window::first_slice_window_3D</a></div><div class="ttdeci">Window first_slice_window_3D() const </div><div class="ttdoc">First 3D slice of the window. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00262">Window.h:262</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_a3a941af3830a95de75deaba899c5f145"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#a3a941af3830a95de75deaba899c5f145">arm_compute::Window::collapse</a></div><div class="ttdeci">Window collapse(const Window &amp;full_window, size_t first, size_t last=Coordinates::num_max_dimensions) const </div><div class="ttdef"><b>Definition:</b> <a href="_window_8inl_source.xhtml#l00090">Window.inl:90</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_ade2fffd59eaeb4db72526174f504f209"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#ade2fffd59eaeb4db72526174f504f209">arm_compute::Window::first_slice_window_2D</a></div><div class="ttdeci">Window first_slice_window_2D() const </div><div class="ttdoc">First 2D slice of the window. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00254">Window.h:254</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml">arm_compute::ITensorInfo</a></div><div class="ttdoc">Store the tensor&amp;#39;s metadata. </div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_info_8h_source.xhtml#l00040">ITensorInfo.h:40</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_1_1_dimension_xhtml"><div class="ttname"><a href="classarm__compute_1_1_window_1_1_dimension.xhtml">arm_compute::Window::Dimension</a></div><div class="ttdoc">Describe one of the image&amp;#39;s dimensions with a start, end and step. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00068">Window.h:68</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_1_1_dimension_xhtml_a27c3790df96e9523b0370e7e10c0d375"><div class="ttname"><a href="classarm__compute_1_1_window_1_1_dimension.xhtml#a27c3790df96e9523b0370e7e10c0d375">arm_compute::Window::Dimension::start</a></div><div class="ttdeci">constexpr int start() const </div><div class="ttdoc">Return the start of the dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00085">Window.h:85</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_aa73cf57bfb6898839c5681df1db0a3d0"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#aa73cf57bfb6898839c5681df1db0a3d0">arm_compute::Window::broadcast_if_dimension_le_one</a></div><div class="ttdeci">Window broadcast_if_dimension_le_one(const TensorShape &amp;shape) const </div><div class="ttdef"><b>Definition:</b> <a href="_window_8inl_source.xhtml#l00099">Window.inl:99</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_a14470b4cb59140a1b6ff3b8f16c89ab6"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#a14470b4cb59140a1b6ff3b8f16c89ab6">arm_compute::Window::use_tensor_dimensions</a></div><div class="ttdeci">void use_tensor_dimensions(const TensorShape &amp;shape, size_t first_dimension=Window::DimX)</div><div class="ttdoc">Use the tensor&amp;#39;s dimensions to fill the window dimensions. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8inl_source.xhtml#l00240">Window.inl:240</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a096668313a9a819d54a2e65ec21ff0cc"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a096668313a9a819d54a2e65ec21ff0cc">arm_compute::test::validation::info</a></div><div class="ttdeci">src info() -&gt; set_format(Format::S16)</div></div>
<div class="ttc" id="namespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">This file contains all available output stages for GEMMLowp on OpenCL. </div><div class="ttdef"><b>Definition:</b> <a href="00__introduction_8dox_source.xhtml#l00001">00_introduction.dox:1</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_1_1_dimension_xhtml_aa9a8509af319b9e47f00c8fba23d368b"><div class="ttname"><a href="classarm__compute_1_1_window_1_1_dimension.xhtml#aa9a8509af319b9e47f00c8fba23d368b">arm_compute::Window::Dimension::end</a></div><div class="ttdeci">constexpr int end() const </div><div class="ttdoc">Return the end of the dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00090">Window.h:90</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_a7b83048403721ed7e90d402e7cf3999b"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#a7b83048403721ed7e90d402e7cf3999b">arm_compute::Window::num_iterations</a></div><div class="ttdeci">constexpr size_t num_iterations(size_t dimension) const </div><div class="ttdoc">Return the number of iterations needed to iterate through a given dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8inl_source.xhtml#l00158">Window.inl:158</a></div></div>
<div class="ttc" id="arm__compute_2core_2_utils_8h_xhtml"><div class="ttname"><a href="arm__compute_2core_2_utils_8h.xhtml">Utils.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_1_1_dimension_xhtml_a7768b7b80a8b640dae911af38e3315a2"><div class="ttname"><a href="classarm__compute_1_1_window_1_1_dimension.xhtml#a7768b7b80a8b640dae911af38e3315a2">arm_compute::Window::Dimension::operator=</a></div><div class="ttdeci">Dimension &amp; operator=(const Dimension &amp;d)=default</div><div class="ttdoc">Default assignment operator to allow dimensions to be copied. </div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_aedd49c804f269c0e2c251c4efd44a275"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#aedd49c804f269c0e2c251c4efd44a275">arm_compute::Window::y</a></div><div class="ttdeci">constexpr const Dimension &amp; y() const </div><div class="ttdoc">Alias to access the second dimension of the window. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00145">Window.h:145</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_aa96e81276ee4f87ab386cd05a5539a7d"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">arm_compute::Window::DimX</a></div><div class="ttdeci">static constexpr size_t DimX</div><div class="ttdoc">Alias for dimension 0 also known as X dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00043">Window.h:43</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a7c66505457d00ece3aa4b34cab80757d"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">arm_compute::ITensorInfo::tensor_shape</a></div><div class="ttdeci">virtual const TensorShape &amp; tensor_shape() const =0</div><div class="ttdoc">Size for each dimension of the tensor. </div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_a677b385d536f4f81706f729e9b1c91da"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#a677b385d536f4f81706f729e9b1c91da">arm_compute::Window::operator[]</a></div><div class="ttdeci">constexpr const Dimension &amp; operator[](size_t dimension) const </div><div class="ttdoc">Read only access to a given dimension of the window. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8inl_source.xhtml#l00035">Window.inl:35</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_a3676505cf898acf69de5cd1724ae9330"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#a3676505cf898acf69de5cd1724ae9330">arm_compute::Window::first_slice_window_1D</a></div><div class="ttdeci">Window first_slice_window_1D() const </div><div class="ttdoc">First 1D slice of the window. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00246">Window.h:246</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_a516930a0dfd85fcfc5af68e0e60e9786"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#a516930a0dfd85fcfc5af68e0e60e9786">arm_compute::Window::broadcast_if_dimension_le_one</a></div><div class="ttdeci">Window broadcast_if_dimension_le_one(const ITensorInfo &amp;info) const </div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00377">Window.h:377</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_ab242a9d3683ac8f480f7944ff6f40534"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#ab242a9d3683ac8f480f7944ff6f40534">arm_compute::Window::Window</a></div><div class="ttdeci">constexpr Window()</div><div class="ttdoc">Default constructor: create a window containing a single element. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00050">Window.h:50</a></div></div>
<div class="ttc" id="_i_tensor_info_8h_xhtml"><div class="ttname"><a href="_i_tensor_info_8h.xhtml">ITensorInfo.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_abf85e7e29bfbe8b7acf6ad7cb4fd01b9"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#abf85e7e29bfbe8b7acf6ad7cb4fd01b9">arm_compute::Window::collapse_if_possible</a></div><div class="ttdeci">Window collapse_if_possible(const Window &amp;full_window, size_t first, size_t last, bool *has_collapsed=nullptr) const </div><div class="ttdef"><b>Definition:</b> <a href="_window_8inl_source.xhtml#l00047">Window.inl:47</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_1_1_dimension_xhtml_aa84a724344a983832279fe13f047b52d"><div class="ttname"><a href="classarm__compute_1_1_window_1_1_dimension.xhtml#aa84a724344a983832279fe13f047b52d">arm_compute::Window::Dimension::set_step</a></div><div class="ttdeci">void set_step(int step)</div><div class="ttdoc">Set the dimension&amp;#39;s step. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00103">Window.h:103</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_ad1d50c623e1bcf24f3a32cf61ed6330f"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#ad1d50c623e1bcf24f3a32cf61ed6330f">arm_compute::Window::first_slice_window_4D</a></div><div class="ttdeci">Window first_slice_window_4D() const </div><div class="ttdoc">First 4D slice of the window. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00270">Window.h:270</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_1_1_dimension_xhtml_a2c532d398a5661ff04367252701fa3d4"><div class="ttname"><a href="classarm__compute_1_1_window_1_1_dimension.xhtml#a2c532d398a5661ff04367252701fa3d4">arm_compute::Window::Dimension::Dimension</a></div><div class="ttdeci">constexpr Dimension(int start=0, int end=1, int step=1)</div><div class="ttdoc">Constructor, by default creates a dimension of 1. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00078">Window.h:78</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_a53623f00e49a6d4ddc4bc1bbde5e2eaa"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#a53623f00e49a6d4ddc4bc1bbde5e2eaa">arm_compute::Window::shift_dimensions</a></div><div class="ttdeci">Window shift_dimensions(unsigned int shift_value) const </div><div class="ttdoc">Shift down all the dimensions of a window. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8inl_source.xhtml#l00080">Window.inl:80</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_a048aaadf42ac725952523dd9546e96b5"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#a048aaadf42ac725952523dd9546e96b5">arm_compute::Window::validate</a></div><div class="ttdeci">void validate() const </div><div class="ttdoc">Will validate all the window&amp;#39;s dimensions&amp;#39; values when asserts are enabled. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8inl_source.xhtml#l00149">Window.inl:149</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_ad2d402364fa822b0b7775081291eeca9"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">arm_compute::Window::DimY</a></div><div class="ttdeci">static constexpr size_t DimY</div><div class="ttdoc">Alias for dimension 1 also known as Y dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00045">Window.h:45</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_a55ed4ad2395fd25ba847cbf6c54b85e4"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#a55ed4ad2395fd25ba847cbf6c54b85e4">arm_compute::Window::set_dimension_step</a></div><div class="ttdeci">void set_dimension_step(size_t dimension, int step)</div><div class="ttdoc">Set the step of a given dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8inl_source.xhtml#l00143">Window.inl:143</a></div></div>
<div class="ttc" id="_coordinates_8h_xhtml"><div class="ttname"><a href="_coordinates_8h.xhtml">Coordinates.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_a893d17b56b9abc4423ce26e9a24ac5dc"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#a893d17b56b9abc4423ce26e9a24ac5dc">arm_compute::Window::DimZ</a></div><div class="ttdeci">static constexpr size_t DimZ</div><div class="ttdoc">Alias for dimension 2 also known as Z dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00047">Window.h:47</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_1_1_dimension_xhtml_a992b375fc3254afe2e38f63bc29a43d4"><div class="ttname"><a href="classarm__compute_1_1_window_1_1_dimension.xhtml#a992b375fc3254afe2e38f63bc29a43d4">arm_compute::Window::Dimension::step</a></div><div class="ttdeci">constexpr int step() const </div><div class="ttdoc">Return the step of the dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00095">Window.h:95</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_a996935dcbb9d70bdcec3525ca0c03ba3"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#a996935dcbb9d70bdcec3525ca0c03ba3">arm_compute::Window::collapse_if_possible</a></div><div class="ttdeci">Window collapse_if_possible(const Window &amp;full_window, size_t first, bool *has_collapsed=nullptr) const </div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00346">Window.h:346</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_a25e4deca6ce9a7b258e791851eec3f05"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#a25e4deca6ce9a7b258e791851eec3f05">arm_compute::Window::slide_window_slice_2D</a></div><div class="ttdeci">bool slide_window_slice_2D(Window &amp;slice) const </div><div class="ttdoc">Slide the passed 2D window slice. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00294">Window.h:294</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_aa4ce41fc0f8c3203753a4fbee8211f5a"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#aa4ce41fc0f8c3203753a4fbee8211f5a">arm_compute::Window::split_window</a></div><div class="ttdeci">Window split_window(size_t dimension, size_t id, size_t total) const </div><div class="ttdoc">Split a window into a set of sub windows along a given dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8inl_source.xhtml#l00165">Window.inl:165</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_af17a73ce230dc8ff4df86c5730781783"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#af17a73ce230dc8ff4df86c5730781783">arm_compute::Window::slide_window_slice_4D</a></div><div class="ttdeci">bool slide_window_slice_4D(Window &amp;slice) const </div><div class="ttdoc">Slide the passed 4D window slice. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00318">Window.h:318</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_a69496c7cb46a4101813d7456a6bd097b"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#a69496c7cb46a4101813d7456a6bd097b">arm_compute::Window::adjust</a></div><div class="ttdeci">void adjust(size_t dimension, int adjust_value, bool is_at_start)</div><div class="ttdoc">Adjust the start or end of a given dimension by the given value. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8inl_source.xhtml#l00119">Window.inl:119</a></div></div>
<div class="ttc" id="classarm__compute_1_1_dimensions_xhtml_a1b67d5b720119d50faa286c774579ecc"><div class="ttname"><a href="classarm__compute_1_1_dimensions.xhtml#a1b67d5b720119d50faa286c774579ecc">arm_compute::Dimensions&lt; int &gt;::num_max_dimensions</a></div><div class="ttdeci">static constexpr size_t num_max_dimensions</div><div class="ttdoc">Number of dimensions the tensor has. </div><div class="ttdef"><b>Definition:</b> <a href="_dimensions_8h_source.xhtml#l00045">Dimensions.h:45</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_ade6a04ff1f61b38e07ddb8ef741c996b"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#ade6a04ff1f61b38e07ddb8ef741c996b">arm_compute::Window::z</a></div><div class="ttdeci">constexpr const Dimension &amp; z() const </div><div class="ttdoc">Alias to access the third dimension of the window. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00154">Window.h:154</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml">arm_compute::Window</a></div><div class="ttdoc">Describe a multidimensional execution window. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00039">Window.h:39</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a6743f0a130e8311e6f5b1a23df102472"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a6743f0a130e8311e6f5b1a23df102472">arm_compute::test::validation::src</a></div><div class="ttdeci">convolution configure &amp; src</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_convolution_8cpp_source.xhtml#l00147">Convolution.cpp:147</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_ade63ce331b49eb66d330aab444e57ca9"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#ade63ce331b49eb66d330aab444e57ca9">arm_compute::Window::x</a></div><div class="ttdeci">constexpr const Dimension &amp; x() const </div><div class="ttdoc">Alias to access the first dimension of the window. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00136">Window.h:136</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_a96febcbb5f48b24a562ae60353665654"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#a96febcbb5f48b24a562ae60353665654">arm_compute::Window::slide_window_slice_3D</a></div><div class="ttdeci">bool slide_window_slice_3D(Window &amp;slice) const </div><div class="ttdoc">Slide the passed 3D window slice. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00306">Window.h:306</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_214608ef36d61442cb2b0c1c4e9a7def.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="dir_1fb090f0c6070330bfaccc4236d3ca0d.xhtml">core</a></li><li class="navelem"><a class="el" href="_window_8h.xhtml">Window.h</a></li>
    <li class="footer">Generated on Fri Mar 2 2018 12:37:52 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
  </ul>
</div>
</body>
</html>
