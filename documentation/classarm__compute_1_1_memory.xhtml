<!-- HTML header for doxygen 1.8.9.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: Memory Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Compute Library
   &#160;<span id="projectnumber">17.12</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li><a href="classes.xhtml"><span>Data&#160;Structure&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Data&#160;Fields</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarm__compute_1_1_memory.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">Memory Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>CPU implementation of memory object.  
 <a href="classarm__compute_1_1_memory.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_memory_8h_source.xhtml">Memory.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a3820126b0751b4da40f870ee7a3e188c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_memory.xhtml#a3820126b0751b4da40f870ee7a3e188c">Memory</a> ()</td></tr>
<tr class="memdesc:a3820126b0751b4da40f870ee7a3e188c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default Constructor.  <a href="#a3820126b0751b4da40f870ee7a3e188c">More...</a><br /></td></tr>
<tr class="separator:a3820126b0751b4da40f870ee7a3e188c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5ea83035040247a67c526e22fd6261a1"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_memory.xhtml#a5ea83035040247a67c526e22fd6261a1">Memory</a> (std::shared_ptr&lt; uint8_t &gt; memory)</td></tr>
<tr class="memdesc:a5ea83035040247a67c526e22fd6261a1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default Constructor.  <a href="#a5ea83035040247a67c526e22fd6261a1">More...</a><br /></td></tr>
<tr class="separator:a5ea83035040247a67c526e22fd6261a1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a57bdfe5deffc114364aa2b3f7d66b435"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_memory.xhtml#a57bdfe5deffc114364aa2b3f7d66b435">Memory</a> (uint8_t *memory)</td></tr>
<tr class="memdesc:a57bdfe5deffc114364aa2b3f7d66b435"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default Constructor.  <a href="#a57bdfe5deffc114364aa2b3f7d66b435">More...</a><br /></td></tr>
<tr class="separator:a57bdfe5deffc114364aa2b3f7d66b435"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a190be71167f70cb0c6b7a53504c8c189"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_memory.xhtml#a190be71167f70cb0c6b7a53504c8c189">Memory</a> (const <a class="el" href="classarm__compute_1_1_memory.xhtml">Memory</a> &amp;)=default</td></tr>
<tr class="memdesc:a190be71167f70cb0c6b7a53504c8c189"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be copied.  <a href="#a190be71167f70cb0c6b7a53504c8c189">More...</a><br /></td></tr>
<tr class="separator:a190be71167f70cb0c6b7a53504c8c189"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5e46e80e8811b4deb258cd55124e55a8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_memory.xhtml">Memory</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_memory.xhtml#a5e46e80e8811b4deb258cd55124e55a8">operator=</a> (const <a class="el" href="classarm__compute_1_1_memory.xhtml">Memory</a> &amp;)=default</td></tr>
<tr class="memdesc:a5e46e80e8811b4deb258cd55124e55a8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be copy assigned.  <a href="#a5e46e80e8811b4deb258cd55124e55a8">More...</a><br /></td></tr>
<tr class="separator:a5e46e80e8811b4deb258cd55124e55a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1f3d413f358b1996d56d79979308f463"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_memory.xhtml#a1f3d413f358b1996d56d79979308f463">Memory</a> (<a class="el" href="classarm__compute_1_1_memory.xhtml">Memory</a> &amp;&amp;) noexcept=default</td></tr>
<tr class="memdesc:a1f3d413f358b1996d56d79979308f463"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be moved.  <a href="#a1f3d413f358b1996d56d79979308f463">More...</a><br /></td></tr>
<tr class="separator:a1f3d413f358b1996d56d79979308f463"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f1c7301ebe0c0bb6fb68b74863c1eaf"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_memory.xhtml">Memory</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_memory.xhtml#a5f1c7301ebe0c0bb6fb68b74863c1eaf">operator=</a> (<a class="el" href="classarm__compute_1_1_memory.xhtml">Memory</a> &amp;&amp;) noexcept=default</td></tr>
<tr class="memdesc:a5f1c7301ebe0c0bb6fb68b74863c1eaf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be move assigned.  <a href="#a5f1c7301ebe0c0bb6fb68b74863c1eaf">More...</a><br /></td></tr>
<tr class="separator:a5f1c7301ebe0c0bb6fb68b74863c1eaf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a13b56c9ce6c994acc73df9ed4d7a69a8"><td class="memItemLeft" align="right" valign="top">uint8_t *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_memory.xhtml#a13b56c9ce6c994acc73df9ed4d7a69a8">buffer</a> ()</td></tr>
<tr class="memdesc:a13b56c9ce6c994acc73df9ed4d7a69a8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the pointer to the allocated data.  <a href="#a13b56c9ce6c994acc73df9ed4d7a69a8">More...</a><br /></td></tr>
<tr class="separator:a13b56c9ce6c994acc73df9ed4d7a69a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5408122982db8d1e5bb8053c373f4094"><td class="memItemLeft" align="right" valign="top">uint8_t *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_memory.xhtml#a5408122982db8d1e5bb8053c373f4094">buffer</a> () const </td></tr>
<tr class="memdesc:a5408122982db8d1e5bb8053c373f4094"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the pointer to the allocated data.  <a href="#a5408122982db8d1e5bb8053c373f4094">More...</a><br /></td></tr>
<tr class="separator:a5408122982db8d1e5bb8053c373f4094"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e905ab09f21ca81d2618fb28d97ec8d"><td class="memItemLeft" align="right" valign="top">uint8_t **&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_memory.xhtml#a2e905ab09f21ca81d2618fb28d97ec8d">handle</a> ()</td></tr>
<tr class="memdesc:a2e905ab09f21ca81d2618fb28d97ec8d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Handle of internal memory.  <a href="#a2e905ab09f21ca81d2618fb28d97ec8d">More...</a><br /></td></tr>
<tr class="separator:a2e905ab09f21ca81d2618fb28d97ec8d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>CPU implementation of memory object. </p>

<p>Definition at line <a class="el" href="_memory_8h_source.xhtml#l00033">33</a> of file <a class="el" href="_memory_8h_source.xhtml">Memory.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a3820126b0751b4da40f870ee7a3e188c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_memory.xhtml">Memory</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Default Constructor. </p>

</div>
</div>
<a class="anchor" id="a5ea83035040247a67c526e22fd6261a1"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_memory.xhtml">Memory</a> </td>
          <td>(</td>
          <td class="paramtype">std::shared_ptr&lt; uint8_t &gt;&#160;</td>
          <td class="paramname"><em>memory</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Default Constructor. </p>
<dl class="section note"><dt>Note</dt><dd>Ownership of the memory is transferred to this object</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">memory</td><td><a class="el" href="classarm__compute_1_1_memory.xhtml" title="CPU implementation of memory object. ">Memory</a> to be imported </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a57bdfe5deffc114364aa2b3f7d66b435"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_memory.xhtml">Memory</a> </td>
          <td>(</td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>memory</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Default Constructor. </p>
<dl class="section note"><dt>Note</dt><dd>Ownership of the memory is not transferred to this object. Thus management (allocate/free) should be done by the client.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">memory</td><td><a class="el" href="classarm__compute_1_1_memory.xhtml" title="CPU implementation of memory object. ">Memory</a> to be imported </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a190be71167f70cb0c6b7a53504c8c189"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_memory.xhtml">Memory</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_memory.xhtml">Memory</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allow instances of this class to be copied. </p>

</div>
</div>
<a class="anchor" id="a1f3d413f358b1996d56d79979308f463"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_memory.xhtml">Memory</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_memory.xhtml">Memory</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allow instances of this class to be moved. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a13b56c9ce6c994acc73df9ed4d7a69a8"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t* buffer </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the pointer to the allocated data. </p>
<dl class="section return"><dt>Returns</dt><dd>Pointer to the allocated data </dd></dl>

</div>
</div>
<a class="anchor" id="a5408122982db8d1e5bb8053c373f4094"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t* buffer </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the pointer to the allocated data. </p>
<dl class="section return"><dt>Returns</dt><dd>Pointer to the allocated data </dd></dl>

</div>
</div>
<a class="anchor" id="a2e905ab09f21ca81d2618fb28d97ec8d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t** handle </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Handle of internal memory. </p>
<dl class="section return"><dt>Returns</dt><dd>Handle of memory </dd></dl>

</div>
</div>
<a class="anchor" id="a5e46e80e8811b4deb258cd55124e55a8"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_memory.xhtml">Memory</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_memory.xhtml">Memory</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allow instances of this class to be copy assigned. </p>

</div>
</div>
<a class="anchor" id="a5f1c7301ebe0c0bb6fb68b74863c1eaf"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_memory.xhtml">Memory</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_memory.xhtml">Memory</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allow instances of this class to be move assigned. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>arm_compute/runtime/<a class="el" href="_memory_8h_source.xhtml">Memory.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1_memory.xhtml">Memory</a></li>
    <li class="footer">Generated on Thu Dec 14 2017 23:48:36 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
  </ul>
</div>
</body>
</html>
