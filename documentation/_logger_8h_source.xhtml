<!-- HTML header for doxygen 1.8.9.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: arm_compute/core/utils/logging/Logger.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Compute Library
   &#160;<span id="projectnumber">17.12</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>Globals</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_logger_8h_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">Logger.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_logger_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2017 ARM Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifndef __ARM_COMPUTE_LOGGING_LOGGER_H__</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#define __ARM_COMPUTE_LOGGING_LOGGER_H__</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2core_2utils_2logging_2_helpers_8h.xhtml">arm_compute/core/utils/logging/Helpers.h</a>&quot;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_printer_8h.xhtml">arm_compute/core/utils/logging/IPrinter.h</a>&quot;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_log_msg_decorators_8h.xhtml">arm_compute/core/utils/logging/LogMsgDecorators.h</a>&quot;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2core_2utils_2logging_2_types_8h.xhtml">arm_compute/core/utils/logging/Types.h</a>&quot;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &lt;memory&gt;</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &lt;sstream&gt;</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;{</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keyword">namespace </span>logging</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;{</div><div class="line"><a name="l00042"></a><span class="lineno"><a class="line" href="classarm__compute_1_1logging_1_1_logger.xhtml">   42</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1logging_1_1_logger.xhtml">Logger</a></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;{</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <a class="code" href="classarm__compute_1_1logging_1_1_logger.xhtml#a421744d0932b362cbff55c07488c1356">Logger</a>(std::string <a class="code" href="classarm__compute_1_1logging_1_1_logger.xhtml#a37627d5d5bba7f4a8690c71c2ab3cb07">name</a>, <a class="code" href="namespacearm__compute_1_1logging.xhtml#a7a38c7496c92835c0d835ecb2f8135c1">LogLevel</a> <a class="code" href="classarm__compute_1_1logging_1_1_logger.xhtml#ae7de2e3a2078977fcf1ba9132e829c0e">log_level</a>, std::shared_ptr&lt;Printer&gt; printer);</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <a class="code" href="classarm__compute_1_1logging_1_1_logger.xhtml#a421744d0932b362cbff55c07488c1356">Logger</a>(std::string name, <a class="code" href="namespacearm__compute_1_1logging.xhtml#a7a38c7496c92835c0d835ecb2f8135c1">LogLevel</a> log_level, std::vector&lt;std::shared_ptr&lt;Printer&gt;&gt; printers = {});</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <a class="code" href="classarm__compute_1_1logging_1_1_logger.xhtml#a421744d0932b362cbff55c07488c1356">Logger</a>(std::string                              name,</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;           <a class="code" href="namespacearm__compute_1_1logging.xhtml#a7a38c7496c92835c0d835ecb2f8135c1">LogLevel</a>                                 log_level,</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;           std::vector&lt;std::shared_ptr&lt;Printer&gt;&gt;    printers,</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;           std::vector&lt;std::unique_ptr&lt;IDecorator&gt;&gt; decorators);</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <a class="code" href="classarm__compute_1_1logging_1_1_logger.xhtml#a421744d0932b362cbff55c07488c1356">Logger</a>(Logger &amp;&amp;) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <a class="code" href="classarm__compute_1_1logging_1_1_logger.xhtml#a421744d0932b362cbff55c07488c1356">Logger</a>(<span class="keyword">const</span> Logger &amp;) = <span class="keyword">delete</span>;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    Logger &amp;<a class="code" href="classarm__compute_1_1logging_1_1_logger.xhtml#ab18882a3175cd53305509643329a400a">operator=</a>(<span class="keyword">const</span> Logger &amp;) = <span class="keyword">delete</span>;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    Logger &amp;<a class="code" href="classarm__compute_1_1logging_1_1_logger.xhtml#ab18882a3175cd53305509643329a400a">operator=</a>(Logger &amp;&amp;) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1logging_1_1_logger.xhtml#a50292ee16d3334856912eb89cffbcf83">log</a>(<a class="code" href="namespacearm__compute_1_1logging.xhtml#a7a38c7496c92835c0d835ecb2f8135c1">LogLevel</a> log_level, <span class="keyword">const</span> std::string &amp;msg);</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span>... Ts&gt;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1logging_1_1_logger.xhtml#a50292ee16d3334856912eb89cffbcf83">log</a>(<a class="code" href="namespacearm__compute_1_1logging.xhtml#a7a38c7496c92835c0d835ecb2f8135c1">LogLevel</a> log_level, <span class="keyword">const</span> std::string &amp;fmt, Ts &amp;&amp;... <a class="code" href="namespacecaffe__data__extractor.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>);</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1logging_1_1_logger.xhtml#a41691397975dfad51e3a2f6b55aef749">set_log_level</a>(<a class="code" href="namespacearm__compute_1_1logging.xhtml#a7a38c7496c92835c0d835ecb2f8135c1">LogLevel</a> log_level);</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <a class="code" href="namespacearm__compute_1_1logging.xhtml#a7a38c7496c92835c0d835ecb2f8135c1">LogLevel</a> <a class="code" href="classarm__compute_1_1logging_1_1_logger.xhtml#ae7de2e3a2078977fcf1ba9132e829c0e">log_level</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    std::string <a class="code" href="classarm__compute_1_1logging_1_1_logger.xhtml#a37627d5d5bba7f4a8690c71c2ab3cb07">name</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1logging_1_1_logger.xhtml#a1a5b7c4d38c6f9fd1550c62441b69648">add_printer</a>(std::shared_ptr&lt;Printer&gt; printer);</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1logging_1_1_logger.xhtml#aca0de1bc76119d77831c0b1d58a20f4d">add_decorator</a>(std::unique_ptr&lt;IDecorator&gt; decorator);</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    <span class="keywordtype">void</span> set_default_decorators();</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <span class="keywordtype">bool</span> is_loggable(<a class="code" href="namespacearm__compute_1_1logging.xhtml#a7a38c7496c92835c0d835ecb2f8135c1">LogLevel</a> log_level);</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    <span class="keywordtype">void</span> decorate_log_msg(<a class="code" href="structarm__compute_1_1logging_1_1_log_msg.xhtml">LogMsg</a> &amp;msg);</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    std::string create_log_msg(<span class="keyword">const</span> std::string &amp;<a class="code" href="namespacecaffe__data__extractor.xhtml#a4b99ff73a8a869319570237b5c57ab03">str</a>, <a class="code" href="namespacearm__compute_1_1logging.xhtml#a7a38c7496c92835c0d835ecb2f8135c1">LogLevel</a> log_level);</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    <span class="keywordtype">void</span> print_all(<span class="keyword">const</span> std::string &amp;msg);</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    std::string                              _name;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    <a class="code" href="namespacearm__compute_1_1logging.xhtml#a7a38c7496c92835c0d835ecb2f8135c1">LogLevel</a>                                 _log_level;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    std::vector&lt;std::shared_ptr&lt;Printer&gt;&gt;    _printers;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    std::vector&lt;std::unique_ptr&lt;IDecorator&gt;&gt; _decorators;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;};</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span>... Ts&gt;</div><div class="line"><a name="l00162"></a><span class="lineno"><a class="line" href="classarm__compute_1_1logging_1_1_logger.xhtml#a2359a792f2d9a5c74d58017912a9fe24">  162</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1logging_1_1_logger.xhtml#a50292ee16d3334856912eb89cffbcf83">Logger::log</a>(<a class="code" href="namespacearm__compute_1_1logging.xhtml#a7a38c7496c92835c0d835ecb2f8135c1">LogLevel</a> <a class="code" href="classarm__compute_1_1logging_1_1_logger.xhtml#ae7de2e3a2078977fcf1ba9132e829c0e">log_level</a>, <span class="keyword">const</span> std::string &amp;fmt, Ts &amp;&amp;... <a class="code" href="namespacecaffe__data__extractor.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>)</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;{</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    <span class="comment">// Return if message shouldn&#39;t be logged</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    <span class="comment">// i.e. if log level does not match the logger&#39;s</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    <span class="keywordflow">if</span>(!is_loggable(log_level))</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    {</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    }</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    <span class="comment">// Print message to all printers</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    print_all(create_log_msg(<a class="code" href="namespacearm__compute_1_1logging.xhtml#a9dd6c32b3cab7dfb3e20c0800969e795">string_with_format</a>(fmt, <a class="code" href="namespacecaffe__data__extractor.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>...), log_level));</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;}</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;} <span class="comment">// namespace logging</span></div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;} <span class="comment">// namespace arm_compute</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* __ARM_COMPUTE_LOGGING_LOGGER_H__ */</span><span class="preprocessor"></span></div><div class="ttc" id="_log_msg_decorators_8h_xhtml"><div class="ttname"><a href="_log_msg_decorators_8h.xhtml">LogMsgDecorators.h</a></div></div>
<div class="ttc" id="arm__compute_2core_2utils_2logging_2_helpers_8h_xhtml"><div class="ttname"><a href="arm__compute_2core_2utils_2logging_2_helpers_8h.xhtml">Helpers.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1logging_1_1_logger_xhtml_aca0de1bc76119d77831c0b1d58a20f4d"><div class="ttname"><a href="classarm__compute_1_1logging_1_1_logger.xhtml#aca0de1bc76119d77831c0b1d58a20f4d">arm_compute::logging::Logger::add_decorator</a></div><div class="ttdeci">void add_decorator(std::unique_ptr&lt; IDecorator &gt; decorator)</div><div class="ttdoc">Adds a log message decorator to the logger. </div></div>
<div class="ttc" id="namespacearm__compute_1_1logging_xhtml_a9dd6c32b3cab7dfb3e20c0800969e795"><div class="ttname"><a href="namespacearm__compute_1_1logging.xhtml#a9dd6c32b3cab7dfb3e20c0800969e795">arm_compute::logging::string_with_format</a></div><div class="ttdeci">std::string string_with_format(const std::string &amp;fmt, Ts &amp;&amp;...args)</div><div class="ttdoc">Create a string given a format. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2utils_2logging_2_helpers_8h_source.xhtml#l00048">Helpers.h:48</a></div></div>
<div class="ttc" id="classarm__compute_1_1logging_1_1_logger_xhtml_ab18882a3175cd53305509643329a400a"><div class="ttname"><a href="classarm__compute_1_1logging_1_1_logger.xhtml#ab18882a3175cd53305509643329a400a">arm_compute::logging::Logger::operator=</a></div><div class="ttdeci">Logger &amp; operator=(const Logger &amp;)=delete</div><div class="ttdoc">Prevent instances of this class from being copied (As this class contains pointers) ...</div></div>
<div class="ttc" id="classarm__compute_1_1logging_1_1_logger_xhtml_a50292ee16d3334856912eb89cffbcf83"><div class="ttname"><a href="classarm__compute_1_1logging_1_1_logger.xhtml#a50292ee16d3334856912eb89cffbcf83">arm_compute::logging::Logger::log</a></div><div class="ttdeci">void log(LogLevel log_level, const std::string &amp;msg)</div><div class="ttdoc">Logs a message. </div></div>
<div class="ttc" id="namespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">This file contains all available output stages for GEMMLowp on OpenCL. </div><div class="ttdef"><b>Definition:</b> <a href="01__library_8dox_source.xhtml#l00001">01_library.dox:1</a></div></div>
<div class="ttc" id="classarm__compute_1_1logging_1_1_logger_xhtml_a41691397975dfad51e3a2f6b55aef749"><div class="ttname"><a href="classarm__compute_1_1logging_1_1_logger.xhtml#a41691397975dfad51e3a2f6b55aef749">arm_compute::logging::Logger::set_log_level</a></div><div class="ttdeci">void set_log_level(LogLevel log_level)</div><div class="ttdoc">Sets log level of the logger. </div></div>
<div class="ttc" id="structarm__compute_1_1logging_1_1_log_msg_xhtml"><div class="ttname"><a href="structarm__compute_1_1logging_1_1_log_msg.xhtml">arm_compute::logging::LogMsg</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2utils_2logging_2_types_8h_source.xhtml#l00042">Types.h:42</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1logging_xhtml_a7a38c7496c92835c0d835ecb2f8135c1"><div class="ttname"><a href="namespacearm__compute_1_1logging.xhtml#a7a38c7496c92835c0d835ecb2f8135c1">arm_compute::logging::LogLevel</a></div><div class="ttdeci">LogLevel</div><div class="ttdoc">Logging level enumeration. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2utils_2logging_2_types_8h_source.xhtml#l00034">Types.h:34</a></div></div>
<div class="ttc" id="classarm__compute_1_1logging_1_1_logger_xhtml"><div class="ttname"><a href="classarm__compute_1_1logging_1_1_logger.xhtml">arm_compute::logging::Logger</a></div><div class="ttdoc">Logger class. </div><div class="ttdef"><b>Definition:</b> <a href="_logger_8h_source.xhtml#l00042">Logger.h:42</a></div></div>
<div class="ttc" id="classarm__compute_1_1logging_1_1_logger_xhtml_a1a5b7c4d38c6f9fd1550c62441b69648"><div class="ttname"><a href="classarm__compute_1_1logging_1_1_logger.xhtml#a1a5b7c4d38c6f9fd1550c62441b69648">arm_compute::logging::Logger::add_printer</a></div><div class="ttdeci">void add_printer(std::shared_ptr&lt; Printer &gt; printer)</div><div class="ttdoc">Adds a printer to the logger. </div></div>
<div class="ttc" id="classarm__compute_1_1logging_1_1_logger_xhtml_a37627d5d5bba7f4a8690c71c2ab3cb07"><div class="ttname"><a href="classarm__compute_1_1logging_1_1_logger.xhtml#a37627d5d5bba7f4a8690c71c2ab3cb07">arm_compute::logging::Logger::name</a></div><div class="ttdeci">std::string name() const </div><div class="ttdoc">Returns logger&amp;#39;s name. </div></div>
<div class="ttc" id="classarm__compute_1_1logging_1_1_logger_xhtml_ae7de2e3a2078977fcf1ba9132e829c0e"><div class="ttname"><a href="classarm__compute_1_1logging_1_1_logger.xhtml#ae7de2e3a2078977fcf1ba9132e829c0e">arm_compute::logging::Logger::log_level</a></div><div class="ttdeci">LogLevel log_level() const </div><div class="ttdoc">Returns logger&amp;#39;s log level. </div></div>
<div class="ttc" id="arm__compute_2core_2utils_2logging_2_types_8h_xhtml"><div class="ttname"><a href="arm__compute_2core_2utils_2logging_2_types_8h.xhtml">Types.h</a></div></div>
<div class="ttc" id="namespacecaffe__data__extractor_xhtml_a4b99ff73a8a869319570237b5c57ab03"><div class="ttname"><a href="namespacecaffe__data__extractor.xhtml#a4b99ff73a8a869319570237b5c57ab03">caffe_data_extractor.str</a></div><div class="ttdeci">str</div><div class="ttdef"><b>Definition:</b> <a href="caffe__data__extractor_8py_source.xhtml#l00019">caffe_data_extractor.py:19</a></div></div>
<div class="ttc" id="classarm__compute_1_1logging_1_1_logger_xhtml_a421744d0932b362cbff55c07488c1356"><div class="ttname"><a href="classarm__compute_1_1logging_1_1_logger.xhtml#a421744d0932b362cbff55c07488c1356">arm_compute::logging::Logger::Logger</a></div><div class="ttdeci">Logger(std::string name, LogLevel log_level, std::shared_ptr&lt; Printer &gt; printer)</div><div class="ttdoc">Default Constructor. </div></div>
<div class="ttc" id="namespacecaffe__data__extractor_xhtml_a8187411843a6284ffb964ef3fb9fcab3"><div class="ttname"><a href="namespacecaffe__data__extractor.xhtml#a8187411843a6284ffb964ef3fb9fcab3">caffe_data_extractor.args</a></div><div class="ttdeci">args</div><div class="ttdef"><b>Definition:</b> <a href="caffe__data__extractor_8py_source.xhtml#l00021">caffe_data_extractor.py:21</a></div></div>
<div class="ttc" id="_i_printer_8h_xhtml"><div class="ttname"><a href="_i_printer_8h.xhtml">IPrinter.h</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_214608ef36d61442cb2b0c1c4e9a7def.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="dir_1fb090f0c6070330bfaccc4236d3ca0d.xhtml">core</a></li><li class="navelem"><a class="el" href="dir_7b0825b7536eda12b63e5d87347b1c7d.xhtml">utils</a></li><li class="navelem"><a class="el" href="dir_e575b855d3e83e3374bc2a6f9bf89d98.xhtml">logging</a></li><li class="navelem"><a class="el" href="_logger_8h.xhtml">Logger.h</a></li>
    <li class="footer">Generated on Thu Dec 14 2017 23:48:31 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
  </ul>
</div>
</body>
</html>
