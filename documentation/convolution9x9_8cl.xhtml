<!-- HTML header for doxygen 1.8.9.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/core/CL/cl_kernels/convolution9x9.cl File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Compute Library
   &#160;<span id="projectnumber">17.12</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>Globals</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('convolution9x9_8cl.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#define-members">Macros</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">convolution9x9.cl File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="helpers_8h_source.xhtml">helpers.h</a>&quot;</code><br />
</div>
<p><a href="convolution9x9_8cl_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:afb8c72ce35c4a1f4a2588d6573e54aa1"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="convolution9x9_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>&#160;&#160;&#160;short</td></tr>
<tr class="separator:afb8c72ce35c4a1f4a2588d6573e54aa1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a26babb0c719990ecbdf3abc6de920875"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="convolution9x9_8cl.xhtml#a26babb0c719990ecbdf3abc6de920875">COMPUTE_TYPE</a>&#160;&#160;&#160;int</td></tr>
<tr class="separator:a26babb0c719990ecbdf3abc6de920875"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac06f3e24d3fffd3c465d8b2a6e7c985e"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="convolution9x9_8cl.xhtml#ac06f3e24d3fffd3c465d8b2a6e7c985e">DATA_TYPE_OUT</a>&#160;&#160;&#160;uchar</td></tr>
<tr class="separator:ac06f3e24d3fffd3c465d8b2a6e7c985e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a4dee2ac27c2b32072c6f88998be20f77"><td class="memItemLeft" align="right" valign="top">short8&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="convolution9x9_8cl.xhtml#a4dee2ac27c2b32072c6f88998be20f77">convolution1x9</a> (__global const uchar *left_pixel, const short left1_coeff, const short left2_coeff, const short left3_coeff, const short left4_coeff, const short middle_coeff, const short right1_coeff, const short right2_coeff, const short right3_coeff, const short right4_coeff)</td></tr>
<tr class="memdesc:a4dee2ac27c2b32072c6f88998be20f77"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compute a 1D horizontal convolution of size 9 for 8 bytes assuming the input is made of 1 channel of 1 byte (i.e 8 pixels).  <a href="#a4dee2ac27c2b32072c6f88998be20f77">More...</a><br /></td></tr>
<tr class="separator:a4dee2ac27c2b32072c6f88998be20f77"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae8ed083f963d8f868df868c090062877"><td class="memItemLeft" align="right" valign="top">int8&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="convolution9x9_8cl.xhtml#ae8ed083f963d8f868df868c090062877">convolution9x1</a> (<a class="el" href="struct_image.xhtml">Image</a> *src, const short up1_coeff, const short up2_coeff, const short up3_coeff, const short up4_coeff, const short middle_coeff, const short down1_coeff, const short down2_coeff, const short down3_coeff, const short down4_coeff)</td></tr>
<tr class="memdesc:ae8ed083f963d8f868df868c090062877"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compute a 1D vertical convolution of size 9 for 8 bytes assuming the input is made of 1 channel of 1 byte (i.e 8 pixels).  <a href="#ae8ed083f963d8f868df868c090062877">More...</a><br /></td></tr>
<tr class="separator:ae8ed083f963d8f868df868c090062877"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3063e4ad24c780785326a1e0e776d5f5"><td class="memItemLeft" align="right" valign="top">short8&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="convolution9x9_8cl.xhtml#a3063e4ad24c780785326a1e0e776d5f5">convolution9x9</a> (<a class="el" href="struct_image.xhtml">Image</a> *src, const short mat0, const short mat1, const short mat2, const short mat3, const short mat4, const short mat5, const short mat6, const short mat7, const short mat8, const short mat9, const short mat10, const short mat11, const short mat12, const short mat13, const short mat14, const short mat15, const short mat16, const short mat17, const short mat18, const short mat19, const short mat20, const short mat21, const short mat22, const short mat23, const short mat24, const short mat25, const short mat26, const short mat27, const short mat28, const short mat29, const short mat30, const short mat31, const short mat32, const short mat33, const short mat34, const short mat35, const short mat36, const short mat37, const short mat38, const short mat39, const short mat40, const short mat41, const short mat42, const short mat43, const short mat44, const short mat45, const short mat46, const short mat47, const short mat48, const short mat49, const short mat50, const short mat51, const short mat52, const short mat53, const short mat54, const short mat55, const short mat56, const short mat57, const short mat58, const short mat59, const short mat60, const short mat61, const short mat62, const short mat63, const short mat64, const short mat65, const short mat66, const short mat67, const short mat68, const short mat69, const short mat70, const short mat71, const short mat72, const short mat73, const short mat74, const short mat75, const short mat76, const short mat77, const short mat78, const short mat79, const short mat80, uint scale)</td></tr>
<tr class="memdesc:a3063e4ad24c780785326a1e0e776d5f5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Apply a 9x9 convolution matrix to a single channel U8 input image and return the result.  <a href="#a3063e4ad24c780785326a1e0e776d5f5">More...</a><br /></td></tr>
<tr class="separator:a3063e4ad24c780785326a1e0e776d5f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab34cfd0b9595e0cc56a8d8f72167183b"><td class="memItemLeft" align="right" valign="top">__kernel void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="convolution9x9_8cl.xhtml#ab34cfd0b9595e0cc56a8d8f72167183b">convolution_separable1x9_static</a> (__global uchar *src_ptr, uint src_stride_x, uint src_step_x, uint src_stride_y, uint src_step_y, uint src_offset_first_element_in_bytes, __global uchar *dst_ptr, uint dst_stride_x, uint dst_step_x, uint dst_stride_y, uint dst_step_y, uint dst_offset_first_element_in_bytes)</td></tr>
<tr class="memdesc:ab34cfd0b9595e0cc56a8d8f72167183b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Apply a 1x9 static convolution matrix to a single channel U8 input image and output a single temporary channel image.  <a href="#ab34cfd0b9595e0cc56a8d8f72167183b">More...</a><br /></td></tr>
<tr class="separator:ab34cfd0b9595e0cc56a8d8f72167183b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae1941d028c5183ce9c021a8428dbc494"><td class="memItemLeft" align="right" valign="top">__kernel void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="convolution9x9_8cl.xhtml#ae1941d028c5183ce9c021a8428dbc494">convolution_separable9x1_static</a> (__global uchar *src_ptr, uint src_stride_x, uint src_step_x, uint src_stride_y, uint src_step_y, uint src_offset_first_element_in_bytes, __global uchar *dst_ptr, uint dst_stride_x, uint dst_step_x, uint dst_stride_y, uint dst_step_y, uint dst_offset_first_element_in_bytes)</td></tr>
<tr class="memdesc:ae1941d028c5183ce9c021a8428dbc494"><td class="mdescLeft">&#160;</td><td class="mdescRight">Apply a 9x1 static convolution matrix to a single channel U8 input image and output a single channel image.  <a href="#ae1941d028c5183ce9c021a8428dbc494">More...</a><br /></td></tr>
<tr class="separator:ae1941d028c5183ce9c021a8428dbc494"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa63067ca6091c7190c01fd037f5f2199"><td class="memItemLeft" align="right" valign="top">__kernel void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="convolution9x9_8cl.xhtml#aa63067ca6091c7190c01fd037f5f2199">convolution9x9_static</a> (__global uchar *src_ptr, uint src_stride_x, uint src_step_x, uint src_stride_y, uint src_step_y, uint src_offset_first_element_in_bytes, __global uchar *dst_ptr, uint dst_stride_x, uint dst_step_x, uint dst_stride_y, uint dst_step_y, uint dst_offset_first_element_in_bytes)</td></tr>
<tr class="memdesc:aa63067ca6091c7190c01fd037f5f2199"><td class="mdescLeft">&#160;</td><td class="mdescRight">Apply a static 9x9 convolution matrix to a single channel U8 input image and output a single channel image including borders.  <a href="#aa63067ca6091c7190c01fd037f5f2199">More...</a><br /></td></tr>
<tr class="separator:aa63067ca6091c7190c01fd037f5f2199"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Macro Definition Documentation</h2>
<a class="anchor" id="a26babb0c719990ecbdf3abc6de920875"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define COMPUTE_TYPE&#160;&#160;&#160;int</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="convolution9x9_8cl_source.xhtml#l00031">31</a> of file <a class="el" href="convolution9x9_8cl_source.xhtml">convolution9x9.cl</a>.</p>

<p>Referenced by <a class="el" href="convolution9x9_8cl_source.xhtml#l00054">convolution1x9()</a>, <a class="el" href="convolution9x9_8cl_source.xhtml#l00108">convolution9x1()</a>, and <a class="el" href="convolution9x9_8cl_source.xhtml#l00350">convolution_separable9x1_static()</a>.</p>

</div>
</div>
<a class="anchor" id="afb8c72ce35c4a1f4a2588d6573e54aa1"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define DATA_TYPE&#160;&#160;&#160;short</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="convolution9x9_8cl_source.xhtml#l00027">27</a> of file <a class="el" href="convolution9x9_8cl_source.xhtml">convolution9x9.cl</a>.</p>

<p>Referenced by <a class="el" href="convolution9x9_8cl_source.xhtml#l00054">convolution1x9()</a>, <a class="el" href="convolution9x9_8cl_source.xhtml#l00108">convolution9x1()</a>, <a class="el" href="convolution9x9_8cl_source.xhtml#l00256">convolution9x9()</a>, and <a class="el" href="convolution9x9_8cl_source.xhtml#l00317">convolution_separable1x9_static()</a>.</p>

</div>
</div>
<a class="anchor" id="ac06f3e24d3fffd3c465d8b2a6e7c985e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define DATA_TYPE_OUT&#160;&#160;&#160;uchar</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="convolution9x9_8cl_source.xhtml#l00035">35</a> of file <a class="el" href="convolution9x9_8cl_source.xhtml">convolution9x9.cl</a>.</p>

<p>Referenced by <a class="el" href="convolution9x9_8cl_source.xhtml#l00386">convolution9x9_static()</a>, and <a class="el" href="convolution9x9_8cl_source.xhtml#l00350">convolution_separable9x1_static()</a>.</p>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="a4dee2ac27c2b32072c6f88998be20f77"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">short8 convolution1x9 </td>
          <td>(</td>
          <td class="paramtype">__global const uchar *&#160;</td>
          <td class="paramname"><em>left_pixel</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>left1_coeff</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>left2_coeff</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>left3_coeff</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>left4_coeff</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>middle_coeff</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>right1_coeff</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>right2_coeff</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>right3_coeff</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>right4_coeff</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Compute a 1D horizontal convolution of size 9 for 8 bytes assuming the input is made of 1 channel of 1 byte (i.e 8 pixels). </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">left_pixel</td><td>Pointer to the left pixel </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">left1_coeff</td><td>Weight of the most left pixel </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">left2_coeff</td><td>Weight of the second left pixel </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">left3_coeff</td><td>Weight of the third left pixel </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">left4_coeff</td><td>Weight of the left pixel </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">middle_coeff</td><td>Weight of the middle pixel </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">right1_coeff</td><td>Weight of the right pixel </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">right2_coeff</td><td>Weight of the second right pixel </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">right3_coeff</td><td>Weight of the third right pixel </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">right4_coeff</td><td>Weight of the most right pixel</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>a short8 containing 8 convoluted values. </dd></dl>

<p>Definition at line <a class="el" href="convolution9x9_8cl_source.xhtml#l00054">54</a> of file <a class="el" href="convolution9x9_8cl_source.xhtml">convolution9x9.cl</a>.</p>

<p>References <a class="el" href="convolution9x9_8cl_source.xhtml#l00031">COMPUTE_TYPE</a>, <a class="el" href="fixed__point_8h_source.xhtml#l00098">CONVERT</a>, <a class="el" href="convolution9x9_8cl_source.xhtml#l00027">DATA_TYPE</a>, and <a class="el" href="fixed__point_8h_source.xhtml#l00093">VEC_DATA_TYPE</a>.</p>

<p>Referenced by <a class="el" href="convolution9x9_8cl_source.xhtml#l00256">convolution9x9()</a>, <a class="el" href="convolution__rectangle_8cl_source.xhtml#l00064">convolution_rectangle()</a>, and <a class="el" href="convolution9x9_8cl_source.xhtml#l00317">convolution_separable1x9_static()</a>.</p>
<div class="fragment"><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;{</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    uchar16 temp = vload16(0, left_pixel);</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <a class="code" href="fixed__point_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<a class="code" href="convolution9x9_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, 8)</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    left1 = <a class="code" href="fixed__point_8h.xhtml#aa8d95ba04fc73845abc6045952cae5be">CONVERT</a>(temp.s01234567, <a class="code" href="fixed__point_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<a class="code" href="convolution9x9_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, 8));</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <a class="code" href="fixed__point_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(DATA_TYPE, 8)</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    left2 = <a class="code" href="fixed__point_8h.xhtml#aa8d95ba04fc73845abc6045952cae5be">CONVERT</a>(temp.s12345678, <a class="code" href="fixed__point_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(DATA_TYPE, 8));</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <a class="code" href="fixed__point_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(DATA_TYPE, 8)</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    left3 = <a class="code" href="fixed__point_8h.xhtml#aa8d95ba04fc73845abc6045952cae5be">CONVERT</a>(temp.s23456789, <a class="code" href="fixed__point_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(DATA_TYPE, 8));</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <a class="code" href="fixed__point_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(DATA_TYPE, 8)</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    left4 = <a class="code" href="fixed__point_8h.xhtml#aa8d95ba04fc73845abc6045952cae5be">CONVERT</a>(temp.s3456789a, <a class="code" href="fixed__point_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(DATA_TYPE, 8));</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <a class="code" href="fixed__point_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(DATA_TYPE, 8)</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    middle = <a class="code" href="fixed__point_8h.xhtml#aa8d95ba04fc73845abc6045952cae5be">CONVERT</a>(temp.s456789ab, <a class="code" href="fixed__point_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(DATA_TYPE, 8));</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <a class="code" href="fixed__point_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(DATA_TYPE, 8)</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    right1 = <a class="code" href="fixed__point_8h.xhtml#aa8d95ba04fc73845abc6045952cae5be">CONVERT</a>(temp.s56789abc, <a class="code" href="fixed__point_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(DATA_TYPE, 8));</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <a class="code" href="fixed__point_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(DATA_TYPE, 8)</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    right2 = <a class="code" href="fixed__point_8h.xhtml#aa8d95ba04fc73845abc6045952cae5be">CONVERT</a>(temp.s6789abcd, <a class="code" href="fixed__point_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(DATA_TYPE, 8));</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <a class="code" href="fixed__point_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(DATA_TYPE, 8)</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    right3 = <a class="code" href="fixed__point_8h.xhtml#aa8d95ba04fc73845abc6045952cae5be">CONVERT</a>(temp.s789abcde, <a class="code" href="fixed__point_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(DATA_TYPE, 8));</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <a class="code" href="fixed__point_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(DATA_TYPE, 8)</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    right4 = <a class="code" href="fixed__point_8h.xhtml#aa8d95ba04fc73845abc6045952cae5be">CONVERT</a>(temp.s89abcdef, <a class="code" href="fixed__point_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(DATA_TYPE, 8));</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    return left1 * (<a class="code" href="fixed__point_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(DATA_TYPE, 8))left1_coeff + left2 * (<a class="code" href="fixed__point_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(DATA_TYPE, 8))left2_coeff + left3 * (<a class="code" href="fixed__point_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(DATA_TYPE, 8))left3_coeff + left4 * (<a class="code" href="fixed__point_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(DATA_TYPE,</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;            8))left4_coeff + middle * (<a class="code" href="fixed__point_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(DATA_TYPE, 8))middle_coeff + right1 * (<a class="code" href="fixed__point_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(DATA_TYPE, 8))right1_coeff + right2 * (<a class="code" href="fixed__point_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(DATA_TYPE,</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;                    8))right2_coeff + right3 * (<a class="code" href="fixed__point_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(DATA_TYPE, 8))right3_coeff + right4 * (<a class="code" href="fixed__point_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(DATA_TYPE, 8))right4_coeff;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;}</div><div class="ttc" id="fixed__point_8h_xhtml_aa8d95ba04fc73845abc6045952cae5be"><div class="ttname"><a href="fixed__point_8h.xhtml#aa8d95ba04fc73845abc6045952cae5be">CONVERT</a></div><div class="ttdeci">#define CONVERT(x, type)</div><div class="ttdef"><b>Definition:</b> <a href="fixed__point_8h_source.xhtml#l00098">fixed_point.h:98</a></div></div>
<div class="ttc" id="convolution9x9_8cl_xhtml_afb8c72ce35c4a1f4a2588d6573e54aa1"><div class="ttname"><a href="convolution9x9_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a></div><div class="ttdeci">#define DATA_TYPE</div><div class="ttdef"><b>Definition:</b> <a href="convolution9x9_8cl_source.xhtml#l00027">convolution9x9.cl:27</a></div></div>
<div class="ttc" id="fixed__point_8h_xhtml_a36f754c05b6fddf6df0d8d0a74f8159f"><div class="ttname"><a href="fixed__point_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a></div><div class="ttdeci">#define VEC_DATA_TYPE(type, size)</div><div class="ttdef"><b>Definition:</b> <a href="fixed__point_8h_source.xhtml#l00093">fixed_point.h:93</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ae8ed083f963d8f868df868c090062877"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int8 convolution9x1 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_image.xhtml">Image</a> *&#160;</td>
          <td class="paramname"><em>src</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>up1_coeff</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>up2_coeff</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>up3_coeff</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>up4_coeff</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>middle_coeff</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>down1_coeff</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>down2_coeff</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>down3_coeff</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>down4_coeff</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Compute a 1D vertical convolution of size 9 for 8 bytes assuming the input is made of 1 channel of 1 byte (i.e 8 pixels). </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">src</td><td>Pointer to source image. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">up1_coeff</td><td>Weight of the most up pixel </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">up2_coeff</td><td>Weight of the second up pixel </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">up3_coeff</td><td>Weight of the third up pixel </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">up4_coeff</td><td>Weight of the up pixel </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">middle_coeff</td><td>Weight of the middle pixel </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">down1_coeff</td><td>Weight of the down pixel </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">down2_coeff</td><td>Weight of the second down pixel </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">down3_coeff</td><td>Weight of the third down pixel </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">down4_coeff</td><td>Weight of the most down pixel</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>a short8 containing 8 convoluted values. </dd></dl>

<p>Definition at line <a class="el" href="convolution9x9_8cl_source.xhtml#l00108">108</a> of file <a class="el" href="convolution9x9_8cl_source.xhtml">convolution9x9.cl</a>.</p>

<p>References <a class="el" href="convolution9x9_8cl_source.xhtml#l00031">COMPUTE_TYPE</a>, <a class="el" href="fixed__point_8h_source.xhtml#l00098">CONVERT</a>, <a class="el" href="convolution9x9_8cl_source.xhtml#l00027">DATA_TYPE</a>, <a class="el" href="helpers_8h_source.xhtml#l00301">offset()</a>, and <a class="el" href="fixed__point_8h_source.xhtml#l00093">VEC_DATA_TYPE</a>.</p>

<p>Referenced by <a class="el" href="convolution9x9_8cl_source.xhtml#l00350">convolution_separable9x1_static()</a>.</p>
<div class="fragment"><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;{</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <a class="code" href="fixed__point_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<a class="code" href="convolution9x9_8cl.xhtml#a26babb0c719990ecbdf3abc6de920875">COMPUTE_TYPE</a>, 8)</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    val;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <a class="code" href="fixed__point_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<a class="code" href="convolution9x9_8cl.xhtml#a26babb0c719990ecbdf3abc6de920875">COMPUTE_TYPE</a>, 8)</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    out = (<a class="code" href="fixed__point_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(COMPUTE_TYPE, 8))0;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    val = <a class="code" href="fixed__point_8h.xhtml#aa8d95ba04fc73845abc6045952cae5be">CONVERT</a>(vload8(0, (__global <a class="code" href="convolution9x9_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)<a class="code" href="helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>(src, 0, -4)), <a class="code" href="fixed__point_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(COMPUTE_TYPE, 8));</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    out += val * (<a class="code" href="fixed__point_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(COMPUTE_TYPE, 8))up1_coeff;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    val = <a class="code" href="fixed__point_8h.xhtml#aa8d95ba04fc73845abc6045952cae5be">CONVERT</a>(vload8(0, (__global <a class="code" href="convolution9x9_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)<a class="code" href="helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>(src, 0, -3)), <a class="code" href="fixed__point_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(COMPUTE_TYPE, 8));</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    out += val * (<a class="code" href="fixed__point_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(COMPUTE_TYPE, 8))up2_coeff;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    val = <a class="code" href="fixed__point_8h.xhtml#aa8d95ba04fc73845abc6045952cae5be">CONVERT</a>(vload8(0, (__global <a class="code" href="convolution9x9_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)<a class="code" href="helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>(src, 0, -2)), <a class="code" href="fixed__point_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(COMPUTE_TYPE, 8));</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    out += val * (<a class="code" href="fixed__point_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(COMPUTE_TYPE, 8))up3_coeff;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    val = <a class="code" href="fixed__point_8h.xhtml#aa8d95ba04fc73845abc6045952cae5be">CONVERT</a>(vload8(0, (__global <a class="code" href="convolution9x9_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)<a class="code" href="helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>(src, 0, -1)), <a class="code" href="fixed__point_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(COMPUTE_TYPE, 8));</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    out += val * (<a class="code" href="fixed__point_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(COMPUTE_TYPE, 8))up4_coeff;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    val = <a class="code" href="fixed__point_8h.xhtml#aa8d95ba04fc73845abc6045952cae5be">CONVERT</a>(vload8(0, (__global <a class="code" href="convolution9x9_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)<a class="code" href="helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>(src, 0, 0)), <a class="code" href="fixed__point_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(COMPUTE_TYPE, 8));</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    out += val * (<a class="code" href="fixed__point_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(COMPUTE_TYPE, 8))middle_coeff;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    val = <a class="code" href="fixed__point_8h.xhtml#aa8d95ba04fc73845abc6045952cae5be">CONVERT</a>(vload8(0, (__global <a class="code" href="convolution9x9_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)<a class="code" href="helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>(src, 0, 1)), <a class="code" href="fixed__point_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(COMPUTE_TYPE, 8));</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    out += val * (<a class="code" href="fixed__point_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(COMPUTE_TYPE, 8))down1_coeff;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    val = <a class="code" href="fixed__point_8h.xhtml#aa8d95ba04fc73845abc6045952cae5be">CONVERT</a>(vload8(0, (__global <a class="code" href="convolution9x9_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)<a class="code" href="helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>(src, 0, 2)), <a class="code" href="fixed__point_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(COMPUTE_TYPE, 8));</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    out += val * (<a class="code" href="fixed__point_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(COMPUTE_TYPE, 8))down2_coeff;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    val = <a class="code" href="fixed__point_8h.xhtml#aa8d95ba04fc73845abc6045952cae5be">CONVERT</a>(vload8(0, (__global <a class="code" href="convolution9x9_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)<a class="code" href="helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>(src, 0, 3)), <a class="code" href="fixed__point_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(COMPUTE_TYPE, 8));</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    out += val * (<a class="code" href="fixed__point_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(COMPUTE_TYPE, 8))down3_coeff;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    val = <a class="code" href="fixed__point_8h.xhtml#aa8d95ba04fc73845abc6045952cae5be">CONVERT</a>(vload8(0, (__global <a class="code" href="convolution9x9_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)<a class="code" href="helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>(src, 0, 4)), <a class="code" href="fixed__point_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(COMPUTE_TYPE, 8));</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    out += val * (<a class="code" href="fixed__point_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(COMPUTE_TYPE, 8))down4_coeff;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    return out;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;}</div><div class="ttc" id="fixed__point_8h_xhtml_aa8d95ba04fc73845abc6045952cae5be"><div class="ttname"><a href="fixed__point_8h.xhtml#aa8d95ba04fc73845abc6045952cae5be">CONVERT</a></div><div class="ttdeci">#define CONVERT(x, type)</div><div class="ttdef"><b>Definition:</b> <a href="fixed__point_8h_source.xhtml#l00098">fixed_point.h:98</a></div></div>
<div class="ttc" id="helpers_8h_xhtml_a009469e4d9b8fce3b6d5e97d2077827d"><div class="ttname"><a href="helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a></div><div class="ttdeci">__global uchar * offset(const Image *img, int x, int y)</div><div class="ttdoc">Get the pointer position of a Image. </div><div class="ttdef"><b>Definition:</b> <a href="helpers_8h_source.xhtml#l00301">helpers.h:301</a></div></div>
<div class="ttc" id="convolution9x9_8cl_xhtml_afb8c72ce35c4a1f4a2588d6573e54aa1"><div class="ttname"><a href="convolution9x9_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a></div><div class="ttdeci">#define DATA_TYPE</div><div class="ttdef"><b>Definition:</b> <a href="convolution9x9_8cl_source.xhtml#l00027">convolution9x9.cl:27</a></div></div>
<div class="ttc" id="fixed__point_8h_xhtml_a36f754c05b6fddf6df0d8d0a74f8159f"><div class="ttname"><a href="fixed__point_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a></div><div class="ttdeci">#define VEC_DATA_TYPE(type, size)</div><div class="ttdef"><b>Definition:</b> <a href="fixed__point_8h_source.xhtml#l00093">fixed_point.h:93</a></div></div>
<div class="ttc" id="convolution9x9_8cl_xhtml_a26babb0c719990ecbdf3abc6de920875"><div class="ttname"><a href="convolution9x9_8cl.xhtml#a26babb0c719990ecbdf3abc6de920875">COMPUTE_TYPE</a></div><div class="ttdeci">#define COMPUTE_TYPE</div><div class="ttdef"><b>Definition:</b> <a href="convolution9x9_8cl_source.xhtml#l00031">convolution9x9.cl:31</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a3063e4ad24c780785326a1e0e776d5f5"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">short8 convolution9x9 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_image.xhtml">Image</a> *&#160;</td>
          <td class="paramname"><em>src</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat5</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat6</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat7</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat8</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat9</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat10</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat11</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat12</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat13</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat14</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat15</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat16</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat17</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat18</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat19</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat20</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat21</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat22</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat23</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat24</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat25</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat26</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat27</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat28</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat29</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat30</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat31</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat32</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat33</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat34</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat35</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat36</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat37</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat38</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat39</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat40</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat41</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat42</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat43</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat44</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat45</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat46</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat47</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat48</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat49</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat50</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat51</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat52</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat53</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat54</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat55</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat56</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat57</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat58</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat59</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat60</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat61</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat62</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat63</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat64</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat65</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat66</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat67</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat68</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat69</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat70</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat71</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat72</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat73</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat74</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat75</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat76</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat77</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat78</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat79</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>mat80</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>scale</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Apply a 9x9 convolution matrix to a single channel U8 input image and return the result. </p>
<p>Convolution matrix layout:<br />
[ mat0, mat1, mat2, mat3 , mat4, mat5, mat6, mat7, mat8 ]<br />
[ mat9, mat10, mat11, mat12, mat13, mat14, mat15, mat16, mat17 ]<br />
[ mat18, mat19, mat20, mat21, mat22, mat23, mat24, mat25, mat26 ]<br />
[ mat27, mat28, mat29, mat30, mat31, mat32, mat33, mat34, mat35 ]<br />
[ mat36, mat37, mat38, mat39, mat40, mat41, mat42, mat43, mat44 ]<br />
[ mat45, mat46, mat47, mat48, mat49, mat50, mat51, mat52, mat53 ]<br />
[ mat54, mat55, mat56, mat57, mat58, mat59, mat60, mat61, mat62 ] [ mat63, mat64, mat65, mat66, mat67, mat68, mat69, mat70, mat71 ] [ mat72, mat73, mat74, mat75, mat76, mat77, mat78, mat79, mat80 ]</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">src</td><td>A pointer to source <a class="el" href="struct_image.xhtml" title="Structure to hold Image information. ">Image</a> structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat0</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat1</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat2</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat3</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat4</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat5</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat6</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat0</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat7</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat8</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat9</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat10</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat11</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat12</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat13</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat14</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat15</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat16</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat10</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat17</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat18</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat19</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat20</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat21</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat22</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat23</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat24</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat25</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat26</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat27</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat28</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat29</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat30</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat31</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat32</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat33</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat34</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat35</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat36</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat37</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat38</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat39</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat40</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat41</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat42</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat43</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat44</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat45</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat46</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat47</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat48</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat49</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat50</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat51</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat52</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat53</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat54</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat55</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat56</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat57</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat58</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat59</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat60</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat61</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat62</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat63</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat64</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat65</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat66</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat67</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat68</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat69</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat70</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat71</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat72</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat73</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat74</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat75</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat76</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat76</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat77</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat78</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat79</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mat80</td><td>Coefficient from the convolution matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">scale</td><td>Convolution matrix scale (Sum of the coefficients, or 1 if the sum is 0) </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="convolution9x9_8cl_source.xhtml#l00256">256</a> of file <a class="el" href="convolution9x9_8cl_source.xhtml">convolution9x9.cl</a>.</p>

<p>References <a class="el" href="convolution9x9_8cl_source.xhtml#l00054">convolution1x9()</a>, <a class="el" href="convolution9x9_8cl_source.xhtml#l00027">DATA_TYPE</a>, <a class="el" href="helpers_8h_source.xhtml#l00301">offset()</a>, and <a class="el" href="fixed__point_8h_source.xhtml#l00093">VEC_DATA_TYPE</a>.</p>

<p>Referenced by <a class="el" href="convolution9x9_8cl_source.xhtml#l00386">convolution9x9_static()</a>.</p>
<div class="fragment"><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;{</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;    <a class="code" href="fixed__point_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<a class="code" href="convolution9x9_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, 8)</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;    pixels;</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    pixels = <a class="code" href="convolution9x9_8cl.xhtml#a4dee2ac27c2b32072c6f88998be20f77">convolution1x9</a>(<a class="code" href="helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>(src, -4, -4), mat0, mat1, mat2, mat3, mat4, mat5, mat6, mat7, mat8);</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;    pixels += <a class="code" href="convolution9x9_8cl.xhtml#a4dee2ac27c2b32072c6f88998be20f77">convolution1x9</a>(<a class="code" href="helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>(src, -4, -3), mat9, mat10, mat11, mat12, mat13, mat14, mat15, mat16, mat17);</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;    pixels += <a class="code" href="convolution9x9_8cl.xhtml#a4dee2ac27c2b32072c6f88998be20f77">convolution1x9</a>(<a class="code" href="helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>(src, -4, -2), mat18, mat19, mat20, mat21, mat22, mat23, mat24, mat25, mat26);</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;    pixels += <a class="code" href="convolution9x9_8cl.xhtml#a4dee2ac27c2b32072c6f88998be20f77">convolution1x9</a>(<a class="code" href="helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>(src, -4, -1), mat27, mat28, mat29, mat30, mat31, mat32, mat33, mat34, mat35);</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;    pixels += <a class="code" href="convolution9x9_8cl.xhtml#a4dee2ac27c2b32072c6f88998be20f77">convolution1x9</a>(<a class="code" href="helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>(src, -4, 0), mat36, mat37, mat38, mat39, mat40, mat41, mat42, mat43, mat44);</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    pixels += <a class="code" href="convolution9x9_8cl.xhtml#a4dee2ac27c2b32072c6f88998be20f77">convolution1x9</a>(<a class="code" href="helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>(src, -4, 1), mat45, mat46, mat47, mat48, mat49, mat50, mat51, mat52, mat53);</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;    pixels += <a class="code" href="convolution9x9_8cl.xhtml#a4dee2ac27c2b32072c6f88998be20f77">convolution1x9</a>(<a class="code" href="helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>(src, -4, 2), mat54, mat55, mat56, mat57, mat58, mat59, mat60, mat61, mat62);</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;    pixels += <a class="code" href="convolution9x9_8cl.xhtml#a4dee2ac27c2b32072c6f88998be20f77">convolution1x9</a>(<a class="code" href="helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>(src, -4, 3), mat63, mat64, mat65, mat66, mat67, mat68, mat69, mat70, mat71);</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;    pixels += <a class="code" href="convolution9x9_8cl.xhtml#a4dee2ac27c2b32072c6f88998be20f77">convolution1x9</a>(<a class="code" href="helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>(src, -4, 4), mat72, mat73, mat74, mat75, mat76, mat77, mat78, mat79, mat80);</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;    if(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acec6d8ad52a28972fa74e071c1a63b6a">scale</a> &gt; 0)</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;    {</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;        pixels /= (<a class="code" href="fixed__point_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<a class="code" href="convolution9x9_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, 8))scale;</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;    }</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;    <span class="keywordflow">return</span> convert_short8_sat(pixels);</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;}</div><div class="ttc" id="convolution9x9_8cl_xhtml_a4dee2ac27c2b32072c6f88998be20f77"><div class="ttname"><a href="convolution9x9_8cl.xhtml#a4dee2ac27c2b32072c6f88998be20f77">convolution1x9</a></div><div class="ttdeci">short8 convolution1x9(__global const uchar *left_pixel, const short left1_coeff, const short left2_coeff, const short left3_coeff, const short left4_coeff, const short middle_coeff, const short right1_coeff, const short right2_coeff, const short right3_coeff, const short right4_coeff)</div><div class="ttdoc">Compute a 1D horizontal convolution of size 9 for 8 bytes assuming the input is made of 1 channel of ...</div><div class="ttdef"><b>Definition:</b> <a href="convolution9x9_8cl_source.xhtml#l00054">convolution9x9.cl:54</a></div></div>
<div class="ttc" id="helpers_8h_xhtml_a009469e4d9b8fce3b6d5e97d2077827d"><div class="ttname"><a href="helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a></div><div class="ttdeci">__global uchar * offset(const Image *img, int x, int y)</div><div class="ttdoc">Get the pointer position of a Image. </div><div class="ttdef"><b>Definition:</b> <a href="helpers_8h_source.xhtml#l00301">helpers.h:301</a></div></div>
<div class="ttc" id="convolution9x9_8cl_xhtml_afb8c72ce35c4a1f4a2588d6573e54aa1"><div class="ttname"><a href="convolution9x9_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a></div><div class="ttdeci">#define DATA_TYPE</div><div class="ttdef"><b>Definition:</b> <a href="convolution9x9_8cl_source.xhtml#l00027">convolution9x9.cl:27</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_acec6d8ad52a28972fa74e071c1a63b6a"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#acec6d8ad52a28972fa74e071c1a63b6a">arm_compute::test::validation::scale</a></div><div class="ttdeci">scale</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_o_n_2_pixel_wise_multiplication_8cpp_source.xhtml#l00176">PixelWiseMultiplication.cpp:176</a></div></div>
<div class="ttc" id="fixed__point_8h_xhtml_a36f754c05b6fddf6df0d8d0a74f8159f"><div class="ttname"><a href="fixed__point_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a></div><div class="ttdeci">#define VEC_DATA_TYPE(type, size)</div><div class="ttdef"><b>Definition:</b> <a href="fixed__point_8h_source.xhtml#l00093">fixed_point.h:93</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="aa63067ca6091c7190c01fd037f5f2199"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__kernel void convolution9x9_static </td>
          <td>(</td>
          <td class="paramtype">__global uchar *&#160;</td>
          <td class="paramname"><em>src_ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>src_stride_x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>src_step_x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>src_stride_y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>src_step_y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>src_offset_first_element_in_bytes</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">__global uchar *&#160;</td>
          <td class="paramname"><em>dst_ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>dst_stride_x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>dst_step_x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>dst_stride_y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>dst_step_y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>dst_offset_first_element_in_bytes</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Apply a static 9x9 convolution matrix to a single channel U8 input image and output a single channel image including borders. </p>
<dl class="section attention"><dt>Attention</dt><dd>The matrix coefficients(MAT0, MAT1, ... MAT80, SCALE), DATA_TYPE_OUT need to be passed at compile time:<br />
e.g. -DMAT0=0 -DMAT1=1, ... -DMAT80=80, -DSCALE=6, -DDATA_TYPE_OUT=int</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">src_ptr</td><td>Pointer to the source image. Supported data types: U8 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">src_stride_x</td><td>Stride of the source image in X dimension (in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">src_step_x</td><td>src_stride_x * number of elements along X processed per workitem(in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">src_stride_y</td><td>Stride of the source image in Y dimension (in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">src_step_y</td><td>src_stride_y * number of elements along Y processed per workitem(in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">src_offset_first_element_in_bytes</td><td>The offset of the first element in the source image </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">dst_ptr</td><td>Pointer to the destination image. Supported data types: U8, S16 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dst_stride_x</td><td>Stride of the destination image in X dimension (in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dst_step_x</td><td>dst_stride_x * number of elements along X processed per workitem(in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dst_stride_y</td><td>Stride of the destination image in Y dimension (in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dst_step_y</td><td>dst_stride_y * number of elements along Y processed per workitem(in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dst_offset_first_element_in_bytes</td><td>The offset of the first element in the destination image </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="convolution9x9_8cl_source.xhtml#l00386">386</a> of file <a class="el" href="convolution9x9_8cl_source.xhtml">convolution9x9.cl</a>.</p>

<p>References <a class="el" href="direct__convolution1x1_8cl_source.xhtml#l00040">CONVERT_SAT</a>, <a class="el" href="helpers_8h_source.xhtml#l00102">CONVERT_TO_IMAGE_STRUCT</a>, <a class="el" href="convolution9x9_8cl_source.xhtml#l00256">convolution9x9()</a>, <a class="el" href="convolution9x9_8cl_source.xhtml#l00035">DATA_TYPE_OUT</a>, <a class="el" href="validation_2_n_e_o_n_2_g_e_m_m_8cpp_source.xhtml#l00118">arm_compute::test::validation::dst</a>, <a class="el" href="helpers_8h_source.xhtml#l00142">Image::ptr</a>, and <a class="el" href="fixed__point_8h_source.xhtml#l00093">VEC_DATA_TYPE</a>.</p>
<div class="fragment"><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;{</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;    <a class="code" href="struct_image.xhtml">Image</a> src = <a class="code" href="helpers_8h.xhtml#aebe814363556c244be043b13e7969197">CONVERT_TO_IMAGE_STRUCT</a>(src);</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;    <a class="code" href="struct_image.xhtml">Image</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a> = <a class="code" href="helpers_8h.xhtml#aebe814363556c244be043b13e7969197">CONVERT_TO_IMAGE_STRUCT</a>(dst);</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;    short8 pixels = <a class="code" href="convolution9x9_8cl.xhtml#a3063e4ad24c780785326a1e0e776d5f5">convolution9x9</a>(&amp;src,</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;                                   MAT0, MAT1, MAT2, MAT3, MAT4, MAT5, MAT6, MAT7, MAT8, MAT9, MAT10, MAT11, MAT12, MAT13,</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;                                   MAT14, MAT15, MAT16, MAT17, MAT18, MAT19, MAT20, MAT21, MAT22, MAT23, MAT24, MAT25,</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;                                   MAT26, MAT27, MAT28, MAT29, MAT30, MAT31, MAT32, MAT33, MAT34, MAT35, MAT36, MAT37,</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;                                   MAT38, MAT39, MAT40, MAT41, MAT42, MAT43, MAT44, MAT45, MAT46, MAT47, MAT48, MAT49,</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;                                   MAT50, MAT51, MAT52, MAT53, MAT54, MAT55, MAT56, MAT57, MAT58, MAT59, MAT60, MAT61,</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;                                   MAT62, MAT63, MAT64, MAT65, MAT66, MAT67, MAT68, MAT69, MAT70, MAT71, MAT72, MAT73,</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;                                   MAT74, MAT75, MAT76, MAT77, MAT78, MAT79, MAT80, SCALE);</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;    <span class="comment">// Store the result as is in dst</span></div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;    vstore8(<a class="code" href="direct__convolution1x1_8cl.xhtml#a1f15728672380ade7a238f5e783d54d2">CONVERT_SAT</a>(pixels, <a class="code" href="fixed__point_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<a class="code" href="convolution9x9_8cl.xhtml#ac06f3e24d3fffd3c465d8b2a6e7c985e">DATA_TYPE_OUT</a>, 8)), 0, (__global <a class="code" href="convolution9x9_8cl.xhtml#ac06f3e24d3fffd3c465d8b2a6e7c985e">DATA_TYPE_OUT</a> *)dst.<a class="code" href="struct_image.xhtml#acf52c23cbd7424606c10a606524e3e32">ptr</a>);</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;}</div><div class="ttc" id="convolution9x9_8cl_xhtml_ac06f3e24d3fffd3c465d8b2a6e7c985e"><div class="ttname"><a href="convolution9x9_8cl.xhtml#ac06f3e24d3fffd3c465d8b2a6e7c985e">DATA_TYPE_OUT</a></div><div class="ttdeci">#define DATA_TYPE_OUT</div><div class="ttdef"><b>Definition:</b> <a href="convolution9x9_8cl_source.xhtml#l00035">convolution9x9.cl:35</a></div></div>
<div class="ttc" id="direct__convolution1x1_8cl_xhtml_a1f15728672380ade7a238f5e783d54d2"><div class="ttname"><a href="direct__convolution1x1_8cl.xhtml#a1f15728672380ade7a238f5e783d54d2">CONVERT_SAT</a></div><div class="ttdeci">#define CONVERT_SAT(a, b)</div><div class="ttdef"><b>Definition:</b> <a href="direct__convolution1x1_8cl_source.xhtml#l00040">direct_convolution1x1.cl:40</a></div></div>
<div class="ttc" id="convolution9x9_8cl_xhtml_a3063e4ad24c780785326a1e0e776d5f5"><div class="ttname"><a href="convolution9x9_8cl.xhtml#a3063e4ad24c780785326a1e0e776d5f5">convolution9x9</a></div><div class="ttdeci">short8 convolution9x9(Image *src, const short mat0, const short mat1, const short mat2, const short mat3, const short mat4, const short mat5, const short mat6, const short mat7, const short mat8, const short mat9, const short mat10, const short mat11, const short mat12, const short mat13, const short mat14, const short mat15, const short mat16, const short mat17, const short mat18, const short mat19, const short mat20, const short mat21, const short mat22, const short mat23, const short mat24, const short mat25, const short mat26, const short mat27, const short mat28, const short mat29, const short mat30, const short mat31, const short mat32, const short mat33, const short mat34, const short mat35, const short mat36, const short mat37, const short mat38, const short mat39, const short mat40, const short mat41, const short mat42, const short mat43, const short mat44, const short mat45, const short mat46, const short mat47, const short mat48, const short mat49, const short mat50, const short mat51, const short mat52, const short mat53, const short mat54, const short mat55, const short mat56, const short mat57, const short mat58, const short mat59, const short mat60, const short mat61, const short mat62, const short mat63, const short mat64, const short mat65, const short mat66, const short mat67, const short mat68, const short mat69, const short mat70, const short mat71, const short mat72, const short mat73, const short mat74, const short mat75, const short mat76, const short mat77, const short mat78, const short mat79, const short mat80, uint scale)</div><div class="ttdoc">Apply a 9x9 convolution matrix to a single channel U8 input image and return the result. </div><div class="ttdef"><b>Definition:</b> <a href="convolution9x9_8cl_source.xhtml#l00256">convolution9x9.cl:256</a></div></div>
<div class="ttc" id="helpers_8h_xhtml_aebe814363556c244be043b13e7969197"><div class="ttname"><a href="helpers_8h.xhtml#aebe814363556c244be043b13e7969197">CONVERT_TO_IMAGE_STRUCT</a></div><div class="ttdeci">#define CONVERT_TO_IMAGE_STRUCT(name)</div><div class="ttdef"><b>Definition:</b> <a href="helpers_8h_source.xhtml#l00102">helpers.h:102</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_adbf67dcee294e673cf796f1ed8aeb6a4"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">arm_compute::test::validation::dst</a></div><div class="ttdeci">Tensor dst</div><div class="ttdef"><b>Definition:</b> <a href="validation_2_n_e_o_n_2_g_e_m_m_8cpp_source.xhtml#l00118">GEMM.cpp:118</a></div></div>
<div class="ttc" id="struct_image_xhtml"><div class="ttname"><a href="struct_image.xhtml">Image</a></div><div class="ttdoc">Structure to hold Image information. </div><div class="ttdef"><b>Definition:</b> <a href="helpers_8h_source.xhtml#l00140">helpers.h:140</a></div></div>
<div class="ttc" id="struct_image_xhtml_acf52c23cbd7424606c10a606524e3e32"><div class="ttname"><a href="struct_image.xhtml#acf52c23cbd7424606c10a606524e3e32">Image::ptr</a></div><div class="ttdeci">__global uchar * ptr</div><div class="ttdoc">Pointer to the starting postion of the buffer. </div><div class="ttdef"><b>Definition:</b> <a href="helpers_8h_source.xhtml#l00142">helpers.h:142</a></div></div>
<div class="ttc" id="fixed__point_8h_xhtml_a36f754c05b6fddf6df0d8d0a74f8159f"><div class="ttname"><a href="fixed__point_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a></div><div class="ttdeci">#define VEC_DATA_TYPE(type, size)</div><div class="ttdef"><b>Definition:</b> <a href="fixed__point_8h_source.xhtml#l00093">fixed_point.h:93</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ab34cfd0b9595e0cc56a8d8f72167183b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__kernel void convolution_separable1x9_static </td>
          <td>(</td>
          <td class="paramtype">__global uchar *&#160;</td>
          <td class="paramname"><em>src_ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>src_stride_x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>src_step_x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>src_stride_y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>src_step_y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>src_offset_first_element_in_bytes</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">__global uchar *&#160;</td>
          <td class="paramname"><em>dst_ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>dst_stride_x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>dst_step_x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>dst_stride_y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>dst_step_y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>dst_offset_first_element_in_bytes</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Apply a 1x9 static convolution matrix to a single channel U8 input image and output a single temporary channel image. </p>
<dl class="section attention"><dt>Attention</dt><dd>The matrix coefficients (MAT0, MAT1, MAT2, MAT3, MAT4, MAT5, MAT6, MAT7, MAT8) and DATA_TYPE need to be passed at compile time:<br />
e.g. -DMAT0=7 -DMAT1=8, ... -DMAT8=8, -DCOMPUTE_TYPE=int</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">src_ptr</td><td>Pointer to the source image. Supported data types: U8 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">src_stride_x</td><td>Stride of the source image in X dimension (in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">src_step_x</td><td>src_stride_x * number of elements along X processed per workitem(in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">src_stride_y</td><td>Stride of the source image in Y dimension (in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">src_step_y</td><td>src_stride_y * number of elements along Y processed per workitem(in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">src_offset_first_element_in_bytes</td><td>The offset of the first element in the source image </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">dst_ptr</td><td>Pointer to the destination image. Supported data types: U16, S16, S32 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dst_stride_x</td><td>Stride of the destination image in X dimension (in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dst_step_x</td><td>dst_stride_x * number of elements along X processed per workitem(in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dst_stride_y</td><td>Stride of the destination image in Y dimension (in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dst_step_y</td><td>dst_stride_y * number of elements along Y processed per workitem(in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dst_offset_first_element_in_bytes</td><td>The offset of the first element in the destination image </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="convolution9x9_8cl_source.xhtml#l00317">317</a> of file <a class="el" href="convolution9x9_8cl_source.xhtml">convolution9x9.cl</a>.</p>

<p>References <a class="el" href="helpers_8h_source.xhtml#l00102">CONVERT_TO_IMAGE_STRUCT</a>, <a class="el" href="convolution9x9_8cl_source.xhtml#l00054">convolution1x9()</a>, <a class="el" href="convolution9x9_8cl_source.xhtml#l00027">DATA_TYPE</a>, <a class="el" href="validation_2_n_e_o_n_2_g_e_m_m_8cpp_source.xhtml#l00118">arm_compute::test::validation::dst</a>, <a class="el" href="helpers_8h_source.xhtml#l00301">offset()</a>, <a class="el" href="helpers_8h_source.xhtml#l00142">Image::ptr</a>, and <a class="el" href="fixed__point_8h_source.xhtml#l00093">VEC_DATA_TYPE</a>.</p>
<div class="fragment"><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;{</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;    <a class="code" href="struct_image.xhtml">Image</a> src = <a class="code" href="helpers_8h.xhtml#aebe814363556c244be043b13e7969197">CONVERT_TO_IMAGE_STRUCT</a>(src);</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;    <a class="code" href="struct_image.xhtml">Image</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a> = <a class="code" href="helpers_8h.xhtml#aebe814363556c244be043b13e7969197">CONVERT_TO_IMAGE_STRUCT</a>(dst);</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;    <span class="comment">// Output pixels</span></div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;    <a class="code" href="fixed__point_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<a class="code" href="convolution9x9_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a>, 8)</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;    pixels = <a class="code" href="convolution9x9_8cl.xhtml#a4dee2ac27c2b32072c6f88998be20f77">convolution1x9</a>(<a class="code" href="helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>(&amp;src, -4, 0), MAT0, MAT1, MAT2, MAT3, MAT4, MAT5, MAT6, MAT7, MAT8);</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;    <span class="comment">// Store result in dst</span></div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;    vstore8(pixels, 0, (__global <a class="code" href="convolution9x9_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a> *)dst.ptr);</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;}</div><div class="ttc" id="convolution9x9_8cl_xhtml_a4dee2ac27c2b32072c6f88998be20f77"><div class="ttname"><a href="convolution9x9_8cl.xhtml#a4dee2ac27c2b32072c6f88998be20f77">convolution1x9</a></div><div class="ttdeci">short8 convolution1x9(__global const uchar *left_pixel, const short left1_coeff, const short left2_coeff, const short left3_coeff, const short left4_coeff, const short middle_coeff, const short right1_coeff, const short right2_coeff, const short right3_coeff, const short right4_coeff)</div><div class="ttdoc">Compute a 1D horizontal convolution of size 9 for 8 bytes assuming the input is made of 1 channel of ...</div><div class="ttdef"><b>Definition:</b> <a href="convolution9x9_8cl_source.xhtml#l00054">convolution9x9.cl:54</a></div></div>
<div class="ttc" id="helpers_8h_xhtml_a009469e4d9b8fce3b6d5e97d2077827d"><div class="ttname"><a href="helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a></div><div class="ttdeci">__global uchar * offset(const Image *img, int x, int y)</div><div class="ttdoc">Get the pointer position of a Image. </div><div class="ttdef"><b>Definition:</b> <a href="helpers_8h_source.xhtml#l00301">helpers.h:301</a></div></div>
<div class="ttc" id="helpers_8h_xhtml_aebe814363556c244be043b13e7969197"><div class="ttname"><a href="helpers_8h.xhtml#aebe814363556c244be043b13e7969197">CONVERT_TO_IMAGE_STRUCT</a></div><div class="ttdeci">#define CONVERT_TO_IMAGE_STRUCT(name)</div><div class="ttdef"><b>Definition:</b> <a href="helpers_8h_source.xhtml#l00102">helpers.h:102</a></div></div>
<div class="ttc" id="convolution9x9_8cl_xhtml_afb8c72ce35c4a1f4a2588d6573e54aa1"><div class="ttname"><a href="convolution9x9_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1">DATA_TYPE</a></div><div class="ttdeci">#define DATA_TYPE</div><div class="ttdef"><b>Definition:</b> <a href="convolution9x9_8cl_source.xhtml#l00027">convolution9x9.cl:27</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_adbf67dcee294e673cf796f1ed8aeb6a4"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">arm_compute::test::validation::dst</a></div><div class="ttdeci">Tensor dst</div><div class="ttdef"><b>Definition:</b> <a href="validation_2_n_e_o_n_2_g_e_m_m_8cpp_source.xhtml#l00118">GEMM.cpp:118</a></div></div>
<div class="ttc" id="struct_image_xhtml"><div class="ttname"><a href="struct_image.xhtml">Image</a></div><div class="ttdoc">Structure to hold Image information. </div><div class="ttdef"><b>Definition:</b> <a href="helpers_8h_source.xhtml#l00140">helpers.h:140</a></div></div>
<div class="ttc" id="fixed__point_8h_xhtml_a36f754c05b6fddf6df0d8d0a74f8159f"><div class="ttname"><a href="fixed__point_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a></div><div class="ttdeci">#define VEC_DATA_TYPE(type, size)</div><div class="ttdef"><b>Definition:</b> <a href="fixed__point_8h_source.xhtml#l00093">fixed_point.h:93</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ae1941d028c5183ce9c021a8428dbc494"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__kernel void convolution_separable9x1_static </td>
          <td>(</td>
          <td class="paramtype">__global uchar *&#160;</td>
          <td class="paramname"><em>src_ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>src_stride_x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>src_step_x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>src_stride_y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>src_step_y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>src_offset_first_element_in_bytes</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">__global uchar *&#160;</td>
          <td class="paramname"><em>dst_ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>dst_stride_x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>dst_step_x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>dst_stride_y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>dst_step_y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>dst_offset_first_element_in_bytes</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Apply a 9x1 static convolution matrix to a single channel U8 input image and output a single channel image. </p>
<dl class="section attention"><dt>Attention</dt><dd>The matrix coefficients (MAT9, MAT10, ... MAT17, SCALE), COMPUTE_TYPE and DATA_TYPE_OUT need to be passed at compile time:<br />
e.g. -DMAT9=9 -DMAT10=10, ... -DMAT17=17, -DSCALE=6, -DCOMPUTE_TYPE=int, -DDATA_TYPE_OUT=int</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">src_ptr</td><td>Pointer to the source image. Supported data types: U16, S16, S32 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">src_stride_x</td><td>Stride of the source image in X dimension (in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">src_step_x</td><td>src_stride_x * number of elements along X processed per workitem(in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">src_stride_y</td><td>Stride of the source image in Y dimension (in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">src_step_y</td><td>src_stride_y * number of elements along Y processed per workitem(in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">src_offset_first_element_in_bytes</td><td>The offset of the first element in the source image </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">dst_ptr</td><td>Pointer to the destination image. Supported data types: U8, S16 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dst_stride_x</td><td>Stride of the destination image in X dimension (in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dst_step_x</td><td>dst_stride_x * number of elements along X processed per workitem(in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dst_stride_y</td><td>Stride of the destination image in Y dimension (in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dst_step_y</td><td>dst_stride_y * number of elements along Y processed per workitem(in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dst_offset_first_element_in_bytes</td><td>The offset of the first element in the destination image </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="convolution9x9_8cl_source.xhtml#l00350">350</a> of file <a class="el" href="convolution9x9_8cl_source.xhtml">convolution9x9.cl</a>.</p>

<p>References <a class="el" href="convolution9x9_8cl_source.xhtml#l00031">COMPUTE_TYPE</a>, <a class="el" href="direct__convolution1x1_8cl_source.xhtml#l00040">CONVERT_SAT</a>, <a class="el" href="helpers_8h_source.xhtml#l00102">CONVERT_TO_IMAGE_STRUCT</a>, <a class="el" href="convolution9x9_8cl_source.xhtml#l00108">convolution9x1()</a>, <a class="el" href="convolution9x9_8cl_source.xhtml#l00035">DATA_TYPE_OUT</a>, <a class="el" href="validation_2_n_e_o_n_2_g_e_m_m_8cpp_source.xhtml#l00118">arm_compute::test::validation::dst</a>, <a class="el" href="helpers_8h_source.xhtml#l00142">Image::ptr</a>, and <a class="el" href="fixed__point_8h_source.xhtml#l00093">VEC_DATA_TYPE</a>.</p>
<div class="fragment"><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;{</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;    <a class="code" href="struct_image.xhtml">Image</a> src = <a class="code" href="helpers_8h.xhtml#aebe814363556c244be043b13e7969197">CONVERT_TO_IMAGE_STRUCT</a>(src);</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;    <a class="code" href="struct_image.xhtml">Image</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a> = <a class="code" href="helpers_8h.xhtml#aebe814363556c244be043b13e7969197">CONVERT_TO_IMAGE_STRUCT</a>(dst);</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;    <span class="comment">// Output pixels</span></div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;    <a class="code" href="fixed__point_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<a class="code" href="convolution9x9_8cl.xhtml#a26babb0c719990ecbdf3abc6de920875">COMPUTE_TYPE</a>, 8)</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;    pixels = <a class="code" href="convolution9x9_8cl.xhtml#ae8ed083f963d8f868df868c090062877">convolution9x1</a>(&amp;src, MAT9, MAT10, MAT11, MAT12, MAT13, MAT14, MAT15, MAT16, MAT17);</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;    <span class="comment">// Divide by the scale</span></div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;    pixels = pixels / (<a class="code" href="fixed__point_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<a class="code" href="convolution9x9_8cl.xhtml#a26babb0c719990ecbdf3abc6de920875">COMPUTE_TYPE</a>, 8))SCALE;</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;    <span class="comment">// Store result in dst</span></div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;    vstore8(<a class="code" href="direct__convolution1x1_8cl.xhtml#a1f15728672380ade7a238f5e783d54d2">CONVERT_SAT</a>(pixels, <a class="code" href="fixed__point_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a>(<a class="code" href="convolution9x9_8cl.xhtml#ac06f3e24d3fffd3c465d8b2a6e7c985e">DATA_TYPE_OUT</a>, 8)), 0, (__global DATA_TYPE_OUT *)dst.ptr);</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;}</div><div class="ttc" id="convolution9x9_8cl_xhtml_ac06f3e24d3fffd3c465d8b2a6e7c985e"><div class="ttname"><a href="convolution9x9_8cl.xhtml#ac06f3e24d3fffd3c465d8b2a6e7c985e">DATA_TYPE_OUT</a></div><div class="ttdeci">#define DATA_TYPE_OUT</div><div class="ttdef"><b>Definition:</b> <a href="convolution9x9_8cl_source.xhtml#l00035">convolution9x9.cl:35</a></div></div>
<div class="ttc" id="convolution9x9_8cl_xhtml_ae8ed083f963d8f868df868c090062877"><div class="ttname"><a href="convolution9x9_8cl.xhtml#ae8ed083f963d8f868df868c090062877">convolution9x1</a></div><div class="ttdeci">int8 convolution9x1(Image *src, const short up1_coeff, const short up2_coeff, const short up3_coeff, const short up4_coeff, const short middle_coeff, const short down1_coeff, const short down2_coeff, const short down3_coeff, const short down4_coeff)</div><div class="ttdoc">Compute a 1D vertical convolution of size 9 for 8 bytes assuming the input is made of 1 channel of 1 ...</div><div class="ttdef"><b>Definition:</b> <a href="convolution9x9_8cl_source.xhtml#l00108">convolution9x9.cl:108</a></div></div>
<div class="ttc" id="direct__convolution1x1_8cl_xhtml_a1f15728672380ade7a238f5e783d54d2"><div class="ttname"><a href="direct__convolution1x1_8cl.xhtml#a1f15728672380ade7a238f5e783d54d2">CONVERT_SAT</a></div><div class="ttdeci">#define CONVERT_SAT(a, b)</div><div class="ttdef"><b>Definition:</b> <a href="direct__convolution1x1_8cl_source.xhtml#l00040">direct_convolution1x1.cl:40</a></div></div>
<div class="ttc" id="helpers_8h_xhtml_aebe814363556c244be043b13e7969197"><div class="ttname"><a href="helpers_8h.xhtml#aebe814363556c244be043b13e7969197">CONVERT_TO_IMAGE_STRUCT</a></div><div class="ttdeci">#define CONVERT_TO_IMAGE_STRUCT(name)</div><div class="ttdef"><b>Definition:</b> <a href="helpers_8h_source.xhtml#l00102">helpers.h:102</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_adbf67dcee294e673cf796f1ed8aeb6a4"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">arm_compute::test::validation::dst</a></div><div class="ttdeci">Tensor dst</div><div class="ttdef"><b>Definition:</b> <a href="validation_2_n_e_o_n_2_g_e_m_m_8cpp_source.xhtml#l00118">GEMM.cpp:118</a></div></div>
<div class="ttc" id="struct_image_xhtml"><div class="ttname"><a href="struct_image.xhtml">Image</a></div><div class="ttdoc">Structure to hold Image information. </div><div class="ttdef"><b>Definition:</b> <a href="helpers_8h_source.xhtml#l00140">helpers.h:140</a></div></div>
<div class="ttc" id="fixed__point_8h_xhtml_a36f754c05b6fddf6df0d8d0a74f8159f"><div class="ttname"><a href="fixed__point_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">VEC_DATA_TYPE</a></div><div class="ttdeci">#define VEC_DATA_TYPE(type, size)</div><div class="ttdef"><b>Definition:</b> <a href="fixed__point_8h_source.xhtml#l00093">fixed_point.h:93</a></div></div>
<div class="ttc" id="convolution9x9_8cl_xhtml_a26babb0c719990ecbdf3abc6de920875"><div class="ttname"><a href="convolution9x9_8cl.xhtml#a26babb0c719990ecbdf3abc6de920875">COMPUTE_TYPE</a></div><div class="ttdeci">#define COMPUTE_TYPE</div><div class="ttdef"><b>Definition:</b> <a href="convolution9x9_8cl_source.xhtml#l00031">convolution9x9.cl:31</a></div></div>
</div><!-- fragment -->
</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_aebb8dcc11953d78e620bbef0b9e2183.xhtml">core</a></li><li class="navelem"><a class="el" href="dir_8c278f79c760e5c5fbd911f9870614c1.xhtml">CL</a></li><li class="navelem"><a class="el" href="dir_25885286e9dad4fa105b7b25a8031bbf.xhtml">cl_kernels</a></li><li class="navelem"><a class="el" href="convolution9x9_8cl.xhtml">convolution9x9.cl</a></li>
    <li class="footer">Generated on Thu Dec 14 2017 23:48:34 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
  </ul>
</div>
</body>
</html>
