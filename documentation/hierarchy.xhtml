<!-- HTML header for doxygen 1.8.9.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: Class Hierarchy</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Compute Library
   &#160;<span id="projectnumber">17.12</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li><a href="classes.xhtml"><span>Data&#160;Structure&#160;Index</span></a></li>
      <li class="current"><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Data&#160;Fields</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('hierarchy.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">Class Hierarchy</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock">
<p><a href="inherits.xhtml">Go to the graphical class hierarchy</a></p>
This inheritance list is sorted roughly, but not completely, alphabetically:</div><div class="directory">
<div class="levels">[detail level <span onclick="javascript:toggleLevel(1);">1</span><span onclick="javascript:toggleLevel(2);">2</span><span onclick="javascript:toggleLevel(3);">3</span><span onclick="javascript:toggleLevel(4);">4</span><span onclick="javascript:toggleLevel(5);">5</span><span onclick="javascript:toggleLevel(6);">6</span>]</div><table class="directory">
<tr id="row_0_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1support_1_1cpp14_1_1___unique__if.xhtml" target="_self">_Unique_if&lt; T &gt;</a></td><td class="desc">Make_unique is missing in CPP11 </td></tr>
<tr id="row_1_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1support_1_1cpp14_1_1___unique__if_3_01_t[]_4.xhtml" target="_self">_Unique_if&lt; T[]&gt;</a></td><td class="desc"></td></tr>
<tr id="row_2_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1support_1_1cpp14_1_1___unique__if_3_01_t[_n]_4.xhtml" target="_self">_Unique_if&lt; T[N]&gt;</a></td><td class="desc"></td></tr>
<tr id="row_3_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_absolute_tolerance.xhtml" target="_self">AbsoluteTolerance&lt; T &gt;</a></td><td class="desc">Class reprensenting an absolute tolerance value </td></tr>
<tr id="row_4_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_absolute_tolerance.xhtml" target="_self">AbsoluteTolerance&lt; U &gt;</a></td><td class="desc"></td></tr>
<tr id="row_5_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_activation_layer_info.xhtml" target="_self">ActivationLayerInfo</a></td><td class="desc">Activation Layer Information class </td></tr>
<tr id="row_6_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1networks_1_1_alex_net_network.xhtml" target="_self">AlexNetNetwork&lt; ITensorType, TensorType, SubTensorType, Accessor, ActivationLayerFunction, ConvolutionLayerFunction, DirectConvolutionLayerFunction, FullyConnectedLayerFunction, NormalizationLayerFunction, PoolingLayerFunction, SoftmaxLayerFunction &gt;</a></td><td class="desc">AlexNet model object </td></tr>
<tr id="row_7_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1networks_1_1_alex_net_network.xhtml" target="_self">AlexNetNetwork&lt; ITensorType, TensorType, SubTensorType, arm_compute::test::Accessor, ActivationLayerFunction, ConvolutionLayerFunction, DirectConvolutionLayerFunction, FullyConnectedLayerFunction, NormalizationLayerFunction, PoolingLayerFunction, SoftmaxLayerFunction &gt;</a></td><td class="desc"></td></tr>
<tr id="row_8_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_assets_library.xhtml" target="_self">AssetsLibrary</a></td><td class="desc">Factory class to create and fill tensors </td></tr>
<tr id="row_9_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_9_" class="arrow" onclick="toggleFolder('9_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_batch_normalization_layer_dataset.xhtml" target="_self">BatchNormalizationLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_9_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_goog_le_net_inception_v4_batch_normalization_layer_dataset.xhtml" target="_self">GoogLeNetInceptionV4BatchNormalizationLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_9_1_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_random_batch_normalization_layer_dataset.xhtml" target="_self">RandomBatchNormalizationLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_9_2_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_y_o_l_o_v2_batch_normalization_layer_dataset.xhtml" target="_self">YOLOV2BatchNormalizationLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_10_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_border_size.xhtml" target="_self">BorderSize</a></td><td class="desc">Container for 2D border size </td></tr>
<tr id="row_11_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_g_c_kernel_1_1_buffer_param.xhtml" target="_self">IGCKernel::BufferParam</a></td><td class="desc"></td></tr>
<tr id="row_12_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_build_options.xhtml" target="_self">CLBuildOptions</a></td><td class="desc">Build options </td></tr>
<tr id="row_13_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_c_l_coefficient_table.xhtml" target="_self">CLCoefficientTable</a></td><td class="desc">Structure for storing Spatial Gradient Matrix and the minimum eigenvalue for each keypoint </td></tr>
<tr id="row_14_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_kernel_library.xhtml" target="_self">CLKernelLibrary</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_c_l_kernel_library.xhtml" title="CLKernelLibrary class. ">CLKernelLibrary</a> class </td></tr>
<tr id="row_15_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_c_l_l_k_internal_keypoint.xhtml" target="_self">CLLKInternalKeypoint</a></td><td class="desc">Internal keypoint structure for Lucas-Kanade Optical Flow </td></tr>
<tr id="row_16_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_c_l_old_value.xhtml" target="_self">CLOldValue</a></td><td class="desc">Structure for storing ival, ixval and iyval for each point inside the window </td></tr>
<tr id="row_17_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_scheduler.xhtml" target="_self">CLScheduler</a></td><td class="desc">Provides global access to a CL context and command queue </td></tr>
<tr id="row_18_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_symbols.xhtml" target="_self">CLSymbols</a></td><td class="desc"></td></tr>
<tr id="row_19_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_command_line_parser.xhtml" target="_self">CommandLineParser</a></td><td class="desc">Class to parse command line arguments </td></tr>
<tr id="row_20_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1common__promoted__signed__type.xhtml" target="_self">common_promoted_signed_type&lt; T &gt;</a></td><td class="desc">Find the signed promoted common type </td></tr>
<tr id="row_21_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1common__promoted__unsigned__type.xhtml" target="_self">common_promoted_unsigned_type&lt; T &gt;</a></td><td class="desc">Find the unsigned promoted common type </td></tr>
<tr id="row_22_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1validation_1_1compare.xhtml" target="_self">compare&lt; T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_23_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1validation_1_1compare__base.xhtml" target="_self">compare_base&lt; T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_24_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_24_" class="arrow" onclick="toggleFolder('24_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1validation_1_1compare__base.xhtml" target="_self">compare_base&lt; AbsoluteTolerance&lt; U &gt; &gt;</a></td><td class="desc"></td></tr>
<tr id="row_24_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1validation_1_1compare_3_01_absolute_tolerance_3_01_u_01_4_01_4.xhtml" target="_self">compare&lt; AbsoluteTolerance&lt; U &gt; &gt;</a></td><td class="desc"></td></tr>
<tr id="row_25_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_25_" class="arrow" onclick="toggleFolder('25_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1validation_1_1compare__base.xhtml" target="_self">compare_base&lt; RelativeTolerance&lt; U &gt; &gt;</a></td><td class="desc"></td></tr>
<tr id="row_25_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1validation_1_1compare_3_01_relative_tolerance_3_01_u_01_4_01_4.xhtml" target="_self">compare&lt; RelativeTolerance&lt; U &gt; &gt;</a></td><td class="desc"></td></tr>
<tr id="row_26_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1detail_1_1compare__dimension.xhtml" target="_self">compare_dimension&lt; T &gt;</a></td><td class="desc">Functor to compare two <a class="el" href="classarm__compute_1_1_dimensions.xhtml">Dimensions</a> objects and throw an error on mismatch </td></tr>
<tr id="row_27_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1constant__expr.xhtml" target="_self">constant_expr&lt; T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_28_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_28_" class="arrow" onclick="toggleFolder('28_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_convolution_layer_dataset.xhtml" target="_self">ConvolutionLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_28_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_alex_net_convolution_layer_dataset.xhtml" target="_self">AlexNetConvolutionLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_28_1_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_alex_net_direct_convolution_layer_dataset.xhtml" target="_self">AlexNetDirectConvolutionLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_28_2_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_alex_net_winograd_layer_dataset.xhtml" target="_self">AlexNetWinogradLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_28_3_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_direct_convolution_layer_dataset.xhtml" target="_self">DirectConvolutionLayerDataset</a></td><td class="desc">Stripped down version of AlexNet as not all kernel sizes and strides are supported </td></tr>
<tr id="row_28_4_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_goog_le_net_inception_v1_convolution_layer_dataset.xhtml" target="_self">GoogLeNetInceptionV1ConvolutionLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_28_5_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_goog_le_net_inception_v1_direct_convolution_layer_dataset.xhtml" target="_self">GoogLeNetInceptionV1DirectConvolutionLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_28_6_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_goog_le_net_inception_v1_winograd_layer_dataset.xhtml" target="_self">GoogLeNetInceptionV1WinogradLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_28_7_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_goog_le_net_inception_v4_convolution_layer_dataset.xhtml" target="_self">GoogLeNetInceptionV4ConvolutionLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_28_8_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_goog_le_net_inception_v4_direct_convolution_layer_dataset.xhtml" target="_self">GoogLeNetInceptionV4DirectConvolutionLayerDataset</a></td><td class="desc">A subset of GoogLeNetInceptionV4 convolution layers with filter dimensions supported by DirectConvolution kernel </td></tr>
<tr id="row_28_9_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_goog_le_net_inception_v4_winograd_layer_dataset.xhtml" target="_self">GoogLeNetInceptionV4WinogradLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_28_10_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_large_convolution_layer_dataset.xhtml" target="_self">LargeConvolutionLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_28_11_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_le_net5_convolution_layer_dataset.xhtml" target="_self">LeNet5ConvolutionLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_28_12_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_small_convolution_layer_dataset.xhtml" target="_self">SmallConvolutionLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_28_13_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_small_winograd_layer_dataset.xhtml" target="_self">SmallWinogradLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_28_14_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_squeeze_net_convolution_layer_dataset.xhtml" target="_self">SqueezeNetConvolutionLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_28_15_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_squeeze_net_winograd_layer_dataset.xhtml" target="_self">SqueezeNetWinogradLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_28_16_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_v_g_g16_convolution_layer_dataset.xhtml" target="_self">VGG16ConvolutionLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_28_17_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_v_g_g16_direct_convolution_layer_dataset.xhtml" target="_self">VGG16DirectConvolutionLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_28_18_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_y_o_l_o_v2_convolution_layer_dataset.xhtml" target="_self">YOLOV2ConvolutionLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_29_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="struct_coordinates2_d.xhtml" target="_self">Coordinates2D</a></td><td class="desc">2D Coordinates structure </td></tr>
<tr id="row_30_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_coordinates2_d.xhtml" target="_self">Coordinates2D</a></td><td class="desc">Coordinate type </td></tr>
<tr id="row_31_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_coordinates3_d.xhtml" target="_self">Coordinates3D</a></td><td class="desc">Coordinate type </td></tr>
<tr id="row_32_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structmali__userspace_1_1_counter_mapping.xhtml" target="_self">CounterMapping</a></td><td class="desc"></td></tr>
<tr id="row_33_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_c_p_u_info.xhtml" target="_self">CPUInfo</a></td><td class="desc"></td></tr>
<tr id="row_34_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_34_" class="arrow" onclick="toggleFolder('34_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_dataset.xhtml" target="_self">Dataset</a></td><td class="desc">Abstract dataset base class </td></tr>
<tr id="row_34_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset.xhtml" target="_self">CartesianProductDataset&lt; T, U &gt;</a></td><td class="desc">Implementation of a dataset representing all combinations of values of the input datasets </td></tr>
<tr id="row_34_1_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_join_dataset.xhtml" target="_self">JoinDataset&lt; T, U &gt;</a></td><td class="desc">Implementation of a dataset representing the concatenation of the input datasets </td></tr>
<tr id="row_34_2_" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_34_2_" class="arrow" onclick="toggleFolder('34_2_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_named_dataset.xhtml" target="_self">NamedDataset</a></td><td class="desc">Abstract implementation of a named dataset </td></tr>
<tr id="row_34_2_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_34_2_0_" class="arrow" onclick="toggleFolder('34_2_0_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_container_dataset.xhtml" target="_self">ContainerDataset&lt; T &gt;</a></td><td class="desc">Implementation of a dataset created from a container </td></tr>
<tr id="row_34_2_0_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_depth_concatenate_layer_shapes.xhtml" target="_self">DepthConcatenateLayerShapes</a></td><td class="desc">Data set containing 2D tensor shapes for DepthConcatenateLayer </td></tr>
<tr id="row_34_2_0_1_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_global_pooling_shapes.xhtml" target="_self">GlobalPoolingShapes</a></td><td class="desc">Data set containing global pooling tensor shapes </td></tr>
<tr id="row_34_2_0_2_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_large1_d_shapes.xhtml" target="_self">Large1DShapes</a></td><td class="desc">Data set containing large 1D tensor shapes </td></tr>
<tr id="row_34_2_0_3_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_large2_d_shapes.xhtml" target="_self">Large2DShapes</a></td><td class="desc">Data set containing large 2D tensor shapes </td></tr>
<tr id="row_34_2_0_4_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_large3_d_shapes.xhtml" target="_self">Large3DShapes</a></td><td class="desc">Data set containing large 3D tensor shapes </td></tr>
<tr id="row_34_2_0_5_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_large4_d_shapes.xhtml" target="_self">Large4DShapes</a></td><td class="desc">Data set containing large 4D tensor shapes </td></tr>
<tr id="row_34_2_0_6_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_large_shapes.xhtml" target="_self">LargeShapes</a></td><td class="desc">Data set containing large tensor shapes </td></tr>
<tr id="row_34_2_0_7_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_medium2_d_shapes.xhtml" target="_self">Medium2DShapes</a></td><td class="desc">Data set containing medium 2D tensor shapes </td></tr>
<tr id="row_34_2_0_8_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_medium_shapes.xhtml" target="_self">MediumShapes</a></td><td class="desc">Data set containing medium tensor shapes </td></tr>
<tr id="row_34_2_0_9_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_small1_d_shapes.xhtml" target="_self">Small1DShapes</a></td><td class="desc">Data set containing small 1D tensor shapes </td></tr>
<tr id="row_34_2_0_10_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_small2_d_shapes.xhtml" target="_self">Small2DShapes</a></td><td class="desc">Data set containing small 2D tensor shapes </td></tr>
<tr id="row_34_2_0_11_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_small3_d_shapes.xhtml" target="_self">Small3DShapes</a></td><td class="desc">Data set containing small 3D tensor shapes </td></tr>
<tr id="row_34_2_0_12_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_small4_d_shapes.xhtml" target="_self">Small4DShapes</a></td><td class="desc">Data set containing small 4D tensor shapes </td></tr>
<tr id="row_34_2_0_13_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_small_deconvolution_shapes.xhtml" target="_self">SmallDeconvolutionShapes</a></td><td class="desc">Data set containing small tensor shapes for deconvolution </td></tr>
<tr id="row_34_2_0_14_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_small_direct_convolution_shapes.xhtml" target="_self">SmallDirectConvolutionShapes</a></td><td class="desc">Data set containing small tensor shapes for direct convolution </td></tr>
<tr id="row_34_2_0_15_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_small_shapes.xhtml" target="_self">SmallShapes</a></td><td class="desc">Data set containing small tensor shapes </td></tr>
<tr id="row_34_2_0_16_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_softmax_layer_large_shapes.xhtml" target="_self">SoftmaxLayerLargeShapes</a></td><td class="desc">Data set containing large softmax layer shapes </td></tr>
<tr id="row_34_2_0_17_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_softmax_layer_small_shapes.xhtml" target="_self">SoftmaxLayerSmallShapes</a></td><td class="desc">Data set containing small softmax layer shapes </td></tr>
<tr id="row_34_2_1_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_initializer_list_dataset.xhtml" target="_self">InitializerListDataset&lt; T &gt;</a></td><td class="desc">Implementation of a dataset created from an initializer list </td></tr>
<tr id="row_34_2_2_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_range_dataset.xhtml" target="_self">RangeDataset&lt; T &gt;</a></td><td class="desc">Implementation of a dataset created from a range of values </td></tr>
<tr id="row_34_2_3_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_singleton_dataset.xhtml" target="_self">SingletonDataset&lt; T &gt;</a></td><td class="desc">Implementation of a dataset holding a single value </td></tr>
<tr id="row_34_2_4_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_34_2_4_" class="arrow" onclick="toggleFolder('34_2_4_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_container_dataset.xhtml" target="_self">ContainerDataset&lt; std::vector&lt; ActivationLayerInfo::ActivationFunction &gt; &gt;</a></td><td class="desc"></td></tr>
<tr id="row_34_2_4_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_activation_functions.xhtml" target="_self">ActivationFunctions</a></td><td class="desc"></td></tr>
<tr id="row_34_2_5_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_34_2_5_" class="arrow" onclick="toggleFolder('34_2_5_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_container_dataset.xhtml" target="_self">ContainerDataset&lt; std::vector&lt; BorderMode &gt; &gt;</a></td><td class="desc"></td></tr>
<tr id="row_34_2_5_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_border_modes.xhtml" target="_self">BorderModes</a></td><td class="desc"></td></tr>
<tr id="row_34_2_6_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_34_2_6_" class="arrow" onclick="toggleFolder('34_2_6_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_container_dataset.xhtml" target="_self">ContainerDataset&lt; std::vector&lt; ConvertPolicy &gt; &gt;</a></td><td class="desc"></td></tr>
<tr id="row_34_2_6_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_convert_policies.xhtml" target="_self">ConvertPolicies</a></td><td class="desc"></td></tr>
<tr id="row_34_2_7_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_34_2_7_" class="arrow" onclick="toggleFolder('34_2_7_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_container_dataset.xhtml" target="_self">ContainerDataset&lt; std::vector&lt; GradientDimension &gt; &gt;</a></td><td class="desc"></td></tr>
<tr id="row_34_2_7_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_gradient_dimensions.xhtml" target="_self">GradientDimensions</a></td><td class="desc"></td></tr>
<tr id="row_34_2_8_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_34_2_8_" class="arrow" onclick="toggleFolder('34_2_8_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_container_dataset.xhtml" target="_self">ContainerDataset&lt; std::vector&lt; InterpolationPolicy &gt; &gt;</a></td><td class="desc"></td></tr>
<tr id="row_34_2_8_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_interpolation_policies.xhtml" target="_self">InterpolationPolicies</a></td><td class="desc"></td></tr>
<tr id="row_34_2_9_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_34_2_9_" class="arrow" onclick="toggleFolder('34_2_9_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_container_dataset.xhtml" target="_self">ContainerDataset&lt; std::vector&lt; MatrixPattern &gt; &gt;</a></td><td class="desc"></td></tr>
<tr id="row_34_2_9_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_matrix_patterns.xhtml" target="_self">MatrixPatterns</a></td><td class="desc"></td></tr>
<tr id="row_34_2_10_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_34_2_10_" class="arrow" onclick="toggleFolder('34_2_10_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_container_dataset.xhtml" target="_self">ContainerDataset&lt; std::vector&lt; NonLinearFilterFunction &gt; &gt;</a></td><td class="desc"></td></tr>
<tr id="row_34_2_10_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_non_linear_filter_functions.xhtml" target="_self">NonLinearFilterFunctions</a></td><td class="desc"></td></tr>
<tr id="row_34_2_11_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_34_2_11_" class="arrow" onclick="toggleFolder('34_2_11_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_container_dataset.xhtml" target="_self">ContainerDataset&lt; std::vector&lt; NormType &gt; &gt;</a></td><td class="desc"></td></tr>
<tr id="row_34_2_11_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_normalization_types.xhtml" target="_self">NormalizationTypes</a></td><td class="desc"></td></tr>
<tr id="row_34_2_12_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_34_2_12_" class="arrow" onclick="toggleFolder('34_2_12_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_container_dataset.xhtml" target="_self">ContainerDataset&lt; std::vector&lt; PoolingType &gt; &gt;</a></td><td class="desc"></td></tr>
<tr id="row_34_2_12_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_pooling_types.xhtml" target="_self">PoolingTypes</a></td><td class="desc"></td></tr>
<tr id="row_34_2_13_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_34_2_13_" class="arrow" onclick="toggleFolder('34_2_13_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_container_dataset.xhtml" target="_self">ContainerDataset&lt; std::vector&lt; ReductionOperation &gt; &gt;</a></td><td class="desc"></td></tr>
<tr id="row_34_2_13_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_reduction_operations.xhtml" target="_self">ReductionOperations</a></td><td class="desc"></td></tr>
<tr id="row_34_2_14_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_34_2_14_" class="arrow" onclick="toggleFolder('34_2_14_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_container_dataset.xhtml" target="_self">ContainerDataset&lt; std::vector&lt; SamplingPolicy &gt; &gt;</a></td><td class="desc"></td></tr>
<tr id="row_34_2_14_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_sampling_policies.xhtml" target="_self">SamplingPolicies</a></td><td class="desc"></td></tr>
<tr id="row_34_2_15_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_initializer_list_dataset.xhtml" target="_self">InitializerListDataset&lt; TensorShape &gt;</a></td><td class="desc"></td></tr>
<tr id="row_34_2_16_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_singleton_dataset.xhtml" target="_self">SingletonDataset&lt; ActivationLayerInfo &gt;</a></td><td class="desc"></td></tr>
<tr id="row_34_2_17_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_singleton_dataset.xhtml" target="_self">SingletonDataset&lt; NormalizationLayerInfo &gt;</a></td><td class="desc"></td></tr>
<tr id="row_34_2_18_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_singleton_dataset.xhtml" target="_self">SingletonDataset&lt; TensorShape &gt;</a></td><td class="desc"></td></tr>
<tr id="row_34_3_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_zip_dataset.xhtml" target="_self">ZipDataset&lt; T, U &gt;</a></td><td class="desc">Implementation of a dataset representing pairs of values of the input datasets </td></tr>
<tr id="row_34_4_" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_34_4_" class="arrow" onclick="toggleFolder('34_4_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset.xhtml" target="_self">CartesianProductDataset&lt; framework::dataset::InitializerListDataset&lt; TensorShape &gt;, framework::dataset::SingletonDataset&lt; ActivationLayerInfo &gt; &gt;</a></td><td class="desc"></td></tr>
<tr id="row_34_4_0_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_alex_net_activation_layer_dataset.xhtml" target="_self">AlexNetActivationLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_34_4_1_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_goog_le_net_inception_v1_activation_layer_dataset.xhtml" target="_self">GoogLeNetInceptionV1ActivationLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_34_4_2_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_goog_le_net_inception_v4_activation_layer_dataset.xhtml" target="_self">GoogLeNetInceptionV4ActivationLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_34_4_3_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_squeeze_net_activation_layer_dataset.xhtml" target="_self">SqueezeNetActivationLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_34_4_4_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_v_g_g16_activation_layer_dataset.xhtml" target="_self">VGG16ActivationLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_34_4_5_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_y_o_l_o_v2_activation_layer_l_i_n_e_a_r_dataset.xhtml" target="_self">YOLOV2ActivationLayerLINEARDataset</a></td><td class="desc"></td></tr>
<tr id="row_34_4_6_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_y_o_l_o_v2_activation_layer_r_e_l_u_dataset.xhtml" target="_self">YOLOV2ActivationLayerRELUDataset</a></td><td class="desc"></td></tr>
<tr id="row_34_5_" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_34_5_" class="arrow" onclick="toggleFolder('34_5_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset.xhtml" target="_self">CartesianProductDataset&lt; framework::dataset::InitializerListDataset&lt; TensorShape &gt;, framework::dataset::SingletonDataset&lt; NormalizationLayerInfo &gt; &gt;</a></td><td class="desc"></td></tr>
<tr id="row_34_5_0_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_alex_net_normalization_layer_dataset.xhtml" target="_self">AlexNetNormalizationLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_34_5_1_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_goog_le_net_inception_v1_normalization_layer_dataset.xhtml" target="_self">GoogLeNetInceptionV1NormalizationLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_34_6_" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_34_6_" class="arrow" onclick="toggleFolder('34_6_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset.xhtml" target="_self">CartesianProductDataset&lt; framework::dataset::SingletonDataset&lt; TensorShape &gt;, framework::dataset::SingletonDataset&lt; ActivationLayerInfo &gt; &gt;</a></td><td class="desc"></td></tr>
<tr id="row_34_6_0_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_le_net5_activation_layer_dataset.xhtml" target="_self">LeNet5ActivationLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_34_7_" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_34_7_" class="arrow" onclick="toggleFolder('34_7_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_join_dataset.xhtml" target="_self">JoinDataset&lt; YOLOV2ActivationLayerRELUDataset, YOLOV2ActivationLayerLINEARDataset &gt;</a></td><td class="desc"></td></tr>
<tr id="row_34_7_0_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_y_o_l_o_v2_activation_layer_dataset.xhtml" target="_self">YOLOV2ActivationLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_35_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_35_" class="arrow" onclick="toggleFolder('35_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_depthwise_convolution_layer_dataset.xhtml" target="_self">DepthwiseConvolutionLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_35_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_large_depthwise_convolution_layer_dataset.xhtml" target="_self">LargeDepthwiseConvolutionLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_35_1_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_large_depthwise_convolution_layer_dataset3x3.xhtml" target="_self">LargeDepthwiseConvolutionLayerDataset3x3</a></td><td class="desc"></td></tr>
<tr id="row_35_2_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_mobile_net_depthwise_convolution_layer_dataset.xhtml" target="_self">MobileNetDepthwiseConvolutionLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_35_3_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_small_depthwise_convolution_layer_dataset.xhtml" target="_self">SmallDepthwiseConvolutionLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_35_4_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_small_depthwise_convolution_layer_dataset3x3.xhtml" target="_self">SmallDepthwiseConvolutionLayerDataset3x3</a></td><td class="desc"></td></tr>
<tr id="row_36_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_36_" class="arrow" onclick="toggleFolder('36_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_depthwise_separable_convolution_layer_dataset.xhtml" target="_self">DepthwiseSeparableConvolutionLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_36_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_mobile_net_depthwise_separable_convolution_layer_dataset.xhtml" target="_self">MobileNetDepthwiseSeparableConvolutionLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_37_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="struct_detection_window.xhtml" target="_self">DetectionWindow</a></td><td class="desc">Detection window struct </td></tr>
<tr id="row_38_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_detection_window.xhtml" target="_self">DetectionWindow</a></td><td class="desc">Detection window used for the object detection </td></tr>
<tr id="row_39_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_window_1_1_dimension.xhtml" target="_self">Window::Dimension</a></td><td class="desc">Describe one of the image's dimensions with a start, end and step </td></tr>
<tr id="row_40_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_dimensions.xhtml" target="_self">Dimensions&lt; T &gt;</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_dimensions.xhtml" title="Dimensions with dimensionality. ">Dimensions</a> with dimensionality </td></tr>
<tr id="row_41_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_41_" class="arrow" onclick="toggleFolder('41_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_dimensions.xhtml" target="_self">Dimensions&lt; int &gt;</a></td><td class="desc"></td></tr>
<tr id="row_41_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_coordinates.xhtml" target="_self">Coordinates</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_coordinates.xhtml" title="Coordinates of an item. ">Coordinates</a> of an item </td></tr>
<tr id="row_42_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_42_" class="arrow" onclick="toggleFolder('42_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_dimensions.xhtml" target="_self">Dimensions&lt; size_t &gt;</a></td><td class="desc"></td></tr>
<tr id="row_42_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_strides.xhtml" target="_self">Strides</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_strides.xhtml" title="Strides of an item in bytes. ">Strides</a> of an item in bytes </td></tr>
<tr id="row_42_1_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_tensor_shape.xhtml" target="_self">TensorShape</a></td><td class="desc">Shape of a tensor </td></tr>
<tr id="row_43_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_43_" class="arrow" onclick="toggleFolder('43_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_dimensions.xhtml" target="_self">Dimensions&lt; unsigned int &gt;</a></td><td class="desc"></td></tr>
<tr id="row_43_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_steps.xhtml" target="_self">Steps</a></td><td class="desc">Class to describe a number of elements in each dimension </td></tr>
<tr id="row_44_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1enable__bitwise__ops.xhtml" target="_self">enable_bitwise_ops&lt; T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_45_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1enable__bitwise__ops_3_01arm__compute_1_1_g_p_u_target_01_4.xhtml" target="_self">enable_bitwise_ops&lt; arm_compute::GPUTarget &gt;</a></td><td class="desc">Enable operation operations on GPUTarget enumerations </td></tr>
<tr id="row_46_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_46_" class="arrow" onclick="toggleFolder('46_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><b>false_type</b></td><td class="desc"></td></tr>
<tr id="row_46_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1is__container.xhtml" target="_self">is_container&lt; T &gt;</a></td><td class="desc">Base case </td></tr>
<tr id="row_46_1_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1traits_1_1is__contained_3_01_t_00_01std_1_1tuple_3_4_01_4.xhtml" target="_self">is_contained&lt; T, std::tuple&lt;&gt; &gt;</a></td><td class="desc"></td></tr>
<tr id="row_47_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1io_1_1_file_handler.xhtml" target="_self">FileHandler</a></td><td class="desc">File Handling interface </td></tr>
<tr id="row_48_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml" target="_self">fixed_point&lt; T &gt;</a></td><td class="desc">Arbitrary fixed-point arithmetic class </td></tr>
<tr id="row_49_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_49_" class="arrow" onclick="toggleFolder('49_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_fixture.xhtml" target="_self">Fixture</a></td><td class="desc">Abstract fixture class </td></tr>
<tr id="row_49_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_activation_layer_fixture.xhtml" target="_self">ActivationLayerFixture&lt; TensorType, Function, Accessor &gt;</a></td><td class="desc">Fixture that can be used for NEON and CL </td></tr>
<tr id="row_49_1_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_alex_net_fixture.xhtml" target="_self">AlexNetFixture&lt; ITensorType, TensorType, SubTensorType, Accessor, ActivationLayerFunction, ConvolutionLayerFunction, DirectConvolutionLayerFunction, FullyConnectedLayerFunction, NormalizationLayerFunction, PoolingLayerFunction, SoftmaxLayerFunction &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_2_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_batch_normalization_layer_fixture.xhtml" target="_self">BatchNormalizationLayerFixture&lt; TensorType, Function, Accessor &gt;</a></td><td class="desc">Fixture that can be used for NEON and CL </td></tr>
<tr id="row_49_3_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_convolution_layer_fixture.xhtml" target="_self">ConvolutionLayerFixture&lt; TensorType, Function, Accessor &gt;</a></td><td class="desc">Fixture that can be used for NEON and CL </td></tr>
<tr id="row_49_4_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_depthwise_convolution_layer_fixture.xhtml" target="_self">DepthwiseConvolutionLayerFixture&lt; TensorType, Function, Accessor &gt;</a></td><td class="desc">Fixture that can be used for NEON and CL </td></tr>
<tr id="row_49_5_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_depthwise_separable_convolution_layer_fixture.xhtml" target="_self">DepthwiseSeparableConvolutionLayerFixture&lt; TensorType, Function, Accessor &gt;</a></td><td class="desc">Fixture that can be used for NEON and CL </td></tr>
<tr id="row_49_6_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_floor_fixture.xhtml" target="_self">FloorFixture&lt; TensorType, Function, Accessor &gt;</a></td><td class="desc">Fixture that can be used for NEON and CL </td></tr>
<tr id="row_49_7_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_fully_connected_layer_fixture.xhtml" target="_self">FullyConnectedLayerFixture&lt; TensorType, Function, Accessor &gt;</a></td><td class="desc">Fixture that can be used for NEON and CL </td></tr>
<tr id="row_49_8_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_g_e_m_m_fixture.xhtml" target="_self">GEMMFixture&lt; TensorType, Function, Accessor &gt;</a></td><td class="desc">Fixture that can be used for NEON and CL </td></tr>
<tr id="row_49_9_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_g_e_m_m_lowp_matrix_multiply_core_fixture.xhtml" target="_self">GEMMLowpMatrixMultiplyCoreFixture&lt; TensorType, Function, Accessor &gt;</a></td><td class="desc">Fixture that can be used for NEON and CL </td></tr>
<tr id="row_49_10_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_le_net5_fixture.xhtml" target="_self">LeNet5Fixture&lt; TensorType, Accessor, ActivationLayerFunction, ConvolutionLayerFunction, FullyConnectedLayerFunction, PoolingLayerFunction, SoftmaxLayerFunction &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_11_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_mobile_net_fixture.xhtml" target="_self">MobileNetFixture&lt; TensorType, Accessor, ActivationLayerFunction, ConvolutionLayerFunction, DirectConvolutionLayerFunction, DepthwiseConvolutionLayerFunction, ReshapeFunction, PoolingLayerFunction &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_12_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_mobile_net_v1_fixture.xhtml" target="_self">MobileNetV1Fixture&lt; TensorType, Accessor, ActivationLayerFunction, BatchNormalizationLayerFunction, ConvolutionLayerFunction, DirectConvolutionLayerFunction, DepthwiseConvolutionFunction, ReshapeFunction, PoolingLayerFunction, SoftmaxLayerFunction, InputSize &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_13_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_normalization_layer_fixture.xhtml" target="_self">NormalizationLayerFixture&lt; TensorType, Function, Accessor &gt;</a></td><td class="desc">Fixture that can be used for NEON and CL </td></tr>
<tr id="row_49_14_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_pooling_layer_fixture.xhtml" target="_self">PoolingLayerFixture&lt; TensorType, Function, Accessor &gt;</a></td><td class="desc">Fixture that can be used for NEON and CL </td></tr>
<tr id="row_49_15_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_r_o_i_pooling_layer_fixture.xhtml" target="_self">ROIPoolingLayerFixture&lt; TensorType, Function, Accessor, Array_T, ArrayAccessor &gt;</a></td><td class="desc">Fixture that can be used for NEON and CL </td></tr>
<tr id="row_49_16_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_softmax_layer_fixture.xhtml" target="_self">SoftmaxLayerFixture&lt; TensorType, Function, Accessor &gt;</a></td><td class="desc">Fixture that can be used for NEON, CL and OpenGL ES </td></tr>
<tr id="row_49_17_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_absolute_difference_validation_fixture.xhtml" target="_self">AbsoluteDifferenceValidationFixture&lt; TensorType, AccessorType, FunctionType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_18_" class="even" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_49_18_" class="arrow" onclick="toggleFolder('49_18_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_accumulate_base_validation_fixture.xhtml" target="_self">AccumulateBaseValidationFixture&lt; TensorType, AccessorType, FunctionType, T1, T2 &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_18_0_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_accumulate_squared_validation_fixture.xhtml" target="_self">AccumulateSquaredValidationFixture&lt; TensorType, AccessorType, FunctionType, T1, T2 &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_18_1_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_accumulate_validation_fixture.xhtml" target="_self">AccumulateValidationFixture&lt; TensorType, AccessorType, FunctionType, T1, T2 &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_18_2_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_accumulate_weighted_validation_fixture.xhtml" target="_self">AccumulateWeightedValidationFixture&lt; TensorType, AccessorType, FunctionType, T1, T2 &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_19_" class="even" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_49_19_" class="arrow" onclick="toggleFolder('49_19_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_activation_validation_generic_fixture.xhtml" target="_self">ActivationValidationGenericFixture&lt; TensorType, AccessorType, FunctionType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_19_0_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_activation_validation_fixed_point_fixture.xhtml" target="_self">ActivationValidationFixedPointFixture&lt; TensorType, AccessorType, FunctionType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_19_1_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_activation_validation_fixture.xhtml" target="_self">ActivationValidationFixture&lt; TensorType, AccessorType, FunctionType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_19_2_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_activation_validation_quantized_fixture.xhtml" target="_self">ActivationValidationQuantizedFixture&lt; TensorType, AccessorType, FunctionType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_20_" class="even" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_49_20_" class="arrow" onclick="toggleFolder('49_20_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_arithmetic_addition_validation_fixed_point_fixture.xhtml" target="_self">ArithmeticAdditionValidationFixedPointFixture&lt; TensorType, AccessorType, FunctionType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_20_0_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_arithmetic_addition_validation_fixture.xhtml" target="_self">ArithmeticAdditionValidationFixture&lt; TensorType, AccessorType, FunctionType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_21_" class="even" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_49_21_" class="arrow" onclick="toggleFolder('49_21_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_arithmetic_subtraction_validation_fixed_point_fixture.xhtml" target="_self">ArithmeticSubtractionValidationFixedPointFixture&lt; TensorType, AccessorType, FunctionType, T1, T2, T3 &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_21_0_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_arithmetic_subtraction_validation_fixture.xhtml" target="_self">ArithmeticSubtractionValidationFixture&lt; TensorType, AccessorType, FunctionType, T1, T2, T3 &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_22_" class="even" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_49_22_" class="arrow" onclick="toggleFolder('49_22_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_batch_normalization_layer_validation_fixed_point_fixture.xhtml" target="_self">BatchNormalizationLayerValidationFixedPointFixture&lt; TensorType, AccessorType, FunctionType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_22_0_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_batch_normalization_layer_validation_fixture.xhtml" target="_self">BatchNormalizationLayerValidationFixture&lt; TensorType, AccessorType, FunctionType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_23_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_bitwise_and_validation_fixture.xhtml" target="_self">BitwiseAndValidationFixture&lt; TensorType, AccessorType, FunctionType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_24_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_bitwise_not_validation_fixture.xhtml" target="_self">BitwiseNotValidationFixture&lt; TensorType, AccessorType, FunctionType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_25_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_bitwise_or_validation_fixture.xhtml" target="_self">BitwiseOrValidationFixture&lt; TensorType, AccessorType, FunctionType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_26_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_bitwise_xor_validation_fixture.xhtml" target="_self">BitwiseXorValidationFixture&lt; TensorType, AccessorType, FunctionType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_27_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_box3x3_validation_fixture.xhtml" target="_self">Box3x3ValidationFixture&lt; TensorType, AccessorType, FunctionType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_28_" class="even" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_49_28_" class="arrow" onclick="toggleFolder('49_28_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_convolution_validation_generic_fixture.xhtml" target="_self">ConvolutionValidationGenericFixture&lt; TensorType, AccessorType, FunctionType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_28_0_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_convolution_validation_fixed_point_fixture.xhtml" target="_self">ConvolutionValidationFixedPointFixture&lt; TensorType, AccessorType, FunctionType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_28_1_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_convolution_validation_fixture.xhtml" target="_self">ConvolutionValidationFixture&lt; TensorType, AccessorType, FunctionType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_28_2_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_convolution_validation_quantized_fixture.xhtml" target="_self">ConvolutionValidationQuantizedFixture&lt; TensorType, AccessorType, FunctionType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_29_" class="even" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_49_29_" class="arrow" onclick="toggleFolder('49_29_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_deconvolution_layer_fixture_base.xhtml" target="_self">DeconvolutionLayerFixtureBase&lt; TensorType, AccessorType, FunctionType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_29_0_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_deconvolution_validation_fixture.xhtml" target="_self">DeconvolutionValidationFixture&lt; TensorType, AccessorType, FunctionType, T, kernel_size_x, kernel_size_y &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_30_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_depth_concatenate_layer_validation_fixture.xhtml" target="_self">DepthConcatenateLayerValidationFixture&lt; TensorType, ITensorType, AccessorType, FunctionType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_31_" class="even" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_49_31_" class="arrow" onclick="toggleFolder('49_31_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_depth_convert_layer_validation_fixed_point_fixture.xhtml" target="_self">DepthConvertLayerValidationFixedPointFixture&lt; TensorType, AccessorType, FunctionType, T1, T2 &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_31_0_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_depth_convert_layer_validation_fixture.xhtml" target="_self">DepthConvertLayerValidationFixture&lt; TensorType, AccessorType, FunctionType, T1, T2 &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_31_1_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_depth_convert_layer_validation_fractional_bits_fixture.xhtml" target="_self">DepthConvertLayerValidationFractionalBitsFixture&lt; TensorType, AccessorType, FunctionType, T1, T2 &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_32_" class="even" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_49_32_" class="arrow" onclick="toggleFolder('49_32_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_depthwise_convolution_layer_validation_generic_fixture.xhtml" target="_self">DepthwiseConvolutionLayerValidationGenericFixture&lt; TensorType, AccessorType, FunctionType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_32_0_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_depthwise_convolution_layer_validation_fixture.xhtml" target="_self">DepthwiseConvolutionLayerValidationFixture&lt; TensorType, AccessorType, FunctionType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_32_1_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_depthwise_convolution_layer_validation_quantized_fixture.xhtml" target="_self">DepthwiseConvolutionLayerValidationQuantizedFixture&lt; TensorType, AccessorType, FunctionType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_33_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_depthwise_separable_convolution_validation_fixture.xhtml" target="_self">DepthwiseSeparableConvolutionValidationFixture&lt; TensorType, AccessorType, FunctionType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_34_" class="even" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_49_34_" class="arrow" onclick="toggleFolder('49_34_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_dequantization_validation_fixed_point_fixture.xhtml" target="_self">DequantizationValidationFixedPointFixture&lt; TensorType, AccessorType, FunctionType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_34_0_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_dequantization_validation_fixture.xhtml" target="_self">DequantizationValidationFixture&lt; TensorType, AccessorType, FunctionType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_35_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_dilate_validation_fixture.xhtml" target="_self">DilateValidationFixture&lt; TensorType, AccessorType, FunctionType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_36_" class="even" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_49_36_" class="arrow" onclick="toggleFolder('49_36_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_direct_convolution_validation_generic_fixture.xhtml" target="_self">DirectConvolutionValidationGenericFixture&lt; TensorType, AccessorType, FunctionType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_36_0_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_direct_convolution_validation_fixed_point_fixture.xhtml" target="_self">DirectConvolutionValidationFixedPointFixture&lt; TensorType, AccessorType, FunctionType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_36_1_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_direct_convolution_validation_fixture.xhtml" target="_self">DirectConvolutionValidationFixture&lt; TensorType, AccessorType, FunctionType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_36_2_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_direct_convolution_validation_quantized_fixture.xhtml" target="_self">DirectConvolutionValidationQuantizedFixture&lt; TensorType, AccessorType, FunctionType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_36_3_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_direct_convolution_validation_with_tensor_shapes_fixture.xhtml" target="_self">DirectConvolutionValidationWithTensorShapesFixture&lt; TensorType, AccessorType, FunctionType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_36_4_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_direct_convolution_validation_with_tensor_shapes_quantized_fixture.xhtml" target="_self">DirectConvolutionValidationWithTensorShapesQuantizedFixture&lt; TensorType, AccessorType, FunctionType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_37_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_dropout_layer_validation_fixture.xhtml" target="_self">DropoutLayerValidationFixture&lt; TensorType, AccessorType, FunctionType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_38_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_erode_validation_fixture.xhtml" target="_self">ErodeValidationFixture&lt; TensorType, AccessorType, FunctionType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_39_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_fixed_point_pixel_wise_multiplication_validation_fixture.xhtml" target="_self">FixedPointPixelWiseMultiplicationValidationFixture&lt; TensorType, AccessorType, FunctionType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_40_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_fixed_point_validation_fixture.xhtml" target="_self">FixedPointValidationFixture&lt; TensorType, AccessorType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_41_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_flatten_layer_validation_fixture.xhtml" target="_self">FlattenLayerValidationFixture&lt; TensorType, AccessorType, FunctionType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_42_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_floor_validation_fixture.xhtml" target="_self">FloorValidationFixture&lt; TensorType, AccessorType, FunctionType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_43_" class="even" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_49_43_" class="arrow" onclick="toggleFolder('49_43_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_fully_connected_layer_validation_generic_fixture.xhtml" target="_self">FullyConnectedLayerValidationGenericFixture&lt; TensorType, AccessorType, FunctionType, T, run_interleave &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_43_0_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_fully_connected_layer_validation_fixed_point_fixture.xhtml" target="_self">FullyConnectedLayerValidationFixedPointFixture&lt; TensorType, AccessorType, FunctionType, T, run_interleave &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_43_1_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_fully_connected_layer_validation_fixture.xhtml" target="_self">FullyConnectedLayerValidationFixture&lt; TensorType, AccessorType, FunctionType, T, run_interleave &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_43_2_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_fully_connected_layer_validation_quantized_fixture.xhtml" target="_self">FullyConnectedLayerValidationQuantizedFixture&lt; TensorType, AccessorType, FunctionType, T, run_interleave &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_44_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_gaussian3x3_validation_fixture.xhtml" target="_self">Gaussian3x3ValidationFixture&lt; TensorType, AccessorType, FunctionType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_45_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_gaussian5x5_validation_fixture.xhtml" target="_self">Gaussian5x5ValidationFixture&lt; TensorType, AccessorType, FunctionType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_46_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_gaussian_pyramid_half_validation_fixture.xhtml" target="_self">GaussianPyramidHalfValidationFixture&lt; TensorType, AccessorType, FunctionType, T, PyramidType &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_47_" class="even" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_49_47_" class="arrow" onclick="toggleFolder('49_47_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_g_e_m_m_interleave4x4_validation_fixed_point_fixture.xhtml" target="_self">GEMMInterleave4x4ValidationFixedPointFixture&lt; TensorType, AccessorType, FunctionType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_47_0_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_g_e_m_m_interleave4x4_validation_fixture.xhtml" target="_self">GEMMInterleave4x4ValidationFixture&lt; TensorType, AccessorType, FunctionType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_48_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_g_e_m_m_interleave_blocked_validation_fixture.xhtml" target="_self">GEMMInterleaveBlockedValidationFixture&lt; TensorType, AccessorType, FunctionType, Transposed &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_49_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_g_e_m_m_lowp_assembly_fixture.xhtml" target="_self">GEMMLowpAssemblyFixture&lt; TensorType, AccessorType, FunctionType, T2 &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_50_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_g_e_m_m_lowp_matrix_multiply_core_validation_fixture.xhtml" target="_self">GEMMLowpMatrixMultiplyCoreValidationFixture&lt; TensorType, AccessorType, FunctionType &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_51_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_g_e_m_m_lowp_quantize_down_int32_to_uint8_scale_by_fixed_point_validation_fixture.xhtml" target="_self">GEMMLowpQuantizeDownInt32ToUint8ScaleByFixedPointValidationFixture&lt; TensorType, AccessorType, FunctionType &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_52_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_g_e_m_m_lowp_quantize_down_int32_to_uint8_scale_validation_fixture.xhtml" target="_self">GEMMLowpQuantizeDownInt32ToUint8ScaleValidationFixture&lt; TensorType, AccessorType, FunctionType &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_53_" class="even" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_49_53_" class="arrow" onclick="toggleFolder('49_53_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_g_e_m_m_validation_fixed_point_fixture.xhtml" target="_self">GEMMValidationFixedPointFixture&lt; TensorType, AccessorType, FunctionType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_53_0_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_g_e_m_m_validation_fixture.xhtml" target="_self">GEMMValidationFixture&lt; TensorType, AccessorType, FunctionType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_54_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_harris_corners_validation_fixture.xhtml" target="_self">HarrisCornersValidationFixture&lt; TensorType, AccessorType, ArrayType, FunctionType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_55_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_histogram_validation_fixture.xhtml" target="_self">HistogramValidationFixture&lt; TensorType, AccessorType, FunctionType, T, DistributionType &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_56_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_integral_image_validation_fixture.xhtml" target="_self">IntegralImageValidationFixture&lt; TensorType, AccessorType, FunctionType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_57_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_l2_normalize_layer_validation_fixture.xhtml" target="_self">L2NormalizeLayerValidationFixture&lt; TensorType, AccessorType, FunctionType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_58_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_magnitude_validation_fixture.xhtml" target="_self">MagnitudeValidationFixture&lt; TensorType, AccessorType, FunctionType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_59_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_mean_std_dev_validation_fixture.xhtml" target="_self">MeanStdDevValidationFixture&lt; TensorType, AccessorType, FunctionType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_60_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_median3x3_validation_fixture.xhtml" target="_self">Median3x3ValidationFixture&lt; TensorType, AccessorType, FunctionType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_61_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_min_max_location_validation_fixture.xhtml" target="_self">MinMaxLocationValidationFixture&lt; TensorType, AccessorType, ArrayType, ArrayAccessorType, FunctionType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_62_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_non_linear_filter_validation_fixture.xhtml" target="_self">NonLinearFilterValidationFixture&lt; TensorType, AccessorType, FunctionType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_63_" class="even" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_49_63_" class="arrow" onclick="toggleFolder('49_63_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_normalization_validation_fixed_point_fixture.xhtml" target="_self">NormalizationValidationFixedPointFixture&lt; TensorType, AccessorType, FunctionType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_63_0_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_normalization_validation_fixture.xhtml" target="_self">NormalizationValidationFixture&lt; TensorType, AccessorType, FunctionType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_64_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_permute_validation_fixture.xhtml" target="_self">PermuteValidationFixture&lt; TensorType, AccessorType, FunctionType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_65_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_phase_validation_fixture.xhtml" target="_self">PhaseValidationFixture&lt; TensorType, AccessorType, FunctionType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_66_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_pixel_wise_multiplication_validation_fixture.xhtml" target="_self">PixelWiseMultiplicationValidationFixture&lt; TensorType, AccessorType, FunctionType, T1, T2 &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_67_" class="even" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_49_67_" class="arrow" onclick="toggleFolder('49_67_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_pooling_layer_validation_generic_fixture.xhtml" target="_self">PoolingLayerValidationGenericFixture&lt; TensorType, AccessorType, FunctionType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_67_0_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_global_pooling_layer_validation_fixture.xhtml" target="_self">GlobalPoolingLayerValidationFixture&lt; TensorType, AccessorType, FunctionType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_67_1_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_pooling_layer_validation_fixed_point_fixture.xhtml" target="_self">PoolingLayerValidationFixedPointFixture&lt; TensorType, AccessorType, FunctionType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_67_2_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_pooling_layer_validation_fixture.xhtml" target="_self">PoolingLayerValidationFixture&lt; TensorType, AccessorType, FunctionType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_67_3_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_pooling_layer_validation_quantized_fixture.xhtml" target="_self">PoolingLayerValidationQuantizedFixture&lt; TensorType, AccessorType, FunctionType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_68_" class="even" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_49_68_" class="arrow" onclick="toggleFolder('49_68_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_quantization_validation_fixed_point_fixture.xhtml" target="_self">QuantizationValidationFixedPointFixture&lt; TensorType, AccessorType, FunctionType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_68_0_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_quantization_validation_fixture.xhtml" target="_self">QuantizationValidationFixture&lt; TensorType, AccessorType, FunctionType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_69_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_reduction_operation_validation_fixture.xhtml" target="_self">ReductionOperationValidationFixture&lt; TensorType, AccessorType, FunctionType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_70_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_remap_validation_fixture.xhtml" target="_self">RemapValidationFixture&lt; TensorType, AccessorType, FunctionType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_71_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_reshape_layer_validation_fixture.xhtml" target="_self">ReshapeLayerValidationFixture&lt; TensorType, AccessorType, FunctionType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_72_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_scale_validation_fixture.xhtml" target="_self">ScaleValidationFixture&lt; TensorType, AccessorType, FunctionType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_73_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_scharr_validation_fixture.xhtml" target="_self">ScharrValidationFixture&lt; TensorType, AccessorType, FunctionType, T, U &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_74_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_sobel_validation_fixture.xhtml" target="_self">SobelValidationFixture&lt; TensorType, AccessorType, FunctionType, T, U &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_75_" class="even" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_49_75_" class="arrow" onclick="toggleFolder('49_75_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_softmax_validation_generic_fixture.xhtml" target="_self">SoftmaxValidationGenericFixture&lt; TensorType, AccessorType, FunctionType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_75_0_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_softmax_validation_fixed_point_fixture.xhtml" target="_self">SoftmaxValidationFixedPointFixture&lt; TensorType, AccessorType, FunctionType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_75_1_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_softmax_validation_fixture.xhtml" target="_self">SoftmaxValidationFixture&lt; TensorType, AccessorType, FunctionType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_75_2_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_softmax_validation_quantized_fixture.xhtml" target="_self">SoftmaxValidationQuantizedFixture&lt; TensorType, AccessorType, FunctionType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_76_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_table_lookup_validation_fixture.xhtml" target="_self">TableLookupValidationFixture&lt; TensorType, AccessorType, FunctionType, LutAccessorType, LutType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_77_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_threshold_validation_fixture.xhtml" target="_self">ThresholdValidationFixture&lt; TensorType, AccessorType, FunctionType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_78_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_transpose_validation_fixture.xhtml" target="_self">TransposeValidationFixture&lt; TensorType, AccessorType, FunctionType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_79_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_warp_affine_validation_fixture.xhtml" target="_self">WarpAffineValidationFixture&lt; TensorType, AccessorType, FunctionType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_80_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_warp_perspective_validation_fixture.xhtml" target="_self">WarpPerspectiveValidationFixture&lt; TensorType, AccessorType, FunctionType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_81_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_winograd_layer_validation_fixture.xhtml" target="_self">WinogradLayerValidationFixture&lt; TensorType, AccessorType, FunctionType, T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_50_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml" target="_self">Framework</a></td><td class="desc">Main framework class </td></tr>
<tr id="row_51_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_51_" class="arrow" onclick="toggleFolder('51_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_fully_connected_layer_dataset.xhtml" target="_self">FullyConnectedLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_51_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_alex_net_fully_connected_layer_dataset.xhtml" target="_self">AlexNetFullyConnectedLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_51_1_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_goog_le_net_inception_v1_fully_connected_layer_dataset.xhtml" target="_self">GoogLeNetInceptionV1FullyConnectedLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_51_2_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_goog_le_net_inception_v4_fully_connected_layer_dataset.xhtml" target="_self">GoogLeNetInceptionV4FullyConnectedLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_51_3_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_large_fully_connected_layer_dataset.xhtml" target="_self">LargeFullyConnectedLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_51_4_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_le_net5_fully_connected_layer_dataset.xhtml" target="_self">LeNet5FullyConnectedLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_51_5_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_small_fully_connected_layer_dataset.xhtml" target="_self">SmallFullyConnectedLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_51_6_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_v_g_g16_fully_connected_layer_dataset.xhtml" target="_self">VGG16FullyConnectedLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_52_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml" target="_self">functions</a></td><td class="desc"></td></tr>
<tr id="row_53_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_kernel.xhtml" target="_self">GCKernel</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_g_c_kernel.xhtml" title="GCKernel class. ">GCKernel</a> class </td></tr>
<tr id="row_54_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_kernel_library.xhtml" target="_self">GCKernelLibrary</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_g_c_kernel_library.xhtml" title="GCKernelLibrary class. ">GCKernelLibrary</a> class </td></tr>
<tr id="row_55_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_program.xhtml" target="_self">GCProgram</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_g_c_program.xhtml" title="GCProgram class. ">GCProgram</a> class </td></tr>
<tr id="row_56_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_scheduler.xhtml" target="_self">GCScheduler</a></td><td class="desc">Provides global access to a OpenGL ES context and command queue </td></tr>
<tr id="row_57_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_57_" class="arrow" onclick="toggleFolder('57_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="class_gemm_common.xhtml" target="_self">GemmCommon&lt; To, Tr &gt;</a></td><td class="desc"></td></tr>
<tr id="row_57_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="class_gemm_interleaved.xhtml" target="_self">GemmInterleaved&lt; strategy, To, Tr &gt;</a></td><td class="desc"></td></tr>
<tr id="row_58_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_58_" class="arrow" onclick="toggleFolder('58_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_g_e_m_m_dataset.xhtml" target="_self">GEMMDataset</a></td><td class="desc"></td></tr>
<tr id="row_58_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_google_net_g_e_m_m_dataset.xhtml" target="_self">GoogleNetGEMMDataset</a></td><td class="desc"></td></tr>
<tr id="row_58_1_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_goog_le_net_inception_v1_g_e_m_m_dataset.xhtml" target="_self">GoogLeNetInceptionV1GEMMDataset</a></td><td class="desc"></td></tr>
<tr id="row_58_2_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_large_g_e_m_m_dataset.xhtml" target="_self">LargeGEMMDataset</a></td><td class="desc"></td></tr>
<tr id="row_58_3_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_matrix_multiply_g_e_m_m_dataset.xhtml" target="_self">MatrixMultiplyGEMMDataset</a></td><td class="desc"></td></tr>
<tr id="row_58_4_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_small_g_e_m_m_dataset.xhtml" target="_self">SmallGEMMDataset</a></td><td class="desc"></td></tr>
<tr id="row_59_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml" target="_self">GEMMInfo</a></td><td class="desc">GEMM Information class </td></tr>
<tr id="row_60_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_60_" class="arrow" onclick="toggleFolder('60_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_g_e_m_m_lowp_dataset.xhtml" target="_self">GEMMLowpDataset</a></td><td class="desc"></td></tr>
<tr id="row_60_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_large_g_e_m_m_lowp_dataset.xhtml" target="_self">LargeGEMMLowpDataset</a></td><td class="desc"></td></tr>
<tr id="row_60_1_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_small_g_e_m_m_lowp_dataset.xhtml" target="_self">SmallGEMMLowpDataset</a></td><td class="desc"></td></tr>
<tr id="row_61_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1detail_1_1get__tensor__info__t.xhtml" target="_self">get_tensor_info_t&lt; T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_62_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1detail_1_1get__tensor__info__t_3_01_i_tensor_info_01_5_01_4.xhtml" target="_self">get_tensor_info_t&lt; ITensorInfo * &gt;</a></td><td class="desc"></td></tr>
<tr id="row_63_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structmali__userspace_1_1gpu__props.xhtml" target="_self">gpu_props</a></td><td class="desc"></td></tr>
<tr id="row_64_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structmali__userspace_1_1gpu__raw__gpu__props.xhtml" target="_self">gpu_raw_gpu_props</a></td><td class="desc"></td></tr>
<tr id="row_65_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml" target="_self">Graph</a></td><td class="desc"><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml" title="Graph class. ">Graph</a> class </td></tr>
<tr id="row_66_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_graph_context.xhtml" target="_self">GraphContext</a></td><td class="desc"><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml" title="Graph class. ">Graph</a> context </td></tr>
<tr id="row_67_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_graph_hints.xhtml" target="_self">GraphHints</a></td><td class="desc">Hints that can be passed to the graph to expose parameterization </td></tr>
<tr id="row_68_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1validation_1_1_harris_corners_parameters.xhtml" target="_self">HarrisCornersParameters</a></td><td class="desc">Parameters of Harris Corners algorithm </td></tr>
<tr id="row_69_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml" target="_self">HOGInfo</a></td><td class="desc">Store the <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object. ">HOG</a>'s metadata </td></tr>
<tr id="row_70_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_70_" class="arrow" onclick="toggleFolder('70_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_i_accessor.xhtml" target="_self">IAccessor</a></td><td class="desc">Common interface to provide information and access to tensor like structures </td></tr>
<tr id="row_70_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_accessor.xhtml" target="_self">Accessor</a></td><td class="desc"><a class="el" href="classarm__compute_1_1test_1_1_accessor.xhtml" title="Accessor implementation for Tensor objects. ">Accessor</a> implementation for <a class="el" href="classarm__compute_1_1_tensor.xhtml">Tensor</a> objects </td></tr>
<tr id="row_70_1_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_c_l_accessor.xhtml" target="_self">CLAccessor</a></td><td class="desc"><a class="el" href="classarm__compute_1_1test_1_1_accessor.xhtml" title="Accessor implementation for Tensor objects. ">Accessor</a> implementation for <a class="el" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a> objects </td></tr>
<tr id="row_70_2_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_g_c_accessor.xhtml" target="_self">GCAccessor</a></td><td class="desc"><a class="el" href="classarm__compute_1_1test_1_1_accessor.xhtml" title="Accessor implementation for Tensor objects. ">Accessor</a> implementation for <a class="el" href="classarm__compute_1_1_g_c_tensor.xhtml">GCTensor</a> objects </td></tr>
<tr id="row_70_3_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml" target="_self">SimpleTensor&lt; T &gt;</a></td><td class="desc">Simple tensor object that stores elements in a consecutive chunk of memory </td></tr>
<tr id="row_70_4_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml" target="_self">SimpleTensor&lt; float &gt;</a></td><td class="desc"></td></tr>
<tr id="row_70_5_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml" target="_self">SimpleTensor&lt; int32_t &gt;</a></td><td class="desc"></td></tr>
<tr id="row_70_6_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml" target="_self">SimpleTensor&lt; T2 &gt;</a></td><td class="desc"></td></tr>
<tr id="row_70_7_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml" target="_self">SimpleTensor&lt; T3 &gt;</a></td><td class="desc"></td></tr>
<tr id="row_70_8_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml" target="_self">SimpleTensor&lt; uint32_t &gt;</a></td><td class="desc"></td></tr>
<tr id="row_70_9_" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_70_9_" class="arrow" onclick="toggleFolder('70_9_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml" target="_self">SimpleTensor&lt; uint8_t &gt;</a></td><td class="desc"></td></tr>
<tr id="row_70_9_0_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_raw_tensor.xhtml" target="_self">RawTensor</a></td><td class="desc">Subclass of <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml" title="Simple tensor object that stores elements in a consecutive chunk of memory. ">SimpleTensor</a> using uint8_t as value type </td></tr>
<tr id="row_71_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_71_" class="arrow" onclick="toggleFolder('71_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_access_window.xhtml" target="_self">IAccessWindow</a></td><td class="desc">Interface describing methods to update access window and padding based on kernel parameters </td></tr>
<tr id="row_71_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_access_window_auto_padding.xhtml" target="_self">AccessWindowAutoPadding</a></td><td class="desc">Dummy access window </td></tr>
<tr id="row_71_1_" class="even" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_71_1_" class="arrow" onclick="toggleFolder('71_1_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_access_window_rectangle.xhtml" target="_self">AccessWindowRectangle</a></td><td class="desc">Implementation of a rectangular access pattern </td></tr>
<tr id="row_71_1_0_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_access_window_horizontal.xhtml" target="_self">AccessWindowHorizontal</a></td><td class="desc">Implementation of a row access pattern </td></tr>
<tr id="row_71_1_1_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_access_window_transpose.xhtml" target="_self">AccessWindowTranspose</a></td><td class="desc">Implementation of a XY-transpose access pattern </td></tr>
<tr id="row_71_1_2_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_access_window_vertical.xhtml" target="_self">AccessWindowVertical</a></td><td class="desc">Implementation of a column access pattern </td></tr>
<tr id="row_71_2_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_access_window_static.xhtml" target="_self">AccessWindowStatic</a></td><td class="desc">Implementation of a static rectangular access pattern </td></tr>
<tr id="row_72_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_72_" class="arrow" onclick="toggleFolder('72_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_allocator.xhtml" target="_self">IAllocator</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_allocator.xhtml" title="Default malloc allocator implementation. ">Allocator</a> interface </td></tr>
<tr id="row_72_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_allocator.xhtml" target="_self">Allocator</a></td><td class="desc">Default malloc allocator implementation </td></tr>
<tr id="row_72_1_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_buffer_allocator.xhtml" target="_self">CLBufferAllocator</a></td><td class="desc">Default OpenCL cl buffer allocator implementation </td></tr>
<tr id="row_73_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_73_" class="arrow" onclick="toggleFolder('73_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_array.xhtml" target="_self">IArray&lt; T &gt;</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_array.xhtml" title="Basic implementation of the IArray interface which allocates a static number of T values...">Array</a> of type T </td></tr>
<tr id="row_73_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_array.xhtml" target="_self">Array&lt; T &gt;</a></td><td class="desc">Basic implementation of the <a class="el" href="classarm__compute_1_1_i_array.xhtml" title="Array of type T. ">IArray</a> interface which allocates a static number of T values </td></tr>
<tr id="row_73_1_" class="even" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_73_1_" class="arrow" onclick="toggleFolder('73_1_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_c_l_array.xhtml" target="_self">ICLArray&lt; T &gt;</a></td><td class="desc">Interface for OpenCL <a class="el" href="classarm__compute_1_1_array.xhtml" title="Basic implementation of the IArray interface which allocates a static number of T values...">Array</a> </td></tr>
<tr id="row_73_1_0_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_array.xhtml" target="_self">CLArray&lt; T &gt;</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_c_l_array.xhtml" title="CLArray implementation. ">CLArray</a> implementation </td></tr>
<tr id="row_74_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_74_" class="arrow" onclick="toggleFolder('74_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_array.xhtml" target="_self">IArray&lt; NELKInternalKeypoint &gt;</a></td><td class="desc"></td></tr>
<tr id="row_74_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_array.xhtml" target="_self">Array&lt; NELKInternalKeypoint &gt;</a></td><td class="desc"></td></tr>
<tr id="row_75_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_75_" class="arrow" onclick="toggleFolder('75_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_i_array_accessor.xhtml" target="_self">IArrayAccessor&lt; T &gt;</a></td><td class="desc">Common interface to provide information and access to array like structures </td></tr>
<tr id="row_75_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_array_accessor.xhtml" target="_self">ArrayAccessor&lt; T &gt;</a></td><td class="desc"><a class="el" href="classarm__compute_1_1test_1_1_array_accessor.xhtml" title="ArrayAccessor implementation for Array objects. ">ArrayAccessor</a> implementation for <a class="el" href="classarm__compute_1_1_array.xhtml">Array</a> objects </td></tr>
<tr id="row_75_1_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_c_l_array_accessor.xhtml" target="_self">CLArrayAccessor&lt; T &gt;</a></td><td class="desc"><a class="el" href="classarm__compute_1_1test_1_1_accessor.xhtml" title="Accessor implementation for Tensor objects. ">Accessor</a> implementation for <a class="el" href="classarm__compute_1_1_c_l_array.xhtml">CLArray</a> objects </td></tr>
<tr id="row_76_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1misc_1_1_i_cloneable.xhtml" target="_self">ICloneable&lt; T &gt;</a></td><td class="desc">Clonable Interface </td></tr>
<tr id="row_77_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_77_" class="arrow" onclick="toggleFolder('77_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1misc_1_1_i_cloneable.xhtml" target="_self">ICloneable&lt; ITensorInfo &gt;</a></td><td class="desc"></td></tr>
<tr id="row_77_0_" class="even" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_77_0_" class="arrow" onclick="toggleFolder('77_0_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml" target="_self">ITensorInfo</a></td><td class="desc">Store the tensor's metadata </td></tr>
<tr id="row_77_0_0_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_sub_tensor_info.xhtml" target="_self">SubTensorInfo</a></td><td class="desc">Store the sub tensor's metadata </td></tr>
<tr id="row_77_0_1_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_tensor_info.xhtml" target="_self">TensorInfo</a></td><td class="desc">Store the tensor's metadata </td></tr>
<tr id="row_78_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_78_" class="arrow" onclick="toggleFolder('78_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_c_l_tuner.xhtml" target="_self">ICLTuner</a></td><td class="desc">Basic interface for tuning the OpenCL kernels </td></tr>
<tr id="row_78_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_tuner.xhtml" target="_self">CLTuner</a></td><td class="desc">Basic implementation of the OpenCL tuner interface </td></tr>
<tr id="row_79_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_79_" class="arrow" onclick="toggleFolder('79_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1logging_1_1_i_decorator.xhtml" target="_self">IDecorator</a></td><td class="desc">Log message decorator interface </td></tr>
<tr id="row_79_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1logging_1_1_date_decorator.xhtml" target="_self">DateDecorator</a></td><td class="desc">Date Decorator </td></tr>
<tr id="row_79_1_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1logging_1_1_log_level_decorator.xhtml" target="_self">LogLevelDecorator</a></td><td class="desc">Log Level Decorator </td></tr>
<tr id="row_79_2_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1logging_1_1_string_decorator.xhtml" target="_self">StringDecorator</a></td><td class="desc">String Decorator </td></tr>
<tr id="row_79_3_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1logging_1_1_thread_id_decorator.xhtml" target="_self">ThreadIdDecorator</a></td><td class="desc">Thread ID Decorator </td></tr>
<tr id="row_80_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_80_" class="arrow" onclick="toggleFolder('80_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_distribution.xhtml" target="_self">IDistribution</a></td><td class="desc">Interface for distribution objects </td></tr>
<tr id="row_80_0_" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_80_0_" class="arrow" onclick="toggleFolder('80_0_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_distribution1_d.xhtml" target="_self">IDistribution1D</a></td><td class="desc">1D Distribution interface </td></tr>
<tr id="row_80_0_0_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_distribution1_d.xhtml" target="_self">Distribution1D</a></td><td class="desc">Basic implementation of the 1D distribution interface </td></tr>
<tr id="row_80_0_1_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_80_0_1_" class="arrow" onclick="toggleFolder('80_0_1_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_c_l_distribution1_d.xhtml" target="_self">ICLDistribution1D</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_i_c_l_distribution1_d.xhtml" title="ICLDistribution1D interface class. ">ICLDistribution1D</a> interface class </td></tr>
<tr id="row_80_0_1_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_distribution1_d.xhtml" target="_self">CLDistribution1D</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_c_l_distribution1_d.xhtml" title="CLDistribution1D object class. ">CLDistribution1D</a> object class </td></tr>
<tr id="row_81_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_81_" class="arrow" onclick="toggleFolder('81_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_function.xhtml" target="_self">IFunction</a></td><td class="desc">Base class for all functions </td></tr>
<tr id="row_81_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_batch_normalization_layer.xhtml" target="_self">CLBatchNormalizationLayer</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_normalization_layer_kernel.xhtml">CLNormalizationLayerKernel</a> and simulate a batch normalization layer </td></tr>
<tr id="row_81_1_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_canny_edge.xhtml" target="_self">CLCannyEdge</a></td><td class="desc">Basic function to execute canny edge on OpenCL </td></tr>
<tr id="row_81_2_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_convolution_layer.xhtml" target="_self">CLConvolutionLayer</a></td><td class="desc">Basic function to compute the convolution layer </td></tr>
<tr id="row_81_3_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_convolution_layer_reshape_weights.xhtml" target="_self">CLConvolutionLayerReshapeWeights</a></td><td class="desc">Function to reshape and transpose the weights </td></tr>
<tr id="row_81_4_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_convolution_square.xhtml" target="_self">CLConvolutionSquare&lt; matrix_size &gt;</a></td><td class="desc">Basic function to execute square convolution.Currently it supports 5x5, 7x7, 9x9 </td></tr>
<tr id="row_81_5_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_depth_concatenate_layer.xhtml" target="_self">CLDepthConcatenateLayer</a></td><td class="desc">Basic function to execute concatenate tensors along z axis </td></tr>
<tr id="row_81_6_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_depthwise_convolution_layer.xhtml" target="_self">CLDepthwiseConvolutionLayer</a></td><td class="desc">Basic function to execute a generic depthwise convolution </td></tr>
<tr id="row_81_7_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_depthwise_convolution_layer3x3.xhtml" target="_self">CLDepthwiseConvolutionLayer3x3</a></td><td class="desc">Basic function to execute a depthwise convolution for kernel size 3x3xC </td></tr>
<tr id="row_81_8_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_depthwise_separable_convolution_layer.xhtml" target="_self">CLDepthwiseSeparableConvolutionLayer</a></td><td class="desc">Basic function to execute depthwise convolution </td></tr>
<tr id="row_81_9_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_dequantization_layer.xhtml" target="_self">CLDequantizationLayer</a></td><td class="desc">Basic function to simulate a dequantization layer </td></tr>
<tr id="row_81_10_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_direct_convolution_layer.xhtml" target="_self">CLDirectConvolutionLayer</a></td><td class="desc">Basic function to execute direct convolution function: </td></tr>
<tr id="row_81_11_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_equalize_histogram.xhtml" target="_self">CLEqualizeHistogram</a></td><td class="desc">Basic function to execute histogram equalization </td></tr>
<tr id="row_81_12_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_fast_corners.xhtml" target="_self">CLFastCorners</a></td><td class="desc">Basic function to execute fast corners </td></tr>
<tr id="row_81_13_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_fully_connected_layer.xhtml" target="_self">CLFullyConnectedLayer</a></td><td class="desc">Basic function to compute a Fully Connected layer on OpenCL </td></tr>
<tr id="row_81_14_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_gaussian5x5.xhtml" target="_self">CLGaussian5x5</a></td><td class="desc">Basic function to execute gaussian filter 5x5 </td></tr>
<tr id="row_81_15_" class="even" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_81_15_" class="arrow" onclick="toggleFolder('81_15_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_gaussian_pyramid.xhtml" target="_self">CLGaussianPyramid</a></td><td class="desc">Common interface for all Gaussian pyramid functions </td></tr>
<tr id="row_81_15_0_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_gaussian_pyramid_half.xhtml" target="_self">CLGaussianPyramidHalf</a></td><td class="desc">Basic function to execute gaussian pyramid with HALF scale factor </td></tr>
<tr id="row_81_15_1_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_gaussian_pyramid_orb.xhtml" target="_self">CLGaussianPyramidOrb</a></td><td class="desc">Basic function to execute gaussian pyramid with ORB scale factor </td></tr>
<tr id="row_81_16_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m.xhtml" target="_self">CLGEMM</a></td><td class="desc">Basic function to execute GEMM on OpenCL </td></tr>
<tr id="row_81_17_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_multiply_core.xhtml" target="_self">CLGEMMLowpMatrixMultiplyCore</a></td><td class="desc">Basic function to execute GEMMLowpMatrixMultiplyCore on OpenCL </td></tr>
<tr id="row_81_18_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_harris_corners.xhtml" target="_self">CLHarrisCorners</a></td><td class="desc">Basic function to execute harris corners detection </td></tr>
<tr id="row_81_19_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_histogram.xhtml" target="_self">CLHistogram</a></td><td class="desc">Basic function to execute histogram </td></tr>
<tr id="row_81_20_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_h_o_g_descriptor.xhtml" target="_self">CLHOGDescriptor</a></td><td class="desc">Basic function to calculate <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object. ">HOG</a> descriptor </td></tr>
<tr id="row_81_21_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_h_o_g_detector.xhtml" target="_self">CLHOGDetector</a></td><td class="desc">Basic function to execute <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object. ">HOG</a> detector based on linear SVM </td></tr>
<tr id="row_81_22_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_h_o_g_gradient.xhtml" target="_self">CLHOGGradient</a></td><td class="desc">Basic function to calculate the gradient for <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object. ">HOG</a> </td></tr>
<tr id="row_81_23_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_h_o_g_multi_detection.xhtml" target="_self">CLHOGMultiDetection</a></td><td class="desc">Basic function to detect multiple objects (or the same object at different scales) on the same input image using <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object. ">HOG</a> </td></tr>
<tr id="row_81_24_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_integral_image.xhtml" target="_self">CLIntegralImage</a></td><td class="desc">Basic function to execute integral image </td></tr>
<tr id="row_81_25_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_l2_normalize_layer.xhtml" target="_self">CLL2NormalizeLayer</a></td><td class="desc">Perform reduction operation </td></tr>
<tr id="row_81_26_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_laplacian_pyramid.xhtml" target="_self">CLLaplacianPyramid</a></td><td class="desc">Basic function to execute laplacian pyramid </td></tr>
<tr id="row_81_27_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_laplacian_reconstruct.xhtml" target="_self">CLLaplacianReconstruct</a></td><td class="desc">Basic function to execute laplacian reconstruction </td></tr>
<tr id="row_81_28_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_locally_connected_layer.xhtml" target="_self">CLLocallyConnectedLayer</a></td><td class="desc">Basic function to compute the locally connected layer </td></tr>
<tr id="row_81_29_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_mean_std_dev.xhtml" target="_self">CLMeanStdDev</a></td><td class="desc">Basic function to execute mean and standard deviation by calling <a class="el" href="classarm__compute_1_1_c_l_mean_std_dev_kernel.xhtml">CLMeanStdDevKernel</a> </td></tr>
<tr id="row_81_30_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_min_max_location.xhtml" target="_self">CLMinMaxLocation</a></td><td class="desc">Basic function to execute min and max location </td></tr>
<tr id="row_81_31_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_normalization_layer.xhtml" target="_self">CLNormalizationLayer</a></td><td class="desc">Basic function to compute a normalization layer </td></tr>
<tr id="row_81_32_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_optical_flow.xhtml" target="_self">CLOpticalFlow</a></td><td class="desc">Basic function to execute optical flow </td></tr>
<tr id="row_81_33_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_quantization_layer.xhtml" target="_self">CLQuantizationLayer</a></td><td class="desc">Basic function to simulate a quantization layer </td></tr>
<tr id="row_81_34_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_reduction_operation.xhtml" target="_self">CLReductionOperation</a></td><td class="desc">Perform reduction operation </td></tr>
<tr id="row_81_35_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_sobel5x5.xhtml" target="_self">CLSobel5x5</a></td><td class="desc">Basic function to execute sobel 5x5 filter </td></tr>
<tr id="row_81_36_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_sobel7x7.xhtml" target="_self">CLSobel7x7</a></td><td class="desc">Basic function to execute sobel 7x7 filter </td></tr>
<tr id="row_81_37_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_softmax_layer.xhtml" target="_self">CLSoftmaxLayer</a></td><td class="desc">Basic function to compute a SoftmaxLayer </td></tr>
<tr id="row_81_38_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_batch_normalization_layer.xhtml" target="_self">GCBatchNormalizationLayer</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_g_c_batch_normalization_layer_kernel.xhtml">GCBatchNormalizationLayerKernel</a> and simulate a batch normalization layer </td></tr>
<tr id="row_81_39_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_depth_concatenate_layer.xhtml" target="_self">GCDepthConcatenateLayer</a></td><td class="desc">Basic function to execute concatenate tensors along z axis </td></tr>
<tr id="row_81_40_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_dropout_layer.xhtml" target="_self">GCDropoutLayer</a></td><td class="desc">Basic function to do dropout op </td></tr>
<tr id="row_81_41_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_fully_connected_layer.xhtml" target="_self">GCFullyConnectedLayer</a></td><td class="desc">Basic function to compute a Fully Connected layer on OpenGL ES </td></tr>
<tr id="row_81_42_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_g_e_m_m.xhtml" target="_self">GCGEMM</a></td><td class="desc">Basic function to execute GEMM on OpenGLES Compute </td></tr>
<tr id="row_81_43_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_normalization_layer.xhtml" target="_self">GCNormalizationLayer</a></td><td class="desc">Basic function to compute a normalization layer </td></tr>
<tr id="row_81_44_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_softmax_layer.xhtml" target="_self">GCSoftmaxLayer</a></td><td class="desc">Basic function to compute a SoftmaxLayer </td></tr>
<tr id="row_81_45_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_c_l_map.xhtml" target="_self">CLMap</a></td><td class="desc">OpenCL map function </td></tr>
<tr id="row_81_46_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_c_l_unmap.xhtml" target="_self">CLUnmap</a></td><td class="desc">OpenCL un-map function </td></tr>
<tr id="row_81_47_" class="even" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_81_47_" class="arrow" onclick="toggleFolder('81_47_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_c_l_simple_function.xhtml" target="_self">ICLSimpleFunction</a></td><td class="desc">Basic interface for functions which have a single OpenCL kernel </td></tr>
<tr id="row_81_47_0_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_absolute_difference.xhtml" target="_self">CLAbsoluteDifference</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_absolute_difference_kernel.xhtml">CLAbsoluteDifferenceKernel</a> </td></tr>
<tr id="row_81_47_1_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_accumulate.xhtml" target="_self">CLAccumulate</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_accumulate_kernel.xhtml">CLAccumulateKernel</a> </td></tr>
<tr id="row_81_47_2_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_accumulate_squared.xhtml" target="_self">CLAccumulateSquared</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_accumulate_squared_kernel.xhtml">CLAccumulateSquaredKernel</a> </td></tr>
<tr id="row_81_47_3_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_accumulate_weighted.xhtml" target="_self">CLAccumulateWeighted</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_accumulate_weighted_kernel.xhtml">CLAccumulateWeightedKernel</a> </td></tr>
<tr id="row_81_47_4_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_activation_layer.xhtml" target="_self">CLActivationLayer</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_activation_layer_kernel.xhtml">CLActivationLayerKernel</a> </td></tr>
<tr id="row_81_47_5_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_arithmetic_addition.xhtml" target="_self">CLArithmeticAddition</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_arithmetic_addition_kernel.xhtml">CLArithmeticAdditionKernel</a> </td></tr>
<tr id="row_81_47_6_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_arithmetic_subtraction.xhtml" target="_self">CLArithmeticSubtraction</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_arithmetic_subtraction_kernel.xhtml">CLArithmeticSubtractionKernel</a> </td></tr>
<tr id="row_81_47_7_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_bitwise_and.xhtml" target="_self">CLBitwiseAnd</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_bitwise_and_kernel.xhtml">CLBitwiseAndKernel</a> </td></tr>
<tr id="row_81_47_8_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_bitwise_not.xhtml" target="_self">CLBitwiseNot</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_bitwise_not_kernel.xhtml">CLBitwiseNotKernel</a> </td></tr>
<tr id="row_81_47_9_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_bitwise_or.xhtml" target="_self">CLBitwiseOr</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_bitwise_or_kernel.xhtml">CLBitwiseOrKernel</a> </td></tr>
<tr id="row_81_47_10_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_bitwise_xor.xhtml" target="_self">CLBitwiseXor</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_bitwise_xor_kernel.xhtml">CLBitwiseXorKernel</a> </td></tr>
<tr id="row_81_47_11_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_box3x3.xhtml" target="_self">CLBox3x3</a></td><td class="desc">Basic function to execute box filter 3x3 </td></tr>
<tr id="row_81_47_12_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_channel_combine.xhtml" target="_self">CLChannelCombine</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_channel_combine_kernel.xhtml">CLChannelCombineKernel</a> to perform channel combination </td></tr>
<tr id="row_81_47_13_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_channel_extract.xhtml" target="_self">CLChannelExtract</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_channel_extract_kernel.xhtml">CLChannelExtractKernel</a> to perform channel extraction </td></tr>
<tr id="row_81_47_14_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_color_convert.xhtml" target="_self">CLColorConvert</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_color_convert_kernel.xhtml">CLColorConvertKernel</a> </td></tr>
<tr id="row_81_47_15_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_convolution3x3.xhtml" target="_self">CLConvolution3x3</a></td><td class="desc">Basic function to execute convolution of size 3x3 </td></tr>
<tr id="row_81_47_16_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_convolution_rectangle.xhtml" target="_self">CLConvolutionRectangle</a></td><td class="desc">Basic function to execute non-square convolution </td></tr>
<tr id="row_81_47_17_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_depth_convert_layer.xhtml" target="_self">CLDepthConvertLayer</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_depth_convert_layer_kernel.xhtml">CLDepthConvertLayerKernel</a> </td></tr>
<tr id="row_81_47_18_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_derivative.xhtml" target="_self">CLDerivative</a></td><td class="desc">Basic function to execute first order derivative operator </td></tr>
<tr id="row_81_47_19_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_dilate.xhtml" target="_self">CLDilate</a></td><td class="desc">Basic function to execute dilate </td></tr>
<tr id="row_81_47_20_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_erode.xhtml" target="_self">CLErode</a></td><td class="desc">Basic function to execute erode </td></tr>
<tr id="row_81_47_21_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_fill_border.xhtml" target="_self">CLFillBorder</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_fill_border_kernel.xhtml">CLFillBorderKernel</a> </td></tr>
<tr id="row_81_47_22_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_flatten_layer.xhtml" target="_self">CLFlattenLayer</a></td><td class="desc">Basic function to execute flatten </td></tr>
<tr id="row_81_47_23_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_floor.xhtml" target="_self">CLFloor</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_floor_kernel.xhtml">CLFloorKernel</a> </td></tr>
<tr id="row_81_47_24_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_fully_connected_layer_reshape_weights.xhtml" target="_self">CLFullyConnectedLayerReshapeWeights</a></td><td class="desc">Basic function to reshape the weights of Fully Connected layer with OpenCL </td></tr>
<tr id="row_81_47_25_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_gaussian3x3.xhtml" target="_self">CLGaussian3x3</a></td><td class="desc">Basic function to execute gaussian filter 3x3 </td></tr>
<tr id="row_81_47_26_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_interleave4x4.xhtml" target="_self">CLGEMMInterleave4x4</a></td><td class="desc">Basic function to execute <a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_interleave4x4_kernel.xhtml" title="OpenCL kernel which interleaves the elements of a matrix A in chunk of 4x4. ">CLGEMMInterleave4x4Kernel</a> </td></tr>
<tr id="row_81_47_27_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_lowp_quantize_down_int32_to_uint8_scale.xhtml" target="_self">CLGEMMLowpQuantizeDownInt32ToUint8Scale</a></td><td class="desc">Basic function to execute <a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_lowp_quantize_down_int32_to_uint8_scale.xhtml" title="Basic function to execute CLGEMMLowpQuantizeDownInt32ToUint8Scale on OpenCL. ">CLGEMMLowpQuantizeDownInt32ToUint8Scale</a> on OpenCL </td></tr>
<tr id="row_81_47_28_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_lowp_quantize_down_int32_to_uint8_scale_by_fixed_point.xhtml" target="_self">CLGEMMLowpQuantizeDownInt32ToUint8ScaleByFixedPoint</a></td><td class="desc">Basic function to execute <a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_lowp_quantize_down_int32_to_uint8_scale_by_fixed_point.xhtml" title="Basic function to execute CLGEMMLowpQuantizeDownInt32ToUint8ScaleByFixedPoint on OpenCL. ">CLGEMMLowpQuantizeDownInt32ToUint8ScaleByFixedPoint</a> on OpenCL </td></tr>
<tr id="row_81_47_29_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_transpose1x_w.xhtml" target="_self">CLGEMMTranspose1xW</a></td><td class="desc">Basic function to execute <a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_transpose1x_w_kernel.xhtml" title="OpenCL kernel which transposes the elements of a matrix in chunks of 1xW, where W is equal to (16 / e...">CLGEMMTranspose1xWKernel</a> </td></tr>
<tr id="row_81_47_30_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_magnitude.xhtml" target="_self">CLMagnitude</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_magnitude_phase_kernel.xhtml">CLMagnitudePhaseKernel</a> </td></tr>
<tr id="row_81_47_31_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_median3x3.xhtml" target="_self">CLMedian3x3</a></td><td class="desc">Basic function to execute median filter </td></tr>
<tr id="row_81_47_32_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_non_linear_filter.xhtml" target="_self">CLNonLinearFilter</a></td><td class="desc">Basic function to execute non linear filter </td></tr>
<tr id="row_81_47_33_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_non_maxima_suppression3x3.xhtml" target="_self">CLNonMaximaSuppression3x3</a></td><td class="desc">Basic function to execute non-maxima suppression over a 3x3 window </td></tr>
<tr id="row_81_47_34_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_phase.xhtml" target="_self">CLPhase</a></td><td class="desc">Basic function to execute an <a class="el" href="classarm__compute_1_1_c_l_magnitude_phase_kernel.xhtml">CLMagnitudePhaseKernel</a> </td></tr>
<tr id="row_81_47_35_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_pixel_wise_multiplication.xhtml" target="_self">CLPixelWiseMultiplication</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_pixel_wise_multiplication_kernel.xhtml">CLPixelWiseMultiplicationKernel</a> </td></tr>
<tr id="row_81_47_36_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_pooling_layer.xhtml" target="_self">CLPoolingLayer</a></td><td class="desc">Basic function to simulate a pooling layer with the specified pooling operation </td></tr>
<tr id="row_81_47_37_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_remap.xhtml" target="_self">CLRemap</a></td><td class="desc">Basic function to execute remap </td></tr>
<tr id="row_81_47_38_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_reshape_layer.xhtml" target="_self">CLReshapeLayer</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_reshape_layer_kernel.xhtml">CLReshapeLayerKernel</a> </td></tr>
<tr id="row_81_47_39_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_r_o_i_pooling_layer.xhtml" target="_self">CLROIPoolingLayer</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_r_o_i_pooling_layer_kernel.xhtml">CLROIPoolingLayerKernel</a> </td></tr>
<tr id="row_81_47_40_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_scale.xhtml" target="_self">CLScale</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_scale_kernel.xhtml">CLScaleKernel</a> </td></tr>
<tr id="row_81_47_41_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_scharr3x3.xhtml" target="_self">CLScharr3x3</a></td><td class="desc">Basic function to execute scharr 3x3 filter </td></tr>
<tr id="row_81_47_42_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_sobel3x3.xhtml" target="_self">CLSobel3x3</a></td><td class="desc">Basic function to execute sobel 3x3 filter </td></tr>
<tr id="row_81_47_43_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_table_lookup.xhtml" target="_self">CLTableLookup</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_table_lookup_kernel.xhtml">CLTableLookupKernel</a> </td></tr>
<tr id="row_81_47_44_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_threshold.xhtml" target="_self">CLThreshold</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_threshold_kernel.xhtml">CLThresholdKernel</a> </td></tr>
<tr id="row_81_47_45_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_transpose.xhtml" target="_self">CLTranspose</a></td><td class="desc">Basic function to transpose a matrix on OpenCL </td></tr>
<tr id="row_81_47_46_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_warp_affine.xhtml" target="_self">CLWarpAffine</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_warp_affine_kernel.xhtml">CLWarpAffineKernel</a> for AFFINE transformation </td></tr>
<tr id="row_81_47_47_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_warp_perspective.xhtml" target="_self">CLWarpPerspective</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_warp_perspective_kernel.xhtml">CLWarpPerspectiveKernel</a> for PERSPECTIVE transformation </td></tr>
<tr id="row_81_48_" class="even" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_81_48_" class="arrow" onclick="toggleFolder('81_48_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_c_p_p_simple_function.xhtml" target="_self">ICPPSimpleFunction</a></td><td class="desc">Basic interface for functions which have a single CPP kernel </td></tr>
<tr id="row_81_48_0_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_p_p_permute.xhtml" target="_self">CPPPermute</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_p_p_permute_kernel.xhtml">CPPPermuteKernel</a> </td></tr>
<tr id="row_81_49_" class="even" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_81_49_" class="arrow" onclick="toggleFolder('81_49_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_g_c_simple_function.xhtml" target="_self">IGCSimpleFunction</a></td><td class="desc">Basic interface for functions which have a single OpenGL ES kernel </td></tr>
<tr id="row_81_49_0_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_absolute_difference.xhtml" target="_self">GCAbsoluteDifference</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_g_c_absolute_difference_kernel.xhtml">GCAbsoluteDifferenceKernel</a> </td></tr>
<tr id="row_81_49_1_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_activation_layer.xhtml" target="_self">GCActivationLayer</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_g_c_activation_layer_kernel.xhtml">GCActivationLayerKernel</a> </td></tr>
<tr id="row_81_49_2_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_direct_convolution_layer.xhtml" target="_self">GCDirectConvolutionLayer</a></td><td class="desc">Basic function to execute direct convolution function: </td></tr>
<tr id="row_81_49_3_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_fill_border.xhtml" target="_self">GCFillBorder</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_g_c_fill_border_kernel.xhtml">GCFillBorderKernel</a> </td></tr>
<tr id="row_81_49_4_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_fully_connected_layer_reshape_weights.xhtml" target="_self">GCFullyConnectedLayerReshapeWeights</a></td><td class="desc">Basic function to reshape the weights of Fully Connected layer with OpenGL ES </td></tr>
<tr id="row_81_49_5_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_g_e_m_m_interleave4x4.xhtml" target="_self">GCGEMMInterleave4x4</a></td><td class="desc">Basic function to execute <a class="el" href="classarm__compute_1_1_g_c_g_e_m_m_interleave4x4_kernel.xhtml" title="OpenGL ES kernel which interleaves the elements of a matrix A in chunk of 4x4. ">GCGEMMInterleave4x4Kernel</a> </td></tr>
<tr id="row_81_49_6_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_g_e_m_m_transpose1x_w.xhtml" target="_self">GCGEMMTranspose1xW</a></td><td class="desc">Basic function to execute <a class="el" href="classarm__compute_1_1_g_c_g_e_m_m_transpose1x_w_kernel.xhtml" title="OpenGLES kernel which transposes the elements of a matrix in chunks of 1xW, where W is equal to (16 /...">GCGEMMTranspose1xWKernel</a> </td></tr>
<tr id="row_81_49_7_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_pixel_wise_multiplication.xhtml" target="_self">GCPixelWiseMultiplication</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_g_c_pixel_wise_multiplication_kernel.xhtml">GCPixelWiseMultiplicationKernel</a> </td></tr>
<tr id="row_81_49_8_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_pooling_layer.xhtml" target="_self">GCPoolingLayer</a></td><td class="desc">Basic function to simulate a pooling layer with the specified pooling operation </td></tr>
<tr id="row_81_49_9_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_transpose.xhtml" target="_self">GCTranspose</a></td><td class="desc">Basic function to transpose a matrix on OpenGL ES </td></tr>
<tr id="row_81_50_" class="even" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_81_50_" class="arrow" onclick="toggleFolder('81_50_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_n_e_simple_function.xhtml" target="_self">INESimpleFunction</a></td><td class="desc">Basic interface for functions which have a single NEON kernel </td></tr>
<tr id="row_81_50_0_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_absolute_difference.xhtml" target="_self">NEAbsoluteDifference</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_absolute_difference_kernel.xhtml">NEAbsoluteDifferenceKernel</a> </td></tr>
<tr id="row_81_50_1_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_accumulate.xhtml" target="_self">NEAccumulate</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_accumulate_kernel.xhtml">NEAccumulateKernel</a> </td></tr>
<tr id="row_81_50_2_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_accumulate_squared.xhtml" target="_self">NEAccumulateSquared</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_accumulate_squared_kernel.xhtml">NEAccumulateSquaredKernel</a> </td></tr>
<tr id="row_81_50_3_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_accumulate_weighted.xhtml" target="_self">NEAccumulateWeighted</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_accumulate_weighted_kernel.xhtml">NEAccumulateWeightedKernel</a> </td></tr>
<tr id="row_81_50_4_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_activation_layer.xhtml" target="_self">NEActivationLayer</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_activation_layer_kernel.xhtml">NEActivationLayerKernel</a> </td></tr>
<tr id="row_81_50_5_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_arithmetic_addition.xhtml" target="_self">NEArithmeticAddition</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_arithmetic_addition_kernel.xhtml">NEArithmeticAdditionKernel</a> </td></tr>
<tr id="row_81_50_6_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_arithmetic_subtraction.xhtml" target="_self">NEArithmeticSubtraction</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_arithmetic_subtraction_kernel.xhtml">NEArithmeticSubtractionKernel</a> </td></tr>
<tr id="row_81_50_7_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_bitwise_and.xhtml" target="_self">NEBitwiseAnd</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_bitwise_and_kernel.xhtml">NEBitwiseAndKernel</a> </td></tr>
<tr id="row_81_50_8_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_bitwise_not.xhtml" target="_self">NEBitwiseNot</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_bitwise_not_kernel.xhtml">NEBitwiseNotKernel</a> </td></tr>
<tr id="row_81_50_9_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_bitwise_or.xhtml" target="_self">NEBitwiseOr</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_bitwise_or_kernel.xhtml">NEBitwiseOrKernel</a> </td></tr>
<tr id="row_81_50_10_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_bitwise_xor.xhtml" target="_self">NEBitwiseXor</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_bitwise_xor_kernel.xhtml">NEBitwiseXorKernel</a> </td></tr>
<tr id="row_81_50_11_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_box3x3.xhtml" target="_self">NEBox3x3</a></td><td class="desc">Basic function to execute box filter 3x3 </td></tr>
<tr id="row_81_50_12_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_channel_combine.xhtml" target="_self">NEChannelCombine</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_channel_combine_kernel.xhtml">NEChannelCombineKernel</a> to perform channel combination </td></tr>
<tr id="row_81_50_13_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_channel_extract.xhtml" target="_self">NEChannelExtract</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_channel_extract_kernel.xhtml">NEChannelExtractKernel</a> to perform channel extraction </td></tr>
<tr id="row_81_50_14_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_col2_im.xhtml" target="_self">NECol2Im</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_col2_im.xhtml">NECol2Im</a> </td></tr>
<tr id="row_81_50_15_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_color_convert.xhtml" target="_self">NEColorConvert</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_color_convert_kernel.xhtml">NEColorConvertKernel</a> to perform color conversion </td></tr>
<tr id="row_81_50_16_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_convolution3x3.xhtml" target="_self">NEConvolution3x3</a></td><td class="desc">Basic function to execute convolution of size 3x3 </td></tr>
<tr id="row_81_50_17_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_convolution_rectangle.xhtml" target="_self">NEConvolutionRectangle</a></td><td class="desc">Basic function to execute non-square convolution </td></tr>
<tr id="row_81_50_18_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_depth_convert_layer.xhtml" target="_self">NEDepthConvertLayer</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_depth_convert_layer_kernel.xhtml">NEDepthConvertLayerKernel</a> </td></tr>
<tr id="row_81_50_19_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_dilate.xhtml" target="_self">NEDilate</a></td><td class="desc">Basic function to execute dilate </td></tr>
<tr id="row_81_50_20_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_erode.xhtml" target="_self">NEErode</a></td><td class="desc">Basic function to execute erode </td></tr>
<tr id="row_81_50_21_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_flatten_layer.xhtml" target="_self">NEFlattenLayer</a></td><td class="desc">Basic function to execute flatten </td></tr>
<tr id="row_81_50_22_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_floor.xhtml" target="_self">NEFloor</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_floor_kernel.xhtml">NEFloorKernel</a> </td></tr>
<tr id="row_81_50_23_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_gaussian3x3.xhtml" target="_self">NEGaussian3x3</a></td><td class="desc">Basic function to execute gaussian filter 3x3 </td></tr>
<tr id="row_81_50_24_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_interleave4x4.xhtml" target="_self">NEGEMMInterleave4x4</a></td><td class="desc">Basic function to execute <a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_interleave4x4_kernel.xhtml" title="NEON kernel to interleave the elements of a matrix. ">NEGEMMInterleave4x4Kernel</a> </td></tr>
<tr id="row_81_50_25_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_quantize_down_int32_to_uint8_scale.xhtml" target="_self">NEGEMMLowpQuantizeDownInt32ToUint8Scale</a></td><td class="desc">Basic function to execute <a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_quantize_down_int32_to_uint8_scale.xhtml" title="Basic function to execute NEGEMMLowpQuantizeDownInt32ToUint8Scale on NEON. ">NEGEMMLowpQuantizeDownInt32ToUint8Scale</a> on NEON </td></tr>
<tr id="row_81_50_26_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_quantize_down_int32_to_uint8_scale_by_fixed_point.xhtml" target="_self">NEGEMMLowpQuantizeDownInt32ToUint8ScaleByFixedPoint</a></td><td class="desc">Basic function to execute <a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_quantize_down_int32_to_uint8_scale_by_fixed_point.xhtml" title="Basic function to execute NEGEMMLowpQuantizeDownInt32ToUint8ScaleByFixedPoint on NEON. ">NEGEMMLowpQuantizeDownInt32ToUint8ScaleByFixedPoint</a> on NEON </td></tr>
<tr id="row_81_50_27_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_transpose1x_w.xhtml" target="_self">NEGEMMTranspose1xW</a></td><td class="desc">Basic function to execute <a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_transpose1x_w_kernel.xhtml" title="NEON kernel which transposes the elements of a matrix in chunks of 1xW, where W is equal to (16 / ele...">NEGEMMTranspose1xWKernel</a> </td></tr>
<tr id="row_81_50_28_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_h_o_g_detector.xhtml" target="_self">NEHOGDetector</a></td><td class="desc">Basic function to execute <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object. ">HOG</a> detector based on linear SVM </td></tr>
<tr id="row_81_50_29_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_im2_col.xhtml" target="_self">NEIm2Col</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_im2_col_kernel.xhtml">NEIm2ColKernel</a> </td></tr>
<tr id="row_81_50_30_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_integral_image.xhtml" target="_self">NEIntegralImage</a></td><td class="desc">Basic function to run a <a class="el" href="classarm__compute_1_1_n_e_integral_image_kernel.xhtml">NEIntegralImageKernel</a> </td></tr>
<tr id="row_81_50_31_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_magnitude.xhtml" target="_self">NEMagnitude</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_magnitude_phase_kernel.xhtml" title="Template interface for the kernel to compute magnitude and phase. ">NEMagnitudePhaseKernel</a> </td></tr>
<tr id="row_81_50_32_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_median3x3.xhtml" target="_self">NEMedian3x3</a></td><td class="desc">Basic function to execute median filter </td></tr>
<tr id="row_81_50_33_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_non_linear_filter.xhtml" target="_self">NENonLinearFilter</a></td><td class="desc">Basic function to execute non linear filter </td></tr>
<tr id="row_81_50_34_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_non_maxima_suppression3x3.xhtml" target="_self">NENonMaximaSuppression3x3</a></td><td class="desc">Basic function to execute non-maxima suppression over a 3x3 window </td></tr>
<tr id="row_81_50_35_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_phase.xhtml" target="_self">NEPhase</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_magnitude_phase_kernel.xhtml" title="Template interface for the kernel to compute magnitude and phase. ">NEMagnitudePhaseKernel</a> </td></tr>
<tr id="row_81_50_36_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_pixel_wise_multiplication.xhtml" target="_self">NEPixelWiseMultiplication</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_pixel_wise_multiplication_kernel.xhtml">NEPixelWiseMultiplicationKernel</a> </td></tr>
<tr id="row_81_50_37_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_remap.xhtml" target="_self">NERemap</a></td><td class="desc">Basic function to execute remap </td></tr>
<tr id="row_81_50_38_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_reshape_layer.xhtml" target="_self">NEReshapeLayer</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_reshape_layer_kernel.xhtml">NEReshapeLayerKernel</a> </td></tr>
<tr id="row_81_50_39_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_scharr3x3.xhtml" target="_self">NEScharr3x3</a></td><td class="desc">Basic function to execute scharr 3x3 filter </td></tr>
<tr id="row_81_50_40_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_sobel3x3.xhtml" target="_self">NESobel3x3</a></td><td class="desc">Basic function to execute sobel 3x3 filter </td></tr>
<tr id="row_81_50_41_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_table_lookup.xhtml" target="_self">NETableLookup</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_table_lookup_kernel.xhtml">NETableLookupKernel</a> </td></tr>
<tr id="row_81_50_42_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_threshold.xhtml" target="_self">NEThreshold</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_threshold_kernel.xhtml">NEThresholdKernel</a> </td></tr>
<tr id="row_81_50_43_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_transpose.xhtml" target="_self">NETranspose</a></td><td class="desc">Basic function to transpose a matrix on NEON </td></tr>
<tr id="row_81_50_44_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_warp_affine.xhtml" target="_self">NEWarpAffine</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_warp_affine_kernel.xhtml">NEWarpAffineKernel</a> </td></tr>
<tr id="row_81_50_45_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_warp_perspective.xhtml" target="_self">NEWarpPerspective</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_warp_perspective_kernel.xhtml">NEWarpPerspectiveKernel</a> </td></tr>
<tr id="row_81_50_46_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_n_e_synthetize_function.xhtml" target="_self">NESynthetizeFunction&lt; K &gt;</a></td><td class="desc"></td></tr>
<tr id="row_81_50_47_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_n_e_synthetize_function_with_zero_constant_border.xhtml" target="_self">NESynthetizeFunctionWithZeroConstantBorder&lt; K, bordersize &gt;</a></td><td class="desc"></td></tr>
<tr id="row_81_51_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_batch_normalization_layer.xhtml" target="_self">NEBatchNormalizationLayer</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_normalization_layer_kernel.xhtml">NENormalizationLayerKernel</a> and simulate a batch normalization layer </td></tr>
<tr id="row_81_52_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_canny_edge.xhtml" target="_self">NECannyEdge</a></td><td class="desc">Basic function to execute canny edge on NEON </td></tr>
<tr id="row_81_53_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_convolution_layer.xhtml" target="_self">NEConvolutionLayer</a></td><td class="desc">Basic function to simulate a convolution layer </td></tr>
<tr id="row_81_54_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_convolution_layer_reshape_weights.xhtml" target="_self">NEConvolutionLayerReshapeWeights</a></td><td class="desc">Function to reshape and perform 1xW transposition on the weights </td></tr>
<tr id="row_81_55_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_convolution_square.xhtml" target="_self">NEConvolutionSquare&lt; matrix_size &gt;</a></td><td class="desc">Basic function to execute convolution of size 5x5, 7x7, 9x9 </td></tr>
<tr id="row_81_56_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_deconvolution_layer.xhtml" target="_self">NEDeconvolutionLayer</a></td><td class="desc">Function to run the deconvolution layer </td></tr>
<tr id="row_81_57_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_deconvolution_layer_upsample.xhtml" target="_self">NEDeconvolutionLayerUpsample</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_deconvolution_layer_upsample_kernel.xhtml">NEDeconvolutionLayerUpsampleKernel</a> </td></tr>
<tr id="row_81_58_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_depth_concatenate_layer.xhtml" target="_self">NEDepthConcatenateLayer</a></td><td class="desc">Basic function to execute concatenate tensors along z axis </td></tr>
<tr id="row_81_59_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_depthwise_convolution_layer.xhtml" target="_self">NEDepthwiseConvolutionLayer</a></td><td class="desc">Basic function to execute a generic depthwise convolution </td></tr>
<tr id="row_81_60_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_depthwise_convolution_layer3x3.xhtml" target="_self">NEDepthwiseConvolutionLayer3x3</a></td><td class="desc">Basic function to execute a depthwise convolution for kernel size 3x3xC </td></tr>
<tr id="row_81_61_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_depthwise_separable_convolution_layer.xhtml" target="_self">NEDepthwiseSeparableConvolutionLayer</a></td><td class="desc">Basic function to execute depthwise convolution </td></tr>
<tr id="row_81_62_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_dequantization_layer.xhtml" target="_self">NEDequantizationLayer</a></td><td class="desc">Basic function to simulate a dequantization layer </td></tr>
<tr id="row_81_63_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_derivative.xhtml" target="_self">NEDerivative</a></td><td class="desc">Basic function to execute first order derivative operator </td></tr>
<tr id="row_81_64_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_direct_convolution_layer.xhtml" target="_self">NEDirectConvolutionLayer</a></td><td class="desc">Function to run the direct convolution </td></tr>
<tr id="row_81_65_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_equalize_histogram.xhtml" target="_self">NEEqualizeHistogram</a></td><td class="desc">Basic function to execute histogram equalization </td></tr>
<tr id="row_81_66_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_fast_corners.xhtml" target="_self">NEFastCorners</a></td><td class="desc">Basic function to execute fast corners </td></tr>
<tr id="row_81_67_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_fill_border.xhtml" target="_self">NEFillBorder</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_fill_border_kernel.xhtml">NEFillBorderKernel</a> </td></tr>
<tr id="row_81_68_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_fully_connected_layer.xhtml" target="_self">NEFullyConnectedLayer</a></td><td class="desc">Basic function to compute a Fully Connected layer on NEON </td></tr>
<tr id="row_81_69_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_fully_connected_layer_reshape_weights.xhtml" target="_self">NEFullyConnectedLayerReshapeWeights</a></td><td class="desc">Basic function to reshape the weights of Fully Connected layer with NEON </td></tr>
<tr id="row_81_70_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_gaussian5x5.xhtml" target="_self">NEGaussian5x5</a></td><td class="desc">Basic function to execute gaussian filter 5x5 </td></tr>
<tr id="row_81_71_" class="even" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_81_71_" class="arrow" onclick="toggleFolder('81_71_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_gaussian_pyramid.xhtml" target="_self">NEGaussianPyramid</a></td><td class="desc">Common interface for all Gaussian pyramid functions </td></tr>
<tr id="row_81_71_0_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_gaussian_pyramid_half.xhtml" target="_self">NEGaussianPyramidHalf</a></td><td class="desc">Basic function to execute gaussian pyramid with HALF scale factor </td></tr>
<tr id="row_81_71_1_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_gaussian_pyramid_orb.xhtml" target="_self">NEGaussianPyramidOrb</a></td><td class="desc">Basic function to execute gaussian pyramid with ORB scale factor </td></tr>
<tr id="row_81_72_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_g_e_m_m.xhtml" target="_self">NEGEMM</a></td><td class="desc">Basic function to execute GEMM on NEON </td></tr>
<tr id="row_81_73_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_assembly_matrix_multiply_core.xhtml" target="_self">NEGEMMLowpAssemblyMatrixMultiplyCore</a></td><td class="desc">Basic function to execute matrix multiply assembly kernels </td></tr>
<tr id="row_81_74_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_matrix_multiply_core.xhtml" target="_self">NEGEMMLowpMatrixMultiplyCore</a></td><td class="desc">Basic function to execute GEMMLowpMatrixMultiplyCore on NEON </td></tr>
<tr id="row_81_75_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_harris_corners.xhtml" target="_self">NEHarrisCorners</a></td><td class="desc">Basic function to execute harris corners detection </td></tr>
<tr id="row_81_76_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_histogram.xhtml" target="_self">NEHistogram</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_histogram_kernel.xhtml">NEHistogramKernel</a> </td></tr>
<tr id="row_81_77_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_h_o_g_descriptor.xhtml" target="_self">NEHOGDescriptor</a></td><td class="desc">Basic function to calculate <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object. ">HOG</a> descriptor </td></tr>
<tr id="row_81_78_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_h_o_g_gradient.xhtml" target="_self">NEHOGGradient</a></td><td class="desc">Basic function to calculate the gradient for <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object. ">HOG</a> </td></tr>
<tr id="row_81_79_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_h_o_g_multi_detection.xhtml" target="_self">NEHOGMultiDetection</a></td><td class="desc">Basic function to detect multiple objects (or the same object at different scales) on the same input image using <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object. ">HOG</a> </td></tr>
<tr id="row_81_80_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_l2_normalize_layer.xhtml" target="_self">NEL2NormalizeLayer</a></td><td class="desc">Basic function to perform a L2 normalization on a given axis </td></tr>
<tr id="row_81_81_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_laplacian_pyramid.xhtml" target="_self">NELaplacianPyramid</a></td><td class="desc">Basic function to execute laplacian pyramid </td></tr>
<tr id="row_81_82_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_laplacian_reconstruct.xhtml" target="_self">NELaplacianReconstruct</a></td><td class="desc">Basic function to execute laplacian reconstruction </td></tr>
<tr id="row_81_83_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_locally_connected_layer.xhtml" target="_self">NELocallyConnectedLayer</a></td><td class="desc">Basic function to compute the locally connected layer </td></tr>
<tr id="row_81_84_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_mean_std_dev.xhtml" target="_self">NEMeanStdDev</a></td><td class="desc">Basic function to execute mean and std deviation </td></tr>
<tr id="row_81_85_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_min_max_location.xhtml" target="_self">NEMinMaxLocation</a></td><td class="desc">Basic function to execute min and max location </td></tr>
<tr id="row_81_86_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_normalization_layer.xhtml" target="_self">NENormalizationLayer</a></td><td class="desc">Basic function to compute a normalization layer </td></tr>
<tr id="row_81_87_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_optical_flow.xhtml" target="_self">NEOpticalFlow</a></td><td class="desc">Basic function to execute optical flow </td></tr>
<tr id="row_81_88_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_pooling_layer.xhtml" target="_self">NEPoolingLayer</a></td><td class="desc">Basic function to simulate a pooling layer with the specified pooling operation </td></tr>
<tr id="row_81_89_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_quantization_layer.xhtml" target="_self">NEQuantizationLayer</a></td><td class="desc">Basic function to simulate a quantization layer </td></tr>
<tr id="row_81_90_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_reduction_operation.xhtml" target="_self">NEReductionOperation</a></td><td class="desc">Basic function to simulate a reduction operation </td></tr>
<tr id="row_81_91_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_r_o_i_pooling_layer.xhtml" target="_self">NEROIPoolingLayer</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_r_o_i_pooling_layer_kernel.xhtml">NEROIPoolingLayerKernel</a> </td></tr>
<tr id="row_81_92_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_scale.xhtml" target="_self">NEScale</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_scale_kernel.xhtml">NEScaleKernel</a> </td></tr>
<tr id="row_81_93_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_sobel5x5.xhtml" target="_self">NESobel5x5</a></td><td class="desc">Basic function to execute sobel 5x5 filter </td></tr>
<tr id="row_81_94_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_sobel7x7.xhtml" target="_self">NESobel7x7</a></td><td class="desc">Basic function to execute sobel 7x7 filter </td></tr>
<tr id="row_81_95_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_softmax_layer.xhtml" target="_self">NESoftmaxLayer</a></td><td class="desc">Basic function to compute a SoftmaxLayer </td></tr>
<tr id="row_81_96_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_winograd_layer.xhtml" target="_self">NEWinogradLayer</a></td><td class="desc">Basic function to simulate a convolution layer </td></tr>
<tr id="row_82_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_82_" class="arrow" onclick="toggleFolder('82_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_h_o_g.xhtml" target="_self">IHOG</a></td><td class="desc">Interface for <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object. ">HOG</a> data-object </td></tr>
<tr id="row_82_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_h_o_g.xhtml" target="_self">HOG</a></td><td class="desc">CPU implementation of <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object. ">HOG</a> data-object </td></tr>
<tr id="row_82_1_" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_82_1_" class="arrow" onclick="toggleFolder('82_1_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_c_l_h_o_g.xhtml" target="_self">ICLHOG</a></td><td class="desc">Interface for OpenCL <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object. ">HOG</a> data-object </td></tr>
<tr id="row_82_1_0_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_h_o_g.xhtml" target="_self">CLHOG</a></td><td class="desc">OpenCL implementation of <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object. ">HOG</a> data-object </td></tr>
<tr id="row_83_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_83_" class="arrow" onclick="toggleFolder('83_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_kernel.xhtml" target="_self">IKernel</a></td><td class="desc">Common information for all the kernels </td></tr>
<tr id="row_83_0_" class="even" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_83_0_" class="arrow" onclick="toggleFolder('83_0_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_c_l_kernel.xhtml" target="_self">ICLKernel</a></td><td class="desc">Common interface for all the OpenCL kernels </td></tr>
<tr id="row_83_0_0_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_absolute_difference_kernel.xhtml" target="_self">CLAbsoluteDifferenceKernel</a></td><td class="desc">Interface for the absolute difference kernel </td></tr>
<tr id="row_83_0_1_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_activation_layer_kernel.xhtml" target="_self">CLActivationLayerKernel</a></td><td class="desc">Interface for the activation layer kernel </td></tr>
<tr id="row_83_0_2_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_arithmetic_addition_kernel.xhtml" target="_self">CLArithmeticAdditionKernel</a></td><td class="desc">Interface for the arithmetic addition kernel </td></tr>
<tr id="row_83_0_3_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_arithmetic_subtraction_kernel.xhtml" target="_self">CLArithmeticSubtractionKernel</a></td><td class="desc">Interface for the arithmetic subtraction kernel </td></tr>
<tr id="row_83_0_4_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_batch_normalization_layer_kernel.xhtml" target="_self">CLBatchNormalizationLayerKernel</a></td><td class="desc">Interface for the BatchNormalization layer kernel </td></tr>
<tr id="row_83_0_5_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_bitwise_and_kernel.xhtml" target="_self">CLBitwiseAndKernel</a></td><td class="desc">Interface for the bitwise AND operation kernel </td></tr>
<tr id="row_83_0_6_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_bitwise_or_kernel.xhtml" target="_self">CLBitwiseOrKernel</a></td><td class="desc">Interface for the bitwise OR operation kernel </td></tr>
<tr id="row_83_0_7_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_bitwise_xor_kernel.xhtml" target="_self">CLBitwiseXorKernel</a></td><td class="desc">Interface for the bitwise XOR operation kernel </td></tr>
<tr id="row_83_0_8_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_channel_combine_kernel.xhtml" target="_self">CLChannelCombineKernel</a></td><td class="desc">Interface for the channel combine kernel </td></tr>
<tr id="row_83_0_9_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_channel_extract_kernel.xhtml" target="_self">CLChannelExtractKernel</a></td><td class="desc">Interface for the channel extract kernel </td></tr>
<tr id="row_83_0_10_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_col2_im_kernel.xhtml" target="_self">CLCol2ImKernel</a></td><td class="desc">Interface for the col2im reshaping kernel </td></tr>
<tr id="row_83_0_11_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_color_convert_kernel.xhtml" target="_self">CLColorConvertKernel</a></td><td class="desc">Interface for the color convert kernel </td></tr>
<tr id="row_83_0_12_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_convolution_rectangle_kernel.xhtml" target="_self">CLConvolutionRectangleKernel</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_kernel.xhtml" title="Kernel class. ">Kernel</a> for the running convolution on a rectangle matrix </td></tr>
<tr id="row_83_0_13_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_copy_to_array_kernel.xhtml" target="_self">CLCopyToArrayKernel</a></td><td class="desc">CL kernel to copy keypoints information to ICLKeyPointArray and counts the number of key points </td></tr>
<tr id="row_83_0_14_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_depth_concatenate_layer_kernel.xhtml" target="_self">CLDepthConcatenateLayerKernel</a></td><td class="desc">Interface for the depth concatenate kernel </td></tr>
<tr id="row_83_0_15_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_depthwise_convolution_layer3x3_kernel.xhtml" target="_self">CLDepthwiseConvolutionLayer3x3Kernel</a></td><td class="desc">Interface for the kernel to run a 3x3 depthwise convolution on a tensor </td></tr>
<tr id="row_83_0_16_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_depthwise_im2_col_kernel.xhtml" target="_self">CLDepthwiseIm2ColKernel</a></td><td class="desc">Interface for the depthwise im2col reshape kernel </td></tr>
<tr id="row_83_0_17_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_depthwise_vector_to_tensor_kernel.xhtml" target="_self">CLDepthwiseVectorToTensorKernel</a></td><td class="desc">Interface for the depthwise vector to tensor kernel </td></tr>
<tr id="row_83_0_18_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_depthwise_weights_reshape_kernel.xhtml" target="_self">CLDepthwiseWeightsReshapeKernel</a></td><td class="desc">Interface for the depthwise weights reshape kernel </td></tr>
<tr id="row_83_0_19_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_dequantization_layer_kernel.xhtml" target="_self">CLDequantizationLayerKernel</a></td><td class="desc">Interface for the dequantization layer kernel </td></tr>
<tr id="row_83_0_20_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_derivative_kernel.xhtml" target="_self">CLDerivativeKernel</a></td><td class="desc">Interface for the derivative kernel </td></tr>
<tr id="row_83_0_21_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_direct_convolution_layer_kernel.xhtml" target="_self">CLDirectConvolutionLayerKernel</a></td><td class="desc">Interface for the direct convolution kernel </td></tr>
<tr id="row_83_0_22_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_edge_non_max_suppression_kernel.xhtml" target="_self">CLEdgeNonMaxSuppressionKernel</a></td><td class="desc">OpenCL kernel to perform Non-Maxima suppression for Canny Edge </td></tr>
<tr id="row_83_0_23_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_edge_trace_kernel.xhtml" target="_self">CLEdgeTraceKernel</a></td><td class="desc">OpenCL kernel to perform Edge tracing </td></tr>
<tr id="row_83_0_24_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_fast_corners_kernel.xhtml" target="_self">CLFastCornersKernel</a></td><td class="desc">CL kernel to perform fast corners </td></tr>
<tr id="row_83_0_25_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_fill_border_kernel.xhtml" target="_self">CLFillBorderKernel</a></td><td class="desc">Interface for filling the border of a kernel </td></tr>
<tr id="row_83_0_26_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_floor_kernel.xhtml" target="_self">CLFloorKernel</a></td><td class="desc">OpenCL kernel to perform a floor operation </td></tr>
<tr id="row_83_0_27_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_interleave4x4_kernel.xhtml" target="_self">CLGEMMInterleave4x4Kernel</a></td><td class="desc">OpenCL kernel which interleaves the elements of a matrix A in chunk of 4x4 </td></tr>
<tr id="row_83_0_28_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_multiply_kernel.xhtml" target="_self">CLGEMMLowpMatrixMultiplyKernel</a></td><td class="desc">OpenCL kernel to multiply matrices </td></tr>
<tr id="row_83_0_29_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_lowp_offset_contribution_kernel.xhtml" target="_self">CLGEMMLowpOffsetContributionKernel</a></td><td class="desc">OpenCL kernel used to add the offset contribution after <a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_multiply_kernel.xhtml">CLGEMMLowpMatrixMultiplyKernel</a> </td></tr>
<tr id="row_83_0_30_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_lowp_quantize_down_int32_to_uint8_scale_by_fixed_point_kernel.xhtml" target="_self">CLGEMMLowpQuantizeDownInt32ToUint8ScaleByFixedPointKernel</a></td><td class="desc">OpenCL kernel used to quantize down the int32 accumulator values of GEMMLowp to QASYMM8 </td></tr>
<tr id="row_83_0_31_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_lowp_quantize_down_int32_to_uint8_scale_kernel.xhtml" target="_self">CLGEMMLowpQuantizeDownInt32ToUint8ScaleKernel</a></td><td class="desc">OpenCL kernel used to quantize down the int32 accumulator values of GEMMLowp to QASYMM8 </td></tr>
<tr id="row_83_0_32_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_accumulate_biases_kernel.xhtml" target="_self">CLGEMMMatrixAccumulateBiasesKernel</a></td><td class="desc">Interface to add a bias to each row of the input tensor </td></tr>
<tr id="row_83_0_33_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_addition_kernel.xhtml" target="_self">CLGEMMMatrixAdditionKernel</a></td><td class="desc">OpenCL kernel to perform the in-place matrix addition between 2 matrices, taking into account that the second matrix might be weighted by a scalar value beta </td></tr>
<tr id="row_83_0_34_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml" target="_self">CLGEMMMatrixMultiplyKernel</a></td><td class="desc">OpenCL kernel to multiply two input matrices "A" and "B" </td></tr>
<tr id="row_83_0_35_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_vector_multiply_kernel.xhtml" target="_self">CLGEMMMatrixVectorMultiplyKernel</a></td><td class="desc">Interface for the GEMM matrix vector multiply kernel </td></tr>
<tr id="row_83_0_36_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_gradient_kernel.xhtml" target="_self">CLGradientKernel</a></td><td class="desc">OpenCL kernel to perform Gradient computation </td></tr>
<tr id="row_83_0_37_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_harris_score_kernel.xhtml" target="_self">CLHarrisScoreKernel</a></td><td class="desc">Interface for the harris score kernel </td></tr>
<tr id="row_83_0_38_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_histogram_border_kernel.xhtml" target="_self">CLHistogramBorderKernel</a></td><td class="desc">Interface to run the histogram kernel to handle the leftover part of image </td></tr>
<tr id="row_83_0_39_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_histogram_kernel.xhtml" target="_self">CLHistogramKernel</a></td><td class="desc">Interface to run the histogram kernel </td></tr>
<tr id="row_83_0_40_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_h_o_g_block_normalization_kernel.xhtml" target="_self">CLHOGBlockNormalizationKernel</a></td><td class="desc">OpenCL kernel to perform <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object. ">HOG</a> block normalization </td></tr>
<tr id="row_83_0_41_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_h_o_g_detector_kernel.xhtml" target="_self">CLHOGDetectorKernel</a></td><td class="desc">OpenCL kernel to perform <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object. ">HOG</a> detector kernel using linear SVM </td></tr>
<tr id="row_83_0_42_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_h_o_g_orientation_binning_kernel.xhtml" target="_self">CLHOGOrientationBinningKernel</a></td><td class="desc">OpenCL kernel to perform <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object. ">HOG</a> Orientation Binning </td></tr>
<tr id="row_83_0_43_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_im2_col_kernel.xhtml" target="_self">CLIm2ColKernel</a></td><td class="desc">Interface for the im2col reshape kernel </td></tr>
<tr id="row_83_0_44_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_integral_image_vert_kernel.xhtml" target="_self">CLIntegralImageVertKernel</a></td><td class="desc">Interface to run the vertical pass of the integral image kernel </td></tr>
<tr id="row_83_0_45_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_l2_normalize_layer_kernel.xhtml" target="_self">CLL2NormalizeLayerKernel</a></td><td class="desc">Interface for the reduction operation kernel </td></tr>
<tr id="row_83_0_46_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_l_k_tracker_finalize_kernel.xhtml" target="_self">CLLKTrackerFinalizeKernel</a></td><td class="desc">Interface to run the finalize step of LKTracker, where it truncates the coordinates stored in new_points array </td></tr>
<tr id="row_83_0_47_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_l_k_tracker_init_kernel.xhtml" target="_self">CLLKTrackerInitKernel</a></td><td class="desc">Interface to run the initialization step of LKTracker </td></tr>
<tr id="row_83_0_48_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_l_k_tracker_stage0_kernel.xhtml" target="_self">CLLKTrackerStage0Kernel</a></td><td class="desc">Interface to run the first stage of LKTracker, where A11, A12, A22, min_eig, ival, ixval and iyval are computed </td></tr>
<tr id="row_83_0_49_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_l_k_tracker_stage1_kernel.xhtml" target="_self">CLLKTrackerStage1Kernel</a></td><td class="desc">Interface to run the second stage of LKTracker, where the motion vectors of the given points are computed </td></tr>
<tr id="row_83_0_50_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_locally_connected_matrix_multiply_kernel.xhtml" target="_self">CLLocallyConnectedMatrixMultiplyKernel</a></td><td class="desc">OpenCL kernel to multiply each row of first tensor with low 2 dimensions of second tensor </td></tr>
<tr id="row_83_0_51_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_logits1_d_max_shift_exp_sum_kernel.xhtml" target="_self">CLLogits1DMaxShiftExpSumKernel</a></td><td class="desc">Interface for max, shifting, exponentiating and summing the logits </td></tr>
<tr id="row_83_0_52_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_logits1_d_norm_kernel.xhtml" target="_self">CLLogits1DNormKernel</a></td><td class="desc">Interface for calculating the final step of the Softmax Layer where each logit value is multiplied by the inverse of the sum of the logits </td></tr>
<tr id="row_83_0_53_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_logits1_d_shift_exp_sum_kernel.xhtml" target="_self">CLLogits1DShiftExpSumKernel</a></td><td class="desc">Interface for shifting, exponentiating and summing the logits </td></tr>
<tr id="row_83_0_54_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_magnitude_phase_kernel.xhtml" target="_self">CLMagnitudePhaseKernel</a></td><td class="desc">Template interface for the kernel to compute magnitude and phase </td></tr>
<tr id="row_83_0_55_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_mean_std_dev_kernel.xhtml" target="_self">CLMeanStdDevKernel</a></td><td class="desc">Interface for the kernel to calculate mean and standard deviation of input image pixels </td></tr>
<tr id="row_83_0_56_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_min_max_kernel.xhtml" target="_self">CLMinMaxKernel</a></td><td class="desc">Interface for the kernel to perform min max search on an image </td></tr>
<tr id="row_83_0_57_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_min_max_layer_kernel.xhtml" target="_self">CLMinMaxLayerKernel</a></td><td class="desc">Interface for the kernel to perform min max search on a 3D tensor </td></tr>
<tr id="row_83_0_58_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_min_max_location_kernel.xhtml" target="_self">CLMinMaxLocationKernel</a></td><td class="desc">Interface for the kernel to find min max locations of an image </td></tr>
<tr id="row_83_0_59_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_normalization_layer_kernel.xhtml" target="_self">CLNormalizationLayerKernel</a></td><td class="desc">Interface for the normalization layer kernel </td></tr>
<tr id="row_83_0_60_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_pixel_wise_multiplication_kernel.xhtml" target="_self">CLPixelWiseMultiplicationKernel</a></td><td class="desc">Interface for the pixelwise multiplication kernel </td></tr>
<tr id="row_83_0_61_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_pooling_layer_kernel.xhtml" target="_self">CLPoolingLayerKernel</a></td><td class="desc">Interface for the pooling layer kernel </td></tr>
<tr id="row_83_0_62_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_quantization_layer_kernel.xhtml" target="_self">CLQuantizationLayerKernel</a></td><td class="desc">Interface for the quantization layer kernel </td></tr>
<tr id="row_83_0_63_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_reduction_operation_kernel.xhtml" target="_self">CLReductionOperationKernel</a></td><td class="desc">Interface for the reduction operation kernel </td></tr>
<tr id="row_83_0_64_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_remap_kernel.xhtml" target="_self">CLRemapKernel</a></td><td class="desc">OpenCL kernel to perform a remap on a tensor </td></tr>
<tr id="row_83_0_65_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_reshape_layer_kernel.xhtml" target="_self">CLReshapeLayerKernel</a></td><td class="desc">Interface for the kernel to perform tensor reshaping </td></tr>
<tr id="row_83_0_66_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_r_o_i_pooling_layer_kernel.xhtml" target="_self">CLROIPoolingLayerKernel</a></td><td class="desc">Interface for the <a class="el" href="structarm__compute_1_1_r_o_i.xhtml" title="Region of interest. ">ROI</a> pooling layer kernel </td></tr>
<tr id="row_83_0_67_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_scharr3x3_kernel.xhtml" target="_self">CLScharr3x3Kernel</a></td><td class="desc">Interface for the kernel to run a 3x3 Scharr filter on a tensor </td></tr>
<tr id="row_83_0_68_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_sobel3x3_kernel.xhtml" target="_self">CLSobel3x3Kernel</a></td><td class="desc">Interface for the kernel to run a 3x3 Sobel filter on a tensor </td></tr>
<tr id="row_83_0_69_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_sobel5x5_hor_kernel.xhtml" target="_self">CLSobel5x5HorKernel</a></td><td class="desc">Interface for the kernel to run the horizontal pass of 5x5 Sobel filter on a tensor </td></tr>
<tr id="row_83_0_70_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_sobel5x5_vert_kernel.xhtml" target="_self">CLSobel5x5VertKernel</a></td><td class="desc">Interface for the kernel to run the vertical pass of 5x5 Sobel filter on a tensor </td></tr>
<tr id="row_83_0_71_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_sobel7x7_hor_kernel.xhtml" target="_self">CLSobel7x7HorKernel</a></td><td class="desc">Interface for the kernel to run the horizontal pass of 7x7 Sobel filter on a tensor </td></tr>
<tr id="row_83_0_72_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_sobel7x7_vert_kernel.xhtml" target="_self">CLSobel7x7VertKernel</a></td><td class="desc">Interface for the kernel to run the vertical pass of 7x7 Sobel filter on a tensor </td></tr>
<tr id="row_83_0_73_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_weights_reshape_kernel.xhtml" target="_self">CLWeightsReshapeKernel</a></td><td class="desc"></td></tr>
<tr id="row_83_0_74_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_83_0_74_" class="arrow" onclick="toggleFolder('83_0_74_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_c_l_g_e_m_m_lowp_reduction_kernel.xhtml" target="_self">ICLGEMMLowpReductionKernel</a></td><td class="desc">Common interface for all OpenCL reduction kernels </td></tr>
<tr id="row_83_0_74_0_" class="even" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_a_reduction_kernel.xhtml" target="_self">CLGEMMLowpMatrixAReductionKernel</a></td><td class="desc">OpenCL kernel used to compute the row-vectors of sums of all the entries in each row of Matrix A </td></tr>
<tr id="row_83_0_74_1_" class="even" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_b_reduction_kernel.xhtml" target="_self">CLGEMMLowpMatrixBReductionKernel</a></td><td class="desc">OpenCL kernel used to compute the row-vectors of sums of all the entries in each column of Matrix B </td></tr>
<tr id="row_83_0_75_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_83_0_75_" class="arrow" onclick="toggleFolder('83_0_75_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_c_l_simple_kernel.xhtml" target="_self">ICLSimpleKernel</a></td><td class="desc">Interface for simple OpenCL kernels having 1 tensor input and 1 tensor output </td></tr>
<tr id="row_83_0_75_0_" class="even" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_gaussian_pyramid_hor_kernel.xhtml" target="_self">CLGaussianPyramidHorKernel</a></td><td class="desc">OpenCL kernel to perform a Gaussian filter and half scaling across width (horizontal pass) </td></tr>
<tr id="row_83_0_75_1_" class="even" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_gaussian_pyramid_vert_kernel.xhtml" target="_self">CLGaussianPyramidVertKernel</a></td><td class="desc">OpenCL kernel to perform a Gaussian filter and half scaling across height (vertical pass) </td></tr>
<tr id="row_83_0_75_2_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span id="arr_83_0_75_2_" class="arrow" onclick="toggleFolder('83_0_75_2_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_c_l_simple2_d_kernel.xhtml" target="_self">ICLSimple2DKernel</a></td><td class="desc">Interface for simple OpenCL kernels having 1 tensor input and 1 tensor output </td></tr>
<tr id="row_83_0_75_2_0_" class="even" style="display:none;"><td class="entry"><span style="width:80px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_accumulate_kernel.xhtml" target="_self">CLAccumulateKernel</a></td><td class="desc">Interface for the accumulate kernel </td></tr>
<tr id="row_83_0_75_2_1_" class="even" style="display:none;"><td class="entry"><span style="width:80px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_accumulate_squared_kernel.xhtml" target="_self">CLAccumulateSquaredKernel</a></td><td class="desc">Interface for the accumulate squared kernel </td></tr>
<tr id="row_83_0_75_2_2_" class="even" style="display:none;"><td class="entry"><span style="width:80px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_accumulate_weighted_kernel.xhtml" target="_self">CLAccumulateWeightedKernel</a></td><td class="desc">Interface for the accumulate weighted kernel </td></tr>
<tr id="row_83_0_75_2_3_" class="even" style="display:none;"><td class="entry"><span style="width:80px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_bitwise_not_kernel.xhtml" target="_self">CLBitwiseNotKernel</a></td><td class="desc">Interface for the bitwise NOT operation kernel </td></tr>
<tr id="row_83_0_75_2_4_" class="even" style="display:none;"><td class="entry"><span style="width:80px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_box3x3_kernel.xhtml" target="_self">CLBox3x3Kernel</a></td><td class="desc">Interface for the box 3x3 filter kernel </td></tr>
<tr id="row_83_0_75_2_5_" class="even" style="display:none;"><td class="entry"><span style="width:80px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_convolution_kernel.xhtml" target="_self">CLConvolutionKernel&lt; matrix_size &gt;</a></td><td class="desc">Interface for the kernel to run an arbitrary size convolution on a tensor </td></tr>
<tr id="row_83_0_75_2_6_" class="even" style="display:none;"><td class="entry"><span style="width:80px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_depth_convert_layer_kernel.xhtml" target="_self">CLDepthConvertLayerKernel</a></td><td class="desc">Interface for the depth conversion kernel </td></tr>
<tr id="row_83_0_75_2_7_" class="even" style="display:none;"><td class="entry"><span style="width:80px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_dilate_kernel.xhtml" target="_self">CLDilateKernel</a></td><td class="desc">Interface for the dilate kernel </td></tr>
<tr id="row_83_0_75_2_8_" class="even" style="display:none;"><td class="entry"><span style="width:80px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_erode_kernel.xhtml" target="_self">CLErodeKernel</a></td><td class="desc">Interface for the erode kernel </td></tr>
<tr id="row_83_0_75_2_9_" class="even" style="display:none;"><td class="entry"><span style="width:80px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_gaussian3x3_kernel.xhtml" target="_self">CLGaussian3x3Kernel</a></td><td class="desc">Interface for the Gaussian 3x3 filter kernel </td></tr>
<tr id="row_83_0_75_2_10_" class="even" style="display:none;"><td class="entry"><span style="width:80px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_transpose1x_w_kernel.xhtml" target="_self">CLGEMMTranspose1xWKernel</a></td><td class="desc">OpenCL kernel which transposes the elements of a matrix in chunks of 1xW, where W is equal to (16 / element size of the tensor) </td></tr>
<tr id="row_83_0_75_2_11_" class="even" style="display:none;"><td class="entry"><span style="width:80px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_integral_image_hor_kernel.xhtml" target="_self">CLIntegralImageHorKernel</a></td><td class="desc">Interface to run the horizontal pass of the integral image kernel </td></tr>
<tr id="row_83_0_75_2_12_" class="even" style="display:none;"><td class="entry"><span style="width:80px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_median3x3_kernel.xhtml" target="_self">CLMedian3x3Kernel</a></td><td class="desc">Interface for the median 3x3 filter kernel </td></tr>
<tr id="row_83_0_75_2_13_" class="even" style="display:none;"><td class="entry"><span style="width:80px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_non_linear_filter_kernel.xhtml" target="_self">CLNonLinearFilterKernel</a></td><td class="desc">Interface for the kernel to apply a non-linear filter </td></tr>
<tr id="row_83_0_75_2_14_" class="even" style="display:none;"><td class="entry"><span style="width:80px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_non_maxima_suppression3x3_kernel.xhtml" target="_self">CLNonMaximaSuppression3x3Kernel</a></td><td class="desc">Interface to perform Non-Maxima suppression over a 3x3 window using OpenCL </td></tr>
<tr id="row_83_0_75_2_15_" class="even" style="display:none;"><td class="entry"><span style="width:80px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_scale_kernel.xhtml" target="_self">CLScaleKernel</a></td><td class="desc">Interface for the scale kernel </td></tr>
<tr id="row_83_0_75_2_16_" class="even" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span id="arr_83_0_75_2_16_" class="arrow" onclick="toggleFolder('83_0_75_2_16_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_separable_convolution_hor_kernel.xhtml" target="_self">CLSeparableConvolutionHorKernel&lt; matrix_size &gt;</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_kernel.xhtml" title="Kernel class. ">Kernel</a> for the Horizontal pass of a Separable Convolution </td></tr>
<tr id="row_83_0_75_2_16_0_" class="even" style="display:none;"><td class="entry"><span style="width:96px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_gaussian5x5_hor_kernel.xhtml" target="_self">CLGaussian5x5HorKernel</a></td><td class="desc">Interface for the kernel to run the horizontal pass of 5x5 Gaussian filter on a tensor </td></tr>
<tr id="row_83_0_75_2_17_" class="even" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span id="arr_83_0_75_2_17_" class="arrow" onclick="toggleFolder('83_0_75_2_17_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_separable_convolution_vert_kernel.xhtml" target="_self">CLSeparableConvolutionVertKernel&lt; matrix_size &gt;</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_kernel.xhtml" title="Kernel class. ">Kernel</a> for the Vertical pass of a Separable Convolution </td></tr>
<tr id="row_83_0_75_2_17_0_" class="even" style="display:none;"><td class="entry"><span style="width:96px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_gaussian5x5_vert_kernel.xhtml" target="_self">CLGaussian5x5VertKernel</a></td><td class="desc">Interface for the kernel to run the vertical pass of 5x5 Gaussian filter on a tensor </td></tr>
<tr id="row_83_0_75_2_18_" class="even" style="display:none;"><td class="entry"><span style="width:80px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_table_lookup_kernel.xhtml" target="_self">CLTableLookupKernel</a></td><td class="desc">Interface for the kernel to perform table lookup calculations </td></tr>
<tr id="row_83_0_75_2_19_" class="even" style="display:none;"><td class="entry"><span style="width:80px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_threshold_kernel.xhtml" target="_self">CLThresholdKernel</a></td><td class="desc">Interface for the thresholding kernel </td></tr>
<tr id="row_83_0_75_2_20_" class="even" style="display:none;"><td class="entry"><span style="width:80px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_transpose_kernel.xhtml" target="_self">CLTransposeKernel</a></td><td class="desc">OpenCL kernel which transposes the elements of a matrix </td></tr>
<tr id="row_83_0_75_2_21_" class="even" style="display:none;"><td class="entry"><span style="width:80px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_warp_affine_kernel.xhtml" target="_self">CLWarpAffineKernel</a></td><td class="desc">Interface for the warp affine kernel </td></tr>
<tr id="row_83_0_75_2_22_" class="even" style="display:none;"><td class="entry"><span style="width:80px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_warp_perspective_kernel.xhtml" target="_self">CLWarpPerspectiveKernel</a></td><td class="desc">Interface for the warp perspective kernel </td></tr>
<tr id="row_83_0_75_2_23_" class="even" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span id="arr_83_0_75_2_23_" class="arrow" onclick="toggleFolder('83_0_75_2_23_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_c_l_simple3_d_kernel.xhtml" target="_self">ICLSimple3DKernel</a></td><td class="desc">Interface for simple OpenCL kernels having 1 tensor input and 1 tensor output </td></tr>
<tr id="row_83_0_75_2_23_0_" class="even" style="display:none;"><td class="entry"><span style="width:96px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_logits1_d_max_kernel.xhtml" target="_self">CLLogits1DMaxKernel</a></td><td class="desc">Interface for the identifying the max value of 1D Logits </td></tr>
<tr id="row_83_1_" class="even" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_83_1_" class="arrow" onclick="toggleFolder('83_1_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_c_p_p_kernel.xhtml" target="_self">ICPPKernel</a></td><td class="desc">Common interface for all kernels implemented in C++ </td></tr>
<tr id="row_83_1_0_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_p_p_corner_candidates_kernel.xhtml" target="_self">CPPCornerCandidatesKernel</a></td><td class="desc">CPP kernel to perform corner candidates </td></tr>
<tr id="row_83_1_1_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_p_p_detection_window_non_maxima_suppression_kernel.xhtml" target="_self">CPPDetectionWindowNonMaximaSuppressionKernel</a></td><td class="desc">CPP kernel to perform in-place computation of euclidean distance on IDetectionWindowArray </td></tr>
<tr id="row_83_1_2_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_p_p_permute_kernel.xhtml" target="_self">CPPPermuteKernel</a></td><td class="desc">CPP kernel to perform tensor permutation </td></tr>
<tr id="row_83_1_3_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_p_p_sort_euclidean_distance_kernel.xhtml" target="_self">CPPSortEuclideanDistanceKernel</a></td><td class="desc">CPP kernel to perform sorting and euclidean distance </td></tr>
<tr id="row_83_1_4_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_83_1_4_" class="arrow" onclick="toggleFolder('83_1_4_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_c_p_p_simple_kernel.xhtml" target="_self">ICPPSimpleKernel</a></td><td class="desc">Interface for simple NEON kernels having 1 tensor input and 1 tensor output </td></tr>
<tr id="row_83_1_4_0_" class="even" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_accumulate_kernel.xhtml" target="_self">NEAccumulateKernel</a></td><td class="desc">Interface for the accumulate kernel </td></tr>
<tr id="row_83_1_4_1_" class="even" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_accumulate_squared_kernel.xhtml" target="_self">NEAccumulateSquaredKernel</a></td><td class="desc">Interface for the accumulate squared kernel </td></tr>
<tr id="row_83_1_4_2_" class="even" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_accumulate_weighted_kernel.xhtml" target="_self">NEAccumulateWeightedKernel</a></td><td class="desc">Interface for the accumulate weighted kernel </td></tr>
<tr id="row_83_1_4_3_" class="even" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_box3x3_kernel.xhtml" target="_self">NEBox3x3Kernel</a></td><td class="desc">NEON kernel to perform a Box 3x3 filter </td></tr>
<tr id="row_83_1_4_4_" class="even" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_channel_extract_kernel.xhtml" target="_self">NEChannelExtractKernel</a></td><td class="desc">Interface for the channel extract kernel </td></tr>
<tr id="row_83_1_4_5_" class="even" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_convolution_kernel.xhtml" target="_self">NEConvolutionKernel&lt; matrix_size &gt;</a></td><td class="desc">Interface for the kernel to run an arbitrary size convolution on a tensor </td></tr>
<tr id="row_83_1_4_6_" class="even" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_dilate_kernel.xhtml" target="_self">NEDilateKernel</a></td><td class="desc">Interface for the kernel to perform boolean image dilatation </td></tr>
<tr id="row_83_1_4_7_" class="even" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_erode_kernel.xhtml" target="_self">NEErodeKernel</a></td><td class="desc">Interface for the kernel to perform boolean image erosion </td></tr>
<tr id="row_83_1_4_8_" class="even" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_floor_kernel.xhtml" target="_self">NEFloorKernel</a></td><td class="desc">NEON kernel to perform a floor operation </td></tr>
<tr id="row_83_1_4_9_" class="even" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_gaussian3x3_kernel.xhtml" target="_self">NEGaussian3x3Kernel</a></td><td class="desc">NEON kernel to perform a Gaussian 3x3 filter </td></tr>
<tr id="row_83_1_4_10_" class="even" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_gaussian5x5_hor_kernel.xhtml" target="_self">NEGaussian5x5HorKernel</a></td><td class="desc">NEON kernel to perform a Gaussian 5x5 filter (horizontal pass) </td></tr>
<tr id="row_83_1_4_11_" class="even" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_gaussian5x5_vert_kernel.xhtml" target="_self">NEGaussian5x5VertKernel</a></td><td class="desc">NEON kernel to perform a Gaussian 5x5 filter (vertical pass) </td></tr>
<tr id="row_83_1_4_12_" class="even" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_gaussian_pyramid_hor_kernel.xhtml" target="_self">NEGaussianPyramidHorKernel</a></td><td class="desc">NEON kernel to perform a GaussianPyramid (horizontal pass) </td></tr>
<tr id="row_83_1_4_13_" class="even" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_gaussian_pyramid_vert_kernel.xhtml" target="_self">NEGaussianPyramidVertKernel</a></td><td class="desc">NEON kernel to perform a GaussianPyramid (vertical pass) </td></tr>
<tr id="row_83_1_4_14_" class="even" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_interleave4x4_kernel.xhtml" target="_self">NEGEMMInterleave4x4Kernel</a></td><td class="desc">NEON kernel to interleave the elements of a matrix </td></tr>
<tr id="row_83_1_4_15_" class="even" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_interleave_blocked_kernel.xhtml" target="_self">NEGEMMInterleaveBlockedKernel</a></td><td class="desc">NEON kernel to interleave the elements of a matrix </td></tr>
<tr id="row_83_1_4_16_" class="even" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_matrix_addition_kernel.xhtml" target="_self">NEGEMMMatrixAdditionKernel</a></td><td class="desc">NEON kernel to perform the in-place matrix addition between 2 matrices taking into account that the second matrix might be weighted by a scalar value beta: </td></tr>
<tr id="row_83_1_4_17_" class="even" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_matrix_vector_multiply_kernel.xhtml" target="_self">NEGEMMMatrixVectorMultiplyKernel</a></td><td class="desc"></td></tr>
<tr id="row_83_1_4_18_" class="even" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_transpose1x_w_kernel.xhtml" target="_self">NEGEMMTranspose1xWKernel</a></td><td class="desc">NEON kernel which transposes the elements of a matrix in chunks of 1xW, where W is equal to (16 / element size of the tensor) </td></tr>
<tr id="row_83_1_4_19_" class="even" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_integral_image_kernel.xhtml" target="_self">NEIntegralImageKernel</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_kernel.xhtml" title="Kernel class. ">Kernel</a> to perform an image integral on an image </td></tr>
<tr id="row_83_1_4_20_" class="even" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_logits1_d_max_kernel.xhtml" target="_self">NELogits1DMaxKernel</a></td><td class="desc">Interface for the identifying the max value of 1D Logits </td></tr>
<tr id="row_83_1_4_21_" class="even" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_median3x3_kernel.xhtml" target="_self">NEMedian3x3Kernel</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_kernel.xhtml" title="Kernel class. ">Kernel</a> to perform a median filter on a tensor </td></tr>
<tr id="row_83_1_4_22_" class="even" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_reshape_layer_kernel.xhtml" target="_self">NEReshapeLayerKernel</a></td><td class="desc">Interface for the kernel to perform tensor reshaping </td></tr>
<tr id="row_83_1_4_23_" class="even" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_separable_convolution_hor_kernel.xhtml" target="_self">NESeparableConvolutionHorKernel&lt; matrix_size &gt;</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_kernel.xhtml" title="Kernel class. ">Kernel</a> for the Horizontal pass of a Separable Convolution </td></tr>
<tr id="row_83_1_4_24_" class="even" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_separable_convolution_vert_kernel.xhtml" target="_self">NESeparableConvolutionVertKernel&lt; matrix_size &gt;</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_kernel.xhtml" title="Kernel class. ">Kernel</a> for the Vertical pass of a Separable Convolution </td></tr>
<tr id="row_83_1_4_25_" class="even" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_table_lookup_kernel.xhtml" target="_self">NETableLookupKernel</a></td><td class="desc">Interface for the kernel to perform table lookup calculations </td></tr>
<tr id="row_83_1_5_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_83_1_5_" class="arrow" onclick="toggleFolder('83_1_5_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_n_e_g_e_m_m_lowp_reduction_kernel.xhtml" target="_self">INEGEMMLowpReductionKernel</a></td><td class="desc">Common interface for all NEON reduction kernels </td></tr>
<tr id="row_83_1_5_0_" class="even" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_matrix_a_reduction_kernel.xhtml" target="_self">NEGEMMLowpMatrixAReductionKernel</a></td><td class="desc">NEON kernel used to compute the row-vectors of sums of all the entries in each row of Matrix A </td></tr>
<tr id="row_83_1_5_1_" class="even" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_matrix_b_reduction_kernel.xhtml" target="_self">NEGEMMLowpMatrixBReductionKernel</a></td><td class="desc">NEON kernel used to compute the row-vectors of sums of all the entries in each column of Matrix B </td></tr>
<tr id="row_83_1_6_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_83_1_6_" class="arrow" onclick="toggleFolder('83_1_6_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_n_e_harris_score_kernel.xhtml" target="_self">INEHarrisScoreKernel</a></td><td class="desc">Common interface for all Harris Score kernels </td></tr>
<tr id="row_83_1_6_0_" class="even" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_harris_score_kernel.xhtml" target="_self">NEHarrisScoreKernel&lt; block_size &gt;</a></td><td class="desc">Template NEON kernel to perform Harris Score </td></tr>
<tr id="row_83_1_7_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_83_1_7_" class="arrow" onclick="toggleFolder('83_1_7_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_n_e_warp_kernel.xhtml" target="_self">INEWarpKernel</a></td><td class="desc">Common interface for warp affine and warp perspective </td></tr>
<tr id="row_83_1_7_0_" class="even" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_warp_affine_kernel.xhtml" target="_self">NEWarpAffineKernel&lt; interpolation &gt;</a></td><td class="desc">Template interface for the kernel to compute warp affine </td></tr>
<tr id="row_83_1_7_1_" class="even" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_warp_perspective_kernel.xhtml" target="_self">NEWarpPerspectiveKernel&lt; interpolation &gt;</a></td><td class="desc">Template interface for the kernel to compute warp perspective </td></tr>
<tr id="row_83_1_8_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_absolute_difference_kernel.xhtml" target="_self">NEAbsoluteDifferenceKernel</a></td><td class="desc">Interface for the absolute difference kernel </td></tr>
<tr id="row_83_1_9_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_activation_layer_kernel.xhtml" target="_self">NEActivationLayerKernel</a></td><td class="desc">Interface for the activation layer kernel </td></tr>
<tr id="row_83_1_10_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_arithmetic_addition_kernel.xhtml" target="_self">NEArithmeticAdditionKernel</a></td><td class="desc">Interface for the kernel to perform addition between two tensors </td></tr>
<tr id="row_83_1_11_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_arithmetic_subtraction_kernel.xhtml" target="_self">NEArithmeticSubtractionKernel</a></td><td class="desc">Interface for the kernel to perform subtraction between two tensors </td></tr>
<tr id="row_83_1_12_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_batch_normalization_layer_kernel.xhtml" target="_self">NEBatchNormalizationLayerKernel</a></td><td class="desc">Interface for the batch normalization layer kernel </td></tr>
<tr id="row_83_1_13_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_bitwise_and_kernel.xhtml" target="_self">NEBitwiseAndKernel</a></td><td class="desc">Interface for the kernel to perform bitwise AND between XY-planes of two tensors </td></tr>
<tr id="row_83_1_14_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_bitwise_not_kernel.xhtml" target="_self">NEBitwiseNotKernel</a></td><td class="desc">Interface for the kernel to perform bitwise NOT operation </td></tr>
<tr id="row_83_1_15_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_bitwise_or_kernel.xhtml" target="_self">NEBitwiseOrKernel</a></td><td class="desc">Interface for the kernel to perform bitwise inclusive OR between two tensors </td></tr>
<tr id="row_83_1_16_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_bitwise_xor_kernel.xhtml" target="_self">NEBitwiseXorKernel</a></td><td class="desc">Interface for the kernel to perform bitwise exclusive OR (XOR) between two tensors </td></tr>
<tr id="row_83_1_17_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_channel_combine_kernel.xhtml" target="_self">NEChannelCombineKernel</a></td><td class="desc">Interface for the channel combine kernel </td></tr>
<tr id="row_83_1_18_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_col2_im_kernel.xhtml" target="_self">NECol2ImKernel</a></td><td class="desc">NEON kernel to perform col2im reshaping </td></tr>
<tr id="row_83_1_19_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_color_convert_kernel.xhtml" target="_self">NEColorConvertKernel</a></td><td class="desc">Interface for the color convert kernel </td></tr>
<tr id="row_83_1_20_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_convolution_rectangle_kernel.xhtml" target="_self">NEConvolutionRectangleKernel</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_kernel.xhtml" title="Kernel class. ">Kernel</a> for the running convolution on a rectangle matrix </td></tr>
<tr id="row_83_1_21_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_cumulative_distribution_kernel.xhtml" target="_self">NECumulativeDistributionKernel</a></td><td class="desc">Interface for the cumulative distribution (cummulative summmation) calculation kernel </td></tr>
<tr id="row_83_1_22_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_deconvolution_layer_upsample_kernel.xhtml" target="_self">NEDeconvolutionLayerUpsampleKernel</a></td><td class="desc">NEON kernel to perform scaling on a tensor </td></tr>
<tr id="row_83_1_23_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_depth_concatenate_layer_kernel.xhtml" target="_self">NEDepthConcatenateLayerKernel</a></td><td class="desc">Interface for the depth concatenate kernel </td></tr>
<tr id="row_83_1_24_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_depth_convert_layer_kernel.xhtml" target="_self">NEDepthConvertLayerKernel</a></td><td class="desc">Depth conversion kernel </td></tr>
<tr id="row_83_1_25_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_depthwise_convolution_layer3x3_kernel.xhtml" target="_self">NEDepthwiseConvolutionLayer3x3Kernel</a></td><td class="desc">Interface for the kernel to run a 3x3 depthwise convolution on a tensor </td></tr>
<tr id="row_83_1_26_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_depthwise_im2_col_kernel.xhtml" target="_self">NEDepthwiseIm2ColKernel</a></td><td class="desc">Interface for the depthwise im2col reshape kernel </td></tr>
<tr id="row_83_1_27_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_depthwise_vector_to_tensor_kernel.xhtml" target="_self">NEDepthwiseVectorToTensorKernel</a></td><td class="desc">Interface for the depthwise vector to tensor kernel </td></tr>
<tr id="row_83_1_28_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_depthwise_weights_reshape_kernel.xhtml" target="_self">NEDepthwiseWeightsReshapeKernel</a></td><td class="desc">Interface for the depthwise weights reshape kernel </td></tr>
<tr id="row_83_1_29_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_dequantization_layer_kernel.xhtml" target="_self">NEDequantizationLayerKernel</a></td><td class="desc">Interface for the dequantization layer kernel </td></tr>
<tr id="row_83_1_30_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_derivative_kernel.xhtml" target="_self">NEDerivativeKernel</a></td><td class="desc">Interface for the kernel to run the derivative along the X/Y directions on a tensor </td></tr>
<tr id="row_83_1_31_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_direct_convolution_layer_bias_accumulate_kernel.xhtml" target="_self">NEDirectConvolutionLayerBiasAccumulateKernel</a></td><td class="desc">NEON kernel to accumulate the biases to each element of the input tensor </td></tr>
<tr id="row_83_1_32_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_direct_convolution_layer_kernel.xhtml" target="_self">NEDirectConvolutionLayerKernel</a></td><td class="desc">NEON interface for Direct Convolution Layer kernel </td></tr>
<tr id="row_83_1_33_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_edge_non_max_suppression_kernel.xhtml" target="_self">NEEdgeNonMaxSuppressionKernel</a></td><td class="desc">NEON kernel to perform Non-Maxima suppression for Canny Edge </td></tr>
<tr id="row_83_1_34_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_edge_trace_kernel.xhtml" target="_self">NEEdgeTraceKernel</a></td><td class="desc">NEON kernel to perform Edge tracing </td></tr>
<tr id="row_83_1_35_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_fast_corners_kernel.xhtml" target="_self">NEFastCornersKernel</a></td><td class="desc">NEON kernel to perform fast corners </td></tr>
<tr id="row_83_1_36_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_fill_array_kernel.xhtml" target="_self">NEFillArrayKernel</a></td><td class="desc">This kernel adds all texels greater than or equal to the threshold value to the keypoint array </td></tr>
<tr id="row_83_1_37_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_fill_border_kernel.xhtml" target="_self">NEFillBorderKernel</a></td><td class="desc">Interface for the kernel to fill borders </td></tr>
<tr id="row_83_1_38_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_fill_inner_border_kernel.xhtml" target="_self">NEFillInnerBorderKernel</a></td><td class="desc">Interface for the kernel to fill the interior borders </td></tr>
<tr id="row_83_1_39_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_83_1_39_" class="arrow" onclick="toggleFolder('83_1_39_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_assembly_base_kernel.xhtml" target="_self">NEGEMMAssemblyBaseKernel</a></td><td class="desc">Base class for GEMM NEON kernels implemented in Assembly </td></tr>
<tr id="row_83_1_39_0_" class="even" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_a_arch32_kernel.xhtml" target="_self">NEGEMMAArch32Kernel</a></td><td class="desc">AArch32/armv7a NEON kernel to multiply two input matrices "A" and "B" </td></tr>
<tr id="row_83_1_39_1_" class="even" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_a_arch64_kernel.xhtml" target="_self">NEGEMMAArch64Kernel</a></td><td class="desc">AArch64 NEON kernel to multiply two input matrices "A" and "B" </td></tr>
<tr id="row_83_1_39_2_" class="even" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_a_arch64_a53_kernel.xhtml" target="_self">NEGEMMLowpAArch64A53Kernel</a></td><td class="desc">AArch64 NEON kernel to multiply two input matrices "A" and "B" </td></tr>
<tr id="row_83_1_39_3_" class="even" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_a_arch64_kernel.xhtml" target="_self">NEGEMMLowpAArch64Kernel</a></td><td class="desc">AArch64 NEON kernel to multiply two input matrices "A" and "B" </td></tr>
<tr id="row_83_1_39_4_" class="even" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_a_arch64_v8_p4_kernel.xhtml" target="_self">NEGEMMLowpAArch64V8P4Kernel</a></td><td class="desc">AArch64 NEON kernel to multiply two input matrices "A" and "B" </td></tr>
<tr id="row_83_1_39_5_" class="even" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_h_g_e_m_m_a_arch64_f_p16_kernel.xhtml" target="_self">NEHGEMMAArch64FP16Kernel</a></td><td class="desc">AArch64 NEON kernel to multiply two input matrices "A" and "B" </td></tr>
<tr id="row_83_1_40_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_matrix_multiply_kernel.xhtml" target="_self">NEGEMMLowpMatrixMultiplyKernel</a></td><td class="desc">NEON kernel to multiply matrices </td></tr>
<tr id="row_83_1_41_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_offset_contribution_kernel.xhtml" target="_self">NEGEMMLowpOffsetContributionKernel</a></td><td class="desc">NEON kernel used to add the offset contribution after <a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_matrix_multiply_kernel.xhtml">NEGEMMLowpMatrixMultiplyKernel</a> </td></tr>
<tr id="row_83_1_42_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_quantize_down_int32_to_uint8_scale_by_fixed_point_kernel.xhtml" target="_self">NEGEMMLowpQuantizeDownInt32ToUint8ScaleByFixedPointKernel</a></td><td class="desc">NEON kernel used to quantize down the int32 accumulator values of GEMMLowp to QASYMM8 </td></tr>
<tr id="row_83_1_43_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_quantize_down_int32_to_uint8_scale_kernel.xhtml" target="_self">NEGEMMLowpQuantizeDownInt32ToUint8ScaleKernel</a></td><td class="desc">NEON kernel used to quantize down the int32 accumulator values of GEMMLowp to QASYMM8 </td></tr>
<tr id="row_83_1_44_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_matrix_accumulate_biases_kernel.xhtml" target="_self">NEGEMMMatrixAccumulateBiasesKernel</a></td><td class="desc">NEON kernel to add a bias to each row of the input tensor </td></tr>
<tr id="row_83_1_45_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_matrix_multiply_kernel.xhtml" target="_self">NEGEMMMatrixMultiplyKernel</a></td><td class="desc">NEON kernel to multiply two input matrices "A" and "B" </td></tr>
<tr id="row_83_1_46_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_gradient_kernel.xhtml" target="_self">NEGradientKernel</a></td><td class="desc">Computes magnitude and quantised phase from inputs gradients </td></tr>
<tr id="row_83_1_47_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_histogram_kernel.xhtml" target="_self">NEHistogramKernel</a></td><td class="desc">Interface for the histogram kernel </td></tr>
<tr id="row_83_1_48_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_h_o_g_block_normalization_kernel.xhtml" target="_self">NEHOGBlockNormalizationKernel</a></td><td class="desc">NEON kernel to perform <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object. ">HOG</a> block normalization </td></tr>
<tr id="row_83_1_49_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_h_o_g_detector_kernel.xhtml" target="_self">NEHOGDetectorKernel</a></td><td class="desc">NEON kernel to perform <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object. ">HOG</a> detector kernel using linear SVM </td></tr>
<tr id="row_83_1_50_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_h_o_g_orientation_binning_kernel.xhtml" target="_self">NEHOGOrientationBinningKernel</a></td><td class="desc">NEON kernel to perform <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object. ">HOG</a> Orientation Binning </td></tr>
<tr id="row_83_1_51_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_im2_col_kernel.xhtml" target="_self">NEIm2ColKernel</a></td><td class="desc">Interface for the im2col reshape kernel </td></tr>
<tr id="row_83_1_52_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_l2_normalize_layer_kernel.xhtml" target="_self">NEL2NormalizeLayerKernel</a></td><td class="desc">Interface for performing a L2 normalize on a given axis given the square sum of it in this axis </td></tr>
<tr id="row_83_1_53_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_l_k_tracker_kernel.xhtml" target="_self">NELKTrackerKernel</a></td><td class="desc">Interface for the Lucas-Kanade tracker kernel </td></tr>
<tr id="row_83_1_54_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_locally_connected_matrix_multiply_kernel.xhtml" target="_self">NELocallyConnectedMatrixMultiplyKernel</a></td><td class="desc">NEON kernel to multiply each row of first tensor with low 2 dimensions of second tensor </td></tr>
<tr id="row_83_1_55_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_logits1_d_norm_kernel.xhtml" target="_self">NELogits1DNormKernel</a></td><td class="desc">Interface for calculating the final step of the Softmax Layer where each logit value is multiplied by the inverse of the sum of the logits </td></tr>
<tr id="row_83_1_56_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_logits1_d_shift_exp_sum_kernel.xhtml" target="_self">NELogits1DShiftExpSumKernel</a></td><td class="desc">Interface for shifting the logits values around the max value and exponentiating the result </td></tr>
<tr id="row_83_1_57_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_magnitude_phase_kernel.xhtml" target="_self">NEMagnitudePhaseKernel&lt; mag_type, phase_type &gt;</a></td><td class="desc">Template interface for the kernel to compute magnitude and phase </td></tr>
<tr id="row_83_1_58_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_mean_std_dev_kernel.xhtml" target="_self">NEMeanStdDevKernel</a></td><td class="desc">Interface for the kernel to calculate mean and standard deviation of input image pixels </td></tr>
<tr id="row_83_1_59_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_min_max_kernel.xhtml" target="_self">NEMinMaxKernel</a></td><td class="desc">Interface for the kernel to perform min max search on an image </td></tr>
<tr id="row_83_1_60_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_min_max_layer_kernel.xhtml" target="_self">NEMinMaxLayerKernel</a></td><td class="desc">Interface for the kernel to perform min max search on a 3D tensor </td></tr>
<tr id="row_83_1_61_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_min_max_location_kernel.xhtml" target="_self">NEMinMaxLocationKernel</a></td><td class="desc">Interface for the kernel to find min max locations of an image </td></tr>
<tr id="row_83_1_62_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_non_linear_filter_kernel.xhtml" target="_self">NENonLinearFilterKernel</a></td><td class="desc">Interface for the kernel to apply a non-linear filter </td></tr>
<tr id="row_83_1_63_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_non_maxima_suppression3x3_kernel.xhtml" target="_self">NENonMaximaSuppression3x3Kernel</a></td><td class="desc">Interface to perform Non-Maxima suppression over a 3x3 window using NEON </td></tr>
<tr id="row_83_1_64_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_normalization_layer_kernel.xhtml" target="_self">NENormalizationLayerKernel</a></td><td class="desc">Interface for the normalization layer kernel </td></tr>
<tr id="row_83_1_65_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_pixel_wise_multiplication_kernel.xhtml" target="_self">NEPixelWiseMultiplicationKernel</a></td><td class="desc">Interface for the kernel to perform addition between two tensors </td></tr>
<tr id="row_83_1_66_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_pooling_layer_kernel.xhtml" target="_self">NEPoolingLayerKernel</a></td><td class="desc">Interface for the pooling layer kernel </td></tr>
<tr id="row_83_1_67_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_quantization_layer_kernel.xhtml" target="_self">NEQuantizationLayerKernel</a></td><td class="desc">Interface for the quantization layer kernel </td></tr>
<tr id="row_83_1_68_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_reduction_operation_kernel.xhtml" target="_self">NEReductionOperationKernel</a></td><td class="desc">NEON kernel to perform a reduction operation </td></tr>
<tr id="row_83_1_69_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_remap_kernel.xhtml" target="_self">NERemapKernel</a></td><td class="desc">NEON kernel to perform a remap on a tensor </td></tr>
<tr id="row_83_1_70_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_r_o_i_pooling_layer_kernel.xhtml" target="_self">NEROIPoolingLayerKernel</a></td><td class="desc">Interface for the <a class="el" href="structarm__compute_1_1_r_o_i.xhtml" title="Region of interest. ">ROI</a> pooling layer kernel </td></tr>
<tr id="row_83_1_71_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_scale_kernel.xhtml" target="_self">NEScaleKernel</a></td><td class="desc">NEON kernel to perform scaling on a tensor </td></tr>
<tr id="row_83_1_72_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_scharr3x3_kernel.xhtml" target="_self">NEScharr3x3Kernel</a></td><td class="desc">Interface for the kernel to run a 3x3 Scharr filter on a tensor </td></tr>
<tr id="row_83_1_73_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_sobel3x3_kernel.xhtml" target="_self">NESobel3x3Kernel</a></td><td class="desc">Interface for the kernel to run a 3x3 Sobel X filter on a tensor </td></tr>
<tr id="row_83_1_74_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_sobel5x5_hor_kernel.xhtml" target="_self">NESobel5x5HorKernel</a></td><td class="desc">Interface for the kernel to run the horizontal pass of 5x5 Sobel filter on a tensor </td></tr>
<tr id="row_83_1_75_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_sobel5x5_vert_kernel.xhtml" target="_self">NESobel5x5VertKernel</a></td><td class="desc">Interface for the kernel to run the vertical pass of 5x5 Sobel Y filter on a tensor </td></tr>
<tr id="row_83_1_76_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_sobel7x7_hor_kernel.xhtml" target="_self">NESobel7x7HorKernel</a></td><td class="desc">Interface for the kernel to run the horizontal pass of 7x7 Sobel filter on a tensor </td></tr>
<tr id="row_83_1_77_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_sobel7x7_vert_kernel.xhtml" target="_self">NESobel7x7VertKernel</a></td><td class="desc">Interface for the kernel to run the vertical pass of 7x7 Sobel Y filter on a tensor </td></tr>
<tr id="row_83_1_78_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_threshold_kernel.xhtml" target="_self">NEThresholdKernel</a></td><td class="desc">Interface for the thresholding kernel </td></tr>
<tr id="row_83_1_79_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_transpose_kernel.xhtml" target="_self">NETransposeKernel</a></td><td class="desc">NEON kernel which transposes the elements of a matrix </td></tr>
<tr id="row_83_1_80_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_weights_reshape_kernel.xhtml" target="_self">NEWeightsReshapeKernel</a></td><td class="desc">NEON kernel to perform reshaping on the weights used by convolution and locally connected layer </td></tr>
<tr id="row_83_1_81_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_winograd_layer_kernel.xhtml" target="_self">NEWinogradLayerKernel</a></td><td class="desc"></td></tr>
<tr id="row_83_2_" class="even" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_83_2_" class="arrow" onclick="toggleFolder('83_2_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_g_c_kernel.xhtml" target="_self">IGCKernel</a></td><td class="desc">Common interface for all the GLES kernels </td></tr>
<tr id="row_83_2_0_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_absolute_difference_kernel.xhtml" target="_self">GCAbsoluteDifferenceKernel</a></td><td class="desc">Interface for the absolute difference kernel </td></tr>
<tr id="row_83_2_1_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_activation_layer_kernel.xhtml" target="_self">GCActivationLayerKernel</a></td><td class="desc">Interface for the activation layer kernel </td></tr>
<tr id="row_83_2_2_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_batch_normalization_layer_kernel.xhtml" target="_self">GCBatchNormalizationLayerKernel</a></td><td class="desc">Interface for the BatchNormalization layer kernel </td></tr>
<tr id="row_83_2_3_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_col2_im_kernel.xhtml" target="_self">GCCol2ImKernel</a></td><td class="desc">Interface for the col2im reshaping kernel </td></tr>
<tr id="row_83_2_4_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_depth_concatenate_layer_kernel.xhtml" target="_self">GCDepthConcatenateLayerKernel</a></td><td class="desc">Interface for the depth concatenate kernel </td></tr>
<tr id="row_83_2_5_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_direct_convolution_layer_kernel.xhtml" target="_self">GCDirectConvolutionLayerKernel&lt; kernel_size &gt;</a></td><td class="desc">Interface for the direct convolution kernel </td></tr>
<tr id="row_83_2_6_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_dropout_layer_kernel.xhtml" target="_self">GCDropoutLayerKernel</a></td><td class="desc">Interface for the dropout layer kernel </td></tr>
<tr id="row_83_2_7_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_fill_border_kernel.xhtml" target="_self">GCFillBorderKernel</a></td><td class="desc">Interface for filling the border of a kernel </td></tr>
<tr id="row_83_2_8_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_g_e_m_m_interleave4x4_kernel.xhtml" target="_self">GCGEMMInterleave4x4Kernel</a></td><td class="desc">OpenGL ES kernel which interleaves the elements of a matrix A in chunk of 4x4 </td></tr>
<tr id="row_83_2_9_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_g_e_m_m_matrix_accumulate_biases_kernel.xhtml" target="_self">GCGEMMMatrixAccumulateBiasesKernel</a></td><td class="desc">Interface to add a bias to each row of the input tensor </td></tr>
<tr id="row_83_2_10_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_g_e_m_m_matrix_addition_kernel.xhtml" target="_self">GCGEMMMatrixAdditionKernel</a></td><td class="desc">OpenGL ES kernel to perform the in-place matrix addition between 2 matrices, taking into account that the second matrix might be weighted by a scalar value beta </td></tr>
<tr id="row_83_2_11_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_g_e_m_m_matrix_multiply_kernel.xhtml" target="_self">GCGEMMMatrixMultiplyKernel</a></td><td class="desc">GLES Compute kernel to multiply two input matrices "A" and "B" or to multiply a vector "A" by a matrix "B" </td></tr>
<tr id="row_83_2_12_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_im2_col_kernel.xhtml" target="_self">GCIm2ColKernel</a></td><td class="desc">Interface for the im2col reshape kernel </td></tr>
<tr id="row_83_2_13_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_logits1_d_norm_kernel.xhtml" target="_self">GCLogits1DNormKernel</a></td><td class="desc">Interface for calculating the final step of the Softmax Layer where each logit value is multiplied by the inverse of the sum of the logits </td></tr>
<tr id="row_83_2_14_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_logits1_d_shift_exp_sum_kernel.xhtml" target="_self">GCLogits1DShiftExpSumKernel</a></td><td class="desc">Interface for shifting the logits values around the max value and exponentiating the result </td></tr>
<tr id="row_83_2_15_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_normalization_layer_kernel.xhtml" target="_self">GCNormalizationLayerKernel</a></td><td class="desc">Interface for the normalization layer kernel </td></tr>
<tr id="row_83_2_16_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_pixel_wise_multiplication_kernel.xhtml" target="_self">GCPixelWiseMultiplicationKernel</a></td><td class="desc">Interface for the pixelwise multiplication kernel </td></tr>
<tr id="row_83_2_17_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_pooling_layer_kernel.xhtml" target="_self">GCPoolingLayerKernel</a></td><td class="desc">Interface for the pooling layer kernel </td></tr>
<tr id="row_83_2_18_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_83_2_18_" class="arrow" onclick="toggleFolder('83_2_18_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_g_c_simple_kernel.xhtml" target="_self">IGCSimpleKernel</a></td><td class="desc">Interface for simple OpenGL ES kernels having 1 tensor input and 1 tensor output </td></tr>
<tr id="row_83_2_18_0_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span id="arr_83_2_18_0_" class="arrow" onclick="toggleFolder('83_2_18_0_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_g_c_simple2_d_kernel.xhtml" target="_self">IGCSimple2DKernel</a></td><td class="desc">Interface for simple OpenGL ES kernels having 1 tensor input and 1 tensor output </td></tr>
<tr id="row_83_2_18_0_0_" class="even" style="display:none;"><td class="entry"><span style="width:80px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_g_e_m_m_transpose1x_w_kernel.xhtml" target="_self">GCGEMMTranspose1xWKernel</a></td><td class="desc">OpenGLES kernel which transposes the elements of a matrix in chunks of 1xW, where W is equal to (16 / element size of the tensor) </td></tr>
<tr id="row_83_2_18_0_1_" class="even" style="display:none;"><td class="entry"><span style="width:80px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_transpose_kernel.xhtml" target="_self">GCTransposeKernel</a></td><td class="desc">OpenGL ES kernel which transposes the elements of a matrix </td></tr>
<tr id="row_83_2_18_0_2_" class="even" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span id="arr_83_2_18_0_2_" class="arrow" onclick="toggleFolder('83_2_18_0_2_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_g_c_simple3_d_kernel.xhtml" target="_self">IGCSimple3DKernel</a></td><td class="desc">Interface for simple GLES kernels having 1 tensor input and 1 tensor output </td></tr>
<tr id="row_83_2_18_0_2_0_" class="even" style="display:none;"><td class="entry"><span style="width:96px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_logits1_d_max_kernel.xhtml" target="_self">GCLogits1DMaxKernel</a></td><td class="desc">Interface for the identifying the max value of 1D Logits </td></tr>
<tr id="row_84_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_84_" class="arrow" onclick="toggleFolder('84_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_lifetime_manager.xhtml" target="_self">ILifetimeManager</a></td><td class="desc">Interface for managing the lifetime of objects </td></tr>
<tr id="row_84_0_" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_84_0_" class="arrow" onclick="toggleFolder('84_0_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_simple_lifetime_manager.xhtml" target="_self">ISimpleLifetimeManager</a></td><td class="desc">Abstract class of the simple lifetime manager interface </td></tr>
<tr id="row_84_0_0_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_blob_lifetime_manager.xhtml" target="_self">BlobLifetimeManager</a></td><td class="desc">Concrete class that tracks the lifetime of registered tensors and calculates the systems memory requirements in terms of blobs </td></tr>
<tr id="row_84_0_1_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_offset_lifetime_manager.xhtml" target="_self">OffsetLifetimeManager</a></td><td class="desc">Concrete class that tracks the lifetime of registered tensors and calculates the systems memory requirements in terms of a single blob and a list of offsets </td></tr>
<tr id="row_85_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_85_" class="arrow" onclick="toggleFolder('85_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_lut.xhtml" target="_self">ILut</a></td><td class="desc">Lookup Table object interface </td></tr>
<tr id="row_85_0_" class="even" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_85_0_" class="arrow" onclick="toggleFolder('85_0_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_c_l_lut.xhtml" target="_self">ICLLut</a></td><td class="desc">Interface for OpenCL LUT </td></tr>
<tr id="row_85_0_0_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_lut.xhtml" target="_self">CLLut</a></td><td class="desc">Basic implementation of the OpenCL lut interface </td></tr>
<tr id="row_85_1_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_lut.xhtml" target="_self">Lut</a></td><td class="desc">Basic implementation of the LUT interface </td></tr>
<tr id="row_86_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_86_" class="arrow" onclick="toggleFolder('86_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_i_lut_accessor.xhtml" target="_self">ILutAccessor&lt; T &gt;</a></td><td class="desc">Common interface to provide information and access to <a class="el" href="classarm__compute_1_1_lut.xhtml" title="Basic implementation of the LUT interface. ">Lut</a> like structures </td></tr>
<tr id="row_86_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_c_l_lut_accessor.xhtml" target="_self">CLLutAccessor&lt; T &gt;</a></td><td class="desc"><a class="el" href="classarm__compute_1_1test_1_1_accessor.xhtml" title="Accessor implementation for Tensor objects. ">Accessor</a> implementation for <a class="el" href="classarm__compute_1_1_c_l_lut.xhtml">CLLut</a> objects </td></tr>
<tr id="row_86_1_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_lut_accessor.xhtml" target="_self">LutAccessor&lt; T &gt;</a></td><td class="desc"><a class="el" href="classarm__compute_1_1test_1_1_accessor.xhtml" title="Accessor implementation for Tensor objects. ">Accessor</a> implementation for <a class="el" href="classarm__compute_1_1_lut.xhtml">Lut</a> objects </td></tr>
<tr id="row_86_2_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_raw_lut_accessor.xhtml" target="_self">RawLutAccessor&lt; T &gt;</a></td><td class="desc"><a class="el" href="classarm__compute_1_1test_1_1_accessor.xhtml" title="Accessor implementation for Tensor objects. ">Accessor</a> implementation for std::map-lut objects </td></tr>
<tr id="row_87_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_87_" class="arrow" onclick="toggleFolder('87_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_lut_allocator.xhtml" target="_self">ILutAllocator</a></td><td class="desc">Basic interface to allocate LUTs' </td></tr>
<tr id="row_87_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_lut_allocator.xhtml" target="_self">CLLutAllocator</a></td><td class="desc">Basic implementation of a CL memory LUT allocator </td></tr>
<tr id="row_87_1_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_lut_allocator.xhtml" target="_self">LutAllocator</a></td><td class="desc">Basic implementation of a CPU memory LUT allocator </td></tr>
<tr id="row_88_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="struct_image.xhtml" target="_self">Image</a></td><td class="desc">Structure to hold <a class="el" href="struct_image.xhtml" title="Structure to hold Image information. ">Image</a> information </td></tr>
<tr id="row_89_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_89_" class="arrow" onclick="toggleFolder('89_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_memory_group.xhtml" target="_self">IMemoryGroup</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_memory.xhtml" title="CPU implementation of memory object. ">Memory</a> group interface </td></tr>
<tr id="row_89_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_memory_group_base.xhtml" target="_self">MemoryGroupBase&lt; TensorType &gt;</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_memory.xhtml" title="CPU implementation of memory object. ">Memory</a> group </td></tr>
<tr id="row_89_1_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_memory_group_base.xhtml" target="_self">MemoryGroupBase&lt; CLTensor &gt;</a></td><td class="desc"></td></tr>
<tr id="row_89_2_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_memory_group_base.xhtml" target="_self">MemoryGroupBase&lt; Tensor &gt;</a></td><td class="desc"></td></tr>
<tr id="row_90_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_90_" class="arrow" onclick="toggleFolder('90_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_memory_manager.xhtml" target="_self">IMemoryManager</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_memory.xhtml" title="CPU implementation of memory object. ">Memory</a> manager interface to handle allocations of backing memory </td></tr>
<tr id="row_90_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_memory_manager_on_demand.xhtml" target="_self">MemoryManagerOnDemand</a></td><td class="desc">On-demand memory manager </td></tr>
<tr id="row_91_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_91_" class="arrow" onclick="toggleFolder('91_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_memory_pool.xhtml" target="_self">IMemoryPool</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_memory.xhtml" title="CPU implementation of memory object. ">Memory</a> Pool Inteface </td></tr>
<tr id="row_91_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_blob_memory_pool.xhtml" target="_self">BlobMemoryPool</a></td><td class="desc">Blob memory pool </td></tr>
<tr id="row_91_1_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_offset_memory_pool.xhtml" target="_self">OffsetMemoryPool</a></td><td class="desc">Offset based memory pool </td></tr>
<tr id="row_92_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_92_" class="arrow" onclick="toggleFolder('92_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_multi_h_o_g.xhtml" target="_self">IMultiHOG</a></td><td class="desc">Interface for storing multiple <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object. ">HOG</a> data-objects </td></tr>
<tr id="row_92_0_" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_92_0_" class="arrow" onclick="toggleFolder('92_0_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_c_l_multi_h_o_g.xhtml" target="_self">ICLMultiHOG</a></td><td class="desc">Interface for storing multiple <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object. ">HOG</a> data-objects </td></tr>
<tr id="row_92_0_0_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_multi_h_o_g.xhtml" target="_self">CLMultiHOG</a></td><td class="desc">Basic implementation of the CL multi <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object. ">HOG</a> data-objects </td></tr>
<tr id="row_92_1_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_multi_h_o_g.xhtml" target="_self">MultiHOG</a></td><td class="desc">CPU implementation of multi <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object. ">HOG</a> data-object </td></tr>
<tr id="row_93_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_93_" class="arrow" onclick="toggleFolder('93_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_multi_image.xhtml" target="_self">IMultiImage</a></td><td class="desc">Interface for multi-planar images </td></tr>
<tr id="row_93_0_" class="even" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_93_0_" class="arrow" onclick="toggleFolder('93_0_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_c_l_multi_image.xhtml" target="_self">ICLMultiImage</a></td><td class="desc">Interface for OpenCL multi-planar images </td></tr>
<tr id="row_93_0_0_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_multi_image.xhtml" target="_self">CLMultiImage</a></td><td class="desc">Basic implementation of the CL multi-planar image interface </td></tr>
<tr id="row_93_1_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_multi_image.xhtml" target="_self">MultiImage</a></td><td class="desc">Basic implementation of the multi-planar image interface </td></tr>
<tr id="row_94_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_94_" class="arrow" onclick="toggleFolder('94_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml" target="_self">INode</a></td><td class="desc">Node interface </td></tr>
<tr id="row_94_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_activation_layer.xhtml" target="_self">ActivationLayer</a></td><td class="desc">Activation Layer node </td></tr>
<tr id="row_94_1_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_batch_normalization_layer.xhtml" target="_self">BatchNormalizationLayer</a></td><td class="desc">BatchNormalization layer node </td></tr>
<tr id="row_94_2_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_branch_layer.xhtml" target="_self">BranchLayer</a></td><td class="desc">Branch Layer node </td></tr>
<tr id="row_94_3_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_convolution_layer.xhtml" target="_self">ConvolutionLayer</a></td><td class="desc">Convolution layer node </td></tr>
<tr id="row_94_4_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_depth_convert_layer.xhtml" target="_self">DepthConvertLayer</a></td><td class="desc"><a class="el" href="classarm__compute_1_1graph_1_1_depth_convert_layer.xhtml" title="DepthConvertLayer layer node. ">DepthConvertLayer</a> layer node </td></tr>
<tr id="row_94_5_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_depthwise_convolution_layer.xhtml" target="_self">DepthwiseConvolutionLayer</a></td><td class="desc">Convolution layer node </td></tr>
<tr id="row_94_6_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_dequantization_layer.xhtml" target="_self">DequantizationLayer</a></td><td class="desc"><a class="el" href="classarm__compute_1_1graph_1_1_dequantization_layer.xhtml" title="DequantizationLayer layer node. ">DequantizationLayer</a> layer node </td></tr>
<tr id="row_94_7_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_flatten_layer.xhtml" target="_self">FlattenLayer</a></td><td class="desc">Flatten layer node </td></tr>
<tr id="row_94_8_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_floor_layer.xhtml" target="_self">FloorLayer</a></td><td class="desc">Floor layer node </td></tr>
<tr id="row_94_9_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_fully_connected_layer.xhtml" target="_self">FullyConnectedLayer</a></td><td class="desc">Fully connected layer node </td></tr>
<tr id="row_94_10_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_l2_normalize_layer.xhtml" target="_self">L2NormalizeLayer</a></td><td class="desc"><a class="el" href="classarm__compute_1_1graph_1_1_l2_normalize_layer.xhtml" title="L2NormalizeLayer layer node. ">L2NormalizeLayer</a> layer node </td></tr>
<tr id="row_94_11_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_normalization_layer.xhtml" target="_self">NormalizationLayer</a></td><td class="desc">Normalization layer node </td></tr>
<tr id="row_94_12_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_pooling_layer.xhtml" target="_self">PoolingLayer</a></td><td class="desc">Pooling layer node </td></tr>
<tr id="row_94_13_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_quantization_layer.xhtml" target="_self">QuantizationLayer</a></td><td class="desc">Quantization layer node </td></tr>
<tr id="row_94_14_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_reshape_layer.xhtml" target="_self">ReshapeLayer</a></td><td class="desc">Reshape layer node </td></tr>
<tr id="row_94_15_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_softmax_layer.xhtml" target="_self">SoftmaxLayer</a></td><td class="desc">Softmax layer node </td></tr>
<tr id="row_95_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_95_" class="arrow" onclick="toggleFolder('95_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml" target="_self">Instrument</a></td><td class="desc">Interface for classes that can be used to measure performance </td></tr>
<tr id="row_95_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_mali_counter.xhtml" target="_self">MaliCounter</a></td><td class="desc"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml" title="Interface for classes that can be used to measure performance. ">Instrument</a> implementation for mali hw counters </td></tr>
<tr id="row_95_1_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_open_c_l_timer.xhtml" target="_self">OpenCLTimer</a></td><td class="desc"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml" title="Interface for classes that can be used to measure performance. ">Instrument</a> creating measurements based on the information returned by clGetEventProfilingInfo for each OpenCL kernel executed </td></tr>
<tr id="row_95_2_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_p_m_u_counter.xhtml" target="_self">PMUCounter</a></td><td class="desc">Implementation of an instrument to count CPU cycles </td></tr>
<tr id="row_95_3_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_wall_clock_timer.xhtml" target="_self">WallClockTimer</a></td><td class="desc">Implementation of an instrument to measure elapsed wall-clock time in milliseconds </td></tr>
<tr id="row_96_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="struct_internal_keypoint.xhtml" target="_self">InternalKeypoint</a></td><td class="desc"></td></tr>
<tr id="row_97_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_i_o_format_info.xhtml" target="_self">IOFormatInfo</a></td><td class="desc">IO formatting information class </td></tr>
<tr id="row_98_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_i_operation.xhtml" target="_self">IOperation</a></td><td class="desc">Operation functor interface </td></tr>
<tr id="row_99_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_99_" class="arrow" onclick="toggleFolder('99_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_pool_manager.xhtml" target="_self">IPoolManager</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_memory.xhtml" title="CPU implementation of memory object. ">Memory</a> pool manager interface </td></tr>
<tr id="row_99_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_pool_manager.xhtml" target="_self">PoolManager</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_memory.xhtml" title="CPU implementation of memory object. ">Memory</a> pool manager </td></tr>
<tr id="row_100_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_100_" class="arrow" onclick="toggleFolder('100_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_pyramid.xhtml" target="_self">IPyramid</a></td><td class="desc">Interface for pyramid data-object </td></tr>
<tr id="row_100_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_pyramid.xhtml" target="_self">CLPyramid</a></td><td class="desc">Basic implementation of the OpenCL pyramid interface </td></tr>
<tr id="row_100_1_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_pyramid.xhtml" target="_self">Pyramid</a></td><td class="desc">Basic implementation of the pyramid interface </td></tr>
<tr id="row_101_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1traits_1_1is__contained.xhtml" target="_self">is_contained&lt; T, Tuple &gt;</a></td><td class="desc">Check if a type T is contained in a tuple Tuple of types </td></tr>
<tr id="row_102_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_102_" class="arrow" onclick="toggleFolder('102_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1traits_1_1is__contained.xhtml" target="_self">is_contained&lt; T, std::tuple&lt; Ts... &gt; &gt;</a></td><td class="desc"></td></tr>
<tr id="row_102_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1traits_1_1is__contained_3_01_t_00_01std_1_1tuple_3_01_u_00_01_ts_8_8_8_01_4_01_4.xhtml" target="_self">is_contained&lt; T, std::tuple&lt; U, Ts... &gt; &gt;</a></td><td class="desc"></td></tr>
<tr id="row_103_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_103_" class="arrow" onclick="toggleFolder('103_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><b>is_floating_point</b></td><td class="desc"></td></tr>
<tr id="row_103_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1validation_1_1is__floating__point.xhtml" target="_self">is_floating_point&lt; T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_104_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_104_" class="arrow" onclick="toggleFolder('104_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_scheduler.xhtml" target="_self">IScheduler</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_scheduler.xhtml" title="Configurable scheduler which supports multiple multithreading APIs and choosing between different sch...">Scheduler</a> interface to run kernels </td></tr>
<tr id="row_104_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_p_p_scheduler.xhtml" target="_self">CPPScheduler</a></td><td class="desc">C++11 implementation of a pool of threads to automatically split a kernel's execution among several threads </td></tr>
<tr id="row_104_1_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_o_m_p_scheduler.xhtml" target="_self">OMPScheduler</a></td><td class="desc">Pool of threads to automatically split a kernel's execution among several threads </td></tr>
<tr id="row_104_2_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_single_thread_scheduler.xhtml" target="_self">SingleThreadScheduler</a></td><td class="desc">Pool of threads to automatically split a kernel's execution among several threads </td></tr>
<tr id="row_105_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_105_" class="arrow" onclick="toggleFolder('105_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_tensor.xhtml" target="_self">ITensor</a></td><td class="desc">Interface for NEON tensor </td></tr>
<tr id="row_105_0_" class="even" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_105_0_" class="arrow" onclick="toggleFolder('105_0_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml" target="_self">ICLTensor</a></td><td class="desc">Interface for OpenCL tensor </td></tr>
<tr id="row_105_0_0_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_sub_tensor.xhtml" target="_self">CLSubTensor</a></td><td class="desc">Basic implementation of the OpenCL sub-tensor interface </td></tr>
<tr id="row_105_0_1_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_tensor.xhtml" target="_self">CLTensor</a></td><td class="desc">Basic implementation of the OpenCL tensor interface </td></tr>
<tr id="row_105_1_" class="even" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_105_1_" class="arrow" onclick="toggleFolder('105_1_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_g_c_tensor.xhtml" target="_self">IGCTensor</a></td><td class="desc">Interface for GLES Compute tensor </td></tr>
<tr id="row_105_1_0_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_tensor.xhtml" target="_self">GCTensor</a></td><td class="desc">Interface for OpenGL ES tensor </td></tr>
<tr id="row_105_2_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_sub_tensor.xhtml" target="_self">SubTensor</a></td><td class="desc">Basic implementation of the sub-tensor interface </td></tr>
<tr id="row_105_3_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_tensor.xhtml" target="_self">Tensor</a></td><td class="desc">Basic implementation of the tensor interface </td></tr>
<tr id="row_106_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_106_" class="arrow" onclick="toggleFolder('106_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_i_tensor_accessor.xhtml" target="_self">ITensorAccessor</a></td><td class="desc"><a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml" title="Tensor class. ">Tensor</a> accessor interface </td></tr>
<tr id="row_106_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph__utils_1_1_dummy_accessor.xhtml" target="_self">DummyAccessor</a></td><td class="desc">Dummy accessor class </td></tr>
<tr id="row_106_1_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph__utils_1_1_num_py_bin_loader.xhtml" target="_self">NumPyBinLoader</a></td><td class="desc">Numpy Binary loader class </td></tr>
<tr id="row_106_2_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph__utils_1_1_p_p_m_accessor.xhtml" target="_self">PPMAccessor</a></td><td class="desc">PPM accessor class </td></tr>
<tr id="row_106_3_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph__utils_1_1_p_p_m_writer.xhtml" target="_self">PPMWriter</a></td><td class="desc">PPM writer class </td></tr>
<tr id="row_106_4_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph__utils_1_1_random_accessor.xhtml" target="_self">RandomAccessor</a></td><td class="desc">Random accessor class </td></tr>
<tr id="row_106_5_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph__utils_1_1_top_n_predictions_accessor.xhtml" target="_self">TopNPredictionsAccessor</a></td><td class="desc">Result accessor class </td></tr>
<tr id="row_107_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_107_" class="arrow" onclick="toggleFolder('107_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_tensor_allocator.xhtml" target="_self">ITensorAllocator</a></td><td class="desc">Interface to allocate tensors </td></tr>
<tr id="row_107_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_tensor_allocator.xhtml" target="_self">CLTensorAllocator</a></td><td class="desc">Basic implementation of a CL memory tensor allocator </td></tr>
<tr id="row_107_1_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_tensor_allocator.xhtml" target="_self">GCTensorAllocator</a></td><td class="desc">Basic implementation of a GLES memory tensor allocator </td></tr>
<tr id="row_107_2_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_tensor_allocator.xhtml" target="_self">TensorAllocator</a></td><td class="desc">Basic implementation of a CPU memory tensor allocator </td></tr>
<tr id="row_108_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_108_" class="arrow" onclick="toggleFolder('108_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_i_tensor_object.xhtml" target="_self">ITensorObject</a></td><td class="desc"><a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml" title="Tensor class. ">Tensor</a> object interface </td></tr>
<tr id="row_108_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_sub_tensor.xhtml" target="_self">SubTensor</a></td><td class="desc"><a class="el" href="classarm__compute_1_1graph_1_1_sub_tensor.xhtml" title="SubTensor class. ">SubTensor</a> class </td></tr>
<tr id="row_108_1_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml" target="_self">Tensor</a></td><td class="desc"><a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml" title="Tensor class. ">Tensor</a> class </td></tr>
<tr id="row_109_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_iterator.xhtml" target="_self">Iterator</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_iterator.xhtml" title="Iterator updated by execute_window_loop for each window element. ">Iterator</a> updated by <a class="el" href="namespacearm__compute.xhtml#a6c0dcc38187027dcb89cd9724bc5a823">execute_window_loop</a> for each window element </td></tr>
<tr id="row_110_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1datasets_1_1_batch_normalization_layer_dataset_1_1iterator.xhtml" target="_self">BatchNormalizationLayerDataset::iterator</a></td><td class="desc"></td></tr>
<tr id="row_111_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1datasets_1_1_convolution_layer_dataset_1_1iterator.xhtml" target="_self">ConvolutionLayerDataset::iterator</a></td><td class="desc"></td></tr>
<tr id="row_112_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1datasets_1_1_depthwise_convolution_layer_dataset_1_1iterator.xhtml" target="_self">DepthwiseConvolutionLayerDataset::iterator</a></td><td class="desc"></td></tr>
<tr id="row_113_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1datasets_1_1_fully_connected_layer_dataset_1_1iterator.xhtml" target="_self">FullyConnectedLayerDataset::iterator</a></td><td class="desc"></td></tr>
<tr id="row_114_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1datasets_1_1_g_e_m_m_dataset_1_1iterator.xhtml" target="_self">GEMMDataset::iterator</a></td><td class="desc"></td></tr>
<tr id="row_115_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1datasets_1_1_g_e_m_m_lowp_dataset_1_1iterator.xhtml" target="_self">GEMMLowpDataset::iterator</a></td><td class="desc"></td></tr>
<tr id="row_116_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1datasets_1_1_pooling_layer_dataset_1_1iterator.xhtml" target="_self">PoolingLayerDataset::iterator</a></td><td class="desc"></td></tr>
<tr id="row_117_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1datasets_1_1_reshape_layer_dataset_1_1iterator.xhtml" target="_self">ReshapeLayerDataset::iterator</a></td><td class="desc"></td></tr>
<tr id="row_118_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1datasets_1_1_r_o_i_pooling_layer_dataset_1_1iterator.xhtml" target="_self">ROIPoolingLayerDataset::iterator</a></td><td class="desc"></td></tr>
<tr id="row_119_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1datasets_1_1_threshold_dataset_1_1iterator.xhtml" target="_self">ThresholdDataset::iterator</a></td><td class="desc"></td></tr>
<tr id="row_120_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset_1_1iterator.xhtml" target="_self">CartesianProductDataset&lt; T, U &gt;::iterator</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_iterator.xhtml" title="Iterator updated by execute_window_loop for each window element. ">Iterator</a> for the dataset </td></tr>
<tr id="row_121_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_container_dataset_1_1iterator.xhtml" target="_self">ContainerDataset&lt; T &gt;::iterator</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_iterator.xhtml" title="Iterator updated by execute_window_loop for each window element. ">Iterator</a> for the dataset </td></tr>
<tr id="row_122_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_initializer_list_dataset_1_1iterator.xhtml" target="_self">InitializerListDataset&lt; T &gt;::iterator</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_iterator.xhtml" title="Iterator updated by execute_window_loop for each window element. ">Iterator</a> for the dataset </td></tr>
<tr id="row_123_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_join_dataset_1_1iterator.xhtml" target="_self">JoinDataset&lt; T, U &gt;::iterator</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_iterator.xhtml" title="Iterator updated by execute_window_loop for each window element. ">Iterator</a> for the dataset </td></tr>
<tr id="row_124_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_range_dataset_1_1iterator.xhtml" target="_self">RangeDataset&lt; T &gt;::iterator</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_iterator.xhtml" title="Iterator updated by execute_window_loop for each window element. ">Iterator</a> for the dataset </td></tr>
<tr id="row_125_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_singleton_dataset_1_1iterator.xhtml" target="_self">SingletonDataset&lt; T &gt;::iterator</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_iterator.xhtml" title="Iterator updated by execute_window_loop for each window element. ">Iterator</a> for the dataset </td></tr>
<tr id="row_126_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_zip_dataset_1_1iterator.xhtml" target="_self">ZipDataset&lt; T, U &gt;::iterator</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_iterator.xhtml" title="Iterator updated by execute_window_loop for each window element. ">Iterator</a> for the dataset </td></tr>
<tr id="row_127_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1datasets_1_1_depthwise_separable_convolution_layer_dataset_1_1iterator.xhtml" target="_self">DepthwiseSeparableConvolutionLayerDataset::iterator</a></td><td class="desc"></td></tr>
<tr id="row_128_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structmali__userspace_1_1kbase__hwcnt__reader__metadata.xhtml" target="_self">kbase_hwcnt_reader_metadata</a></td><td class="desc"></td></tr>
<tr id="row_129_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structmali__userspace_1_1kbase__uk__gpuprops.xhtml" target="_self">kbase_uk_gpuprops</a></td><td class="desc"></td></tr>
<tr id="row_130_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_kernel.xhtml" target="_self">Kernel</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_kernel.xhtml" title="Kernel class. ">Kernel</a> class </td></tr>
<tr id="row_131_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="struct_kernel_shape.xhtml" target="_self">KernelShape</a></td><td class="desc"></td></tr>
<tr id="row_132_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="struct_keypoint.xhtml" target="_self">Keypoint</a></td><td class="desc"></td></tr>
<tr id="row_133_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_key_point.xhtml" target="_self">KeyPoint</a></td><td class="desc"><a class="el" href="struct_keypoint.xhtml">Keypoint</a> type </td></tr>
<tr id="row_134_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1networks_1_1_le_net5_network.xhtml" target="_self">LeNet5Network&lt; TensorType, Accessor, ActivationLayerFunction, ConvolutionLayerFunction, FullyConnectedLayerFunction, PoolingLayerFunction, SoftmaxLayerFunction &gt;</a></td><td class="desc">Lenet5 model object </td></tr>
<tr id="row_135_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1networks_1_1_le_net5_network.xhtml" target="_self">LeNet5Network&lt; TensorType, arm_compute::test::Accessor, ActivationLayerFunction, ConvolutionLayerFunction, FullyConnectedLayerFunction, PoolingLayerFunction, SoftmaxLayerFunction &gt;</a></td><td class="desc"></td></tr>
<tr id="row_136_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1logging_1_1_logger.xhtml" target="_self">Logger</a></td><td class="desc"><a class="el" href="classarm__compute_1_1logging_1_1_logger.xhtml" title="Logger class. ">Logger</a> class </td></tr>
<tr id="row_137_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1logging_1_1_logger_registry.xhtml" target="_self">LoggerRegistry</a></td><td class="desc">Registry class holding all the instantiated loggers </td></tr>
<tr id="row_138_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1logging_1_1_log_msg.xhtml" target="_self">LogMsg</a></td><td class="desc"></td></tr>
<tr id="row_139_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structmali__userspace_1_1mali__base__gpu__coherent__group.xhtml" target="_self">mali_base_gpu_coherent_group</a></td><td class="desc"></td></tr>
<tr id="row_140_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structmali__userspace_1_1mali__base__gpu__coherent__group__info.xhtml" target="_self">mali_base_gpu_coherent_group_info</a></td><td class="desc"></td></tr>
<tr id="row_141_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structmali__userspace_1_1mali__base__gpu__core__props.xhtml" target="_self">mali_base_gpu_core_props</a></td><td class="desc"></td></tr>
<tr id="row_142_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structmali__userspace_1_1mali__base__gpu__l2__cache__props.xhtml" target="_self">mali_base_gpu_l2_cache_props</a></td><td class="desc"></td></tr>
<tr id="row_143_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structmali__userspace_1_1mali__base__gpu__props.xhtml" target="_self">mali_base_gpu_props</a></td><td class="desc"></td></tr>
<tr id="row_144_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structmali__userspace_1_1mali__base__gpu__thread__props.xhtml" target="_self">mali_base_gpu_thread_props</a></td><td class="desc"></td></tr>
<tr id="row_145_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structmali__userspace_1_1mali__base__gpu__tiler__props.xhtml" target="_self">mali_base_gpu_tiler_props</a></td><td class="desc"></td></tr>
<tr id="row_146_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml" target="_self">Measurement</a></td><td class="desc">Generic measurement that stores values as either double or long long int </td></tr>
<tr id="row_147_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_memory.xhtml" target="_self">Memory</a></td><td class="desc">CPU implementation of memory object </td></tr>
<tr id="row_148_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_min_max_location_values.xhtml" target="_self">MinMaxLocationValues&lt; MinMaxType &gt;</a></td><td class="desc"></td></tr>
<tr id="row_149_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_min_max_location_values.xhtml" target="_self">MinMaxLocationValues&lt; T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_150_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_min_max_location_values.xhtml" target="_self">MinMaxLocationValues&lt; target_type &gt;</a></td><td class="desc"></td></tr>
<tr id="row_151_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1networks_1_1_mobile_net_network.xhtml" target="_self">MobileNetNetwork&lt; TensorType, Accessor, ActivationLayerFunction, ConvolutionLayerFunction, DirectConvolutionLayerFunction, DepthwiseConvolutionLayerFunction, ReshapeFunction, PoolingLayerFunction &gt;</a></td><td class="desc">MobileNet model object </td></tr>
<tr id="row_152_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1networks_1_1_mobile_net_network.xhtml" target="_self">MobileNetNetwork&lt; TensorType, arm_compute::test::Accessor, ActivationLayerFunction, ConvolutionLayerFunction, DirectConvolutionLayerFunction, DepthwiseConvolutionLayerFunction, ReshapeFunction, PoolingLayerFunction &gt;</a></td><td class="desc"></td></tr>
<tr id="row_153_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1networks_1_1_mobile_net_v1_network.xhtml" target="_self">MobileNetV1Network&lt; TensorType, Accessor, ActivationLayerFunction, BatchNormalizationLayerFunction, ConvolutionLayerFunction, DirectConvolutionLayerFunction, DepthwiseConvolutionFunction, ReshapeFunction, PoolingLayerFunction, SoftmaxLayerFunction &gt;</a></td><td class="desc">MobileNet model object </td></tr>
<tr id="row_154_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1networks_1_1_mobile_net_v1_network.xhtml" target="_self">MobileNetV1Network&lt; TensorType, arm_compute::test::Accessor, ActivationLayerFunction, BatchNormalizationLayerFunction, ConvolutionLayerFunction, DirectConvolutionLayerFunction, DepthwiseConvolutionFunction, ReshapeFunction, PoolingLayerFunction, SoftmaxLayerFunction &gt;</a></td><td class="desc"></td></tr>
<tr id="row_155_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_multi_image_info.xhtml" target="_self">MultiImageInfo</a></td><td class="desc">Store the multi-planar image's metadata </td></tr>
<tr id="row_156_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1gles_1_1_n_d_range.xhtml" target="_self">NDRange</a></td><td class="desc">Class interface for specifying <a class="el" href="classarm__compute_1_1gles_1_1_n_d_range.xhtml" title="Class interface for specifying NDRange values. ">NDRange</a> values </td></tr>
<tr id="row_157_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_n_e_l_k_internal_keypoint.xhtml" target="_self">NELKInternalKeypoint</a></td><td class="desc">Internal keypoint class for Lucas-Kanade Optical Flow </td></tr>
<tr id="row_158_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_node_context.xhtml" target="_self">NodeContext</a></td><td class="desc">Node Context class </td></tr>
<tr id="row_159_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_159_" class="arrow" onclick="toggleFolder('159_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_node_parameter_base.xhtml" target="_self">NodeParameterBase</a></td><td class="desc">Node Parameter Empty base class </td></tr>
<tr id="row_159_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_node_parameter.xhtml" target="_self">NodeParameter&lt; T &gt;</a></td><td class="desc">Template parameter implementation </td></tr>
<tr id="row_160_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_normalization_layer_info.xhtml" target="_self">NormalizationLayerInfo</a></td><td class="desc">Normalization Layer Information class </td></tr>
<tr id="row_161_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1utils_1_1_n_p_y_loader.xhtml" target="_self">NPYLoader</a></td><td class="desc"></td></tr>
<tr id="row_162_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1detail_1_1_operation_registrar.xhtml" target="_self">OperationRegistrar&lt; T &gt;</a></td><td class="desc">Helper class to statically register an operation </td></tr>
<tr id="row_163_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_operation_registry.xhtml" target="_self">OperationRegistry</a></td><td class="desc">Registry holding all the supported operations </td></tr>
<tr id="row_164_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_164_" class="arrow" onclick="toggleFolder('164_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_option.xhtml" target="_self">Option</a></td><td class="desc">Abstract base class for a command line option </td></tr>
<tr id="row_164_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_enum_list_option.xhtml" target="_self">EnumListOption&lt; T &gt;</a></td><td class="desc">Implementation of an option that accepts any number of values from a fixed set </td></tr>
<tr id="row_164_1_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_list_option.xhtml" target="_self">ListOption&lt; T &gt;</a></td><td class="desc">Implementation of an option that accepts any number of values </td></tr>
<tr id="row_164_2_" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_164_2_" class="arrow" onclick="toggleFolder('164_2_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_simple_option.xhtml" target="_self">SimpleOption&lt; T &gt;</a></td><td class="desc">Implementation of an option that accepts a single value </td></tr>
<tr id="row_164_2_0_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_enum_option.xhtml" target="_self">EnumOption&lt; T &gt;</a></td><td class="desc">Implementation of a simple option that accepts a value from a fixed set </td></tr>
<tr id="row_164_3_" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_164_3_" class="arrow" onclick="toggleFolder('164_3_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_simple_option.xhtml" target="_self">SimpleOption&lt; bool &gt;</a></td><td class="desc"></td></tr>
<tr id="row_164_3_0_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_toggle_option.xhtml" target="_self">ToggleOption</a></td><td class="desc">Implementation of an option that can be either true or false </td></tr>
<tr id="row_165_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_padding_calculator.xhtml" target="_self">PaddingCalculator</a></td><td class="desc">Calculate required padding </td></tr>
<tr id="row_166_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_pad_stride_info.xhtml" target="_self">PadStrideInfo</a></td><td class="desc">Padding and stride information class </td></tr>
<tr id="row_167_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_pixel_value.xhtml" target="_self">PixelValue</a></td><td class="desc">Class describing the value of a pixel for any image format </td></tr>
<tr id="row_168_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_p_m_u.xhtml" target="_self">PMU</a></td><td class="desc">Class provides access to CPU hardware counters </td></tr>
<tr id="row_169_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_169_" class="arrow" onclick="toggleFolder('169_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_pooling_layer_dataset.xhtml" target="_self">PoolingLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_169_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_alex_net_pooling_layer_dataset.xhtml" target="_self">AlexNetPoolingLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_169_1_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_goog_le_net_inception_v1_pooling_layer_dataset.xhtml" target="_self">GoogLeNetInceptionV1PoolingLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_169_2_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_goog_le_net_inception_v4_pooling_layer_dataset.xhtml" target="_self">GoogLeNetInceptionV4PoolingLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_169_3_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_le_net5_pooling_layer_dataset.xhtml" target="_self">LeNet5PoolingLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_169_4_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_squeeze_net_pooling_layer_dataset.xhtml" target="_self">SqueezeNetPoolingLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_169_5_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_v_g_g16_pooling_layer_dataset.xhtml" target="_self">VGG16PoolingLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_169_6_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_y_o_l_o_v2_pooling_layer_dataset.xhtml" target="_self">YOLOV2PoolingLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_170_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_pooling_layer_info.xhtml" target="_self">PoolingLayerInfo</a></td><td class="desc">Pooling Layer Information class </td></tr>
<tr id="row_171_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1utils_1_1_p_p_m_loader.xhtml" target="_self">PPMLoader</a></td><td class="desc">Class to load the content of a PPM file into an <a class="el" href="struct_image.xhtml" title="Structure to hold Image information. ">Image</a> </td></tr>
<tr id="row_172_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_172_" class="arrow" onclick="toggleFolder('172_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml" target="_self">Printer</a></td><td class="desc">Abstract printer class used by the <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml">Framework</a> to present output </td></tr>
<tr id="row_172_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_j_s_o_n_printer.xhtml" target="_self">JSONPrinter</a></td><td class="desc">Implementation of a <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml">Printer</a> that produces JSON output </td></tr>
<tr id="row_172_1_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml" target="_self">PrettyPrinter</a></td><td class="desc">Implementation of a <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml">Printer</a> that produces human readable output </td></tr>
<tr id="row_173_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_173_" class="arrow" onclick="toggleFolder('173_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1logging_1_1_printer.xhtml" target="_self">Printer</a></td><td class="desc">Base printer class to be inherited by other printer classes </td></tr>
<tr id="row_173_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1logging_1_1_file_printer.xhtml" target="_self">FilePrinter</a></td><td class="desc">File <a class="el" href="classarm__compute_1_1logging_1_1_printer.xhtml" title="Base printer class to be inherited by other printer classes. ">Printer</a> </td></tr>
<tr id="row_173_1_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1logging_1_1_std_printer.xhtml" target="_self">StdPrinter</a></td><td class="desc">Std <a class="el" href="classarm__compute_1_1logging_1_1_printer.xhtml" title="Base printer class to be inherited by other printer classes. ">Printer</a> </td></tr>
<tr id="row_174_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_profiler.xhtml" target="_self">Profiler</a></td><td class="desc"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_profiler.xhtml" title="Profiler class to collect benchmark numbers. ">Profiler</a> class to collect benchmark numbers </td></tr>
<tr id="row_175_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classprofiler.xhtml" target="_self">profiler</a></td><td class="desc"></td></tr>
<tr id="row_176_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_program.xhtml" target="_self">Program</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_program.xhtml" title="Program class. ">Program</a> class </td></tr>
<tr id="row_177_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits_1_1promote.xhtml" target="_self">promote&lt; T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_178_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1traits_1_1promote.xhtml" target="_self">promote&lt; T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_179_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1traits_1_1promote_3_01float_01_4.xhtml" target="_self">promote&lt; float &gt;</a></td><td class="desc"></td></tr>
<tr id="row_180_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1traits_1_1promote_3_01half_01_4.xhtml" target="_self">promote&lt; half &gt;</a></td><td class="desc"></td></tr>
<tr id="row_181_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1traits_1_1promote_3_01int16__t_01_4.xhtml" target="_self">promote&lt; int16_t &gt;</a></td><td class="desc"></td></tr>
<tr id="row_182_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits_1_1promote_3_01int16__t_01_4.xhtml" target="_self">promote&lt; int16_t &gt;</a></td><td class="desc"></td></tr>
<tr id="row_183_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits_1_1promote_3_01int32__t_01_4.xhtml" target="_self">promote&lt; int32_t &gt;</a></td><td class="desc"></td></tr>
<tr id="row_184_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1traits_1_1promote_3_01int32__t_01_4.xhtml" target="_self">promote&lt; int32_t &gt;</a></td><td class="desc"></td></tr>
<tr id="row_185_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits_1_1promote_3_01int64__t_01_4.xhtml" target="_self">promote&lt; int64_t &gt;</a></td><td class="desc"></td></tr>
<tr id="row_186_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1traits_1_1promote_3_01int8__t_01_4.xhtml" target="_self">promote&lt; int8_t &gt;</a></td><td class="desc"></td></tr>
<tr id="row_187_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits_1_1promote_3_01int8__t_01_4.xhtml" target="_self">promote&lt; int8_t &gt;</a></td><td class="desc"></td></tr>
<tr id="row_188_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits_1_1promote_3_01uint16__t_01_4.xhtml" target="_self">promote&lt; uint16_t &gt;</a></td><td class="desc"></td></tr>
<tr id="row_189_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1traits_1_1promote_3_01uint16__t_01_4.xhtml" target="_self">promote&lt; uint16_t &gt;</a></td><td class="desc"></td></tr>
<tr id="row_190_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits_1_1promote_3_01uint32__t_01_4.xhtml" target="_self">promote&lt; uint32_t &gt;</a></td><td class="desc"></td></tr>
<tr id="row_191_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1traits_1_1promote_3_01uint32__t_01_4.xhtml" target="_self">promote&lt; uint32_t &gt;</a></td><td class="desc"></td></tr>
<tr id="row_192_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits_1_1promote_3_01uint64__t_01_4.xhtml" target="_self">promote&lt; uint64_t &gt;</a></td><td class="desc"></td></tr>
<tr id="row_193_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits_1_1promote_3_01uint8__t_01_4.xhtml" target="_self">promote&lt; uint8_t &gt;</a></td><td class="desc"></td></tr>
<tr id="row_194_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1traits_1_1promote_3_01uint8__t_01_4.xhtml" target="_self">promote&lt; uint8_t &gt;</a></td><td class="desc"></td></tr>
<tr id="row_195_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_pyramid_info.xhtml" target="_self">PyramidInfo</a></td><td class="desc">Store the <a class="el" href="classarm__compute_1_1_pyramid.xhtml" title="Basic implementation of the pyramid interface. ">Pyramid</a>'s metadata </td></tr>
<tr id="row_196_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_quantization_info.xhtml" target="_self">QuantizationInfo</a></td><td class="desc">Quantization settings (used for QASYMM8 data type) </td></tr>
<tr id="row_197_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_rectangle.xhtml" target="_self">Rectangle</a></td><td class="desc"><a class="el" href="structarm__compute_1_1_rectangle.xhtml" title="Rectangle type. ">Rectangle</a> type </td></tr>
<tr id="row_198_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_relative_tolerance.xhtml" target="_self">RelativeTolerance&lt; T &gt;</a></td><td class="desc">Class reprensenting a relative tolerance value </td></tr>
<tr id="row_199_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_relative_tolerance.xhtml" target="_self">RelativeTolerance&lt; U &gt;</a></td><td class="desc"></td></tr>
<tr id="row_200_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_200_" class="arrow" onclick="toggleFolder('200_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_reshape_layer_dataset.xhtml" target="_self">ReshapeLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_200_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_small_reshape_layer_dataset.xhtml" target="_self">SmallReshapeLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_201_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_r_o_i.xhtml" target="_self">ROI</a></td><td class="desc">Region of interest </td></tr>
<tr id="row_202_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_202_" class="arrow" onclick="toggleFolder('202_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_r_o_i_pooling_layer_dataset.xhtml" target="_self">ROIPoolingLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_202_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_small_r_o_i_pooling_layer_dataset.xhtml" target="_self">SmallROIPoolingLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_203_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_r_o_i_pooling_layer_info.xhtml" target="_self">ROIPoolingLayerInfo</a></td><td class="desc"><a class="el" href="structarm__compute_1_1_r_o_i.xhtml" title="Region of interest. ">ROI</a> Pooling Layer Information class </td></tr>
<tr id="row_204_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_204_" class="arrow" onclick="toggleFolder('204_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><b>runtime_error</b></td><td class="desc"></td></tr>
<tr id="row_204_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_file_not_found.xhtml" target="_self">FileNotFound</a></td><td class="desc">Error class for when some external assets are missing </td></tr>
<tr id="row_204_1_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_test_error.xhtml" target="_self">TestError</a></td><td class="desc">Error class for failures during test execution </td></tr>
<tr id="row_205_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_scheduler.xhtml" target="_self">Scheduler</a></td><td class="desc">Configurable scheduler which supports multiple multithreading APIs and choosing between different schedulers at runtime </td></tr>
<tr id="row_206_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_semaphore.xhtml" target="_self">Semaphore</a></td><td class="desc">Semamphore class </td></tr>
<tr id="row_207_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_size2_d.xhtml" target="_self">Size2D</a></td><td class="desc">Class for specifying the size of an image or rectangle </td></tr>
<tr id="row_208_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_status.xhtml" target="_self">Status</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_status.xhtml" title="Status class. ">Status</a> class </td></tr>
<tr id="row_209_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_sub_graph.xhtml" target="_self">SubGraph</a></td><td class="desc"><a class="el" href="classarm__compute_1_1graph_1_1_sub_graph.xhtml" title="SubGraph class. ">SubGraph</a> class </td></tr>
<tr id="row_210_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="struct_tensor3_d.xhtml" target="_self">Tensor3D</a></td><td class="desc">Structure to hold 3D tensor information </td></tr>
<tr id="row_211_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="class_tensor4_d.xhtml" target="_self">Tensor4D&lt; ShapeT, T &gt;</a></td><td class="desc">Structure to hold 4D tensor information </td></tr>
<tr id="row_212_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="struct_tensor4_d_shape.xhtml" target="_self">Tensor4DShape</a></td><td class="desc"></td></tr>
<tr id="row_213_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_tensor_cache.xhtml" target="_self">TensorCache</a></td><td class="desc">Stores <a class="el" href="classarm__compute_1_1test_1_1_raw_tensor.xhtml">RawTensor</a> categorised by the image they are created from including name, format and channel </td></tr>
<tr id="row_214_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_214_" class="arrow" onclick="toggleFolder('214_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_test_case.xhtml" target="_self">TestCase</a></td><td class="desc">Abstract test case class </td></tr>
<tr id="row_214_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_data_test_case.xhtml" target="_self">DataTestCase&lt; T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_214_1_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_data_test_case.xhtml" target="_self">DataTestCase&lt; decltype(framework::dataset::combine(framework::dataset::combine(datasets::AlexNetActivationLayerDataset(), data_types), framework::dataset::make(&quot;Batches&quot;, 1)))::type &gt;</a></td><td class="desc"></td></tr>
<tr id="row_214_2_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_data_test_case.xhtml" target="_self">DataTestCase&lt; decltype(framework::dataset::combine(framework::dataset::combine(datasets::AlexNetActivationLayerDataset(), data_types), framework::dataset::make(&quot;Batches&quot;,{4, 8})))::type &gt;</a></td><td class="desc"></td></tr>
<tr id="row_214_3_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_data_test_case.xhtml" target="_self">DataTestCase&lt; decltype(framework::dataset::combine(framework::dataset::combine(datasets::GoogLeNetInceptionV1ActivationLayerDataset(), data_types), framework::dataset::make(&quot;Batches&quot;, 1)))::type &gt;</a></td><td class="desc"></td></tr>
<tr id="row_214_4_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_data_test_case.xhtml" target="_self">DataTestCase&lt; decltype(framework::dataset::combine(framework::dataset::combine(datasets::GoogLeNetInceptionV1ActivationLayerDataset(), data_types), framework::dataset::make(&quot;Batches&quot;,{4, 8})))::type &gt;</a></td><td class="desc"></td></tr>
<tr id="row_214_5_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_data_test_case.xhtml" target="_self">DataTestCase&lt; decltype(framework::dataset::combine(framework::dataset::combine(datasets::GoogLeNetInceptionV4ActivationLayerDataset(), data_types), framework::dataset::make(&quot;Batches&quot;, 1)))::type &gt;</a></td><td class="desc"></td></tr>
<tr id="row_214_6_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_data_test_case.xhtml" target="_self">DataTestCase&lt; decltype(framework::dataset::combine(framework::dataset::combine(datasets::GoogLeNetInceptionV4ActivationLayerDataset(), data_types), framework::dataset::make(&quot;Batches&quot;,{4, 8})))::type &gt;</a></td><td class="desc"></td></tr>
<tr id="row_214_7_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_data_test_case.xhtml" target="_self">DataTestCase&lt; decltype(framework::dataset::combine(framework::dataset::combine(datasets::LeNet5ActivationLayerDataset(), data_types), framework::dataset::make(&quot;Batches&quot;, 1)))::type &gt;</a></td><td class="desc"></td></tr>
<tr id="row_214_8_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_data_test_case.xhtml" target="_self">DataTestCase&lt; decltype(framework::dataset::combine(framework::dataset::combine(datasets::LeNet5ActivationLayerDataset(), data_types), framework::dataset::make(&quot;Batches&quot;,{4, 8})))::type &gt;</a></td><td class="desc"></td></tr>
<tr id="row_214_9_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_data_test_case.xhtml" target="_self">DataTestCase&lt; decltype(framework::dataset::combine(framework::dataset::combine(datasets::SqueezeNetActivationLayerDataset(), data_types), framework::dataset::make(&quot;Batches&quot;, 1)))::type &gt;</a></td><td class="desc"></td></tr>
<tr id="row_214_10_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_data_test_case.xhtml" target="_self">DataTestCase&lt; decltype(framework::dataset::combine(framework::dataset::combine(datasets::SqueezeNetActivationLayerDataset(), data_types), framework::dataset::make(&quot;Batches&quot;,{4, 8})))::type &gt;</a></td><td class="desc"></td></tr>
<tr id="row_214_11_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_data_test_case.xhtml" target="_self">DataTestCase&lt; decltype(framework::dataset::combine(framework::dataset::combine(datasets::VGG16ActivationLayerDataset(), data_types), framework::dataset::make(&quot;Batches&quot;, 1)))::type &gt;</a></td><td class="desc"></td></tr>
<tr id="row_214_12_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_data_test_case.xhtml" target="_self">DataTestCase&lt; decltype(framework::dataset::combine(framework::dataset::combine(datasets::VGG16ActivationLayerDataset(), data_types), framework::dataset::make(&quot;Batches&quot;,{4, 8})))::type &gt;</a></td><td class="desc"></td></tr>
<tr id="row_214_13_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_data_test_case.xhtml" target="_self">DataTestCase&lt; decltype(framework::dataset::combine(framework::dataset::combine(datasets::YOLOV2ActivationLayerDataset(), data_types), framework::dataset::make(&quot;Batches&quot;, 1)))::type &gt;</a></td><td class="desc"></td></tr>
<tr id="row_214_14_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_data_test_case.xhtml" target="_self">DataTestCase&lt; decltype(framework::dataset::combine(framework::dataset::combine(datasets::YOLOV2ActivationLayerDataset(), data_types), framework::dataset::make(&quot;Batches&quot;,{4, 8})))::type &gt;</a></td><td class="desc"></td></tr>
<tr id="row_215_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_215_" class="arrow" onclick="toggleFolder('215_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_test_case_factory.xhtml" target="_self">TestCaseFactory</a></td><td class="desc">Abstract factory class to create test cases </td></tr>
<tr id="row_215_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_data_test_case_factory.xhtml" target="_self">DataTestCaseFactory&lt; T, D &gt;</a></td><td class="desc"></td></tr>
<tr id="row_215_1_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_simple_test_case_factory.xhtml" target="_self">SimpleTestCaseFactory&lt; T &gt;</a></td><td class="desc">Implementation of a test case factory to create non-data test cases </td></tr>
<tr id="row_216_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1detail_1_1_test_case_registrar.xhtml" target="_self">TestCaseRegistrar&lt; T &gt;</a></td><td class="desc">Helper class to statically register a test case </td></tr>
<tr id="row_217_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_test_filter.xhtml" target="_self">TestFilter</a></td><td class="desc">Test filter class </td></tr>
<tr id="row_218_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml" target="_self">TestInfo</a></td><td class="desc">Information about a test case </td></tr>
<tr id="row_219_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_test_result.xhtml" target="_self">TestResult</a></td><td class="desc">Class to store results of a test </td></tr>
<tr id="row_220_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1detail_1_1_test_suite_registrar.xhtml" target="_self">TestSuiteRegistrar</a></td><td class="desc">Helper class to statically begin and end a test suite </td></tr>
<tr id="row_221_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_thread_info.xhtml" target="_self">ThreadInfo</a></td><td class="desc"></td></tr>
<tr id="row_222_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_222_" class="arrow" onclick="toggleFolder('222_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_threshold_dataset.xhtml" target="_self">ThresholdDataset</a></td><td class="desc"></td></tr>
<tr id="row_222_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_mixed_threshold_dataset.xhtml" target="_self">MixedThresholdDataset</a></td><td class="desc"></td></tr>
<tr id="row_223_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="struct_transform_impl.xhtml" target="_self">TransformImpl&lt; IntBy, BlockBy, Transposed, TOutSize, TInSize &gt;</a></td><td class="desc"></td></tr>
<tr id="row_224_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="struct_transpose_interleave_common.xhtml" target="_self">TransposeInterleaveCommon&lt; IntBy, TIn, TOut &gt;</a></td><td class="desc"></td></tr>
<tr id="row_225_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_225_" class="arrow" onclick="toggleFolder('225_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><b>true_type</b></td><td class="desc"></td></tr>
<tr id="row_225_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1is__container_3_01std_1_1vector_3_01_v_00_01_a_01_4_01_4.xhtml" target="_self">is_container&lt; std::vector&lt; V, A &gt; &gt;</a></td><td class="desc"><a class="el" href="struct_vector.xhtml" title="Structure to hold Vector information. ">Vector</a> is considered a container </td></tr>
<tr id="row_225_1_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1validation_1_1is__floating__point_3_01half_01_4.xhtml" target="_self">is_floating_point&lt; half &gt;</a></td><td class="desc"></td></tr>
<tr id="row_225_2_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1traits_1_1is__contained_3_01_t_00_01std_1_1tuple_3_01_t_00_01_ts_8_8_8_01_4_01_4.xhtml" target="_self">is_contained&lt; T, std::tuple&lt; T, Ts... &gt; &gt;</a></td><td class="desc"></td></tr>
<tr id="row_226_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="unionmali__userspace_1_1uk__header.xhtml" target="_self">uk_header</a></td><td class="desc"></td></tr>
<tr id="row_227_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_valid_region.xhtml" target="_self">ValidRegion</a></td><td class="desc"></td></tr>
<tr id="row_228_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml" target="_self">Measurement::Value</a></td><td class="desc"></td></tr>
<tr id="row_229_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="struct_vector.xhtml" target="_self">Vector</a></td><td class="desc">Structure to hold <a class="el" href="struct_vector.xhtml" title="Structure to hold Vector information. ">Vector</a> information </td></tr>
<tr id="row_230_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_weights_info.xhtml" target="_self">WeightsInfo</a></td><td class="desc">Convolution Layer Weights Information class </td></tr>
<tr id="row_231_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_window.xhtml" target="_self">Window</a></td><td class="desc">Describe a multidimensional execution window </td></tr>
<tr id="row_232_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_winograd3x3_f32.xhtml" target="_self">Winograd3x3F32</a></td><td class="desc"></td></tr>
</table>
</div><!-- directory -->
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="footer">Generated on Thu Dec 14 2017 23:48:39 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
  </ul>
</div>
</body>
</html>
