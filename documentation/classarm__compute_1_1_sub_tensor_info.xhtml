<!-- HTML header for doxygen 1.8.9.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: SubTensorInfo Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Compute Library
   &#160;<span id="projectnumber">17.12</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li><a href="classes.xhtml"><span>Data&#160;Structure&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Data&#160;Fields</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarm__compute_1_1_sub_tensor_info.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">SubTensorInfo Class Reference<span class="mlabels"><span class="mlabel">final</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p>Store the sub tensor's metadata.  
 <a href="classarm__compute_1_1_sub_tensor_info.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_sub_tensor_info_8h_source.xhtml">SubTensorInfo.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for SubTensorInfo:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classarm__compute_1_1_sub_tensor_info__coll__graph.svg" width="206" height="279"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a9025d7eb7c8e0d40239ddc3568d2e201"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_sub_tensor_info.xhtml#a9025d7eb7c8e0d40239ddc3568d2e201">SubTensorInfo</a> ()</td></tr>
<tr class="memdesc:a9025d7eb7c8e0d40239ddc3568d2e201"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor.  <a href="#a9025d7eb7c8e0d40239ddc3568d2e201">More...</a><br /></td></tr>
<tr class="separator:a9025d7eb7c8e0d40239ddc3568d2e201"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afbfb4cf97d6af2500035f181f877ed4b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_sub_tensor_info.xhtml#afbfb4cf97d6af2500035f181f877ed4b">SubTensorInfo</a> (<a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *parent, <a class="el" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> <a class="el" href="classarm__compute_1_1_sub_tensor_info.xhtml#a269b19ce3f357ac65f41f9951906e38e">tensor_shape</a>, <a class="el" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a> <a class="el" href="classarm__compute_1_1_sub_tensor_info.xhtml#a8586f084a949b4324b660665e787b684">coords</a>)</td></tr>
<tr class="memdesc:afbfb4cf97d6af2500035f181f877ed4b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor.  <a href="#afbfb4cf97d6af2500035f181f877ed4b">More...</a><br /></td></tr>
<tr class="separator:afbfb4cf97d6af2500035f181f877ed4b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad86e6a6af47f1b493eac9873f88b843f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_sub_tensor_info.xhtml#ad86e6a6af47f1b493eac9873f88b843f">~SubTensorInfo</a> ()=default</td></tr>
<tr class="memdesc:ad86e6a6af47f1b493eac9873f88b843f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default destructor.  <a href="#ad86e6a6af47f1b493eac9873f88b843f">More...</a><br /></td></tr>
<tr class="separator:ad86e6a6af47f1b493eac9873f88b843f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae2f91fa1c229a5e05f81c4b50e667236"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_sub_tensor_info.xhtml#ae2f91fa1c229a5e05f81c4b50e667236">SubTensorInfo</a> (const <a class="el" href="classarm__compute_1_1_sub_tensor_info.xhtml">SubTensorInfo</a> &amp;)=default</td></tr>
<tr class="memdesc:ae2f91fa1c229a5e05f81c4b50e667236"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be copy constructed.  <a href="#ae2f91fa1c229a5e05f81c4b50e667236">More...</a><br /></td></tr>
<tr class="separator:ae2f91fa1c229a5e05f81c4b50e667236"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac9cb71b17117e1185de0ae5f11066f09"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_sub_tensor_info.xhtml">SubTensorInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_sub_tensor_info.xhtml#ac9cb71b17117e1185de0ae5f11066f09">operator=</a> (const <a class="el" href="classarm__compute_1_1_sub_tensor_info.xhtml">SubTensorInfo</a> &amp;)=default</td></tr>
<tr class="memdesc:ac9cb71b17117e1185de0ae5f11066f09"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be copied.  <a href="#ac9cb71b17117e1185de0ae5f11066f09">More...</a><br /></td></tr>
<tr class="separator:ac9cb71b17117e1185de0ae5f11066f09"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3504ac3cf390bdc4eadbc5dca081e07a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_sub_tensor_info.xhtml#a3504ac3cf390bdc4eadbc5dca081e07a">SubTensorInfo</a> (<a class="el" href="classarm__compute_1_1_sub_tensor_info.xhtml">SubTensorInfo</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:a3504ac3cf390bdc4eadbc5dca081e07a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be move constructed.  <a href="#a3504ac3cf390bdc4eadbc5dca081e07a">More...</a><br /></td></tr>
<tr class="separator:a3504ac3cf390bdc4eadbc5dca081e07a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a96c95f8cb79e02b44aa016e7842a4b68"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_sub_tensor_info.xhtml">SubTensorInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_sub_tensor_info.xhtml#a96c95f8cb79e02b44aa016e7842a4b68">operator=</a> (<a class="el" href="classarm__compute_1_1_sub_tensor_info.xhtml">SubTensorInfo</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:a96c95f8cb79e02b44aa016e7842a4b68"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be moved.  <a href="#a96c95f8cb79e02b44aa016e7842a4b68">More...</a><br /></td></tr>
<tr class="separator:a96c95f8cb79e02b44aa016e7842a4b68"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8586f084a949b4324b660665e787b684"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_sub_tensor_info.xhtml#a8586f084a949b4324b660665e787b684">coords</a> () const </td></tr>
<tr class="memdesc:a8586f084a949b4324b660665e787b684"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the coordinates of the sub-tensor inside the parent tensor.  <a href="#a8586f084a949b4324b660665e787b684">More...</a><br /></td></tr>
<tr class="separator:a8586f084a949b4324b660665e787b684"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4c066d42d665fafb8cfe80b99411e4fb"><td class="memItemLeft" align="right" valign="top">std::unique_ptr&lt; <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_sub_tensor_info.xhtml#a4c066d42d665fafb8cfe80b99411e4fb">clone</a> () const override</td></tr>
<tr class="memdesc:a4c066d42d665fafb8cfe80b99411e4fb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Provide a clone of the current object of class T.  <a href="#a4c066d42d665fafb8cfe80b99411e4fb">More...</a><br /></td></tr>
<tr class="separator:a4c066d42d665fafb8cfe80b99411e4fb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a613528bd0feb15ee8d6df06cbdb629f8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_sub_tensor_info.xhtml#a613528bd0feb15ee8d6df06cbdb629f8">set_data_type</a> (<a class="el" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a> <a class="el" href="classarm__compute_1_1_sub_tensor_info.xhtml#a9a3e72153aeb3ed212e9c3698774e881">data_type</a>) override</td></tr>
<tr class="memdesc:a613528bd0feb15ee8d6df06cbdb629f8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the data type to the specified value.  <a href="#a613528bd0feb15ee8d6df06cbdb629f8">More...</a><br /></td></tr>
<tr class="separator:a613528bd0feb15ee8d6df06cbdb629f8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5b0a9fd674f8748506b6944c030bc47e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_sub_tensor_info.xhtml#a5b0a9fd674f8748506b6944c030bc47e">set_num_channels</a> (int <a class="el" href="classarm__compute_1_1_sub_tensor_info.xhtml#a6f13b974eeb528acde66de8d9b3fd95c">num_channels</a>) override</td></tr>
<tr class="memdesc:a5b0a9fd674f8748506b6944c030bc47e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the number of channels to the specified value.  <a href="#a5b0a9fd674f8748506b6944c030bc47e">More...</a><br /></td></tr>
<tr class="separator:a5b0a9fd674f8748506b6944c030bc47e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af501bc12f51874e786b0f28016a99ff7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_sub_tensor_info.xhtml#af501bc12f51874e786b0f28016a99ff7">set_format</a> (<a class="el" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58">Format</a> <a class="el" href="classarm__compute_1_1_sub_tensor_info.xhtml#ac4b36cc1e56b0b7e579bb4b7196490db">format</a>) override</td></tr>
<tr class="memdesc:af501bc12f51874e786b0f28016a99ff7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the format of an already initialized tensor.  <a href="#af501bc12f51874e786b0f28016a99ff7">More...</a><br /></td></tr>
<tr class="separator:af501bc12f51874e786b0f28016a99ff7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2732b9eab657cad69807adb815b97c9f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_sub_tensor_info.xhtml#a2732b9eab657cad69807adb815b97c9f">set_fixed_point_position</a> (int <a class="el" href="classarm__compute_1_1_sub_tensor_info.xhtml#a35ccf2eb0c18a15feab2db98b307b78b">fixed_point_position</a>) override</td></tr>
<tr class="memdesc:a2732b9eab657cad69807adb815b97c9f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the fixed point position to the specified value.  <a href="#a2732b9eab657cad69807adb815b97c9f">More...</a><br /></td></tr>
<tr class="separator:a2732b9eab657cad69807adb815b97c9f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a73e8ce43ba86fece3400cf79d0978811"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_sub_tensor_info.xhtml#a73e8ce43ba86fece3400cf79d0978811">set_tensor_shape</a> (<a class="el" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> shape) override</td></tr>
<tr class="memdesc:a73e8ce43ba86fece3400cf79d0978811"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the shape of an already initialized tensor.  <a href="#a73e8ce43ba86fece3400cf79d0978811">More...</a><br /></td></tr>
<tr class="separator:a73e8ce43ba86fece3400cf79d0978811"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae3099a4be4777389b60712f43e065403"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_sub_tensor_info.xhtml#ae3099a4be4777389b60712f43e065403">set_quantization_info</a> (<a class="el" href="structarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a> <a class="el" href="classarm__compute_1_1_sub_tensor_info.xhtml#ac74736e3863207232a23b7181c1d0f44">quantization_info</a>) override</td></tr>
<tr class="memdesc:ae3099a4be4777389b60712f43e065403"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the quantization settings (scale and offset) of the tensor.  <a href="#ae3099a4be4777389b60712f43e065403">More...</a><br /></td></tr>
<tr class="separator:ae3099a4be4777389b60712f43e065403"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad29c039b6f3c4534928ed99aa9f53027"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_sub_tensor_info.xhtml#ad29c039b6f3c4534928ed99aa9f53027">reset_padding</a> () override</td></tr>
<tr class="memdesc:ad29c039b6f3c4534928ed99aa9f53027"><td class="mdescLeft">&#160;</td><td class="mdescRight">Resets the padding settings of the tensor.  <a href="#ad29c039b6f3c4534928ed99aa9f53027">More...</a><br /></td></tr>
<tr class="separator:ad29c039b6f3c4534928ed99aa9f53027"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a907f837b924945ad1981c8fe8eca61e4"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_sub_tensor_info.xhtml#a907f837b924945ad1981c8fe8eca61e4">auto_padding</a> () override</td></tr>
<tr class="memdesc:a907f837b924945ad1981c8fe8eca61e4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Update the offset to the first element and the strides to automatically computed values.  <a href="#a907f837b924945ad1981c8fe8eca61e4">More...</a><br /></td></tr>
<tr class="separator:a907f837b924945ad1981c8fe8eca61e4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af53d8203ecc37896ca4579d1ee3fdffc"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_sub_tensor_info.xhtml#af53d8203ecc37896ca4579d1ee3fdffc">extend_padding</a> (const <a class="el" href="namespacearm__compute.xhtml#a4467b302fc9ec312c40580336ab783da">PaddingSize</a> &amp;<a class="el" href="classarm__compute_1_1_sub_tensor_info.xhtml#a79e20eacb1e963e24a21ebd7369effd7">padding</a>) override</td></tr>
<tr class="memdesc:af53d8203ecc37896ca4579d1ee3fdffc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Update the offset to the first element, the strides and the total size.  <a href="#af53d8203ecc37896ca4579d1ee3fdffc">More...</a><br /></td></tr>
<tr class="separator:af53d8203ecc37896ca4579d1ee3fdffc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8813441b655b97c00139c6a5a6390e97"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_sub_tensor_info.xhtml#a8813441b655b97c00139c6a5a6390e97">dimension</a> (size_t index) const override</td></tr>
<tr class="memdesc:a8813441b655b97c00139c6a5a6390e97"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the size of the requested dimension.  <a href="#a8813441b655b97c00139c6a5a6390e97">More...</a><br /></td></tr>
<tr class="separator:a8813441b655b97c00139c6a5a6390e97"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f1ca9d674346287cae57a6c5b5c24ec"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarm__compute_1_1_strides.xhtml">Strides</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_sub_tensor_info.xhtml#a5f1ca9d674346287cae57a6c5b5c24ec">strides_in_bytes</a> () const override</td></tr>
<tr class="memdesc:a5f1ca9d674346287cae57a6c5b5c24ec"><td class="mdescLeft">&#160;</td><td class="mdescRight">The strides in bytes for accessing each dimension of the tensor.  <a href="#a5f1ca9d674346287cae57a6c5b5c24ec">More...</a><br /></td></tr>
<tr class="separator:a5f1ca9d674346287cae57a6c5b5c24ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab54246abe670b06f5624add7e7022904"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_sub_tensor_info.xhtml#ab54246abe670b06f5624add7e7022904">offset_first_element_in_bytes</a> () const override</td></tr>
<tr class="memdesc:ab54246abe670b06f5624add7e7022904"><td class="mdescLeft">&#160;</td><td class="mdescRight">The offset from the beginning of the memory allocation to the first element of the tensor.  <a href="#ab54246abe670b06f5624add7e7022904">More...</a><br /></td></tr>
<tr class="separator:ab54246abe670b06f5624add7e7022904"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a147790358ccd40f61dcd618cd4edd688"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_sub_tensor_info.xhtml#a147790358ccd40f61dcd618cd4edd688">offset_element_in_bytes</a> (const <a class="el" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a> &amp;pos) const override</td></tr>
<tr class="memdesc:a147790358ccd40f61dcd618cd4edd688"><td class="mdescLeft">&#160;</td><td class="mdescRight">The offset in bytes from the beginning of the memory allocation to access the element at position (x, y, z ...)  <a href="#a147790358ccd40f61dcd618cd4edd688">More...</a><br /></td></tr>
<tr class="separator:a147790358ccd40f61dcd618cd4edd688"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a35ccf2eb0c18a15feab2db98b307b78b"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_sub_tensor_info.xhtml#a35ccf2eb0c18a15feab2db98b307b78b">fixed_point_position</a> () const override</td></tr>
<tr class="memdesc:a35ccf2eb0c18a15feab2db98b307b78b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Fixed point position used when the tensor data type is QS8 or QS16.  <a href="#a35ccf2eb0c18a15feab2db98b307b78b">More...</a><br /></td></tr>
<tr class="separator:a35ccf2eb0c18a15feab2db98b307b78b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a62b67b578f684c4d516843c9dea86a23"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_sub_tensor_info.xhtml#a62b67b578f684c4d516843c9dea86a23">element_size</a> () const override</td></tr>
<tr class="memdesc:a62b67b578f684c4d516843c9dea86a23"><td class="mdescLeft">&#160;</td><td class="mdescRight">Element size in bytes calculated as data_size() * <a class="el" href="classarm__compute_1_1_sub_tensor_info.xhtml#a6f13b974eeb528acde66de8d9b3fd95c" title="The number of channels for each tensor element. ">num_channels()</a>  <a href="#a62b67b578f684c4d516843c9dea86a23">More...</a><br /></td></tr>
<tr class="separator:a62b67b578f684c4d516843c9dea86a23"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a13622133d9b41900a6a3e8f89e59a78b"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_sub_tensor_info.xhtml#a13622133d9b41900a6a3e8f89e59a78b">num_dimensions</a> () const override</td></tr>
<tr class="memdesc:a13622133d9b41900a6a3e8f89e59a78b"><td class="mdescLeft">&#160;</td><td class="mdescRight">The number of dimensions of the tensor (rank)  <a href="#a13622133d9b41900a6a3e8f89e59a78b">More...</a><br /></td></tr>
<tr class="separator:a13622133d9b41900a6a3e8f89e59a78b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6f13b974eeb528acde66de8d9b3fd95c"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_sub_tensor_info.xhtml#a6f13b974eeb528acde66de8d9b3fd95c">num_channels</a> () const override</td></tr>
<tr class="memdesc:a6f13b974eeb528acde66de8d9b3fd95c"><td class="mdescLeft">&#160;</td><td class="mdescRight">The number of channels for each tensor element.  <a href="#a6f13b974eeb528acde66de8d9b3fd95c">More...</a><br /></td></tr>
<tr class="separator:a6f13b974eeb528acde66de8d9b3fd95c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a269b19ce3f357ac65f41f9951906e38e"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_sub_tensor_info.xhtml#a269b19ce3f357ac65f41f9951906e38e">tensor_shape</a> () const override</td></tr>
<tr class="memdesc:a269b19ce3f357ac65f41f9951906e38e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Size for each dimension of the tensor.  <a href="#a269b19ce3f357ac65f41f9951906e38e">More...</a><br /></td></tr>
<tr class="separator:a269b19ce3f357ac65f41f9951906e38e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9a3e72153aeb3ed212e9c3698774e881"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_sub_tensor_info.xhtml#a9a3e72153aeb3ed212e9c3698774e881">data_type</a> () const override</td></tr>
<tr class="memdesc:a9a3e72153aeb3ed212e9c3698774e881"><td class="mdescLeft">&#160;</td><td class="mdescRight">Data type used for each element of the tensor.  <a href="#a9a3e72153aeb3ed212e9c3698774e881">More...</a><br /></td></tr>
<tr class="separator:a9a3e72153aeb3ed212e9c3698774e881"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac4b36cc1e56b0b7e579bb4b7196490db"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58">Format</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_sub_tensor_info.xhtml#ac4b36cc1e56b0b7e579bb4b7196490db">format</a> () const override</td></tr>
<tr class="memdesc:ac4b36cc1e56b0b7e579bb4b7196490db"><td class="mdescLeft">&#160;</td><td class="mdescRight">Colour format of the image.  <a href="#ac4b36cc1e56b0b7e579bb4b7196490db">More...</a><br /></td></tr>
<tr class="separator:ac4b36cc1e56b0b7e579bb4b7196490db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af398466b602a02b42d8df19fb66a6c60"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_sub_tensor_info.xhtml#af398466b602a02b42d8df19fb66a6c60">total_size</a> () const override</td></tr>
<tr class="memdesc:af398466b602a02b42d8df19fb66a6c60"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the total size of the tensor in bytes.  <a href="#af398466b602a02b42d8df19fb66a6c60">More...</a><br /></td></tr>
<tr class="separator:af398466b602a02b42d8df19fb66a6c60"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a79e20eacb1e963e24a21ebd7369effd7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute.xhtml#a4467b302fc9ec312c40580336ab783da">PaddingSize</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_sub_tensor_info.xhtml#a79e20eacb1e963e24a21ebd7369effd7">padding</a> () const override</td></tr>
<tr class="memdesc:a79e20eacb1e963e24a21ebd7369effd7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Padding of tensor.  <a href="#a79e20eacb1e963e24a21ebd7369effd7">More...</a><br /></td></tr>
<tr class="separator:a79e20eacb1e963e24a21ebd7369effd7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa2ca251f99c56767719e991a26371603"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_sub_tensor_info.xhtml#aa2ca251f99c56767719e991a26371603">has_padding</a> () const override</td></tr>
<tr class="memdesc:aa2ca251f99c56767719e991a26371603"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks if the tensor has been allocated with padding or not.  <a href="#aa2ca251f99c56767719e991a26371603">More...</a><br /></td></tr>
<tr class="separator:aa2ca251f99c56767719e991a26371603"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaee6555ace43b03173844b1a228a3fc3"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_sub_tensor_info.xhtml#aaee6555ace43b03173844b1a228a3fc3">is_resizable</a> () const override</td></tr>
<tr class="memdesc:aaee6555ace43b03173844b1a228a3fc3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Flag indicating whether the size of the tensor can be changed.  <a href="#aaee6555ace43b03173844b1a228a3fc3">More...</a><br /></td></tr>
<tr class="separator:aaee6555ace43b03173844b1a228a3fc3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a78bf77b2d9b959259f77a32b9a412184"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_sub_tensor_info.xhtml#a78bf77b2d9b959259f77a32b9a412184">set_is_resizable</a> (bool <a class="el" href="classarm__compute_1_1_sub_tensor_info.xhtml#aaee6555ace43b03173844b1a228a3fc3">is_resizable</a>) override</td></tr>
<tr class="memdesc:a78bf77b2d9b959259f77a32b9a412184"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the flag whether the tensor size can be changed.  <a href="#a78bf77b2d9b959259f77a32b9a412184">More...</a><br /></td></tr>
<tr class="separator:a78bf77b2d9b959259f77a32b9a412184"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c20d908342087484d883574d55dd482"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structarm__compute_1_1_valid_region.xhtml">ValidRegion</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_sub_tensor_info.xhtml#a3c20d908342087484d883574d55dd482">valid_region</a> () const override</td></tr>
<tr class="memdesc:a3c20d908342087484d883574d55dd482"><td class="mdescLeft">&#160;</td><td class="mdescRight">Valid region of the tensor.  <a href="#a3c20d908342087484d883574d55dd482">More...</a><br /></td></tr>
<tr class="separator:a3c20d908342087484d883574d55dd482"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0cbba4e45a4a1e389606493af3814415"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_sub_tensor_info.xhtml#a0cbba4e45a4a1e389606493af3814415">set_valid_region</a> (<a class="el" href="structarm__compute_1_1_valid_region.xhtml">ValidRegion</a> <a class="el" href="classarm__compute_1_1_sub_tensor_info.xhtml#a3c20d908342087484d883574d55dd482">valid_region</a>) override</td></tr>
<tr class="memdesc:a0cbba4e45a4a1e389606493af3814415"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the valid region of the tensor.  <a href="#a0cbba4e45a4a1e389606493af3814415">More...</a><br /></td></tr>
<tr class="separator:a0cbba4e45a4a1e389606493af3814415"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac74736e3863207232a23b7181c1d0f44"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_sub_tensor_info.xhtml#ac74736e3863207232a23b7181c1d0f44">quantization_info</a> () const override</td></tr>
<tr class="memdesc:ac74736e3863207232a23b7181c1d0f44"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the quantization settings (scale and offset) of the tensor.  <a href="#ac74736e3863207232a23b7181c1d0f44">More...</a><br /></td></tr>
<tr class="separator:ac74736e3863207232a23b7181c1d0f44"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1_i_tensor_info"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1_i_tensor_info')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a></td></tr>
<tr class="memitem:ad998b50febf68540277e121a9c670bfa inherit pub_methods_classarm__compute_1_1_i_tensor_info"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#ad998b50febf68540277e121a9c670bfa">~ITensorInfo</a> ()=default</td></tr>
<tr class="memdesc:ad998b50febf68540277e121a9c670bfa inherit pub_methods_classarm__compute_1_1_i_tensor_info"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default virtual destructor.  <a href="#ad998b50febf68540277e121a9c670bfa">More...</a><br /></td></tr>
<tr class="separator:ad998b50febf68540277e121a9c670bfa inherit pub_methods_classarm__compute_1_1_i_tensor_info"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1misc_1_1_i_cloneable"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1misc_1_1_i_cloneable')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1misc_1_1_i_cloneable.xhtml">ICloneable&lt; ITensorInfo &gt;</a></td></tr>
<tr class="memitem:a711fa7a27557369760fc1fd236deb51c inherit pub_methods_classarm__compute_1_1misc_1_1_i_cloneable"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1misc_1_1_i_cloneable.xhtml#a711fa7a27557369760fc1fd236deb51c">~ICloneable</a> ()=default</td></tr>
<tr class="memdesc:a711fa7a27557369760fc1fd236deb51c inherit pub_methods_classarm__compute_1_1misc_1_1_i_cloneable"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default virtual desctructor.  <a href="#a711fa7a27557369760fc1fd236deb51c">More...</a><br /></td></tr>
<tr class="separator:a711fa7a27557369760fc1fd236deb51c inherit pub_methods_classarm__compute_1_1misc_1_1_i_cloneable"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Store the sub tensor's metadata. </p>

<p>Definition at line <a class="el" href="_sub_tensor_info_8h_source.xhtml#l00042">42</a> of file <a class="el" href="_sub_tensor_info_8h_source.xhtml">SubTensorInfo.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a9025d7eb7c8e0d40239ddc3568d2e201"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_sub_tensor_info.xhtml">SubTensorInfo</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Default constructor. </p>

</div>
</div>
<a class="anchor" id="afbfb4cf97d6af2500035f181f877ed4b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_sub_tensor_info.xhtml">SubTensorInfo</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>parent</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>&#160;</td>
          <td class="paramname"><em>tensor_shape</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a>&#160;</td>
          <td class="paramname"><em>coords</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Default constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">parent</td><td>Metadata of parent tensor. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">tensor_shape</td><td><a class="el" href="classarm__compute_1_1_tensor.xhtml" title="Basic implementation of the tensor interface. ">Tensor</a> shape. Shape must fit inside parent's shape. X and Y dimensions must match the parent's ones. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">coords</td><td><a class="el" href="classarm__compute_1_1_coordinates.xhtml" title="Coordinates of an item. ">Coordinates</a> of starting element inside parent tensor. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ad86e6a6af47f1b493eac9873f88b843f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classarm__compute_1_1_sub_tensor_info.xhtml">SubTensorInfo</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default destructor. </p>

</div>
</div>
<a class="anchor" id="ae2f91fa1c229a5e05f81c4b50e667236"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_sub_tensor_info.xhtml">SubTensorInfo</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_sub_tensor_info.xhtml">SubTensorInfo</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allow instances of this class to be copy constructed. </p>

</div>
</div>
<a class="anchor" id="a3504ac3cf390bdc4eadbc5dca081e07a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_sub_tensor_info.xhtml">SubTensorInfo</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_sub_tensor_info.xhtml">SubTensorInfo</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allow instances of this class to be move constructed. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a907f837b924945ad1981c8fe8eca61e4"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool auto_padding </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Update the offset to the first element and the strides to automatically computed values. </p>
<dl class="section note"><dt>Note</dt><dd>The padding used by this method is really conservative so that the tensor can be used for most functions.</dd></dl>
<dl class="section return"><dt>Returns</dt><dd>True if the strides or the offset to the first element have changed. </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a4f2d0ac983637a0459daf43bcd65cc38">ITensorInfo</a>.</p>

<p>Definition at line <a class="el" href="_sub_tensor_info_8h_source.xhtml#l00113">113</a> of file <a class="el" href="_sub_tensor_info_8h_source.xhtml">SubTensorInfo.h</a>.</p>

<p>References <a class="el" href="core_2_error_8h_source.xhtml#l00306">ARM_COMPUTE_ERROR_ON</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a4f2d0ac983637a0459daf43bcd65cc38">ITensorInfo::auto_padding()</a>, <a class="el" href="classarm__compute_1_1_sub_tensor_info.xhtml#af53d8203ecc37896ca4579d1ee3fdffc">SubTensorInfo::extend_padding()</a>, and <a class="el" href="_sub_tensor_info_8h_source.xhtml#l00173">SubTensorInfo::padding()</a>.</p>
<div class="fragment"><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    {</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        <a class="code" href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(_parent == <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        <span class="keywordflow">return</span> _parent-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a4f2d0ac983637a0459daf43bcd65cc38">auto_padding</a>();</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    };</div><div class="ttc" id="core_2_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown. </div><div class="ttdef"><b>Definition:</b> <a href="core_2_error_8h_source.xhtml#l00306">Error.h:306</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a4f2d0ac983637a0459daf43bcd65cc38"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a4f2d0ac983637a0459daf43bcd65cc38">arm_compute::ITensorInfo::auto_padding</a></div><div class="ttdeci">virtual bool auto_padding()=0</div><div class="ttdoc">Update the offset to the first element and the strides to automatically computed values. </div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a4c066d42d665fafb8cfe80b99411e4fb"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::unique_ptr&lt;<a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>&gt; clone </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Provide a clone of the current object of class T. </p>
<dl class="section return"><dt>Returns</dt><dd>Clone object of class T </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1misc_1_1_i_cloneable.xhtml#a4d10e5012a872e7f78f2b539b673049d">ICloneable&lt; ITensorInfo &gt;</a>.</p>

<p>Referenced by <a class="el" href="_sub_tensor_info_8h_source.xhtml#l00069">SubTensorInfo::coords()</a>.</p>

</div>
</div>
<a class="anchor" id="a8586f084a949b4324b660665e787b684"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a> coords </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the coordinates of the sub-tensor inside the parent tensor. </p>
<dl class="section return"><dt>Returns</dt><dd>Sub-tensor coordinates </dd></dl>

<p>Definition at line <a class="el" href="_sub_tensor_info_8h_source.xhtml#l00069">69</a> of file <a class="el" href="_sub_tensor_info_8h_source.xhtml">SubTensorInfo.h</a>.</p>

<p>References <a class="el" href="classarm__compute_1_1_sub_tensor_info.xhtml#a4c066d42d665fafb8cfe80b99411e4fb">SubTensorInfo::clone()</a>.</p>
<div class="fragment"><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    {</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        <span class="keywordflow">return</span> _coords;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a9a3e72153aeb3ed212e9c3698774e881"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a> data_type </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Data type used for each element of the tensor. </p>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="classarm__compute_1_1_tensor.xhtml" title="Basic implementation of the tensor interface. ">Tensor</a> data type </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">ITensorInfo</a>.</p>

<p>Definition at line <a class="el" href="_sub_tensor_info_8h_source.xhtml#l00158">158</a> of file <a class="el" href="_sub_tensor_info_8h_source.xhtml">SubTensorInfo.h</a>.</p>

<p>References <a class="el" href="core_2_error_8h_source.xhtml#l00306">ARM_COMPUTE_ERROR_ON</a>, and <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">ITensorInfo::data_type()</a>.</p>
<div class="fragment"><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    {</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        <a class="code" href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(_parent == <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;        <span class="keywordflow">return</span> _parent-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>();</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    }</div><div class="ttc" id="core_2_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown. </div><div class="ttdef"><b>Definition:</b> <a href="core_2_error_8h_source.xhtml#l00306">Error.h:306</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a7cfb31af63202568efef5214acfbf3ba"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">arm_compute::ITensorInfo::data_type</a></div><div class="ttdeci">virtual DataType data_type() const =0</div><div class="ttdoc">Data type used for each element of the tensor. </div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a8813441b655b97c00139c6a5a6390e97"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t dimension </td>
          <td>(</td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Return the size of the requested dimension. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">index</td><td>Index of the dimension</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Dimension of the requested dimension </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">ITensorInfo</a>.</p>

<p>Definition at line <a class="el" href="_sub_tensor_info_8h_source.xhtml#l00119">119</a> of file <a class="el" href="_sub_tensor_info_8h_source.xhtml">SubTensorInfo.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    {</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        <span class="keywordflow">return</span> _tensor_shape[index];</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a62b67b578f684c4d516843c9dea86a23"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t element_size </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Element size in bytes calculated as data_size() * <a class="el" href="classarm__compute_1_1_sub_tensor_info.xhtml#a6f13b974eeb528acde66de8d9b3fd95c" title="The number of channels for each tensor element. ">num_channels()</a> </p>
<dl class="section return"><dt>Returns</dt><dd>The size of one element in bytes </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#aa459796b5489eca8a9160cb5dcf1a103">ITensorInfo</a>.</p>

<p>Definition at line <a class="el" href="_sub_tensor_info_8h_source.xhtml#l00139">139</a> of file <a class="el" href="_sub_tensor_info_8h_source.xhtml">SubTensorInfo.h</a>.</p>

<p>References <a class="el" href="core_2_error_8h_source.xhtml#l00306">ARM_COMPUTE_ERROR_ON</a>, and <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#aa459796b5489eca8a9160cb5dcf1a103">ITensorInfo::element_size()</a>.</p>
<div class="fragment"><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    {</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        <a class="code" href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(_parent == <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        <span class="keywordflow">return</span> _parent-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#aa459796b5489eca8a9160cb5dcf1a103">element_size</a>();</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    }</div><div class="ttc" id="core_2_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown. </div><div class="ttdef"><b>Definition:</b> <a href="core_2_error_8h_source.xhtml#l00306">Error.h:306</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_aa459796b5489eca8a9160cb5dcf1a103"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#aa459796b5489eca8a9160cb5dcf1a103">arm_compute::ITensorInfo::element_size</a></div><div class="ttdeci">virtual size_t element_size() const =0</div><div class="ttdoc">Element size in bytes calculated as data_size() * num_channels() </div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="af53d8203ecc37896ca4579d1ee3fdffc"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool extend_padding </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespacearm__compute.xhtml#a4467b302fc9ec312c40580336ab783da">PaddingSize</a> &amp;&#160;</td>
          <td class="paramname"><em>padding</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Update the offset to the first element, the strides and the total size. </p>
<dl class="section note"><dt>Note</dt><dd>This function can only increase the offset, strides and total size.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">padding</td><td>Padding around the XY plane in number of elements.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True if the strides, offset and total size have changed. </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a0cd5aea514f03afb48ebe22581ea4c66">ITensorInfo</a>.</p>

<p>Referenced by <a class="el" href="_sub_tensor_info_8h_source.xhtml#l00113">SubTensorInfo::auto_padding()</a>.</p>

</div>
</div>
<a class="anchor" id="a35ccf2eb0c18a15feab2db98b307b78b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int fixed_point_position </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Fixed point position used when the tensor data type is QS8 or QS16. </p>
<dl class="section return"><dt>Returns</dt><dd>The fixed point position that expresses the number of bits for the fractional part of the number </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#ab21a362740e892b6e913bd8db03b0e67">ITensorInfo</a>.</p>

<p>Definition at line <a class="el" href="_sub_tensor_info_8h_source.xhtml#l00134">134</a> of file <a class="el" href="_sub_tensor_info_8h_source.xhtml">SubTensorInfo.h</a>.</p>

<p>References <a class="el" href="core_2_error_8h_source.xhtml#l00306">ARM_COMPUTE_ERROR_ON</a>, and <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#ab21a362740e892b6e913bd8db03b0e67">ITensorInfo::fixed_point_position()</a>.</p>
<div class="fragment"><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    {</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        <a class="code" href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(_parent == <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        <span class="keywordflow">return</span> _parent-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#ab21a362740e892b6e913bd8db03b0e67">fixed_point_position</a>();</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    }</div><div class="ttc" id="core_2_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown. </div><div class="ttdef"><b>Definition:</b> <a href="core_2_error_8h_source.xhtml#l00306">Error.h:306</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_ab21a362740e892b6e913bd8db03b0e67"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#ab21a362740e892b6e913bd8db03b0e67">arm_compute::ITensorInfo::fixed_point_position</a></div><div class="ttdeci">virtual int fixed_point_position() const =0</div><div class="ttdoc">Fixed point position used when the tensor data type is QS8 or QS16. </div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ac4b36cc1e56b0b7e579bb4b7196490db"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58">Format</a> format </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Colour format of the image. </p>
<dl class="section return"><dt>Returns</dt><dd>Colour format of the image </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a57360dd9ca408834c0ea1a8ef70a11f4">ITensorInfo</a>.</p>

<p>Definition at line <a class="el" href="_sub_tensor_info_8h_source.xhtml#l00163">163</a> of file <a class="el" href="_sub_tensor_info_8h_source.xhtml">SubTensorInfo.h</a>.</p>

<p>References <a class="el" href="core_2_error_8h_source.xhtml#l00306">ARM_COMPUTE_ERROR_ON</a>, and <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a57360dd9ca408834c0ea1a8ef70a11f4">ITensorInfo::format()</a>.</p>
<div class="fragment"><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    {</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;        <a class="code" href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(_parent == <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;        <span class="keywordflow">return</span> _parent-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a57360dd9ca408834c0ea1a8ef70a11f4">format</a>();</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    }</div><div class="ttc" id="core_2_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown. </div><div class="ttdef"><b>Definition:</b> <a href="core_2_error_8h_source.xhtml#l00306">Error.h:306</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a57360dd9ca408834c0ea1a8ef70a11f4"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a57360dd9ca408834c0ea1a8ef70a11f4">arm_compute::ITensorInfo::format</a></div><div class="ttdeci">virtual Format format() const =0</div><div class="ttdoc">Colour format of the image. </div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="aa2ca251f99c56767719e991a26371603"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool has_padding </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Checks if the tensor has been allocated with padding or not. </p>
<dl class="section return"><dt>Returns</dt><dd>True if padding is allocated in the tensor, otherwise false. </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#ac394d6570ab3325810a3532d39091a52">ITensorInfo</a>.</p>

<p>Definition at line <a class="el" href="_sub_tensor_info_8h_source.xhtml#l00178">178</a> of file <a class="el" href="_sub_tensor_info_8h_source.xhtml">SubTensorInfo.h</a>.</p>

<p>References <a class="el" href="core_2_error_8h_source.xhtml#l00306">ARM_COMPUTE_ERROR_ON</a>, and <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#ac394d6570ab3325810a3532d39091a52">ITensorInfo::has_padding()</a>.</p>
<div class="fragment"><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    {</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;        <a class="code" href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(_parent == <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;        <span class="keywordflow">return</span> _parent-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#ac394d6570ab3325810a3532d39091a52">has_padding</a>();</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    }</div><div class="ttc" id="core_2_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown. </div><div class="ttdef"><b>Definition:</b> <a href="core_2_error_8h_source.xhtml#l00306">Error.h:306</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_ac394d6570ab3325810a3532d39091a52"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#ac394d6570ab3325810a3532d39091a52">arm_compute::ITensorInfo::has_padding</a></div><div class="ttdeci">virtual bool has_padding() const =0</div><div class="ttdoc">Checks if the tensor has been allocated with padding or not. </div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="aaee6555ace43b03173844b1a228a3fc3"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool is_resizable </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Flag indicating whether the size of the tensor can be changed. </p>
<dl class="section return"><dt>Returns</dt><dd>True if the tensor size can be changed. </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#af555338f11d1d28f258f259ac3da743b">ITensorInfo</a>.</p>

<p>Definition at line <a class="el" href="_sub_tensor_info_8h_source.xhtml#l00183">183</a> of file <a class="el" href="_sub_tensor_info_8h_source.xhtml">SubTensorInfo.h</a>.</p>

<p>References <a class="el" href="core_2_error_8h_source.xhtml#l00306">ARM_COMPUTE_ERROR_ON</a>, and <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#af555338f11d1d28f258f259ac3da743b">ITensorInfo::is_resizable()</a>.</p>
<div class="fragment"><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    {</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        <a class="code" href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(_parent == <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;        <span class="keywordflow">return</span> _parent-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#af555338f11d1d28f258f259ac3da743b">is_resizable</a>();</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    }</div><div class="ttc" id="core_2_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown. </div><div class="ttdef"><b>Definition:</b> <a href="core_2_error_8h_source.xhtml#l00306">Error.h:306</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_af555338f11d1d28f258f259ac3da743b"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#af555338f11d1d28f258f259ac3da743b">arm_compute::ITensorInfo::is_resizable</a></div><div class="ttdeci">virtual bool is_resizable() const =0</div><div class="ttdoc">Flag indicating whether the size of the tensor can be changed. </div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a6f13b974eeb528acde66de8d9b3fd95c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t num_channels </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The number of channels for each tensor element. </p>
<dl class="section return"><dt>Returns</dt><dd>The number of channels for each tensor element </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#ad7829ae79223ab87f9da4c0bd7d229ba">ITensorInfo</a>.</p>

<p>Definition at line <a class="el" href="_sub_tensor_info_8h_source.xhtml#l00148">148</a> of file <a class="el" href="_sub_tensor_info_8h_source.xhtml">SubTensorInfo.h</a>.</p>

<p>References <a class="el" href="core_2_error_8h_source.xhtml#l00306">ARM_COMPUTE_ERROR_ON</a>, and <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#ad7829ae79223ab87f9da4c0bd7d229ba">ITensorInfo::num_channels()</a>.</p>
<div class="fragment"><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    {</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;        <a class="code" href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(_parent == <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;        <span class="keywordflow">return</span> _parent-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#ad7829ae79223ab87f9da4c0bd7d229ba">num_channels</a>();</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    }</div><div class="ttc" id="core_2_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown. </div><div class="ttdef"><b>Definition:</b> <a href="core_2_error_8h_source.xhtml#l00306">Error.h:306</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_ad7829ae79223ab87f9da4c0bd7d229ba"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#ad7829ae79223ab87f9da4c0bd7d229ba">arm_compute::ITensorInfo::num_channels</a></div><div class="ttdeci">virtual size_t num_channels() const =0</div><div class="ttdoc">The number of channels for each tensor element. </div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a13622133d9b41900a6a3e8f89e59a78b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t num_dimensions </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The number of dimensions of the tensor (rank) </p>
<dl class="section return"><dt>Returns</dt><dd>The number of dimensions of the tensor (rank) </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a1f4e725b8e1ea36b30e09dc08ae6961d">ITensorInfo</a>.</p>

<p>Definition at line <a class="el" href="_sub_tensor_info_8h_source.xhtml#l00144">144</a> of file <a class="el" href="_sub_tensor_info_8h_source.xhtml">SubTensorInfo.h</a>.</p>

<p>References <a class="el" href="_dimensions_8h_source.xhtml#l00122">Dimensions&lt; T &gt;::num_dimensions()</a>.</p>
<div class="fragment"><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    {</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;        <span class="keywordflow">return</span> _tensor_shape.<a class="code" href="classarm__compute_1_1_dimensions.xhtml#a0f59f175e7682c7ed5f4ea30ef687834">num_dimensions</a>();</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    }</div><div class="ttc" id="classarm__compute_1_1_dimensions_xhtml_a0f59f175e7682c7ed5f4ea30ef687834"><div class="ttname"><a href="classarm__compute_1_1_dimensions.xhtml#a0f59f175e7682c7ed5f4ea30ef687834">arm_compute::Dimensions::num_dimensions</a></div><div class="ttdeci">unsigned int num_dimensions() const </div><div class="ttdoc">Returns the effective dimensionality of the tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_dimensions_8h_source.xhtml#l00122">Dimensions.h:122</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a147790358ccd40f61dcd618cd4edd688"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t offset_element_in_bytes </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a> &amp;&#160;</td>
          <td class="paramname"><em>pos</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The offset in bytes from the beginning of the memory allocation to access the element at position (x, y, z ...) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">pos</td><td><a class="el" href="struct_vector.xhtml" title="Structure to hold Vector information. ">Vector</a> with the coordinates of the element to access. The size of this vector must be equal to the number of dimensions of the tensor</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Offset in bytes from the beginning of the memory allocation to access the element (x, y, z, ...) </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a8a5312c9a822d27a3b38dc238c1c7de3">ITensorInfo</a>.</p>

<p>Referenced by <a class="el" href="_sub_tensor_info_8h_source.xhtml#l00128">SubTensorInfo::offset_first_element_in_bytes()</a>.</p>

</div>
</div>
<a class="anchor" id="ab54246abe670b06f5624add7e7022904"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t offset_first_element_in_bytes </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The offset from the beginning of the memory allocation to the first element of the tensor. </p>
<p>This can be used to access efficiently elements in a 2D tensor</p>
<dl class="section return"><dt>Returns</dt><dd>The offset in bytes to access the first element of the tensor. </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#ad0bd5cc32e7e4c0699eccba91e5de397">ITensorInfo</a>.</p>

<p>Definition at line <a class="el" href="_sub_tensor_info_8h_source.xhtml#l00128">128</a> of file <a class="el" href="_sub_tensor_info_8h_source.xhtml">SubTensorInfo.h</a>.</p>

<p>References <a class="el" href="core_2_error_8h_source.xhtml#l00306">ARM_COMPUTE_ERROR_ON</a>, <a class="el" href="classarm__compute_1_1_sub_tensor_info.xhtml#a147790358ccd40f61dcd618cd4edd688">SubTensorInfo::offset_element_in_bytes()</a>, and <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a8a5312c9a822d27a3b38dc238c1c7de3">ITensorInfo::offset_element_in_bytes()</a>.</p>
<div class="fragment"><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    {</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;        <a class="code" href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(_parent == <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        <span class="keywordflow">return</span> _parent-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a8a5312c9a822d27a3b38dc238c1c7de3">offset_element_in_bytes</a>(_coords);</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    }</div><div class="ttc" id="core_2_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown. </div><div class="ttdef"><b>Definition:</b> <a href="core_2_error_8h_source.xhtml#l00306">Error.h:306</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a8a5312c9a822d27a3b38dc238c1c7de3"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a8a5312c9a822d27a3b38dc238c1c7de3">arm_compute::ITensorInfo::offset_element_in_bytes</a></div><div class="ttdeci">virtual size_t offset_element_in_bytes(const Coordinates &amp;pos) const =0</div><div class="ttdoc">The offset in bytes from the beginning of the memory allocation to access the element at position (x...</div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ac9cb71b17117e1185de0ae5f11066f09"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_sub_tensor_info.xhtml">SubTensorInfo</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_sub_tensor_info.xhtml">SubTensorInfo</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allow instances of this class to be copied. </p>

</div>
</div>
<a class="anchor" id="a96c95f8cb79e02b44aa016e7842a4b68"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_sub_tensor_info.xhtml">SubTensorInfo</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_sub_tensor_info.xhtml">SubTensorInfo</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allow instances of this class to be moved. </p>

</div>
</div>
<a class="anchor" id="a79e20eacb1e963e24a21ebd7369effd7"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__compute.xhtml#a4467b302fc9ec312c40580336ab783da">PaddingSize</a> padding </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Padding of tensor. </p>
<dl class="section return"><dt>Returns</dt><dd>Padding. </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a07b929c34ad1dc823d8315876aa403ce">ITensorInfo</a>.</p>

<p>Definition at line <a class="el" href="_sub_tensor_info_8h_source.xhtml#l00173">173</a> of file <a class="el" href="_sub_tensor_info_8h_source.xhtml">SubTensorInfo.h</a>.</p>

<p>References <a class="el" href="core_2_error_8h_source.xhtml#l00306">ARM_COMPUTE_ERROR_ON</a>, and <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a07b929c34ad1dc823d8315876aa403ce">ITensorInfo::padding()</a>.</p>

<p>Referenced by <a class="el" href="_sub_tensor_info_8h_source.xhtml#l00113">SubTensorInfo::auto_padding()</a>.</p>
<div class="fragment"><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    {</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;        <a class="code" href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(_parent == <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        <span class="keywordflow">return</span> _parent-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a07b929c34ad1dc823d8315876aa403ce">padding</a>();</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    }</div><div class="ttc" id="core_2_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown. </div><div class="ttdef"><b>Definition:</b> <a href="core_2_error_8h_source.xhtml#l00306">Error.h:306</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a07b929c34ad1dc823d8315876aa403ce"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a07b929c34ad1dc823d8315876aa403ce">arm_compute::ITensorInfo::padding</a></div><div class="ttdeci">virtual PaddingSize padding() const =0</div><div class="ttdoc">Padding of tensor. </div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ac74736e3863207232a23b7181c1d0f44"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a> quantization_info </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the quantization settings (scale and offset) of the tensor. </p>
<dl class="section return"><dt>Returns</dt><dd>A <a class="el" href="structarm__compute_1_1_quantization_info.xhtml" title="Quantization settings (used for QASYMM8 data type) ">QuantizationInfo</a> containing the scale and offset. </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a3f3e1a3200223e6a304a533b1016e749">ITensorInfo</a>.</p>

<p>Definition at line <a class="el" href="_sub_tensor_info_8h_source.xhtml#l00208">208</a> of file <a class="el" href="_sub_tensor_info_8h_source.xhtml">SubTensorInfo.h</a>.</p>

<p>References <a class="el" href="core_2_error_8h_source.xhtml#l00306">ARM_COMPUTE_ERROR_ON</a>, and <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a3f3e1a3200223e6a304a533b1016e749">ITensorInfo::quantization_info()</a>.</p>
<div class="fragment"><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    {</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;        <a class="code" href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(_parent == <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;        <span class="keywordflow">return</span> _parent-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a3f3e1a3200223e6a304a533b1016e749">quantization_info</a>();</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    }</div><div class="ttc" id="core_2_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown. </div><div class="ttdef"><b>Definition:</b> <a href="core_2_error_8h_source.xhtml#l00306">Error.h:306</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a3f3e1a3200223e6a304a533b1016e749"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a3f3e1a3200223e6a304a533b1016e749">arm_compute::ITensorInfo::quantization_info</a></div><div class="ttdeci">virtual QuantizationInfo quantization_info() const =0</div><div class="ttdoc">Get the quantization settings (scale and offset) of the tensor. </div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ad29c039b6f3c4534928ed99aa9f53027"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>&amp; reset_padding </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Resets the padding settings of the tensor. </p>
<dl class="section return"><dt>Returns</dt><dd>Reference to this <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml" title="Store the tensor&#39;s metadata. ">ITensorInfo</a> object </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#afc135290818a7ae02d2195c013796fdd">ITensorInfo</a>.</p>

<p>Definition at line <a class="el" href="_sub_tensor_info_8h_source.xhtml#l00107">107</a> of file <a class="el" href="_sub_tensor_info_8h_source.xhtml">SubTensorInfo.h</a>.</p>

<p>References <a class="el" href="core_2_error_8h_source.xhtml#l00306">ARM_COMPUTE_ERROR_ON</a>, and <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#afc135290818a7ae02d2195c013796fdd">ITensorInfo::reset_padding()</a>.</p>
<div class="fragment"><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    {</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        <a class="code" href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(_parent == <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        _parent-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#afc135290818a7ae02d2195c013796fdd">reset_padding</a>();</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    }</div><div class="ttc" id="core_2_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown. </div><div class="ttdef"><b>Definition:</b> <a href="core_2_error_8h_source.xhtml#l00306">Error.h:306</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_afc135290818a7ae02d2195c013796fdd"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#afc135290818a7ae02d2195c013796fdd">arm_compute::ITensorInfo::reset_padding</a></div><div class="ttdeci">virtual ITensorInfo &amp; reset_padding()=0</div><div class="ttdoc">Resets the padding settings of the tensor. </div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a613528bd0feb15ee8d6df06cbdb629f8"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>&amp; set_data_type </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a>&#160;</td>
          <td class="paramname"><em>data_type</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Set the data type to the specified value. </p>
<dl class="section warning"><dt>Warning</dt><dd>This resets the format to UNKNOWN.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">data_type</td><td>The new data type.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Reference to this <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml" title="Store the tensor&#39;s metadata. ">ITensorInfo</a> object </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a9ebcdce876b4cd07736afa47d50154de">ITensorInfo</a>.</p>

<p>Definition at line <a class="el" href="_sub_tensor_info_8h_source.xhtml#l00076">76</a> of file <a class="el" href="_sub_tensor_info_8h_source.xhtml">SubTensorInfo.h</a>.</p>

<p>References <a class="el" href="core_2_error_8h_source.xhtml#l00306">ARM_COMPUTE_ERROR_ON</a>, and <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a9ebcdce876b4cd07736afa47d50154de">ITensorInfo::set_data_type()</a>.</p>
<div class="fragment"><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    {</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        <a class="code" href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(_parent == <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        _parent-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a9ebcdce876b4cd07736afa47d50154de">set_data_type</a>(<a class="code" href="classarm__compute_1_1_sub_tensor_info.xhtml#a9a3e72153aeb3ed212e9c3698774e881">data_type</a>);</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    };</div><div class="ttc" id="core_2_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown. </div><div class="ttdef"><b>Definition:</b> <a href="core_2_error_8h_source.xhtml#l00306">Error.h:306</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a9ebcdce876b4cd07736afa47d50154de"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a9ebcdce876b4cd07736afa47d50154de">arm_compute::ITensorInfo::set_data_type</a></div><div class="ttdeci">virtual ITensorInfo &amp; set_data_type(DataType data_type)=0</div><div class="ttdoc">Set the data type to the specified value. </div></div>
<div class="ttc" id="classarm__compute_1_1_sub_tensor_info_xhtml_a9a3e72153aeb3ed212e9c3698774e881"><div class="ttname"><a href="classarm__compute_1_1_sub_tensor_info.xhtml#a9a3e72153aeb3ed212e9c3698774e881">arm_compute::SubTensorInfo::data_type</a></div><div class="ttdeci">DataType data_type() const override</div><div class="ttdoc">Data type used for each element of the tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_sub_tensor_info_8h_source.xhtml#l00158">SubTensorInfo.h:158</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a2732b9eab657cad69807adb815b97c9f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>&amp; set_fixed_point_position </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>fixed_point_position</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Set the fixed point position to the specified value. </p>
<dl class="section warning"><dt>Warning</dt><dd>The fixed point position must be set once the data type has been configured</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">fixed_point_position</td><td>The new fixed point position</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Reference to this <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml" title="Store the tensor&#39;s metadata. ">ITensorInfo</a> object </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a8d9488caf817e12132f0ca2a4c30deba">ITensorInfo</a>.</p>

<p>Definition at line <a class="el" href="_sub_tensor_info_8h_source.xhtml#l00094">94</a> of file <a class="el" href="_sub_tensor_info_8h_source.xhtml">SubTensorInfo.h</a>.</p>

<p>References <a class="el" href="core_2_error_8h_source.xhtml#l00306">ARM_COMPUTE_ERROR_ON</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a8d9488caf817e12132f0ca2a4c30deba">ITensorInfo::set_fixed_point_position()</a>, <a class="el" href="classarm__compute_1_1_sub_tensor_info.xhtml#a73e8ce43ba86fece3400cf79d0978811">SubTensorInfo::set_tensor_shape()</a>, and <a class="el" href="_c_l_2_min_max_location_8cpp_source.xhtml#l00089">arm_compute::test::validation::shape</a>.</p>
<div class="fragment"><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    {</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        <a class="code" href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(_parent == <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        _parent-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a8d9488caf817e12132f0ca2a4c30deba">set_fixed_point_position</a>(<a class="code" href="classarm__compute_1_1_sub_tensor_info.xhtml#a35ccf2eb0c18a15feab2db98b307b78b">fixed_point_position</a>);</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    };</div><div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a8d9488caf817e12132f0ca2a4c30deba"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a8d9488caf817e12132f0ca2a4c30deba">arm_compute::ITensorInfo::set_fixed_point_position</a></div><div class="ttdeci">virtual ITensorInfo &amp; set_fixed_point_position(int fixed_point_position)=0</div><div class="ttdoc">Set the fixed point position to the specified value. </div></div>
<div class="ttc" id="core_2_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown. </div><div class="ttdef"><b>Definition:</b> <a href="core_2_error_8h_source.xhtml#l00306">Error.h:306</a></div></div>
<div class="ttc" id="classarm__compute_1_1_sub_tensor_info_xhtml_a35ccf2eb0c18a15feab2db98b307b78b"><div class="ttname"><a href="classarm__compute_1_1_sub_tensor_info.xhtml#a35ccf2eb0c18a15feab2db98b307b78b">arm_compute::SubTensorInfo::fixed_point_position</a></div><div class="ttdeci">int fixed_point_position() const override</div><div class="ttdoc">Fixed point position used when the tensor data type is QS8 or QS16. </div><div class="ttdef"><b>Definition:</b> <a href="_sub_tensor_info_8h_source.xhtml#l00134">SubTensorInfo.h:134</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="af501bc12f51874e786b0f28016a99ff7"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>&amp; set_format </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58">Format</a>&#160;</td>
          <td class="paramname"><em>format</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Set the format of an already initialized tensor. </p>
<dl class="section note"><dt>Note</dt><dd>If the data type has already been configured (i.e. not UNKNOWN) it must match the new format. If data type hasn't been configured it will be based on the format.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">format</td><td>Single-plane format of the tensor.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Reference to this <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml" title="Store the tensor&#39;s metadata. ">ITensorInfo</a> object </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a17394f0f7aea22d9b2d4c6f33bfa69ca">ITensorInfo</a>.</p>

<p>Definition at line <a class="el" href="_sub_tensor_info_8h_source.xhtml#l00088">88</a> of file <a class="el" href="_sub_tensor_info_8h_source.xhtml">SubTensorInfo.h</a>.</p>

<p>References <a class="el" href="core_2_error_8h_source.xhtml#l00306">ARM_COMPUTE_ERROR_ON</a>, and <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a17394f0f7aea22d9b2d4c6f33bfa69ca">ITensorInfo::set_format()</a>.</p>
<div class="fragment"><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    {</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        <a class="code" href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(_parent == <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        _parent-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a17394f0f7aea22d9b2d4c6f33bfa69ca">set_format</a>(<a class="code" href="classarm__compute_1_1_sub_tensor_info.xhtml#ac4b36cc1e56b0b7e579bb4b7196490db">format</a>);</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    };</div><div class="ttc" id="core_2_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown. </div><div class="ttdef"><b>Definition:</b> <a href="core_2_error_8h_source.xhtml#l00306">Error.h:306</a></div></div>
<div class="ttc" id="classarm__compute_1_1_sub_tensor_info_xhtml_ac4b36cc1e56b0b7e579bb4b7196490db"><div class="ttname"><a href="classarm__compute_1_1_sub_tensor_info.xhtml#ac4b36cc1e56b0b7e579bb4b7196490db">arm_compute::SubTensorInfo::format</a></div><div class="ttdeci">Format format() const override</div><div class="ttdoc">Colour format of the image. </div><div class="ttdef"><b>Definition:</b> <a href="_sub_tensor_info_8h_source.xhtml#l00163">SubTensorInfo.h:163</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a17394f0f7aea22d9b2d4c6f33bfa69ca"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a17394f0f7aea22d9b2d4c6f33bfa69ca">arm_compute::ITensorInfo::set_format</a></div><div class="ttdeci">virtual ITensorInfo &amp; set_format(Format format)=0</div><div class="ttdoc">Set the format of an already initialized tensor. </div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a78bf77b2d9b959259f77a32b9a412184"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>&amp; set_is_resizable </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>is_resizable</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Set the flag whether the tensor size can be changed. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">is_resizable</td><td>Flag that marks the tensor if it can be changed or not.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Reference to this <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml" title="Store the tensor&#39;s metadata. ">ITensorInfo</a> object </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a9273842d8e5dc1a3c7fab727176fd7fe">ITensorInfo</a>.</p>

<p>Definition at line <a class="el" href="_sub_tensor_info_8h_source.xhtml#l00188">188</a> of file <a class="el" href="_sub_tensor_info_8h_source.xhtml">SubTensorInfo.h</a>.</p>

<p>References <a class="el" href="core_2_error_8h_source.xhtml#l00306">ARM_COMPUTE_ERROR_ON</a>, and <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a9273842d8e5dc1a3c7fab727176fd7fe">ITensorInfo::set_is_resizable()</a>.</p>
<div class="fragment"><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    {</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;        <a class="code" href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(_parent == <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;        _parent-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a9273842d8e5dc1a3c7fab727176fd7fe">set_is_resizable</a>(<a class="code" href="classarm__compute_1_1_sub_tensor_info.xhtml#aaee6555ace43b03173844b1a228a3fc3">is_resizable</a>);</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;        <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    }</div><div class="ttc" id="core_2_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown. </div><div class="ttdef"><b>Definition:</b> <a href="core_2_error_8h_source.xhtml#l00306">Error.h:306</a></div></div>
<div class="ttc" id="classarm__compute_1_1_sub_tensor_info_xhtml_aaee6555ace43b03173844b1a228a3fc3"><div class="ttname"><a href="classarm__compute_1_1_sub_tensor_info.xhtml#aaee6555ace43b03173844b1a228a3fc3">arm_compute::SubTensorInfo::is_resizable</a></div><div class="ttdeci">bool is_resizable() const override</div><div class="ttdoc">Flag indicating whether the size of the tensor can be changed. </div><div class="ttdef"><b>Definition:</b> <a href="_sub_tensor_info_8h_source.xhtml#l00183">SubTensorInfo.h:183</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a9273842d8e5dc1a3c7fab727176fd7fe"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a9273842d8e5dc1a3c7fab727176fd7fe">arm_compute::ITensorInfo::set_is_resizable</a></div><div class="ttdeci">virtual ITensorInfo &amp; set_is_resizable(bool is_resizable)=0</div><div class="ttdoc">Set the flag whether the tensor size can be changed. </div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a5b0a9fd674f8748506b6944c030bc47e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>&amp; set_num_channels </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>num_channels</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Set the number of channels to the specified value. </p>
<dl class="section warning"><dt>Warning</dt><dd>This resets the format to UNKNOWN.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">num_channels</td><td>New number of channels.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Reference to this <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml" title="Store the tensor&#39;s metadata. ">ITensorInfo</a> object </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#aaf74be25e2392705f29352ffaa4b1f9d">ITensorInfo</a>.</p>

<p>Definition at line <a class="el" href="_sub_tensor_info_8h_source.xhtml#l00082">82</a> of file <a class="el" href="_sub_tensor_info_8h_source.xhtml">SubTensorInfo.h</a>.</p>

<p>References <a class="el" href="core_2_error_8h_source.xhtml#l00306">ARM_COMPUTE_ERROR_ON</a>, and <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#aaf74be25e2392705f29352ffaa4b1f9d">ITensorInfo::set_num_channels()</a>.</p>
<div class="fragment"><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    {</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        <a class="code" href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(_parent == <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        _parent-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#aaf74be25e2392705f29352ffaa4b1f9d">set_num_channels</a>(<a class="code" href="classarm__compute_1_1_sub_tensor_info.xhtml#a6f13b974eeb528acde66de8d9b3fd95c">num_channels</a>);</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    };</div><div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_aaf74be25e2392705f29352ffaa4b1f9d"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#aaf74be25e2392705f29352ffaa4b1f9d">arm_compute::ITensorInfo::set_num_channels</a></div><div class="ttdeci">virtual ITensorInfo &amp; set_num_channels(int num_channels)=0</div><div class="ttdoc">Set the number of channels to the specified value. </div></div>
<div class="ttc" id="core_2_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown. </div><div class="ttdef"><b>Definition:</b> <a href="core_2_error_8h_source.xhtml#l00306">Error.h:306</a></div></div>
<div class="ttc" id="classarm__compute_1_1_sub_tensor_info_xhtml_a6f13b974eeb528acde66de8d9b3fd95c"><div class="ttname"><a href="classarm__compute_1_1_sub_tensor_info.xhtml#a6f13b974eeb528acde66de8d9b3fd95c">arm_compute::SubTensorInfo::num_channels</a></div><div class="ttdeci">size_t num_channels() const override</div><div class="ttdoc">The number of channels for each tensor element. </div><div class="ttdef"><b>Definition:</b> <a href="_sub_tensor_info_8h_source.xhtml#l00148">SubTensorInfo.h:148</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ae3099a4be4777389b60712f43e065403"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>&amp; set_quantization_info </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>&#160;</td>
          <td class="paramname"><em>quantization_info</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Set the quantization settings (scale and offset) of the tensor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">quantization_info</td><td><a class="el" href="structarm__compute_1_1_quantization_info.xhtml" title="Quantization settings (used for QASYMM8 data type) ">QuantizationInfo</a> containing the scale and offset</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Reference to this <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml" title="Store the tensor&#39;s metadata. ">ITensorInfo</a> object </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#ab64a0374b9e2292ed2b55f4f18c98423">ITensorInfo</a>.</p>

<p>Definition at line <a class="el" href="_sub_tensor_info_8h_source.xhtml#l00101">101</a> of file <a class="el" href="_sub_tensor_info_8h_source.xhtml">SubTensorInfo.h</a>.</p>

<p>References <a class="el" href="core_2_error_8h_source.xhtml#l00306">ARM_COMPUTE_ERROR_ON</a>, and <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#ab64a0374b9e2292ed2b55f4f18c98423">ITensorInfo::set_quantization_info()</a>.</p>
<div class="fragment"><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    {</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        <a class="code" href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(_parent == <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        _parent-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#ab64a0374b9e2292ed2b55f4f18c98423">set_quantization_info</a>(<a class="code" href="classarm__compute_1_1_sub_tensor_info.xhtml#ac74736e3863207232a23b7181c1d0f44">quantization_info</a>);</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    }</div><div class="ttc" id="core_2_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown. </div><div class="ttdef"><b>Definition:</b> <a href="core_2_error_8h_source.xhtml#l00306">Error.h:306</a></div></div>
<div class="ttc" id="classarm__compute_1_1_sub_tensor_info_xhtml_ac74736e3863207232a23b7181c1d0f44"><div class="ttname"><a href="classarm__compute_1_1_sub_tensor_info.xhtml#ac74736e3863207232a23b7181c1d0f44">arm_compute::SubTensorInfo::quantization_info</a></div><div class="ttdeci">QuantizationInfo quantization_info() const override</div><div class="ttdoc">Get the quantization settings (scale and offset) of the tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_sub_tensor_info_8h_source.xhtml#l00208">SubTensorInfo.h:208</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_ab64a0374b9e2292ed2b55f4f18c98423"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#ab64a0374b9e2292ed2b55f4f18c98423">arm_compute::ITensorInfo::set_quantization_info</a></div><div class="ttdeci">virtual ITensorInfo &amp; set_quantization_info(QuantizationInfo quantization_info)=0</div><div class="ttdoc">Set the quantization settings (scale and offset) of the tensor. </div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a73e8ce43ba86fece3400cf79d0978811"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>&amp; set_tensor_shape </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>&#160;</td>
          <td class="paramname"><em>shape</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Set the shape of an already initialized tensor. </p>
<dl class="section warning"><dt>Warning</dt><dd>Changing the shape requires to recompute the strides and is therefore only possible if the tensor hasn't been allocated yet.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">shape</td><td>New tensor shape.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Reference to this <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml" title="Store the tensor&#39;s metadata. ">ITensorInfo</a> object </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#aaf359cee0fc728e7c7fb8b692979994b">ITensorInfo</a>.</p>

<p>Referenced by <a class="el" href="_sub_tensor_info_8h_source.xhtml#l00094">SubTensorInfo::set_fixed_point_position()</a>.</p>

</div>
</div>
<a class="anchor" id="a0cbba4e45a4a1e389606493af3814415"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void set_valid_region </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1_valid_region.xhtml">ValidRegion</a>&#160;</td>
          <td class="paramname"><em>valid_region</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Set the valid region of the tensor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">valid_region</td><td>Valid region to set. </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#acea00276098762fd0e83a3c25d9f88cb">ITensorInfo</a>.</p>

<p>Definition at line <a class="el" href="_sub_tensor_info_8h_source.xhtml#l00198">198</a> of file <a class="el" href="_sub_tensor_info_8h_source.xhtml">SubTensorInfo.h</a>.</p>

<p>References <a class="el" href="core_2_error_8h_source.xhtml#l00306">ARM_COMPUTE_ERROR_ON</a>, <a class="el" href="_validate_8h_source.xhtml#l00803">ARM_COMPUTE_ERROR_ON_INVALID_SUBTENSOR_VALID_REGION</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">ITensorInfo::tensor_shape()</a>, <a class="el" href="_tensor_shape_8h_source.xhtml#l00135">TensorShape::total_size()</a>, <a class="el" href="_sub_tensor_info_8h_source.xhtml#l00194">SubTensorInfo::valid_region()</a>, and <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a74dfd07380a290c34fe7c8e065029b95">ITensorInfo::valid_region()</a>.</p>
<div class="fragment"><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    {</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        <a class="code" href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(_parent == <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;        <span class="comment">// Check if subtensor is valid if parent is configured</span></div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;        <span class="keywordflow">if</span>(_parent-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">tensor_shape</a>().<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml#a4eaec01ba2c12093db609d1034ad0bc1">total_size</a>() != 0)</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;        {</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;            <a class="code" href="_validate_8h.xhtml#abce948c8b82a9d127299e3dcdefdf652">ARM_COMPUTE_ERROR_ON_INVALID_SUBTENSOR_VALID_REGION</a>(_parent-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a74dfd07380a290c34fe7c8e065029b95">valid_region</a>(), <a class="code" href="classarm__compute_1_1_sub_tensor_info.xhtml#a3c20d908342087484d883574d55dd482">valid_region</a>);</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;        }</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;        _valid_region = std::move(<a class="code" href="classarm__compute_1_1_sub_tensor_info.xhtml#a3c20d908342087484d883574d55dd482">valid_region</a>);</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    }</div><div class="ttc" id="core_2_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown. </div><div class="ttdef"><b>Definition:</b> <a href="core_2_error_8h_source.xhtml#l00306">Error.h:306</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a74dfd07380a290c34fe7c8e065029b95"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a74dfd07380a290c34fe7c8e065029b95">arm_compute::ITensorInfo::valid_region</a></div><div class="ttdeci">virtual ValidRegion valid_region() const =0</div><div class="ttdoc">Valid region of the tensor. </div></div>
<div class="ttc" id="_validate_8h_xhtml_abce948c8b82a9d127299e3dcdefdf652"><div class="ttname"><a href="_validate_8h.xhtml#abce948c8b82a9d127299e3dcdefdf652">ARM_COMPUTE_ERROR_ON_INVALID_SUBTENSOR_VALID_REGION</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_INVALID_SUBTENSOR_VALID_REGION(pv, sv)</div><div class="ttdef"><b>Definition:</b> <a href="_validate_8h_source.xhtml#l00803">Validate.h:803</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a7c66505457d00ece3aa4b34cab80757d"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">arm_compute::ITensorInfo::tensor_shape</a></div><div class="ttdeci">virtual const TensorShape &amp; tensor_shape() const =0</div><div class="ttdoc">Size for each dimension of the tensor. </div></div>
<div class="ttc" id="classarm__compute_1_1_sub_tensor_info_xhtml_a3c20d908342087484d883574d55dd482"><div class="ttname"><a href="classarm__compute_1_1_sub_tensor_info.xhtml#a3c20d908342087484d883574d55dd482">arm_compute::SubTensorInfo::valid_region</a></div><div class="ttdeci">ValidRegion valid_region() const override</div><div class="ttdoc">Valid region of the tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_sub_tensor_info_8h_source.xhtml#l00194">SubTensorInfo.h:194</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_shape_xhtml_a4eaec01ba2c12093db609d1034ad0bc1"><div class="ttname"><a href="classarm__compute_1_1_tensor_shape.xhtml#a4eaec01ba2c12093db609d1034ad0bc1">arm_compute::TensorShape::total_size</a></div><div class="ttdeci">size_t total_size() const </div><div class="ttdoc">Collapses all dimensions to a single linear total size. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_shape_8h_source.xhtml#l00135">TensorShape.h:135</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a5f1ca9d674346287cae57a6c5b5c24ec"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarm__compute_1_1_strides.xhtml">Strides</a>&amp; strides_in_bytes </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The strides in bytes for accessing each dimension of the tensor. </p>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="classarm__compute_1_1_strides.xhtml" title="Strides of an item in bytes. ">Strides</a> in bytes for each tensor dimension </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a6b14f175bf5281f57b561e2d4e4b1f1f">ITensorInfo</a>.</p>

<p>Definition at line <a class="el" href="_sub_tensor_info_8h_source.xhtml#l00123">123</a> of file <a class="el" href="_sub_tensor_info_8h_source.xhtml">SubTensorInfo.h</a>.</p>

<p>References <a class="el" href="core_2_error_8h_source.xhtml#l00306">ARM_COMPUTE_ERROR_ON</a>, and <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a6b14f175bf5281f57b561e2d4e4b1f1f">ITensorInfo::strides_in_bytes()</a>.</p>
<div class="fragment"><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    {</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        <a class="code" href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(_parent == <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        <span class="keywordflow">return</span> _parent-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a6b14f175bf5281f57b561e2d4e4b1f1f">strides_in_bytes</a>();</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    }</div><div class="ttc" id="core_2_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown. </div><div class="ttdef"><b>Definition:</b> <a href="core_2_error_8h_source.xhtml#l00306">Error.h:306</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a6b14f175bf5281f57b561e2d4e4b1f1f"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a6b14f175bf5281f57b561e2d4e4b1f1f">arm_compute::ITensorInfo::strides_in_bytes</a></div><div class="ttdeci">virtual const Strides &amp; strides_in_bytes() const =0</div><div class="ttdoc">The strides in bytes for accessing each dimension of the tensor. </div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a269b19ce3f357ac65f41f9951906e38e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>&amp; tensor_shape </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Size for each dimension of the tensor. </p>
<dl class="section return"><dt>Returns</dt><dd>A vector with the size for each dimension of the tensor </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">ITensorInfo</a>.</p>

<p>Definition at line <a class="el" href="_sub_tensor_info_8h_source.xhtml#l00153">153</a> of file <a class="el" href="_sub_tensor_info_8h_source.xhtml">SubTensorInfo.h</a>.</p>

<p>References <a class="el" href="core_2_error_8h_source.xhtml#l00306">ARM_COMPUTE_ERROR_ON</a>.</p>
<div class="fragment"><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    {</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;        <a class="code" href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(_parent == <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        <span class="keywordflow">return</span> _tensor_shape;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    }</div><div class="ttc" id="core_2_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown. </div><div class="ttdef"><b>Definition:</b> <a href="core_2_error_8h_source.xhtml#l00306">Error.h:306</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="af398466b602a02b42d8df19fb66a6c60"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t total_size </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the total size of the tensor in bytes. </p>
<dl class="section return"><dt>Returns</dt><dd>Total size of the tensor in bytes. </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a18064e0011c3869d884653e9e7c47b66">ITensorInfo</a>.</p>

<p>Definition at line <a class="el" href="_sub_tensor_info_8h_source.xhtml#l00168">168</a> of file <a class="el" href="_sub_tensor_info_8h_source.xhtml">SubTensorInfo.h</a>.</p>

<p>References <a class="el" href="core_2_error_8h_source.xhtml#l00306">ARM_COMPUTE_ERROR_ON</a>, and <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a18064e0011c3869d884653e9e7c47b66">ITensorInfo::total_size()</a>.</p>
<div class="fragment"><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    {</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;        <a class="code" href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(_parent == <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;        <span class="keywordflow">return</span> _parent-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a18064e0011c3869d884653e9e7c47b66">total_size</a>();</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    }</div><div class="ttc" id="core_2_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown. </div><div class="ttdef"><b>Definition:</b> <a href="core_2_error_8h_source.xhtml#l00306">Error.h:306</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a18064e0011c3869d884653e9e7c47b66"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a18064e0011c3869d884653e9e7c47b66">arm_compute::ITensorInfo::total_size</a></div><div class="ttdeci">virtual size_t total_size() const =0</div><div class="ttdoc">Returns the total size of the tensor in bytes. </div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a3c20d908342087484d883574d55dd482"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structarm__compute_1_1_valid_region.xhtml">ValidRegion</a> valid_region </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Valid region of the tensor. </p>
<p>All elements in the valid region have defined values, i.e. are not undefined.</p>
<dl class="section return"><dt>Returns</dt><dd>The valid region. </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a74dfd07380a290c34fe7c8e065029b95">ITensorInfo</a>.</p>

<p>Definition at line <a class="el" href="_sub_tensor_info_8h_source.xhtml#l00194">194</a> of file <a class="el" href="_sub_tensor_info_8h_source.xhtml">SubTensorInfo.h</a>.</p>

<p>Referenced by <a class="el" href="_sub_tensor_info_8h_source.xhtml#l00198">SubTensorInfo::set_valid_region()</a>.</p>
<div class="fragment"><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    {</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;        <span class="keywordflow">return</span> _valid_region;</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>arm_compute/core/<a class="el" href="_sub_tensor_info_8h_source.xhtml">SubTensorInfo.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1_sub_tensor_info.xhtml">SubTensorInfo</a></li>
    <li class="footer">Generated on Thu Dec 14 2017 23:48:37 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
  </ul>
</div>
</body>
</html>
