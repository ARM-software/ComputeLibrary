<!-- HTML header for doxygen 1.8.9.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: tests/framework/command_line/ListOption.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Compute Library
   &#160;<span id="projectnumber">17.12</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>Globals</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_list_option_8h_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">ListOption.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_list_option_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2017 ARM Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifndef ARM_COMPUTE_TEST_LISTOPTION</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#define ARM_COMPUTE_TEST_LISTOPTION</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_option_8h.xhtml">Option.h</a>&quot;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &lt;initializer_list&gt;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &lt;sstream&gt;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &lt;stdexcept&gt;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;{</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keyword">namespace </span>test</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;{</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keyword">namespace </span>framework</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;{</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00043"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_list_option.xhtml">   43</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1test_1_1framework_1_1_list_option.xhtml">ListOption</a> : <span class="keyword">public</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_option.xhtml">Option</a></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;{</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <span class="keyword">using</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_option.xhtml#a8432d7cd1d4ea8732a64e9df51147cbf">Option::Option</a>;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_list_option.xhtml#ad3d07e9d0c0ca2fb73095349c0903b74">ListOption</a>(std::string <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_option.xhtml#a37627d5d5bba7f4a8690c71c2ab3cb07">name</a>, std::initializer_list&lt;T&gt; &amp;&amp;default_values);</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_list_option.xhtml#aba9622f1f4bc66fcba246f30d4175a4f">parse</a>(std::string <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_list_option.xhtml#a42a5343297d5abb7ad24c6f1a97af203">value</a>) <span class="keyword">override</span>;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    std::string           <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_list_option.xhtml#ae6038fe1a77c4b08a678530410f41efa">help</a>() <span class="keyword">const override</span>;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="keyword">const</span> std::vector&lt;T&gt; &amp;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_list_option.xhtml#a42a5343297d5abb7ad24c6f1a97af203">value</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    std::vector&lt;T&gt; _values{};</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;};</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00064"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_list_option.xhtml#ad3d07e9d0c0ca2fb73095349c0903b74">   64</a></span>&#160;<span class="keyword">inline</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_list_option.xhtml#ad3d07e9d0c0ca2fb73095349c0903b74">ListOption&lt;T&gt;::ListOption</a>(std::string <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_option.xhtml#a37627d5d5bba7f4a8690c71c2ab3cb07">name</a>, std::initializer_list&lt;T&gt; &amp;&amp;default_values)</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    : <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_option.xhtml">Option</a>{ std::move(name), <span class="keyword">false</span>, <span class="keyword">true</span> }, _values{ std::forward&lt;std::initializer_list&lt;T&gt;&gt;(default_values) }</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;{</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;}</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00070"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_list_option.xhtml#aba9622f1f4bc66fcba246f30d4175a4f">   70</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_list_option.xhtml#aba9622f1f4bc66fcba246f30d4175a4f">ListOption&lt;T&gt;::parse</a>(std::string <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_list_option.xhtml#a42a5343297d5abb7ad24c6f1a97af203">value</a>)</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;{</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    _is_set = <span class="keyword">true</span>;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="keywordflow">try</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    {</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        std::stringstream stream{ value };</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        std::string       item;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        <span class="keywordflow">while</span>(!std::getline(stream, item, <span class="charliteral">&#39;,&#39;</span>).fail())</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        {</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;            std::stringstream item_stream(item);</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;            T                 typed_value{};</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;            item_stream &gt;&gt; typed_value;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;            <span class="keywordflow">if</span>(!item_stream.fail())</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;            {</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;                _values.emplace_back(typed_value);</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;            }</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;            _is_set = _is_set &amp;&amp; !item_stream.fail();</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        }</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        <span class="keywordflow">return</span> _is_set;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    }</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <span class="keywordflow">catch</span>(<span class="keyword">const</span> std::invalid_argument &amp;)</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    {</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    }</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;}</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00103"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_list_option.xhtml#ae6038fe1a77c4b08a678530410f41efa">  103</a></span>&#160;<span class="keyword">inline</span> std::string <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_list_option.xhtml#ae6038fe1a77c4b08a678530410f41efa">ListOption&lt;T&gt;::help</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <span class="keywordflow">return</span> <span class="stringliteral">&quot;--&quot;</span> + <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_option.xhtml#a37627d5d5bba7f4a8690c71c2ab3cb07">name</a>() + <span class="stringliteral">&quot;=VALUE[,VALUE[,...]] - &quot;</span> + _help;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;}</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00109"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_list_option.xhtml#a42a5343297d5abb7ad24c6f1a97af203">  109</a></span>&#160;<span class="keyword">inline</span> <span class="keyword">const</span> std::vector&lt;T&gt; &amp;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_list_option.xhtml#a42a5343297d5abb7ad24c6f1a97af203">ListOption&lt;T&gt;::value</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <span class="keywordflow">return</span> _values;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;}</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;} <span class="comment">// namespace framework</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;} <span class="comment">// namespace test</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;} <span class="comment">// namespace arm_compute</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* ARM_COMPUTE_TEST_LISTOPTION */</span><span class="preprocessor"></span></div><div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_list_option_xhtml_a42a5343297d5abb7ad24c6f1a97af203"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_list_option.xhtml#a42a5343297d5abb7ad24c6f1a97af203">arm_compute::test::framework::ListOption::value</a></div><div class="ttdeci">const std::vector&lt; T &gt; &amp; value() const </div><div class="ttdef"><b>Definition:</b> <a href="_list_option_8h_source.xhtml#l00109">ListOption.h:109</a></div></div>
<div class="ttc" id="_option_8h_xhtml"><div class="ttname"><a href="_option_8h.xhtml">Option.h</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">This file contains all available output stages for GEMMLowp on OpenCL. </div><div class="ttdef"><b>Definition:</b> <a href="01__library_8dox_source.xhtml#l00001">01_library.dox:1</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_option_xhtml"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_option.xhtml">arm_compute::test::framework::Option</a></div><div class="ttdoc">Abstract base class for a command line option. </div><div class="ttdef"><b>Definition:</b> <a href="_option_8h_source.xhtml#l00036">Option.h:36</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_list_option_xhtml"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_list_option.xhtml">arm_compute::test::framework::ListOption</a></div><div class="ttdoc">Implementation of an option that accepts any number of values. </div><div class="ttdef"><b>Definition:</b> <a href="_list_option_8h_source.xhtml#l00043">ListOption.h:43</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_list_option_xhtml_ad3d07e9d0c0ca2fb73095349c0903b74"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_list_option.xhtml#ad3d07e9d0c0ca2fb73095349c0903b74">arm_compute::test::framework::ListOption::ListOption</a></div><div class="ttdeci">ListOption(std::string name, std::initializer_list&lt; T &gt; &amp;&amp;default_values)</div><div class="ttdoc">Construct the option with the given default values. </div><div class="ttdef"><b>Definition:</b> <a href="_list_option_8h_source.xhtml#l00064">ListOption.h:64</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_option_xhtml_a8432d7cd1d4ea8732a64e9df51147cbf"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_option.xhtml#a8432d7cd1d4ea8732a64e9df51147cbf">arm_compute::test::framework::Option::Option</a></div><div class="ttdeci">Option(std::string name)</div><div class="ttdoc">Constructor. </div><div class="ttdef"><b>Definition:</b> <a href="_option_8cpp_source.xhtml#l00032">Option.cpp:32</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_list_option_xhtml_ae6038fe1a77c4b08a678530410f41efa"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_list_option.xhtml#ae6038fe1a77c4b08a678530410f41efa">arm_compute::test::framework::ListOption::help</a></div><div class="ttdeci">std::string help() const override</div><div class="ttdoc">Help message for the option. </div><div class="ttdef"><b>Definition:</b> <a href="_list_option_8h_source.xhtml#l00103">ListOption.h:103</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_option_xhtml_a37627d5d5bba7f4a8690c71c2ab3cb07"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_option.xhtml#a37627d5d5bba7f4a8690c71c2ab3cb07">arm_compute::test::framework::Option::name</a></div><div class="ttdeci">std::string name() const </div><div class="ttdoc">Name of the option. </div><div class="ttdef"><b>Definition:</b> <a href="_option_8cpp_source.xhtml#l00042">Option.cpp:42</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_list_option_xhtml_aba9622f1f4bc66fcba246f30d4175a4f"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_list_option.xhtml#aba9622f1f4bc66fcba246f30d4175a4f">arm_compute::test::framework::ListOption::parse</a></div><div class="ttdeci">bool parse(std::string value) override</div><div class="ttdoc">Parses the given string. </div><div class="ttdef"><b>Definition:</b> <a href="_list_option_8h_source.xhtml#l00070">ListOption.h:70</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_59425e443f801f1f2fd8bbe4959a3ccf.xhtml">tests</a></li><li class="navelem"><a class="el" href="dir_9e71e2da941d3cafc4d98a9f6ae3de4f.xhtml">framework</a></li><li class="navelem"><a class="el" href="dir_d247c927d0dc22626cf668ab2bd7f080.xhtml">command_line</a></li><li class="navelem"><a class="el" href="_list_option_8h.xhtml">ListOption.h</a></li>
    <li class="footer">Generated on Thu Dec 14 2017 23:48:32 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
  </ul>
</div>
</body>
</html>
