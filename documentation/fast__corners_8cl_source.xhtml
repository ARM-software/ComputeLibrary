<!-- HTML header for doxygen 1.8.9.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/core/CL/cl_kernels/fast_corners.cl Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Compute Library
   &#160;<span id="projectnumber">17.12</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>Globals</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('fast__corners_8cl_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">fast_corners.cl</div>  </div>
</div><!--header-->
<div class="contents">
<a href="fast__corners_8cl.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2016, 2017 ARM Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="helpers_8h.xhtml">helpers.h</a>&quot;</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="types_8h.xhtml">types.h</a>&quot;</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="comment">/* The map table to retrieve the 16 texels in the Bresenham circle of radius 3 with center in P.</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="comment"> *      . . F 0 1 . . .</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="comment"> *      . E . . . 2 . .</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="comment"> *      D . . . . . 3 .</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="comment"> *      C . . P . . 4 .</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="comment"> *      B . . . . . 5 .</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="comment"> *      . A . . . 6 . .</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="comment"> *      . . 9 8 7 . . .</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00037"></a><span class="lineno"><a class="line" href="fast__corners_8cl.xhtml#a8d09117e1c8a726efc8d9ec9d9d8ed8a">   37</a></span>&#160;constant <span class="keywordtype">int</span> <a class="code" href="fast__corners_8cl.xhtml#a8d09117e1c8a726efc8d9ec9d9d8ed8a">offsets_s</a>[16][2] =</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;{</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    { 0, -3 },  <span class="comment">// 0</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    { 1, -3 },  <span class="comment">// 1</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    { 2, -2 },  <span class="comment">// 2</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    { 3, -1 },  <span class="comment">// 3</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    { 3, 0 },   <span class="comment">// 4</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    { 3, 1 },   <span class="comment">// 5</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    { 2, 2 },   <span class="comment">// 6</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    { 1, 3 },   <span class="comment">// 7</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    { 0, 3 },   <span class="comment">// 8</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    { -1, 3 },  <span class="comment">// 9</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    { -2, 2 },  <span class="comment">// A</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    { -3, 1 },  <span class="comment">// B</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    { -3, 0 },  <span class="comment">// C</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    { -3, -1 }, <span class="comment">// D</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    { -2, -2 }, <span class="comment">// E</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    { -1, -3 }, <span class="comment">// F</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;};</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno"><a class="line" href="fast__corners_8cl.xhtml#a9da9e257c05fa101dacfaaedd305f5bb">   68</a></span>&#160;<span class="preprocessor">#define LOAD_AND_SET_MASK(ptr, a, stride, dark, bright, dark_mask, bright_mask) \</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="preprocessor">    {                                                                           \</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="preprocessor">        unsigned char pixel;                                                    \</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="preprocessor">        pixel = *(ptr + (int)stride * offsets_s[a][1] + offsets_s[a][0]);       \</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="preprocessor">        dark_mask |= (pixel &lt; dark) &lt;&lt; a;                                       \</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="preprocessor">        bright_mask |= (pixel &gt; bright) &lt;&lt; a;                                   \</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="preprocessor">    }</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div><div class="line"><a name="l00082"></a><span class="lineno"><a class="line" href="fast__corners_8cl.xhtml#a2e2df45f46c673a1a5a1c8f4eb06aa09">   82</a></span>&#160;<span class="preprocessor">#define CHECK_CORNER(bright_mask, dark_mask, isCorner)    \</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="preprocessor">    {                                                     \</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="preprocessor">        for(int i = 0; i &lt; 16; i++)                       \</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="preprocessor">        {                                                 \</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="preprocessor">            isCorner |= ((bright_mask &amp; 0x1FF) == 0x1FF); \</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="preprocessor">            isCorner |= ((dark_mask &amp; 0x1FF) == 0x1FF);   \</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="preprocessor">            if(isCorner)                                  \</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="preprocessor">            {                                             \</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="preprocessor">                break;                                    \</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="preprocessor">            }                                             \</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="preprocessor">            bright_mask &gt;&gt;= 1;                            \</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="preprocessor">            dark_mask &gt;&gt;= 1;                              \</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="preprocessor">        }                                                 \</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="preprocessor">    }</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="comment">/* Calculate pixel&#39;s strength */</span></div><div class="line"><a name="l00098"></a><span class="lineno"><a class="line" href="fast__corners_8cl.xhtml#aea4e2a64dfdec6a9ecf62f8cd518fc17">   98</a></span>&#160;uchar <a class="code" href="fast__corners_8cl.xhtml#aea4e2a64dfdec6a9ecf62f8cd518fc17">compute_strength</a>(uchar candidate_pixel, __global <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> *ptr, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> stride, <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a6cae310822a46019ba25a00ddb0f7e62">threshold</a>)</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;{</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <span class="keywordtype">short</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aac40b7097f2bda9274ae07fa33d15a79">a</a> = <a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a6cae310822a46019ba25a00ddb0f7e62">threshold</a>;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <span class="keywordtype">short</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7b8004eef325a40dd43eb80755610fff">b</a> = 255;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <span class="keywordflow">while</span>(b - a &gt; 1)</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    {</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        uchar        <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a497347573faa3778743ddf277f861094">c</a>           = convert_uchar_sat((a + b) / 2);</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> bright_mask = 0;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> dark_mask   = 0;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> p_bright = add_sat(candidate_pixel, c);</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> p_dark   = sub_sat(candidate_pixel, c);</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        <span class="keywordtype">bool</span> isCorner = 0;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        <span class="keywordflow">for</span>(uint i = 0; i &lt; 16; i++)</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        {</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;            <a class="code" href="fast__corners_8cl.xhtml#a9da9e257c05fa101dacfaaedd305f5bb">LOAD_AND_SET_MASK</a>(ptr, i, stride, p_dark, p_bright, dark_mask, bright_mask)</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        }</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        bright_mask |= (bright_mask &lt;&lt; 16);</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        dark_mask |= (dark_mask &lt;&lt; 16);</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        <a class="code" href="fast__corners_8cl.xhtml#a2e2df45f46c673a1a5a1c8f4eb06aa09">CHECK_CORNER</a>(bright_mask, dark_mask, isCorner);</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        <span class="keywordflow">if</span>(isCorner)</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        {</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;            a = convert_short(c);</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        }</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        <span class="keywordflow">else</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        {</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;            b = convert_short(c);</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        }</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    }</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aac40b7097f2bda9274ae07fa33d15a79">a</a>;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;}</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;</div><div class="line"><a name="l00155"></a><span class="lineno"><a class="line" href="fast__corners_8cl.xhtml#a33152baf05787bd17259b692bfba24af">  155</a></span>&#160;__kernel <span class="keywordtype">void</span> <a class="code" href="fast__corners_8cl.xhtml#a33152baf05787bd17259b692bfba24af">fast_corners</a>(</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    <a class="code" href="helpers_8h.xhtml#a22f42fcf2077d951271df83b55c1a71a">IMAGE_DECLARATION</a>(input),</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <a class="code" href="helpers_8h.xhtml#a22f42fcf2077d951271df83b55c1a71a">IMAGE_DECLARATION</a>(output),</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    <span class="keywordtype">float</span> threshold_value)</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;{</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    <a class="code" href="struct_image.xhtml">Image</a> in  = <a class="code" href="helpers_8h.xhtml#aebe814363556c244be043b13e7969197">CONVERT_TO_IMAGE_STRUCT</a>(input);</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    <a class="code" href="struct_image.xhtml">Image</a> out = <a class="code" href="helpers_8h.xhtml#aebe814363556c244be043b13e7969197">CONVERT_TO_IMAGE_STRUCT</a>(output);</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a6cae310822a46019ba25a00ddb0f7e62">threshold</a> = (uchar)threshold_value;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> bright_mask = 0;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> dark_mask   = 0;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> isCorner = 0;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> p        = *in.<a class="code" href="struct_image.xhtml#acf52c23cbd7424606c10a606524e3e32">ptr</a>;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> p_bright = add_sat(p, threshold);</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> p_dark   = sub_sat(p, threshold);</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    <a class="code" href="fast__corners_8cl.xhtml#a9da9e257c05fa101dacfaaedd305f5bb">LOAD_AND_SET_MASK</a>(in.<a class="code" href="struct_image.xhtml#acf52c23cbd7424606c10a606524e3e32">ptr</a>, 0, input_stride_y, p_dark, p_bright, dark_mask, bright_mask)</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    <a class="code" href="fast__corners_8cl.xhtml#a9da9e257c05fa101dacfaaedd305f5bb">LOAD_AND_SET_MASK</a>(in.<a class="code" href="struct_image.xhtml#acf52c23cbd7424606c10a606524e3e32">ptr</a>, 4, input_stride_y, p_dark, p_bright, dark_mask, bright_mask)</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    <a class="code" href="fast__corners_8cl.xhtml#a9da9e257c05fa101dacfaaedd305f5bb">LOAD_AND_SET_MASK</a>(in.<a class="code" href="struct_image.xhtml#acf52c23cbd7424606c10a606524e3e32">ptr</a>, 8, input_stride_y, p_dark, p_bright, dark_mask, bright_mask)</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    <a class="code" href="fast__corners_8cl.xhtml#a9da9e257c05fa101dacfaaedd305f5bb">LOAD_AND_SET_MASK</a>(in.<a class="code" href="struct_image.xhtml#acf52c23cbd7424606c10a606524e3e32">ptr</a>, 12, input_stride_y, p_dark, p_bright, dark_mask, bright_mask)</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    <span class="keywordflow">if</span>(((bright_mask | dark_mask) &amp; 0x1111) == 0)</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    {</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;        *out.<a class="code" href="struct_image.xhtml#acf52c23cbd7424606c10a606524e3e32">ptr</a> = 0;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    }</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    <a class="code" href="fast__corners_8cl.xhtml#a9da9e257c05fa101dacfaaedd305f5bb">LOAD_AND_SET_MASK</a>(in.<a class="code" href="struct_image.xhtml#acf52c23cbd7424606c10a606524e3e32">ptr</a>, 1, input_stride_y, p_dark, p_bright, dark_mask, bright_mask)</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    <a class="code" href="fast__corners_8cl.xhtml#a9da9e257c05fa101dacfaaedd305f5bb">LOAD_AND_SET_MASK</a>(in.<a class="code" href="struct_image.xhtml#acf52c23cbd7424606c10a606524e3e32">ptr</a>, 2, input_stride_y, p_dark, p_bright, dark_mask, bright_mask)</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    <a class="code" href="fast__corners_8cl.xhtml#a9da9e257c05fa101dacfaaedd305f5bb">LOAD_AND_SET_MASK</a>(in.<a class="code" href="struct_image.xhtml#acf52c23cbd7424606c10a606524e3e32">ptr</a>, 3, input_stride_y, p_dark, p_bright, dark_mask, bright_mask)</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    <a class="code" href="fast__corners_8cl.xhtml#a9da9e257c05fa101dacfaaedd305f5bb">LOAD_AND_SET_MASK</a>(in.<a class="code" href="struct_image.xhtml#acf52c23cbd7424606c10a606524e3e32">ptr</a>, 5, input_stride_y, p_dark, p_bright, dark_mask, bright_mask)</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    <a class="code" href="fast__corners_8cl.xhtml#a9da9e257c05fa101dacfaaedd305f5bb">LOAD_AND_SET_MASK</a>(in.<a class="code" href="struct_image.xhtml#acf52c23cbd7424606c10a606524e3e32">ptr</a>, 6, input_stride_y, p_dark, p_bright, dark_mask, bright_mask)</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    <a class="code" href="fast__corners_8cl.xhtml#a9da9e257c05fa101dacfaaedd305f5bb">LOAD_AND_SET_MASK</a>(in.<a class="code" href="struct_image.xhtml#acf52c23cbd7424606c10a606524e3e32">ptr</a>, 7, input_stride_y, p_dark, p_bright, dark_mask, bright_mask)</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    <a class="code" href="fast__corners_8cl.xhtml#a9da9e257c05fa101dacfaaedd305f5bb">LOAD_AND_SET_MASK</a>(in.<a class="code" href="struct_image.xhtml#acf52c23cbd7424606c10a606524e3e32">ptr</a>, 9, input_stride_y, p_dark, p_bright, dark_mask, bright_mask)</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    <a class="code" href="fast__corners_8cl.xhtml#a9da9e257c05fa101dacfaaedd305f5bb">LOAD_AND_SET_MASK</a>(in.<a class="code" href="struct_image.xhtml#acf52c23cbd7424606c10a606524e3e32">ptr</a>, 10, input_stride_y, p_dark, p_bright, dark_mask, bright_mask)</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    <a class="code" href="fast__corners_8cl.xhtml#a9da9e257c05fa101dacfaaedd305f5bb">LOAD_AND_SET_MASK</a>(in.<a class="code" href="struct_image.xhtml#acf52c23cbd7424606c10a606524e3e32">ptr</a>, 11, input_stride_y, p_dark, p_bright, dark_mask, bright_mask)</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    <a class="code" href="fast__corners_8cl.xhtml#a9da9e257c05fa101dacfaaedd305f5bb">LOAD_AND_SET_MASK</a>(in.<a class="code" href="struct_image.xhtml#acf52c23cbd7424606c10a606524e3e32">ptr</a>, 13, input_stride_y, p_dark, p_bright, dark_mask, bright_mask)</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    <a class="code" href="fast__corners_8cl.xhtml#a9da9e257c05fa101dacfaaedd305f5bb">LOAD_AND_SET_MASK</a>(in.<a class="code" href="struct_image.xhtml#acf52c23cbd7424606c10a606524e3e32">ptr</a>, 14, input_stride_y, p_dark, p_bright, dark_mask, bright_mask)</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    <a class="code" href="fast__corners_8cl.xhtml#a9da9e257c05fa101dacfaaedd305f5bb">LOAD_AND_SET_MASK</a>(in.<a class="code" href="struct_image.xhtml#acf52c23cbd7424606c10a606524e3e32">ptr</a>, 15, input_stride_y, p_dark, p_bright, dark_mask, bright_mask)</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    bright_mask |= (bright_mask &lt;&lt; 16);</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    dark_mask |= (dark_mask &lt;&lt; 16);</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    <a class="code" href="fast__corners_8cl.xhtml#a2e2df45f46c673a1a5a1c8f4eb06aa09">CHECK_CORNER</a>(bright_mask, dark_mask, isCorner)</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    <span class="keywordflow">if</span>(!isCorner)</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    {</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;        *out.<a class="code" href="struct_image.xhtml#acf52c23cbd7424606c10a606524e3e32">ptr</a> = 0;</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    }</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="preprocessor">#ifdef USE_MAXSUPPRESSION</span></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    *out.<a class="code" href="struct_image.xhtml#acf52c23cbd7424606c10a606524e3e32">ptr</a> = <a class="code" href="fast__corners_8cl.xhtml#aea4e2a64dfdec6a9ecf62f8cd518fc17">compute_strength</a>(p, in.<a class="code" href="struct_image.xhtml#acf52c23cbd7424606c10a606524e3e32">ptr</a>, input_stride_y, threshold);</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;<span class="preprocessor">#else  </span><span class="comment">/* USE_MAXSUPPRESSION */</span><span class="preprocessor"></span></div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    *out.<a class="code" href="struct_image.xhtml#acf52c23cbd7424606c10a606524e3e32">ptr</a> = 1;</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* USE_MAXSUPPRESSION */</span><span class="preprocessor"></span></div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;}</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;</div><div class="line"><a name="l00230"></a><span class="lineno"><a class="line" href="fast__corners_8cl.xhtml#ad1e2ee5ba250337a4e1889423e11aa81">  230</a></span>&#160;__kernel <span class="keywordtype">void</span> <a class="code" href="fast__corners_8cl.xhtml#ad1e2ee5ba250337a4e1889423e11aa81">copy_to_keypoint</a>(</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    <a class="code" href="helpers_8h.xhtml#a22f42fcf2077d951271df83b55c1a71a">IMAGE_DECLARATION</a>(input),</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;    uint     max_num_points,</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    uint     <a class="code" href="helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>,</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    __global uint *num_of_points,</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    __global <a class="code" href="struct_keypoint.xhtml">Keypoint</a> *out)</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;{</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="preprocessor">#ifndef UPDATE_NUMBER</span></div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;    <span class="keywordflow">if</span>(*num_of_points &gt;= max_num_points)</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;    {</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    }</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* UPDATE_NUMBER */</span><span class="preprocessor"></span></div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;    <a class="code" href="struct_image.xhtml">Image</a> in = <a class="code" href="helpers_8h.xhtml#aebe814363556c244be043b13e7969197">CONVERT_TO_IMAGE_STRUCT</a>(input);</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    uchar <a class="code" href="hwc_8hpp.xhtml#a0f61d63b009d0880a89c843bd50d8d76">value</a> = *in.<a class="code" href="struct_image.xhtml#acf52c23cbd7424606c10a606524e3e32">ptr</a>;</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;    <span class="keywordflow">if</span>(value &gt; 0)</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;    {</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;        <span class="keywordtype">int</span> <span class="keywordtype">id</span> = atomic_inc(num_of_points);</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;        <span class="keywordflow">if</span>(<span class="keywordtype">id</span> &lt; max_num_points)</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;        {</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;            out[<a class="code" href="hwc_8hpp.xhtml#abaabdc509cdaba7df9f56c6c76f3ae19">id</a>].strength        = <a class="code" href="hwc_8hpp.xhtml#a0f61d63b009d0880a89c843bd50d8d76">value</a>;</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;            out[<a class="code" href="hwc_8hpp.xhtml#abaabdc509cdaba7df9f56c6c76f3ae19">id</a>].x               = get_global_id(0) + <a class="code" href="helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>;</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;            out[<a class="code" href="hwc_8hpp.xhtml#abaabdc509cdaba7df9f56c6c76f3ae19">id</a>].y               = get_global_id(1) + <a class="code" href="helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>;</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;            out[<a class="code" href="hwc_8hpp.xhtml#abaabdc509cdaba7df9f56c6c76f3ae19">id</a>].tracking_status = 1;</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;        }</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    }</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;}</div><div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_aac40b7097f2bda9274ae07fa33d15a79"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#aac40b7097f2bda9274ae07fa33d15a79">arm_compute::test::validation::a</a></div><div class="ttdeci">Tensor a</div><div class="ttdef"><b>Definition:</b> <a href="validation_2_n_e_o_n_2_g_e_m_m_8cpp_source.xhtml#l00115">GEMM.cpp:115</a></div></div>
<div class="ttc" id="hwc_8hpp_xhtml_abaabdc509cdaba7df9f56c6c76f3ae19"><div class="ttname"><a href="hwc_8hpp.xhtml#abaabdc509cdaba7df9f56c6c76f3ae19">id</a></div><div class="ttdeci">uint32_t id</div><div class="ttdef"><b>Definition:</b> <a href="hwc_8hpp_source.xhtml#l00252">hwc.hpp:252</a></div></div>
<div class="ttc" id="fast__corners_8cl_xhtml_aea4e2a64dfdec6a9ecf62f8cd518fc17"><div class="ttname"><a href="fast__corners_8cl.xhtml#aea4e2a64dfdec6a9ecf62f8cd518fc17">compute_strength</a></div><div class="ttdeci">uchar compute_strength(uchar candidate_pixel, __global unsigned char *ptr, unsigned int stride, unsigned char threshold)</div><div class="ttdef"><b>Definition:</b> <a href="fast__corners_8cl_source.xhtml#l00098">fast_corners.cl:98</a></div></div>
<div class="ttc" id="fast__corners_8cl_xhtml_a8d09117e1c8a726efc8d9ec9d9d8ed8a"><div class="ttname"><a href="fast__corners_8cl.xhtml#a8d09117e1c8a726efc8d9ec9d9d8ed8a">offsets_s</a></div><div class="ttdeci">constant int offsets_s[16][2]</div><div class="ttdef"><b>Definition:</b> <a href="fast__corners_8cl_source.xhtml#l00037">fast_corners.cl:37</a></div></div>
<div class="ttc" id="struct_keypoint_xhtml"><div class="ttname"><a href="struct_keypoint.xhtml">Keypoint</a></div><div class="ttdef"><b>Definition:</b> <a href="types_8h_source.xhtml#l00035">types.h:35</a></div></div>
<div class="ttc" id="helpers_8h_xhtml_a22f42fcf2077d951271df83b55c1a71a"><div class="ttname"><a href="helpers_8h.xhtml#a22f42fcf2077d951271df83b55c1a71a">IMAGE_DECLARATION</a></div><div class="ttdeci">#define IMAGE_DECLARATION(name)</div><div class="ttdef"><b>Definition:</b> <a href="helpers_8h_source.xhtml#l00066">helpers.h:66</a></div></div>
<div class="ttc" id="helpers_8h_xhtml_a009469e4d9b8fce3b6d5e97d2077827d"><div class="ttname"><a href="helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a></div><div class="ttdeci">__global uchar * offset(const Image *img, int x, int y)</div><div class="ttdoc">Get the pointer position of a Image. </div><div class="ttdef"><b>Definition:</b> <a href="helpers_8h_source.xhtml#l00301">helpers.h:301</a></div></div>
<div class="ttc" id="fast__corners_8cl_xhtml_a9da9e257c05fa101dacfaaedd305f5bb"><div class="ttname"><a href="fast__corners_8cl.xhtml#a9da9e257c05fa101dacfaaedd305f5bb">LOAD_AND_SET_MASK</a></div><div class="ttdeci">#define LOAD_AND_SET_MASK(ptr, a, stride, dark, bright, dark_mask, bright_mask)</div><div class="ttdoc">Load a pixel and set the mask values. </div><div class="ttdef"><b>Definition:</b> <a href="fast__corners_8cl_source.xhtml#l00068">fast_corners.cl:68</a></div></div>
<div class="ttc" id="helpers_8h_xhtml"><div class="ttname"><a href="helpers_8h.xhtml">helpers.h</a></div></div>
<div class="ttc" id="helpers_8h_xhtml_aebe814363556c244be043b13e7969197"><div class="ttname"><a href="helpers_8h.xhtml#aebe814363556c244be043b13e7969197">CONVERT_TO_IMAGE_STRUCT</a></div><div class="ttdeci">#define CONVERT_TO_IMAGE_STRUCT(name)</div><div class="ttdef"><b>Definition:</b> <a href="helpers_8h_source.xhtml#l00102">helpers.h:102</a></div></div>
<div class="ttc" id="fast__corners_8cl_xhtml_a2e2df45f46c673a1a5a1c8f4eb06aa09"><div class="ttname"><a href="fast__corners_8cl.xhtml#a2e2df45f46c673a1a5a1c8f4eb06aa09">CHECK_CORNER</a></div><div class="ttdeci">#define CHECK_CORNER(bright_mask, dark_mask, isCorner)</div><div class="ttdoc">Checks if a pixel is a corner. </div><div class="ttdef"><b>Definition:</b> <a href="fast__corners_8cl_source.xhtml#l00082">fast_corners.cl:82</a></div></div>
<div class="ttc" id="struct_image_xhtml"><div class="ttname"><a href="struct_image.xhtml">Image</a></div><div class="ttdoc">Structure to hold Image information. </div><div class="ttdef"><b>Definition:</b> <a href="helpers_8h_source.xhtml#l00140">helpers.h:140</a></div></div>
<div class="ttc" id="types_8h_xhtml"><div class="ttname"><a href="types_8h.xhtml">types.h</a></div></div>
<div class="ttc" id="hwc_8hpp_xhtml_a0f61d63b009d0880a89c843bd50d8d76"><div class="ttname"><a href="hwc_8hpp.xhtml#a0f61d63b009d0880a89c843bd50d8d76">value</a></div><div class="ttdeci">void * value</div><div class="ttdef"><b>Definition:</b> <a href="hwc_8hpp_source.xhtml#l00269">hwc.hpp:269</a></div></div>
<div class="ttc" id="struct_image_xhtml_acf52c23cbd7424606c10a606524e3e32"><div class="ttname"><a href="struct_image.xhtml#acf52c23cbd7424606c10a606524e3e32">Image::ptr</a></div><div class="ttdeci">__global uchar * ptr</div><div class="ttdoc">Pointer to the starting postion of the buffer. </div><div class="ttdef"><b>Definition:</b> <a href="helpers_8h_source.xhtml#l00142">helpers.h:142</a></div></div>
<div class="ttc" id="fast__corners_8cl_xhtml_a33152baf05787bd17259b692bfba24af"><div class="ttname"><a href="fast__corners_8cl.xhtml#a33152baf05787bd17259b692bfba24af">fast_corners</a></div><div class="ttdeci">__kernel void fast_corners(__global uchar *input_ptr, uint input_stride_x, uint input_step_x, uint input_stride_y, uint input_step_y, uint input_offset_first_element_in_bytes, __global uchar *output_ptr, uint output_stride_x, uint output_step_x, uint output_stride_y, uint output_step_y, uint output_offset_first_element_in_bytes, float threshold_value)</div><div class="ttdoc">Fast corners implementation. </div><div class="ttdef"><b>Definition:</b> <a href="fast__corners_8cl_source.xhtml#l00155">fast_corners.cl:155</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a497347573faa3778743ddf277f861094"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a497347573faa3778743ddf277f861094">arm_compute::test::validation::c</a></div><div class="ttdeci">Tensor c</div><div class="ttdef"><b>Definition:</b> <a href="validation_2_n_e_o_n_2_g_e_m_m_8cpp_source.xhtml#l00117">GEMM.cpp:117</a></div></div>
<div class="ttc" id="fast__corners_8cl_xhtml_ad1e2ee5ba250337a4e1889423e11aa81"><div class="ttname"><a href="fast__corners_8cl.xhtml#ad1e2ee5ba250337a4e1889423e11aa81">copy_to_keypoint</a></div><div class="ttdeci">__kernel void copy_to_keypoint(__global uchar *input_ptr, uint input_stride_x, uint input_step_x, uint input_stride_y, uint input_step_y, uint input_offset_first_element_in_bytes, uint max_num_points, uint offset, __global uint *num_of_points, __global Keypoint *out)</div><div class="ttdoc">Copy result to Keypoint buffer and count number of corners. </div><div class="ttdef"><b>Definition:</b> <a href="fast__corners_8cl_source.xhtml#l00230">fast_corners.cl:230</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a7b8004eef325a40dd43eb80755610fff"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a7b8004eef325a40dd43eb80755610fff">arm_compute::test::validation::b</a></div><div class="ttdeci">Tensor b</div><div class="ttdef"><b>Definition:</b> <a href="validation_2_n_e_o_n_2_g_e_m_m_8cpp_source.xhtml#l00116">GEMM.cpp:116</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_1_1reference_xhtml_a6cae310822a46019ba25a00ddb0f7e62"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a6cae310822a46019ba25a00ddb0f7e62">arm_compute::test::validation::reference::threshold</a></div><div class="ttdeci">SimpleTensor&lt; T &gt; threshold(const SimpleTensor&lt; T &gt; &amp;src, T threshold, T false_value, T true_value, ThresholdType type, T upper)</div><div class="ttdef"><b>Definition:</b> <a href="reference_2_threshold_8cpp_source.xhtml#l00035">Threshold.cpp:35</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_aebb8dcc11953d78e620bbef0b9e2183.xhtml">core</a></li><li class="navelem"><a class="el" href="dir_8c278f79c760e5c5fbd911f9870614c1.xhtml">CL</a></li><li class="navelem"><a class="el" href="dir_25885286e9dad4fa105b7b25a8031bbf.xhtml">cl_kernels</a></li><li class="navelem"><a class="el" href="fast__corners_8cl.xhtml">fast_corners.cl</a></li>
    <li class="footer">Generated on Thu Dec 14 2017 23:48:31 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
  </ul>
</div>
</body>
</html>
