<!-- HTML header for doxygen 1.8.9.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/core/CL/cl_kernels/sobel_filter.cl File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Compute Library
   &#160;<span id="projectnumber">17.12</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>Globals</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('sobel__filter_8cl.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#define-members">Macros</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">sobel_filter.cl File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="helpers_8h_source.xhtml">helpers.h</a>&quot;</code><br />
</div>
<p><a href="sobel__filter_8cl_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:a8476f4a8de2c191433342c9ce896986a"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sobel__filter_8cl.xhtml#a8476f4a8de2c191433342c9ce896986a">X0</a>&#160;&#160;&#160;-1</td></tr>
<tr class="separator:a8476f4a8de2c191433342c9ce896986a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1964818ccd90a6173ea48cecb652feeb"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sobel__filter_8cl.xhtml#a1964818ccd90a6173ea48cecb652feeb">X1</a>&#160;&#160;&#160;-4</td></tr>
<tr class="separator:a1964818ccd90a6173ea48cecb652feeb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a79ae03a0214cb30e57b9e8835f2a0019"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sobel__filter_8cl.xhtml#a79ae03a0214cb30e57b9e8835f2a0019">X2</a>&#160;&#160;&#160;-5</td></tr>
<tr class="separator:a79ae03a0214cb30e57b9e8835f2a0019"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adb6fd3d004959525c6a684b82ef50860"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sobel__filter_8cl.xhtml#adb6fd3d004959525c6a684b82ef50860">X3</a>&#160;&#160;&#160;0</td></tr>
<tr class="separator:adb6fd3d004959525c6a684b82ef50860"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0f79fa7387c308a89a30682d905aa40a"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sobel__filter_8cl.xhtml#a0f79fa7387c308a89a30682d905aa40a">X4</a>&#160;&#160;&#160;5</td></tr>
<tr class="separator:a0f79fa7387c308a89a30682d905aa40a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a921884524c9038883b25f03d3bd1b078"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sobel__filter_8cl.xhtml#a921884524c9038883b25f03d3bd1b078">X5</a>&#160;&#160;&#160;4</td></tr>
<tr class="separator:a921884524c9038883b25f03d3bd1b078"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0e11bba5150b8ae2a8831f6f4532e352"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sobel__filter_8cl.xhtml#a0e11bba5150b8ae2a8831f6f4532e352">X6</a>&#160;&#160;&#160;1</td></tr>
<tr class="separator:a0e11bba5150b8ae2a8831f6f4532e352"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0b0dcdd1ffa302474e907d3d7ad9dbfe"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sobel__filter_8cl.xhtml#a0b0dcdd1ffa302474e907d3d7ad9dbfe">Y0</a>&#160;&#160;&#160;1</td></tr>
<tr class="separator:a0b0dcdd1ffa302474e907d3d7ad9dbfe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a294189cdea31dda8faf609b9b3e2000a"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sobel__filter_8cl.xhtml#a294189cdea31dda8faf609b9b3e2000a">Y1</a>&#160;&#160;&#160;6</td></tr>
<tr class="separator:a294189cdea31dda8faf609b9b3e2000a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3128cc29e366777d66d8b049451ca8a0"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sobel__filter_8cl.xhtml#a3128cc29e366777d66d8b049451ca8a0">Y2</a>&#160;&#160;&#160;15</td></tr>
<tr class="separator:a3128cc29e366777d66d8b049451ca8a0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a676acf01638364a90adf5d09d2a215bf"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sobel__filter_8cl.xhtml#a676acf01638364a90adf5d09d2a215bf">Y3</a>&#160;&#160;&#160;20</td></tr>
<tr class="separator:a676acf01638364a90adf5d09d2a215bf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5a8e903c2373c4d65724c79cdea8b3d9"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sobel__filter_8cl.xhtml#a5a8e903c2373c4d65724c79cdea8b3d9">Y4</a>&#160;&#160;&#160;15</td></tr>
<tr class="separator:a5a8e903c2373c4d65724c79cdea8b3d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a770267173956bf918cf3ca1247b6de12"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sobel__filter_8cl.xhtml#a770267173956bf918cf3ca1247b6de12">Y5</a>&#160;&#160;&#160;6</td></tr>
<tr class="separator:a770267173956bf918cf3ca1247b6de12"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abcdba0de8723fe6f2d2eb284d7e98a41"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sobel__filter_8cl.xhtml#abcdba0de8723fe6f2d2eb284d7e98a41">Y6</a>&#160;&#160;&#160;1</td></tr>
<tr class="separator:abcdba0de8723fe6f2d2eb284d7e98a41"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad40297671e8a51899c6114386492006b"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sobel__filter_8cl.xhtml#ad40297671e8a51899c6114386492006b">SOBEL1x1_HOR</a>(src,  gx,  gy,  idx)</td></tr>
<tr class="separator:ad40297671e8a51899c6114386492006b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a400b86850d6a242a7f48804a097c6403"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sobel__filter_8cl.xhtml#a400b86850d6a242a7f48804a097c6403">SOBEL1x1_VERT</a>(src,  g,  direction,  idx)</td></tr>
<tr class="separator:a400b86850d6a242a7f48804a097c6403"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7f602251e0a1f8710f8aab3aef09a36b"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sobel__filter_8cl.xhtml#a7f602251e0a1f8710f8aab3aef09a36b">SOBEL1x7</a>(ptr,  gx,  gy)</td></tr>
<tr class="separator:a7f602251e0a1f8710f8aab3aef09a36b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a59f291bf2b268f9b850fa81a3fbf776a"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sobel__filter_8cl.xhtml#a59f291bf2b268f9b850fa81a3fbf776a">SOBEL7x1</a>(ptr,  g,  direction)</td></tr>
<tr class="separator:a59f291bf2b268f9b850fa81a3fbf776a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ad48e3b9dda20b039199eaea842350975"><td class="memItemLeft" align="right" valign="top">__kernel void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sobel__filter_8cl.xhtml#ad48e3b9dda20b039199eaea842350975">sobel3x3</a> (__global uchar *src_ptr, uint src_stride_x, uint src_step_x, uint src_stride_y, uint src_step_y, uint src_offset_first_element_in_bytes, __global uchar *dst_gx_ptr, uint dst_gx_stride_x, uint dst_gx_step_x, uint dst_gx_stride_y, uint dst_gx_step_y, uint dst_gx_offset_first_element_in_bytes, __global uchar *dst_gy_ptr, uint dst_gy_stride_x, uint dst_gy_step_x, uint dst_gy_stride_y, uint dst_gy_step_y, uint dst_gy_offset_first_element_in_bytes)</td></tr>
<tr class="memdesc:ad48e3b9dda20b039199eaea842350975"><td class="mdescLeft">&#160;</td><td class="mdescRight">This OpenCL kernel that computes a Sobel3x3 filter.  <a href="#ad48e3b9dda20b039199eaea842350975">More...</a><br /></td></tr>
<tr class="separator:ad48e3b9dda20b039199eaea842350975"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4fac2cb52458aa4666af5b521d2a3910"><td class="memItemLeft" align="right" valign="top">short16&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sobel__filter_8cl.xhtml#a4fac2cb52458aa4666af5b521d2a3910">sobel1x5</a> (<a class="el" href="struct_image.xhtml">Image</a> *src, const short left1_coeff_gx, const short left2_coeff_gx, const short middle_coeff_gx, const short right1_coeff_gx, const short right2_coeff_gx, const short left1_coeff_gy, const short left2_coeff_gy, const short middle_coeff_gy, const short right1_coeff_gy, const short right2_coeff_gy)</td></tr>
<tr class="memdesc:a4fac2cb52458aa4666af5b521d2a3910"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compute a 1D horizontal sobel filter 1x5 for 8 bytes assuming the input is made of 1 channel of 1 byte (i.e 8 pixels).  <a href="#a4fac2cb52458aa4666af5b521d2a3910">More...</a><br /></td></tr>
<tr class="separator:a4fac2cb52458aa4666af5b521d2a3910"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1cfe58175749124762fe0dea315d3c21"><td class="memItemLeft" align="right" valign="top">short8&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sobel__filter_8cl.xhtml#a1cfe58175749124762fe0dea315d3c21">sobel5x1</a> (<a class="el" href="struct_image.xhtml">Image</a> *src, const short up1_coeff, const short up2_coeff, const short middle_coeff, const short down1_coeff, const short down2_coeff)</td></tr>
<tr class="memdesc:a1cfe58175749124762fe0dea315d3c21"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compute a 1D vertical sobel filter 5x1 for 8 bytes assuming the input is made of 1 channel of 1 byte (i.e 8 pixels).  <a href="#a1cfe58175749124762fe0dea315d3c21">More...</a><br /></td></tr>
<tr class="separator:a1cfe58175749124762fe0dea315d3c21"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7a74e414f0e90638939a7a0506576625"><td class="memItemLeft" align="right" valign="top">__kernel void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sobel__filter_8cl.xhtml#a7a74e414f0e90638939a7a0506576625">sobel_separable1x5</a> (__global uchar *src_ptr, uint src_stride_x, uint src_step_x, uint src_stride_y, uint src_step_y, uint src_offset_first_element_in_bytes, __global uchar *dst_gx_ptr, uint dst_gx_stride_x, uint dst_gx_step_x, uint dst_gx_stride_y, uint dst_gx_step_y, uint dst_gx_offset_first_element_in_bytes, __global uchar *dst_gy_ptr, uint dst_gy_stride_x, uint dst_gy_step_x, uint dst_gy_stride_y, uint dst_gy_step_y, uint dst_gy_offset_first_element_in_bytes)</td></tr>
<tr class="memdesc:a7a74e414f0e90638939a7a0506576625"><td class="mdescLeft">&#160;</td><td class="mdescRight">Apply a 1x5 sobel matrix to a single channel U8 input image and output two temporary channel S16 images.  <a href="#a7a74e414f0e90638939a7a0506576625">More...</a><br /></td></tr>
<tr class="separator:a7a74e414f0e90638939a7a0506576625"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2cc1fcdd12f2c3cdd31b83fd59597e40"><td class="memItemLeft" align="right" valign="top">__kernel void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sobel__filter_8cl.xhtml#a2cc1fcdd12f2c3cdd31b83fd59597e40">sobel_separable5x1</a> (__global uchar *src_x_ptr, uint src_x_stride_x, uint src_x_step_x, uint src_x_stride_y, uint src_x_step_y, uint src_x_offset_first_element_in_bytes, __global uchar *dst_gx_ptr, uint dst_gx_stride_x, uint dst_gx_step_x, uint dst_gx_stride_y, uint dst_gx_step_y, uint dst_gx_offset_first_element_in_bytes, __global uchar *src_y_ptr, uint src_y_stride_x, uint src_y_step_x, uint src_y_stride_y, uint src_y_step_y, uint src_y_offset_first_element_in_bytes, __global uchar *dst_gy_ptr, uint dst_gy_stride_x, uint dst_gy_step_x, uint dst_gy_stride_y, uint dst_gy_step_y, uint dst_gy_offset_first_element_in_bytes, int dummy)</td></tr>
<tr class="memdesc:a2cc1fcdd12f2c3cdd31b83fd59597e40"><td class="mdescLeft">&#160;</td><td class="mdescRight">Apply a 5x1 convolution matrix to two single channel S16 input temporary images and output two single channel S16 images.  <a href="#a2cc1fcdd12f2c3cdd31b83fd59597e40">More...</a><br /></td></tr>
<tr class="separator:a2cc1fcdd12f2c3cdd31b83fd59597e40"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad8be5e69836ab70ac229279a7d7edaf7"><td class="memItemLeft" align="right" valign="top">__kernel void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sobel__filter_8cl.xhtml#ad8be5e69836ab70ac229279a7d7edaf7">sobel_separable1x7</a> (__global uchar *src_ptr, uint src_stride_x, uint src_step_x, uint src_stride_y, uint src_step_y, uint src_offset_first_element_in_bytes, __global uchar *dst_gx_ptr, uint dst_gx_stride_x, uint dst_gx_step_x, uint dst_gx_stride_y, uint dst_gx_step_y, uint dst_gx_offset_first_element_in_bytes, __global uchar *dst_gy_ptr, uint dst_gy_stride_x, uint dst_gy_step_x, uint dst_gy_stride_y, uint dst_gy_step_y, uint dst_gy_offset_first_element_in_bytes)</td></tr>
<tr class="memdesc:ad8be5e69836ab70ac229279a7d7edaf7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Apply a 1x7 sobel matrix to a single channel U8 input image and output two temporary channel S16 images and leave the borders undefined.  <a href="#ad8be5e69836ab70ac229279a7d7edaf7">More...</a><br /></td></tr>
<tr class="separator:ad8be5e69836ab70ac229279a7d7edaf7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8cdc6e6df9d40cec1e857917d14ee75f"><td class="memItemLeft" align="right" valign="top">__kernel void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sobel__filter_8cl.xhtml#a8cdc6e6df9d40cec1e857917d14ee75f">sobel_separable7x1</a> (__global uchar *src_x_ptr, uint src_x_stride_x, uint src_x_step_x, uint src_x_stride_y, uint src_x_step_y, uint src_x_offset_first_element_in_bytes, __global uchar *dst_gx_ptr, uint dst_gx_stride_x, uint dst_gx_step_x, uint dst_gx_stride_y, uint dst_gx_step_y, uint dst_gx_offset_first_element_in_bytes, __global uchar *src_y_ptr, uint src_y_stride_x, uint src_y_step_x, uint src_y_stride_y, uint src_y_step_y, uint src_y_offset_first_element_in_bytes, __global uchar *dst_gy_ptr, uint dst_gy_stride_x, uint dst_gy_step_x, uint dst_gy_stride_y, uint dst_gy_step_y, uint dst_gy_offset_first_element_in_bytes, int dummy)</td></tr>
<tr class="memdesc:a8cdc6e6df9d40cec1e857917d14ee75f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Apply a 7x1 convolution matrix to two single channel S16 input temporary images and output two single channel S16 images and leave the borders undefined.  <a href="#a8cdc6e6df9d40cec1e857917d14ee75f">More...</a><br /></td></tr>
<tr class="separator:a8cdc6e6df9d40cec1e857917d14ee75f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Macro Definition Documentation</h2>
<a class="anchor" id="ad40297671e8a51899c6114386492006b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define SOBEL1x1_HOR</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">src, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">gx, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">gy, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">idx&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line">{                                                                \</div><div class="line">        int8 val = convert_int8(vload8(0, <a class="code" href="helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>(src, idx - 3, 0))); \</div><div class="line">        gx += val * X##idx;                                          \</div><div class="line">        gy += val * <a class="code" href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa57cec4137b614c87cb4e24a3d003a3e0">Y</a>##idx;                                          \</div><div class="line">    }</div><div class="ttc" id="helpers_8h_xhtml_a009469e4d9b8fce3b6d5e97d2077827d"><div class="ttname"><a href="helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a></div><div class="ttdeci">__global uchar * offset(const Image *img, int x, int y)</div><div class="ttdoc">Get the pointer position of a Image. </div><div class="ttdef"><b>Definition:</b> <a href="helpers_8h_source.xhtml#l00301">helpers.h:301</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a1ce9b523fd4f3b5bbcadcd796183455aa57cec4137b614c87cb4e24a3d003a3e0"><div class="ttname"><a href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa57cec4137b614c87cb4e24a3d003a3e0">arm_compute::Channel::Y</a></div><div class="ttdoc">Luma channel. </div></div>
</div><!-- fragment -->
<p>Definition at line <a class="el" href="sobel__filter_8cl_source.xhtml#l00384">384</a> of file <a class="el" href="sobel__filter_8cl_source.xhtml">sobel_filter.cl</a>.</p>

</div>
</div>
<a class="anchor" id="a400b86850d6a242a7f48804a097c6403"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define SOBEL1x1_VERT</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">src, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">g, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">direction, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">idx&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line">{                                                                  \</div><div class="line">        int8 val = vload8(0, (__global <span class="keywordtype">int</span> *)<a class="code" href="helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>(src, 0, idx - 3)); \</div><div class="line">        g += val * (int8)direction##idx;                               \</div><div class="line">    }</div><div class="ttc" id="helpers_8h_xhtml_a009469e4d9b8fce3b6d5e97d2077827d"><div class="ttname"><a href="helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a></div><div class="ttdeci">__global uchar * offset(const Image *img, int x, int y)</div><div class="ttdoc">Get the pointer position of a Image. </div><div class="ttdef"><b>Definition:</b> <a href="helpers_8h_source.xhtml#l00301">helpers.h:301</a></div></div>
</div><!-- fragment -->
<p>Definition at line <a class="el" href="sobel__filter_8cl_source.xhtml#l00392">392</a> of file <a class="el" href="sobel__filter_8cl_source.xhtml">sobel_filter.cl</a>.</p>

</div>
</div>
<a class="anchor" id="a7f602251e0a1f8710f8aab3aef09a36b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define SOBEL1x7</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">ptr, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">gx, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">gy&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line"><a class="code" href="sobel__filter_8cl.xhtml#ad40297671e8a51899c6114386492006b">SOBEL1x1_HOR</a>(ptr, gx, gy, 0)                     <a class="code" href="sobel__filter_8cl.xhtml#ad40297671e8a51899c6114386492006b">\</a></div><div class="line"><a class="code" href="sobel__filter_8cl.xhtml#ad40297671e8a51899c6114386492006b">    SOBEL1x1_HOR</a>(ptr, gx, gy, 1)                 <a class="code" href="sobel__filter_8cl.xhtml#ad40297671e8a51899c6114386492006b">\</a></div><div class="line"><a class="code" href="sobel__filter_8cl.xhtml#ad40297671e8a51899c6114386492006b">    SOBEL1x1_HOR</a>(ptr, gx, gy, 2)             <a class="code" href="sobel__filter_8cl.xhtml#ad40297671e8a51899c6114386492006b">\</a></div><div class="line"><a class="code" href="sobel__filter_8cl.xhtml#ad40297671e8a51899c6114386492006b">    SOBEL1x1_HOR</a>(ptr, gx, gy, 3)         <a class="code" href="sobel__filter_8cl.xhtml#ad40297671e8a51899c6114386492006b">\</a></div><div class="line"><a class="code" href="sobel__filter_8cl.xhtml#ad40297671e8a51899c6114386492006b">    SOBEL1x1_HOR</a>(ptr, gx, gy, 4)     <a class="code" href="sobel__filter_8cl.xhtml#ad40297671e8a51899c6114386492006b">\</a></div><div class="line"><a class="code" href="sobel__filter_8cl.xhtml#ad40297671e8a51899c6114386492006b">    SOBEL1x1_HOR</a>(ptr, gx, gy, 5) <a class="code" href="sobel__filter_8cl.xhtml#ad40297671e8a51899c6114386492006b">\</a></div><div class="line"><a class="code" href="sobel__filter_8cl.xhtml#ad40297671e8a51899c6114386492006b">    SOBEL1x1_HOR</a>(ptr, gx, gy, 6)</div><div class="ttc" id="sobel__filter_8cl_xhtml_ad40297671e8a51899c6114386492006b"><div class="ttname"><a href="sobel__filter_8cl.xhtml#ad40297671e8a51899c6114386492006b">SOBEL1x1_HOR</a></div><div class="ttdeci">#define SOBEL1x1_HOR(src, gx, gy, idx)</div><div class="ttdef"><b>Definition:</b> <a href="sobel__filter_8cl_source.xhtml#l00384">sobel_filter.cl:384</a></div></div>
</div><!-- fragment -->
<p>Definition at line <a class="el" href="sobel__filter_8cl_source.xhtml#l00399">399</a> of file <a class="el" href="sobel__filter_8cl_source.xhtml">sobel_filter.cl</a>.</p>

<p>Referenced by <a class="el" href="sobel__filter_8cl_source.xhtml#l00442">sobel_separable1x7()</a>.</p>

</div>
</div>
<a class="anchor" id="a59f291bf2b268f9b850fa81a3fbf776a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define SOBEL7x1</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">ptr, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">g, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">direction&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line"><a class="code" href="sobel__filter_8cl.xhtml#a400b86850d6a242a7f48804a097c6403">SOBEL1x1_VERT</a>(ptr, g, direction, 0)                     <a class="code" href="sobel__filter_8cl.xhtml#a400b86850d6a242a7f48804a097c6403">\</a></div><div class="line"><a class="code" href="sobel__filter_8cl.xhtml#a400b86850d6a242a7f48804a097c6403">    SOBEL1x1_VERT</a>(ptr, g, direction, 1)                 <a class="code" href="sobel__filter_8cl.xhtml#a400b86850d6a242a7f48804a097c6403">\</a></div><div class="line"><a class="code" href="sobel__filter_8cl.xhtml#a400b86850d6a242a7f48804a097c6403">    SOBEL1x1_VERT</a>(ptr, g, direction, 2)             <a class="code" href="sobel__filter_8cl.xhtml#a400b86850d6a242a7f48804a097c6403">\</a></div><div class="line"><a class="code" href="sobel__filter_8cl.xhtml#a400b86850d6a242a7f48804a097c6403">    SOBEL1x1_VERT</a>(ptr, g, direction, 3)         <a class="code" href="sobel__filter_8cl.xhtml#a400b86850d6a242a7f48804a097c6403">\</a></div><div class="line"><a class="code" href="sobel__filter_8cl.xhtml#a400b86850d6a242a7f48804a097c6403">    SOBEL1x1_VERT</a>(ptr, g, direction, 4)     <a class="code" href="sobel__filter_8cl.xhtml#a400b86850d6a242a7f48804a097c6403">\</a></div><div class="line"><a class="code" href="sobel__filter_8cl.xhtml#a400b86850d6a242a7f48804a097c6403">    SOBEL1x1_VERT</a>(ptr, g, direction, 5) <a class="code" href="sobel__filter_8cl.xhtml#a400b86850d6a242a7f48804a097c6403">\</a></div><div class="line"><a class="code" href="sobel__filter_8cl.xhtml#a400b86850d6a242a7f48804a097c6403">    SOBEL1x1_VERT</a>(ptr, g, direction, 6)</div><div class="ttc" id="sobel__filter_8cl_xhtml_a400b86850d6a242a7f48804a097c6403"><div class="ttname"><a href="sobel__filter_8cl.xhtml#a400b86850d6a242a7f48804a097c6403">SOBEL1x1_VERT</a></div><div class="ttdeci">#define SOBEL1x1_VERT(src, g, direction, idx)</div><div class="ttdef"><b>Definition:</b> <a href="sobel__filter_8cl_source.xhtml#l00392">sobel_filter.cl:392</a></div></div>
</div><!-- fragment -->
<p>Definition at line <a class="el" href="sobel__filter_8cl_source.xhtml#l00409">409</a> of file <a class="el" href="sobel__filter_8cl_source.xhtml">sobel_filter.cl</a>.</p>

<p>Referenced by <a class="el" href="sobel__filter_8cl_source.xhtml#l00506">sobel_separable7x1()</a>.</p>

</div>
</div>
<a class="anchor" id="a8476f4a8de2c191433342c9ce896986a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define X0&#160;&#160;&#160;-1</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="sobel__filter_8cl_source.xhtml#l00366">366</a> of file <a class="el" href="sobel__filter_8cl_source.xhtml">sobel_filter.cl</a>.</p>

</div>
</div>
<a class="anchor" id="a1964818ccd90a6173ea48cecb652feeb"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define X1&#160;&#160;&#160;-4</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="sobel__filter_8cl_source.xhtml#l00367">367</a> of file <a class="el" href="sobel__filter_8cl_source.xhtml">sobel_filter.cl</a>.</p>

</div>
</div>
<a class="anchor" id="a79ae03a0214cb30e57b9e8835f2a0019"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define X2&#160;&#160;&#160;-5</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="sobel__filter_8cl_source.xhtml#l00368">368</a> of file <a class="el" href="sobel__filter_8cl_source.xhtml">sobel_filter.cl</a>.</p>

</div>
</div>
<a class="anchor" id="adb6fd3d004959525c6a684b82ef50860"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define X3&#160;&#160;&#160;0</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="sobel__filter_8cl_source.xhtml#l00369">369</a> of file <a class="el" href="sobel__filter_8cl_source.xhtml">sobel_filter.cl</a>.</p>

</div>
</div>
<a class="anchor" id="a0f79fa7387c308a89a30682d905aa40a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define X4&#160;&#160;&#160;5</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="sobel__filter_8cl_source.xhtml#l00370">370</a> of file <a class="el" href="sobel__filter_8cl_source.xhtml">sobel_filter.cl</a>.</p>

</div>
</div>
<a class="anchor" id="a921884524c9038883b25f03d3bd1b078"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define X5&#160;&#160;&#160;4</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="sobel__filter_8cl_source.xhtml#l00371">371</a> of file <a class="el" href="sobel__filter_8cl_source.xhtml">sobel_filter.cl</a>.</p>

</div>
</div>
<a class="anchor" id="a0e11bba5150b8ae2a8831f6f4532e352"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define X6&#160;&#160;&#160;1</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="sobel__filter_8cl_source.xhtml#l00372">372</a> of file <a class="el" href="sobel__filter_8cl_source.xhtml">sobel_filter.cl</a>.</p>

</div>
</div>
<a class="anchor" id="a0b0dcdd1ffa302474e907d3d7ad9dbfe"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define Y0&#160;&#160;&#160;1</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="sobel__filter_8cl_source.xhtml#l00375">375</a> of file <a class="el" href="sobel__filter_8cl_source.xhtml">sobel_filter.cl</a>.</p>

</div>
</div>
<a class="anchor" id="a294189cdea31dda8faf609b9b3e2000a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define Y1&#160;&#160;&#160;6</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="sobel__filter_8cl_source.xhtml#l00376">376</a> of file <a class="el" href="sobel__filter_8cl_source.xhtml">sobel_filter.cl</a>.</p>

</div>
</div>
<a class="anchor" id="a3128cc29e366777d66d8b049451ca8a0"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define Y2&#160;&#160;&#160;15</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="sobel__filter_8cl_source.xhtml#l00377">377</a> of file <a class="el" href="sobel__filter_8cl_source.xhtml">sobel_filter.cl</a>.</p>

</div>
</div>
<a class="anchor" id="a676acf01638364a90adf5d09d2a215bf"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define Y3&#160;&#160;&#160;20</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="sobel__filter_8cl_source.xhtml#l00378">378</a> of file <a class="el" href="sobel__filter_8cl_source.xhtml">sobel_filter.cl</a>.</p>

</div>
</div>
<a class="anchor" id="a5a8e903c2373c4d65724c79cdea8b3d9"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define Y4&#160;&#160;&#160;15</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="sobel__filter_8cl_source.xhtml#l00379">379</a> of file <a class="el" href="sobel__filter_8cl_source.xhtml">sobel_filter.cl</a>.</p>

</div>
</div>
<a class="anchor" id="a770267173956bf918cf3ca1247b6de12"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define Y5&#160;&#160;&#160;6</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="sobel__filter_8cl_source.xhtml#l00380">380</a> of file <a class="el" href="sobel__filter_8cl_source.xhtml">sobel_filter.cl</a>.</p>

</div>
</div>
<a class="anchor" id="abcdba0de8723fe6f2d2eb284d7e98a41"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define Y6&#160;&#160;&#160;1</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="sobel__filter_8cl_source.xhtml#l00381">381</a> of file <a class="el" href="sobel__filter_8cl_source.xhtml">sobel_filter.cl</a>.</p>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="a4fac2cb52458aa4666af5b521d2a3910"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">short16 sobel1x5 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_image.xhtml">Image</a> *&#160;</td>
          <td class="paramname"><em>src</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>left1_coeff_gx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>left2_coeff_gx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>middle_coeff_gx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>right1_coeff_gx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>right2_coeff_gx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>left1_coeff_gy</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>left2_coeff_gy</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>middle_coeff_gy</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>right1_coeff_gy</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>right2_coeff_gy</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Compute a 1D horizontal sobel filter 1x5 for 8 bytes assuming the input is made of 1 channel of 1 byte (i.e 8 pixels). </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">src</td><td>Pointer to source image. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">left1_coeff_gx</td><td>Weight of the most left pixel for gx </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">left2_coeff_gx</td><td>Weight of the left pixel for gx </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">middle_coeff_gx</td><td>Weight of the middle pixel for gx </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">right1_coeff_gx</td><td>Weight of the right pixel for gx </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">right2_coeff_gx</td><td>Weight of the most right pixel for gx </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">left1_coeff_gy</td><td>Weight of the most left pixel for gy </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">left2_coeff_gy</td><td>Weight of the left pixel for gy </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">middle_coeff_gy</td><td>Weight of the middle pixel for gy </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">right1_coeff_gy</td><td>Weight of the right pixel for gy </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">right2_coeff_gy</td><td>Weight of the most right pixel for gy</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>a short16 containing short8 gx and short8 gy values. </dd></dl>

<p>Definition at line <a class="el" href="sobel__filter_8cl_source.xhtml#l00154">154</a> of file <a class="el" href="sobel__filter_8cl_source.xhtml">sobel_filter.cl</a>.</p>

<p>References <a class="el" href="helpers_8h_source.xhtml#l00301">offset()</a>.</p>

<p>Referenced by <a class="el" href="sobel__filter_8cl_source.xhtml#l00259">sobel_separable1x5()</a>.</p>
<div class="fragment"><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;{</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    uchar16 temp = vload16(0, <a class="code" href="helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>(src, -2, 0));</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    short8  gx   = 0;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    short8  gy   = 0;</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    short8  val;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    val = convert_short8(temp.s01234567);</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    gx += val * (short8)left1_coeff_gx;</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    gy += val * (short8)left1_coeff_gy;</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    val = convert_short8(temp.s12345678);</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    gx += val * (short8)left2_coeff_gx;</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    gy += val * (short8)left2_coeff_gy;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    val = convert_short8(temp.s23456789);</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    gx += val * (short8)middle_coeff_gx;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    gy += val * (short8)middle_coeff_gy;</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    val = convert_short8(temp.s3456789a);</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    gx += val * (short8)right1_coeff_gx;</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    gy += val * (short8)right1_coeff_gy;</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    val = convert_short8(temp.s456789ab);</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    gx += val * (short8)right2_coeff_gx;</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    gy += val * (short8)right2_coeff_gy;</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    <span class="keywordflow">return</span> (short16)(gx, gy);</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;}</div><div class="ttc" id="helpers_8h_xhtml_a009469e4d9b8fce3b6d5e97d2077827d"><div class="ttname"><a href="helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a></div><div class="ttdeci">__global uchar * offset(const Image *img, int x, int y)</div><div class="ttdoc">Get the pointer position of a Image. </div><div class="ttdef"><b>Definition:</b> <a href="helpers_8h_source.xhtml#l00301">helpers.h:301</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ad48e3b9dda20b039199eaea842350975"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__kernel void sobel3x3 </td>
          <td>(</td>
          <td class="paramtype">__global uchar *&#160;</td>
          <td class="paramname"><em>src_ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>src_stride_x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>src_step_x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>src_stride_y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>src_step_y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>src_offset_first_element_in_bytes</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">__global uchar *&#160;</td>
          <td class="paramname"><em>dst_gx_ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>dst_gx_stride_x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>dst_gx_step_x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>dst_gx_stride_y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>dst_gx_step_y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>dst_gx_offset_first_element_in_bytes</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">__global uchar *&#160;</td>
          <td class="paramname"><em>dst_gy_ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>dst_gy_stride_x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>dst_gy_step_x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>dst_gy_stride_y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>dst_gy_step_y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>dst_gy_offset_first_element_in_bytes</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This OpenCL kernel that computes a Sobel3x3 filter. </p>
<dl class="section attention"><dt>Attention</dt><dd>To enable computation of the X gradient -DGRAD_X must be passed at compile time, while computation of the Y gradient is performed when -DGRAD_Y is used. You can use both when computation of both gradients is required.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">src_ptr</td><td>Pointer to the source image. Supported data types: U8 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">src_stride_x</td><td>Stride of the source image in X dimension (in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">src_step_x</td><td>src_stride_x * number of elements along X processed per workitem(in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">src_stride_y</td><td>Stride of the source image in Y dimension (in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">src_step_y</td><td>src_stride_y * number of elements along Y processed per workitem(in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">src_offset_first_element_in_bytes</td><td>The offset of the first element in the source image </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">dst_gx_ptr</td><td>Pointer to the destination image. Supported data types: S16 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dst_gx_stride_x</td><td>Stride of the destination image in X dimension (in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dst_gx_step_x</td><td>dst_gx_stride_x * number of elements along X processed per workitem(in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dst_gx_stride_y</td><td>Stride of the destination image in Y dimension (in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dst_gx_step_y</td><td>dst_gx_stride_y * number of elements along Y processed per workitem(in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dst_gx_offset_first_element_in_bytes</td><td>The offset of the first element in the destination image </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">dst_gy_ptr</td><td>Pointer to the destination image. Supported data types: S16 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dst_gy_stride_x</td><td>Stride of the destination image in X dimension (in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dst_gy_step_x</td><td>dst_gy_stride_x * number of elements along X processed per workitem(in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dst_gy_stride_y</td><td>Stride of the destination image in Y dimension (in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dst_gy_step_y</td><td>dst_gy_stride_y * number of elements along Y processed per workitem(in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dst_gy_offset_first_element_in_bytes</td><td>The offset of the first element in the destination image </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="sobel__filter_8cl_source.xhtml#l00054">54</a> of file <a class="el" href="sobel__filter_8cl_source.xhtml">sobel_filter.cl</a>.</p>

<p>References <a class="el" href="helpers_8h_source.xhtml#l00102">CONVERT_TO_IMAGE_STRUCT</a>, <a class="el" href="helpers_8h_source.xhtml#l00301">offset()</a>, and <a class="el" href="helpers_8h_source.xhtml#l00142">Image::ptr</a>.</p>
<div class="fragment"><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;{</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <a class="code" href="struct_image.xhtml">Image</a> src = <a class="code" href="helpers_8h.xhtml#aebe814363556c244be043b13e7969197">CONVERT_TO_IMAGE_STRUCT</a>(src);</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="preprocessor">#ifdef GRAD_X</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <a class="code" href="struct_image.xhtml">Image</a> dst_gx = <a class="code" href="helpers_8h.xhtml#aebe814363556c244be043b13e7969197">CONVERT_TO_IMAGE_STRUCT</a>(dst_gx);</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* GRAD_X */</span><span class="preprocessor"></span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="preprocessor">#ifdef GRAD_Y</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <a class="code" href="struct_image.xhtml">Image</a> dst_gy = <a class="code" href="helpers_8h.xhtml#aebe814363556c244be043b13e7969197">CONVERT_TO_IMAGE_STRUCT</a>(dst_gy);</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* GRAD_Y */</span><span class="preprocessor"></span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="comment">// Output pixels</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="preprocessor">#ifdef GRAD_X</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    short8 gx = (short8)0;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* GRAD_X */</span><span class="preprocessor"></span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="preprocessor">#ifdef GRAD_Y</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    short8 gy = (short8)0;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* GRAD_Y */</span><span class="preprocessor"></span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <span class="comment">// Row0</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    uchar16 temp   = vload16(0, <a class="code" href="helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>(&amp;src, -1, -1));</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    short8  left   = convert_short8(temp.s01234567);</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    short8  middle = convert_short8(temp.s12345678);</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    short8  right  = convert_short8(temp.s23456789);</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="preprocessor">#ifdef GRAD_X</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    gx += left * (short8)(-1);</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    gx += right * (short8)(+1);</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* GRAD_X */</span><span class="preprocessor"></span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="preprocessor">#ifdef GRAD_Y</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    gy += left * (short8)(-1);</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    gy += middle * (short8)(-2);</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    gy += right * (short8)(-1);</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* GRAD_Y */</span><span class="preprocessor"></span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <span class="comment">// Row1</span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    temp  = vload16(0, <a class="code" href="helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>(&amp;src, -1, 0));</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    left  = convert_short8(temp.s01234567);</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    right = convert_short8(temp.s23456789);</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="preprocessor">#ifdef GRAD_X</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    gx += left * (short8)(-2);</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    gx += right * (short8)(+2);</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* GRAD_X */</span><span class="preprocessor"></span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <span class="comment">// Row2</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    temp   = vload16(0, <a class="code" href="helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>(&amp;src, -1, 1));</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    left   = convert_short8(temp.s01234567);</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    middle = convert_short8(temp.s12345678);</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    right  = convert_short8(temp.s23456789);</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="preprocessor">#ifdef GRAD_X</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    gx += left * (short8)(-1);</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    gx += right * (short8)(+1);</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* GRAD_X */</span><span class="preprocessor"></span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="preprocessor">#ifdef GRAD_Y</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    gy += left * (short8)(+1);</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    gy += middle * (short8)(+2);</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    gy += right * (short8)(+1);</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* GRAD_Y */</span><span class="preprocessor"></span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <span class="comment">// Store results</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="preprocessor">#ifdef GRAD_X</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    vstore8(gx, 0, ((__global <span class="keywordtype">short</span> *)dst_gx.<a class="code" href="struct_image.xhtml#acf52c23cbd7424606c10a606524e3e32">ptr</a>));</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* GRAD_X */</span><span class="preprocessor"></span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="preprocessor">#ifdef GRAD_Y</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    vstore8(gy, 0, ((__global <span class="keywordtype">short</span> *)dst_gy.<a class="code" href="struct_image.xhtml#acf52c23cbd7424606c10a606524e3e32">ptr</a>));</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* GRAD_Y */</span><span class="preprocessor"></span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;}</div><div class="ttc" id="helpers_8h_xhtml_a009469e4d9b8fce3b6d5e97d2077827d"><div class="ttname"><a href="helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a></div><div class="ttdeci">__global uchar * offset(const Image *img, int x, int y)</div><div class="ttdoc">Get the pointer position of a Image. </div><div class="ttdef"><b>Definition:</b> <a href="helpers_8h_source.xhtml#l00301">helpers.h:301</a></div></div>
<div class="ttc" id="helpers_8h_xhtml_aebe814363556c244be043b13e7969197"><div class="ttname"><a href="helpers_8h.xhtml#aebe814363556c244be043b13e7969197">CONVERT_TO_IMAGE_STRUCT</a></div><div class="ttdeci">#define CONVERT_TO_IMAGE_STRUCT(name)</div><div class="ttdef"><b>Definition:</b> <a href="helpers_8h_source.xhtml#l00102">helpers.h:102</a></div></div>
<div class="ttc" id="struct_image_xhtml"><div class="ttname"><a href="struct_image.xhtml">Image</a></div><div class="ttdoc">Structure to hold Image information. </div><div class="ttdef"><b>Definition:</b> <a href="helpers_8h_source.xhtml#l00140">helpers.h:140</a></div></div>
<div class="ttc" id="struct_image_xhtml_acf52c23cbd7424606c10a606524e3e32"><div class="ttname"><a href="struct_image.xhtml#acf52c23cbd7424606c10a606524e3e32">Image::ptr</a></div><div class="ttdeci">__global uchar * ptr</div><div class="ttdoc">Pointer to the starting postion of the buffer. </div><div class="ttdef"><b>Definition:</b> <a href="helpers_8h_source.xhtml#l00142">helpers.h:142</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a1cfe58175749124762fe0dea315d3c21"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">short8 sobel5x1 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_image.xhtml">Image</a> *&#160;</td>
          <td class="paramname"><em>src</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>up1_coeff</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>up2_coeff</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>middle_coeff</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>down1_coeff</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short&#160;</td>
          <td class="paramname"><em>down2_coeff</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Compute a 1D vertical sobel filter 5x1 for 8 bytes assuming the input is made of 1 channel of 1 byte (i.e 8 pixels). </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">src</td><td>Pointer to source image. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">up1_coeff</td><td>Weight of the most up pixel </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">up2_coeff</td><td>Weight of the up pixel </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">middle_coeff</td><td>Weight of the middle pixel </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">down1_coeff</td><td>Weight of the down pixel </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">down2_coeff</td><td>Weight of the most down pixel</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>a short8 containing 8 convoluted values. </dd></dl>

<p>Definition at line <a class="el" href="sobel__filter_8cl_source.xhtml#l00206">206</a> of file <a class="el" href="sobel__filter_8cl_source.xhtml">sobel_filter.cl</a>.</p>

<p>References <a class="el" href="helpers_8h_source.xhtml#l00301">offset()</a>.</p>

<p>Referenced by <a class="el" href="sobel__filter_8cl_source.xhtml#l00325">sobel_separable5x1()</a>.</p>
<div class="fragment"><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;{</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    short8 val;</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    short8 out = (short8)0;</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    val = vload8(0, (__global <span class="keywordtype">short</span> *)<a class="code" href="helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>(src, 0, -2));</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    out += val * (short8)up1_coeff;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    val = vload8(0, (__global <span class="keywordtype">short</span> *)<a class="code" href="helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>(src, 0, -1));</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    out += val * (short8)up2_coeff;</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;    val = vload8(0, (__global <span class="keywordtype">short</span> *)<a class="code" href="helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>(src, 0, 0));</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    out += val * (short8)middle_coeff;</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    val = vload8(0, (__global <span class="keywordtype">short</span> *)<a class="code" href="helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>(src, 0, 1));</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    out += val * (short8)down1_coeff;</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    val = vload8(0, (__global <span class="keywordtype">short</span> *)<a class="code" href="helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>(src, 0, 2));</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    out += val * (short8)down2_coeff;</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;    <span class="keywordflow">return</span> (short8)(out);</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;}</div><div class="ttc" id="helpers_8h_xhtml_a009469e4d9b8fce3b6d5e97d2077827d"><div class="ttname"><a href="helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a></div><div class="ttdeci">__global uchar * offset(const Image *img, int x, int y)</div><div class="ttdoc">Get the pointer position of a Image. </div><div class="ttdef"><b>Definition:</b> <a href="helpers_8h_source.xhtml#l00301">helpers.h:301</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a7a74e414f0e90638939a7a0506576625"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__kernel void sobel_separable1x5 </td>
          <td>(</td>
          <td class="paramtype">__global uchar *&#160;</td>
          <td class="paramname"><em>src_ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>src_stride_x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>src_step_x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>src_stride_y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>src_step_y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>src_offset_first_element_in_bytes</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">__global uchar *&#160;</td>
          <td class="paramname"><em>dst_gx_ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>dst_gx_stride_x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>dst_gx_step_x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>dst_gx_stride_y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>dst_gx_step_y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>dst_gx_offset_first_element_in_bytes</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">__global uchar *&#160;</td>
          <td class="paramname"><em>dst_gy_ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>dst_gy_stride_x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>dst_gy_step_x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>dst_gy_stride_y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>dst_gy_step_y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>dst_gy_offset_first_element_in_bytes</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Apply a 1x5 sobel matrix to a single channel U8 input image and output two temporary channel S16 images. </p>
<dl class="section attention"><dt>Attention</dt><dd>To enable computation of the X gradient -DGRAD_X must be passed at compile time, while computation of the Y gradient is performed when -DGRAD_Y is used. You can use both when computation of both gradients is required.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">src_ptr</td><td>Pointer to the source image.. Supported data types: U8 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">src_stride_x</td><td>Stride of the source image in X dimension (in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">src_step_x</td><td>src_stride_x * number of elements along X processed per workitem(in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">src_stride_y</td><td>Stride of the source image in Y dimension (in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">src_step_y</td><td>src_stride_y * number of elements along Y processed per workitem(in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">src_offset_first_element_in_bytes</td><td>The offset of the first element in the source image </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">dst_gx_ptr</td><td>Pointer to the destination image.. Supported data types: S16 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dst_gx_stride_x</td><td>Stride of the destination image in X dimension (in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dst_gx_step_x</td><td>dst_gx_stride_x * number of elements along X processed per workitem(in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dst_gx_stride_y</td><td>Stride of the destination image in Y dimension (in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dst_gx_step_y</td><td>dst_gx_stride_y * number of elements along Y processed per workitem(in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dst_gx_offset_first_element_in_bytes</td><td>The offset of the first element in the destination image </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">dst_gy_ptr</td><td>Pointer to the destination image. Supported data types: S16 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dst_gy_stride_x</td><td>Stride of the destination image in X dimension (in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dst_gy_step_x</td><td>dst_gy_stride_x * number of elements along X processed per workitem(in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dst_gy_stride_y</td><td>Stride of the destination image in Y dimension (in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dst_gy_step_y</td><td>dst_gy_stride_y * number of elements along Y processed per workitem(in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dst_gy_offset_first_element_in_bytes</td><td>The offset of the first element in the destination image </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="sobel__filter_8cl_source.xhtml#l00259">259</a> of file <a class="el" href="sobel__filter_8cl_source.xhtml">sobel_filter.cl</a>.</p>

<p>References <a class="el" href="helpers_8h_source.xhtml#l00102">CONVERT_TO_IMAGE_STRUCT</a>, <a class="el" href="helpers_8h_source.xhtml#l00142">Image::ptr</a>, and <a class="el" href="sobel__filter_8cl_source.xhtml#l00154">sobel1x5()</a>.</p>
<div class="fragment"><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;{</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;    <a class="code" href="struct_image.xhtml">Image</a> src = <a class="code" href="helpers_8h.xhtml#aebe814363556c244be043b13e7969197">CONVERT_TO_IMAGE_STRUCT</a>(src);</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;<span class="preprocessor">#ifdef GRAD_X</span></div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;    <a class="code" href="struct_image.xhtml">Image</a> dst_gx = <a class="code" href="helpers_8h.xhtml#aebe814363556c244be043b13e7969197">CONVERT_TO_IMAGE_STRUCT</a>(dst_gx);</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* GRAD_X */</span><span class="preprocessor"></span></div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;<span class="preprocessor">#ifdef GRAD_Y</span></div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;    <a class="code" href="struct_image.xhtml">Image</a> dst_gy = <a class="code" href="helpers_8h.xhtml#aebe814363556c244be043b13e7969197">CONVERT_TO_IMAGE_STRUCT</a>(dst_gy);</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* GRAD_Y */</span><span class="preprocessor"></span></div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    <span class="comment">// Output pixels</span></div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;    short16 gx_gy = <a class="code" href="sobel__filter_8cl.xhtml#a4fac2cb52458aa4666af5b521d2a3910">sobel1x5</a>(&amp;src,</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;                             -1, -2, 0, 2, 1,</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;                             1, 4, 6, 4, 1);</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    <span class="comment">// Store result in dst</span></div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;<span class="preprocessor">#ifdef GRAD_X</span></div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;    vstore8(gx_gy.s01234567, 0, ((__global <span class="keywordtype">short</span> *)dst_gx.<a class="code" href="struct_image.xhtml#acf52c23cbd7424606c10a606524e3e32">ptr</a>));</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* GRAD_X */</span><span class="preprocessor"></span></div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;<span class="preprocessor">#ifdef GRAD_Y</span></div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;    vstore8(gx_gy.s89ABCDEF, 0, ((__global <span class="keywordtype">short</span> *)dst_gy.<a class="code" href="struct_image.xhtml#acf52c23cbd7424606c10a606524e3e32">ptr</a>));</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* GRAD_Y */</span><span class="preprocessor"></span></div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;}</div><div class="ttc" id="helpers_8h_xhtml_aebe814363556c244be043b13e7969197"><div class="ttname"><a href="helpers_8h.xhtml#aebe814363556c244be043b13e7969197">CONVERT_TO_IMAGE_STRUCT</a></div><div class="ttdeci">#define CONVERT_TO_IMAGE_STRUCT(name)</div><div class="ttdef"><b>Definition:</b> <a href="helpers_8h_source.xhtml#l00102">helpers.h:102</a></div></div>
<div class="ttc" id="struct_image_xhtml"><div class="ttname"><a href="struct_image.xhtml">Image</a></div><div class="ttdoc">Structure to hold Image information. </div><div class="ttdef"><b>Definition:</b> <a href="helpers_8h_source.xhtml#l00140">helpers.h:140</a></div></div>
<div class="ttc" id="struct_image_xhtml_acf52c23cbd7424606c10a606524e3e32"><div class="ttname"><a href="struct_image.xhtml#acf52c23cbd7424606c10a606524e3e32">Image::ptr</a></div><div class="ttdeci">__global uchar * ptr</div><div class="ttdoc">Pointer to the starting postion of the buffer. </div><div class="ttdef"><b>Definition:</b> <a href="helpers_8h_source.xhtml#l00142">helpers.h:142</a></div></div>
<div class="ttc" id="sobel__filter_8cl_xhtml_a4fac2cb52458aa4666af5b521d2a3910"><div class="ttname"><a href="sobel__filter_8cl.xhtml#a4fac2cb52458aa4666af5b521d2a3910">sobel1x5</a></div><div class="ttdeci">short16 sobel1x5(Image *src, const short left1_coeff_gx, const short left2_coeff_gx, const short middle_coeff_gx, const short right1_coeff_gx, const short right2_coeff_gx, const short left1_coeff_gy, const short left2_coeff_gy, const short middle_coeff_gy, const short right1_coeff_gy, const short right2_coeff_gy)</div><div class="ttdoc">Compute a 1D horizontal sobel filter 1x5 for 8 bytes assuming the input is made of 1 channel of 1 byt...</div><div class="ttdef"><b>Definition:</b> <a href="sobel__filter_8cl_source.xhtml#l00154">sobel_filter.cl:154</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ad8be5e69836ab70ac229279a7d7edaf7"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__kernel void sobel_separable1x7 </td>
          <td>(</td>
          <td class="paramtype">__global uchar *&#160;</td>
          <td class="paramname"><em>src_ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>src_stride_x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>src_step_x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>src_stride_y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>src_step_y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>src_offset_first_element_in_bytes</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">__global uchar *&#160;</td>
          <td class="paramname"><em>dst_gx_ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>dst_gx_stride_x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>dst_gx_step_x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>dst_gx_stride_y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>dst_gx_step_y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>dst_gx_offset_first_element_in_bytes</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">__global uchar *&#160;</td>
          <td class="paramname"><em>dst_gy_ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>dst_gy_stride_x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>dst_gy_step_x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>dst_gy_stride_y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>dst_gy_step_y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>dst_gy_offset_first_element_in_bytes</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Apply a 1x7 sobel matrix to a single channel U8 input image and output two temporary channel S16 images and leave the borders undefined. </p>
<dl class="section attention"><dt>Attention</dt><dd>To enable computation of the X gradient -DGRAD_X must be passed at compile time, while computation of the Y gradient is performed when -DGRAD_Y is used. You can use both when computation of both gradients is required.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">src_ptr</td><td>Pointer to the source image. Supported data types: U8 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">src_stride_x</td><td>Stride of the source image in X dimension (in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">src_step_x</td><td>src_stride_x * number of elements along X processed per workitem(in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">src_stride_y</td><td>Stride of the source image in Y dimension (in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">src_step_y</td><td>src_stride_y * number of elements along Y processed per workitem(in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">src_offset_first_element_in_bytes</td><td>The offset of the first element in the source image </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">dst_gx_ptr</td><td>Pointer to the destination image. Supported data types: S32 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dst_gx_stride_x</td><td>Stride of the destination image in X dimension (in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dst_gx_step_x</td><td>dst_gx_stride_x * number of elements along X processed per workitem(in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dst_gx_stride_y</td><td>Stride of the destination image in Y dimension (in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dst_gx_step_y</td><td>dst_gx_stride_y * number of elements along Y processed per workitem(in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dst_gx_offset_first_element_in_bytes</td><td>The offset of the first element in the destination image </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">dst_gy_ptr</td><td>Pointer to the destination image. Supported data types: S32 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dst_gy_stride_x</td><td>Stride of the destination image in X dimension (in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dst_gy_step_x</td><td>dst_gy_stride_x * number of elements along X processed per workitem(in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dst_gy_stride_y</td><td>Stride of the destination image in Y dimension (in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dst_gy_step_y</td><td>dst_gy_stride_y * number of elements along Y processed per workitem(in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dst_gy_offset_first_element_in_bytes</td><td>The offset of the first element in the destination image </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="sobel__filter_8cl_source.xhtml#l00442">442</a> of file <a class="el" href="sobel__filter_8cl_source.xhtml">sobel_filter.cl</a>.</p>

<p>References <a class="el" href="helpers_8h_source.xhtml#l00102">CONVERT_TO_IMAGE_STRUCT</a>, <a class="el" href="helpers_8h_source.xhtml#l00142">Image::ptr</a>, and <a class="el" href="sobel__filter_8cl_source.xhtml#l00399">SOBEL1x7</a>.</p>
<div class="fragment"><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;{</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;    <a class="code" href="struct_image.xhtml">Image</a> src = <a class="code" href="helpers_8h.xhtml#aebe814363556c244be043b13e7969197">CONVERT_TO_IMAGE_STRUCT</a>(src);</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;<span class="preprocessor">#ifdef GRAD_X</span></div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;    <a class="code" href="struct_image.xhtml">Image</a> dst_gx = <a class="code" href="helpers_8h.xhtml#aebe814363556c244be043b13e7969197">CONVERT_TO_IMAGE_STRUCT</a>(dst_gx);</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* GRAD_X */</span><span class="preprocessor"></span></div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;<span class="preprocessor">#ifdef GRAD_Y</span></div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;    <a class="code" href="struct_image.xhtml">Image</a> dst_gy = <a class="code" href="helpers_8h.xhtml#aebe814363556c244be043b13e7969197">CONVERT_TO_IMAGE_STRUCT</a>(dst_gy);</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* GRAD_Y */</span><span class="preprocessor"></span></div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;    int8 gx = (int8)0;</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;    int8 gy = (int8)0;</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;    <a class="code" href="sobel__filter_8cl.xhtml#a7f602251e0a1f8710f8aab3aef09a36b">SOBEL1x7</a>(&amp;src, gx, gy);</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;    <span class="comment">// Store result in dst</span></div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;<span class="preprocessor">#ifdef GRAD_X</span></div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;    vstore8(gx, 0, ((__global <span class="keywordtype">int</span> *)dst_gx.<a class="code" href="struct_image.xhtml#acf52c23cbd7424606c10a606524e3e32">ptr</a>));</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* GRAD_X */</span><span class="preprocessor"></span></div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;<span class="preprocessor">#ifdef GRAD_Y</span></div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;    vstore8(gy, 0, ((__global <span class="keywordtype">int</span> *)dst_gy.<a class="code" href="struct_image.xhtml#acf52c23cbd7424606c10a606524e3e32">ptr</a>));</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* GRAD_Y */</span><span class="preprocessor"></span></div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;}</div><div class="ttc" id="helpers_8h_xhtml_aebe814363556c244be043b13e7969197"><div class="ttname"><a href="helpers_8h.xhtml#aebe814363556c244be043b13e7969197">CONVERT_TO_IMAGE_STRUCT</a></div><div class="ttdeci">#define CONVERT_TO_IMAGE_STRUCT(name)</div><div class="ttdef"><b>Definition:</b> <a href="helpers_8h_source.xhtml#l00102">helpers.h:102</a></div></div>
<div class="ttc" id="sobel__filter_8cl_xhtml_a7f602251e0a1f8710f8aab3aef09a36b"><div class="ttname"><a href="sobel__filter_8cl.xhtml#a7f602251e0a1f8710f8aab3aef09a36b">SOBEL1x7</a></div><div class="ttdeci">#define SOBEL1x7(ptr, gx, gy)</div><div class="ttdef"><b>Definition:</b> <a href="sobel__filter_8cl_source.xhtml#l00399">sobel_filter.cl:399</a></div></div>
<div class="ttc" id="struct_image_xhtml"><div class="ttname"><a href="struct_image.xhtml">Image</a></div><div class="ttdoc">Structure to hold Image information. </div><div class="ttdef"><b>Definition:</b> <a href="helpers_8h_source.xhtml#l00140">helpers.h:140</a></div></div>
<div class="ttc" id="struct_image_xhtml_acf52c23cbd7424606c10a606524e3e32"><div class="ttname"><a href="struct_image.xhtml#acf52c23cbd7424606c10a606524e3e32">Image::ptr</a></div><div class="ttdeci">__global uchar * ptr</div><div class="ttdoc">Pointer to the starting postion of the buffer. </div><div class="ttdef"><b>Definition:</b> <a href="helpers_8h_source.xhtml#l00142">helpers.h:142</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a2cc1fcdd12f2c3cdd31b83fd59597e40"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__kernel void sobel_separable5x1 </td>
          <td>(</td>
          <td class="paramtype">__global uchar *&#160;</td>
          <td class="paramname"><em>src_x_ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>src_x_stride_x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>src_x_step_x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>src_x_stride_y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>src_x_step_y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>src_x_offset_first_element_in_bytes</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">__global uchar *&#160;</td>
          <td class="paramname"><em>dst_gx_ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>dst_gx_stride_x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>dst_gx_step_x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>dst_gx_stride_y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>dst_gx_step_y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>dst_gx_offset_first_element_in_bytes</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">__global uchar *&#160;</td>
          <td class="paramname"><em>src_y_ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>src_y_stride_x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>src_y_step_x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>src_y_stride_y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>src_y_step_y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>src_y_offset_first_element_in_bytes</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">__global uchar *&#160;</td>
          <td class="paramname"><em>dst_gy_ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>dst_gy_stride_x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>dst_gy_step_x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>dst_gy_stride_y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>dst_gy_step_y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>dst_gy_offset_first_element_in_bytes</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>dummy</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Apply a 5x1 convolution matrix to two single channel S16 input temporary images and output two single channel S16 images. </p>
<dl class="section attention"><dt>Attention</dt><dd>To enable computation of the X gradient -DGRAD_X must be passed at compile time, while computation of the Y gradient is performed when -DGRAD_Y is used. You can use both when computation of both gradients is required.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">src_x_ptr</td><td>Pointer to the source image.. Supported data types: S16 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">src_x_stride_x</td><td>Stride of the source image in X dimension (in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">src_x_step_x</td><td>src_x_stride_x * number of elements along X processed per workitem(in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">src_x_stride_y</td><td>Stride of the source image in Y dimension (in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">src_x_step_y</td><td>src_x_stride_y * number of elements along Y processed per workitem(in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">src_x_offset_first_element_in_bytes</td><td>The offset of the first element in the source image </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">dst_gx_ptr</td><td>Pointer to the destination image. Supported data types: S16 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dst_gx_stride_x</td><td>Stride of the destination image in X dimension (in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dst_gx_step_x</td><td>dst_gx_stride_x * number of elements along X processed per workitem(in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dst_gx_stride_y</td><td>Stride of the destination image in Y dimension (in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dst_gx_step_y</td><td>dst_gx_stride_y * number of elements along Y processed per workitem(in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dst_gx_offset_first_element_in_bytes</td><td>The offset of the first element in the destination image </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">src_y_ptr</td><td>Pointer to the source image. Supported data types: S16 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">src_y_stride_x</td><td>Stride of the source image in X dimension (in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">src_y_step_x</td><td>src_y_stride_x * number of elements along X processed per workitem(in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">src_y_stride_y</td><td>Stride of the source image in Y dimension (in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">src_y_step_y</td><td>src_y_stride_y * number of elements along Y processed per workitem(in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">src_y_offset_first_element_in_bytes</td><td>The offset of the first element in the source image </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">dst_gy_ptr</td><td>Pointer to the destination image. Supported data types: S16 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dst_gy_stride_x</td><td>Stride of the destination image in X dimension (in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dst_gy_step_x</td><td>dst_gy_stride_x * number of elements along X processed per workitem(in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dst_gy_stride_y</td><td>Stride of the destination image in Y dimension (in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dst_gy_step_y</td><td>dst_gy_stride_y * number of elements along Y processed per workitem(in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dst_gy_offset_first_element_in_bytes</td><td>The offset of the first element in the destination image </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dummy</td><td>Dummy parameter to easy conditional inclusion </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="sobel__filter_8cl_source.xhtml#l00325">325</a> of file <a class="el" href="sobel__filter_8cl_source.xhtml">sobel_filter.cl</a>.</p>

<p>References <a class="el" href="helpers_8h_source.xhtml#l00102">CONVERT_TO_IMAGE_STRUCT</a>, <a class="el" href="helpers_8h_source.xhtml#l00142">Image::ptr</a>, and <a class="el" href="sobel__filter_8cl_source.xhtml#l00206">sobel5x1()</a>.</p>
<div class="fragment"><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;{</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;<span class="preprocessor">#ifdef GRAD_X</span></div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;    <a class="code" href="struct_image.xhtml">Image</a> src_x  = <a class="code" href="helpers_8h.xhtml#aebe814363556c244be043b13e7969197">CONVERT_TO_IMAGE_STRUCT</a>(src_x);</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;    <a class="code" href="struct_image.xhtml">Image</a> dst_gx = <a class="code" href="helpers_8h.xhtml#aebe814363556c244be043b13e7969197">CONVERT_TO_IMAGE_STRUCT</a>(dst_gx);</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* GRAD_X */</span><span class="preprocessor"></span></div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;<span class="preprocessor">#ifdef GRAD_Y</span></div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;    <a class="code" href="struct_image.xhtml">Image</a> src_y  = <a class="code" href="helpers_8h.xhtml#aebe814363556c244be043b13e7969197">CONVERT_TO_IMAGE_STRUCT</a>(src_y);</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;    <a class="code" href="struct_image.xhtml">Image</a> dst_gy = <a class="code" href="helpers_8h.xhtml#aebe814363556c244be043b13e7969197">CONVERT_TO_IMAGE_STRUCT</a>(dst_gy);</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* GRAD_Y */</span><span class="preprocessor"></span></div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;<span class="preprocessor">#ifdef GRAD_X</span></div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;    short8 gx = <a class="code" href="sobel__filter_8cl.xhtml#a1cfe58175749124762fe0dea315d3c21">sobel5x1</a>(&amp;src_x,</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;                         1, 4, 6, 4, 1);</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;    vstore8(gx, 0, ((__global <span class="keywordtype">short</span> *)dst_gx.<a class="code" href="struct_image.xhtml#acf52c23cbd7424606c10a606524e3e32">ptr</a>));</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* GRAD_X */</span><span class="preprocessor"></span></div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;<span class="preprocessor">#ifdef GRAD_Y</span></div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;    short8 gy = <a class="code" href="sobel__filter_8cl.xhtml#a1cfe58175749124762fe0dea315d3c21">sobel5x1</a>(&amp;src_y,</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;                         -1, -2, 0, 2, 1);</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;    vstore8(gy, 0, ((__global <span class="keywordtype">short</span> *)dst_gy.<a class="code" href="struct_image.xhtml#acf52c23cbd7424606c10a606524e3e32">ptr</a>));</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* GRAD_Y */</span><span class="preprocessor"></span></div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;}</div><div class="ttc" id="helpers_8h_xhtml_aebe814363556c244be043b13e7969197"><div class="ttname"><a href="helpers_8h.xhtml#aebe814363556c244be043b13e7969197">CONVERT_TO_IMAGE_STRUCT</a></div><div class="ttdeci">#define CONVERT_TO_IMAGE_STRUCT(name)</div><div class="ttdef"><b>Definition:</b> <a href="helpers_8h_source.xhtml#l00102">helpers.h:102</a></div></div>
<div class="ttc" id="struct_image_xhtml"><div class="ttname"><a href="struct_image.xhtml">Image</a></div><div class="ttdoc">Structure to hold Image information. </div><div class="ttdef"><b>Definition:</b> <a href="helpers_8h_source.xhtml#l00140">helpers.h:140</a></div></div>
<div class="ttc" id="struct_image_xhtml_acf52c23cbd7424606c10a606524e3e32"><div class="ttname"><a href="struct_image.xhtml#acf52c23cbd7424606c10a606524e3e32">Image::ptr</a></div><div class="ttdeci">__global uchar * ptr</div><div class="ttdoc">Pointer to the starting postion of the buffer. </div><div class="ttdef"><b>Definition:</b> <a href="helpers_8h_source.xhtml#l00142">helpers.h:142</a></div></div>
<div class="ttc" id="sobel__filter_8cl_xhtml_a1cfe58175749124762fe0dea315d3c21"><div class="ttname"><a href="sobel__filter_8cl.xhtml#a1cfe58175749124762fe0dea315d3c21">sobel5x1</a></div><div class="ttdeci">short8 sobel5x1(Image *src, const short up1_coeff, const short up2_coeff, const short middle_coeff, const short down1_coeff, const short down2_coeff)</div><div class="ttdoc">Compute a 1D vertical sobel filter 5x1 for 8 bytes assuming the input is made of 1 channel of 1 byte ...</div><div class="ttdef"><b>Definition:</b> <a href="sobel__filter_8cl_source.xhtml#l00206">sobel_filter.cl:206</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a8cdc6e6df9d40cec1e857917d14ee75f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__kernel void sobel_separable7x1 </td>
          <td>(</td>
          <td class="paramtype">__global uchar *&#160;</td>
          <td class="paramname"><em>src_x_ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>src_x_stride_x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>src_x_step_x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>src_x_stride_y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>src_x_step_y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>src_x_offset_first_element_in_bytes</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">__global uchar *&#160;</td>
          <td class="paramname"><em>dst_gx_ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>dst_gx_stride_x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>dst_gx_step_x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>dst_gx_stride_y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>dst_gx_step_y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>dst_gx_offset_first_element_in_bytes</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">__global uchar *&#160;</td>
          <td class="paramname"><em>src_y_ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>src_y_stride_x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>src_y_step_x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>src_y_stride_y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>src_y_step_y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>src_y_offset_first_element_in_bytes</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">__global uchar *&#160;</td>
          <td class="paramname"><em>dst_gy_ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>dst_gy_stride_x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>dst_gy_step_x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>dst_gy_stride_y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>dst_gy_step_y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>dst_gy_offset_first_element_in_bytes</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>dummy</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Apply a 7x1 convolution matrix to two single channel S16 input temporary images and output two single channel S16 images and leave the borders undefined. </p>
<dl class="section attention"><dt>Attention</dt><dd>To enable computation of the X gradient -DGRAD_X must be passed at compile time, while computation of the Y gradient is performed when -DGRAD_Y is used. You can use both when computation of both gradients is required.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">src_x_ptr</td><td>Pointer to the source image. Supported data types: S32 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">src_x_stride_x</td><td>Stride of the source image in X dimension (in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">src_x_step_x</td><td>src_x_stride_x * number of elements along X processed per workitem(in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">src_x_stride_y</td><td>Stride of the source image in Y dimension (in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">src_x_step_y</td><td>src_x_stride_y * number of elements along Y processed per workitem(in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">src_x_offset_first_element_in_bytes</td><td>The offset of the first element in the source image </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">dst_gx_ptr</td><td>Pointer to the destination image. Supported data types: S16 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dst_gx_stride_x</td><td>Stride of the destination image in X dimension (in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dst_gx_step_x</td><td>dst_gx_stride_x * number of elements along X processed per workitem(in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dst_gx_stride_y</td><td>Stride of the destination image in Y dimension (in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dst_gx_step_y</td><td>dst_gx_stride_y * number of elements along Y processed per workitem(in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dst_gx_offset_first_element_in_bytes</td><td>The offset of the first element in the destination image </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">src_y_ptr</td><td>Pointer to the source image. Supported data types: S32 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">src_y_stride_x</td><td>Stride of the source image in X dimension (in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">src_y_step_x</td><td>src_y_stride_x * number of elements along X processed per workitem(in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">src_y_stride_y</td><td>Stride of the source image in Y dimension (in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">src_y_step_y</td><td>src_y_stride_y * number of elements along Y processed per workitem(in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">src_y_offset_first_element_in_bytes</td><td>The offset of the first element in the source image </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">dst_gy_ptr</td><td>Pointer to the destination image. Supported data types: S16 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dst_gy_stride_x</td><td>Stride of the destination image in X dimension (in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dst_gy_step_x</td><td>dst_gy_stride_x * number of elements along X processed per workitem(in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dst_gy_stride_y</td><td>Stride of the destination image in Y dimension (in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dst_gy_step_y</td><td>dst_gy_stride_y * number of elements along Y processed per workitem(in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dst_gy_offset_first_element_in_bytes</td><td>The offset of the first element in the destination image </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dummy</td><td>Dummy parameter to easy conditional inclusion </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="sobel__filter_8cl_source.xhtml#l00506">506</a> of file <a class="el" href="sobel__filter_8cl_source.xhtml">sobel_filter.cl</a>.</p>

<p>References <a class="el" href="helpers_8h_source.xhtml#l00102">CONVERT_TO_IMAGE_STRUCT</a>, <a class="el" href="helpers_8h_source.xhtml#l00142">Image::ptr</a>, and <a class="el" href="sobel__filter_8cl_source.xhtml#l00409">SOBEL7x1</a>.</p>
<div class="fragment"><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;{</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;<span class="preprocessor">#ifdef GRAD_X</span></div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;    <a class="code" href="struct_image.xhtml">Image</a> src_x  = <a class="code" href="helpers_8h.xhtml#aebe814363556c244be043b13e7969197">CONVERT_TO_IMAGE_STRUCT</a>(src_x);</div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;    <a class="code" href="struct_image.xhtml">Image</a> dst_gx = <a class="code" href="helpers_8h.xhtml#aebe814363556c244be043b13e7969197">CONVERT_TO_IMAGE_STRUCT</a>(dst_gx);</div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* GRAD_X */</span><span class="preprocessor"></span></div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;<span class="preprocessor">#ifdef GRAD_Y</span></div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;    <a class="code" href="struct_image.xhtml">Image</a> src_y  = <a class="code" href="helpers_8h.xhtml#aebe814363556c244be043b13e7969197">CONVERT_TO_IMAGE_STRUCT</a>(src_y);</div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;    <a class="code" href="struct_image.xhtml">Image</a> dst_gy = <a class="code" href="helpers_8h.xhtml#aebe814363556c244be043b13e7969197">CONVERT_TO_IMAGE_STRUCT</a>(dst_gy);</div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* GRAD_Y */</span><span class="preprocessor"></span></div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;    <span class="comment">// Output pixels</span></div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;<span class="preprocessor">#ifdef GRAD_X</span></div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;    int8 gx = 0;</div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;    <a class="code" href="sobel__filter_8cl.xhtml#a59f291bf2b268f9b850fa81a3fbf776a">SOBEL7x1</a>(&amp;src_x, gx, Y);</div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;    vstore8(gx, 0, (__global <span class="keywordtype">int</span> *)dst_gx.<a class="code" href="struct_image.xhtml#acf52c23cbd7424606c10a606524e3e32">ptr</a>);</div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* GRAD_X */</span><span class="preprocessor"></span></div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;<span class="preprocessor">#ifdef GRAD_Y</span></div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;    int8 gy = 0;</div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;    <a class="code" href="sobel__filter_8cl.xhtml#a59f291bf2b268f9b850fa81a3fbf776a">SOBEL7x1</a>(&amp;src_y, gy, X);</div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;    vstore8(gy, 0, (__global <span class="keywordtype">int</span> *)dst_gy.<a class="code" href="struct_image.xhtml#acf52c23cbd7424606c10a606524e3e32">ptr</a>);</div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* GRAD_Y */</span><span class="preprocessor"></span></div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;}</div><div class="ttc" id="helpers_8h_xhtml_aebe814363556c244be043b13e7969197"><div class="ttname"><a href="helpers_8h.xhtml#aebe814363556c244be043b13e7969197">CONVERT_TO_IMAGE_STRUCT</a></div><div class="ttdeci">#define CONVERT_TO_IMAGE_STRUCT(name)</div><div class="ttdef"><b>Definition:</b> <a href="helpers_8h_source.xhtml#l00102">helpers.h:102</a></div></div>
<div class="ttc" id="sobel__filter_8cl_xhtml_a59f291bf2b268f9b850fa81a3fbf776a"><div class="ttname"><a href="sobel__filter_8cl.xhtml#a59f291bf2b268f9b850fa81a3fbf776a">SOBEL7x1</a></div><div class="ttdeci">#define SOBEL7x1(ptr, g, direction)</div><div class="ttdef"><b>Definition:</b> <a href="sobel__filter_8cl_source.xhtml#l00409">sobel_filter.cl:409</a></div></div>
<div class="ttc" id="struct_image_xhtml"><div class="ttname"><a href="struct_image.xhtml">Image</a></div><div class="ttdoc">Structure to hold Image information. </div><div class="ttdef"><b>Definition:</b> <a href="helpers_8h_source.xhtml#l00140">helpers.h:140</a></div></div>
<div class="ttc" id="struct_image_xhtml_acf52c23cbd7424606c10a606524e3e32"><div class="ttname"><a href="struct_image.xhtml#acf52c23cbd7424606c10a606524e3e32">Image::ptr</a></div><div class="ttdeci">__global uchar * ptr</div><div class="ttdoc">Pointer to the starting postion of the buffer. </div><div class="ttdef"><b>Definition:</b> <a href="helpers_8h_source.xhtml#l00142">helpers.h:142</a></div></div>
</div><!-- fragment -->
</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_aebb8dcc11953d78e620bbef0b9e2183.xhtml">core</a></li><li class="navelem"><a class="el" href="dir_8c278f79c760e5c5fbd911f9870614c1.xhtml">CL</a></li><li class="navelem"><a class="el" href="dir_25885286e9dad4fa105b7b25a8031bbf.xhtml">cl_kernels</a></li><li class="navelem"><a class="el" href="sobel__filter_8cl.xhtml">sobel_filter.cl</a></li>
    <li class="footer">Generated on Thu Dec 14 2017 23:48:34 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
  </ul>
</div>
</body>
</html>
