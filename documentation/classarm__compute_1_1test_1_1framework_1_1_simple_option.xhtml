<!-- HTML header for doxygen 1.8.9.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: SimpleOption&lt; T &gt; Class Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Compute Library
   &#160;<span id="projectnumber">17.12</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li><a href="classes.xhtml"><span>Data&#160;Structure&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Data&#160;Fields</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarm__compute_1_1test_1_1framework_1_1_simple_option.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">SimpleOption&lt; T &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Implementation of an option that accepts a single value.  
 <a href="classarm__compute_1_1test_1_1framework_1_1_simple_option.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_simple_option_8h_source.xhtml">SimpleOption.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for SimpleOption&lt; T &gt;:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classarm__compute_1_1test_1_1framework_1_1_simple_option__coll__graph.svg" width="156" height="112"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a53b7b0b7aee13285e6d841dc184c054b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_simple_option.xhtml#a53b7b0b7aee13285e6d841dc184c054b">SimpleOption</a> (std::string <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_option.xhtml#a37627d5d5bba7f4a8690c71c2ab3cb07">name</a>, T default_value)</td></tr>
<tr class="memdesc:a53b7b0b7aee13285e6d841dc184c054b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Construct the option with the given default value.  <a href="#a53b7b0b7aee13285e6d841dc184c054b">More...</a><br /></td></tr>
<tr class="separator:a53b7b0b7aee13285e6d841dc184c054b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aba9622f1f4bc66fcba246f30d4175a4f"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_simple_option.xhtml#aba9622f1f4bc66fcba246f30d4175a4f">parse</a> (std::string <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_simple_option.xhtml#a20f4a96fd8932e0b4d89c65f95991bc9">value</a>) override</td></tr>
<tr class="memdesc:aba9622f1f4bc66fcba246f30d4175a4f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parses the given string.  <a href="#aba9622f1f4bc66fcba246f30d4175a4f">More...</a><br /></td></tr>
<tr class="separator:aba9622f1f4bc66fcba246f30d4175a4f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae6038fe1a77c4b08a678530410f41efa"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_simple_option.xhtml#ae6038fe1a77c4b08a678530410f41efa">help</a> () const override</td></tr>
<tr class="memdesc:ae6038fe1a77c4b08a678530410f41efa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Help message for the option.  <a href="#ae6038fe1a77c4b08a678530410f41efa">More...</a><br /></td></tr>
<tr class="separator:ae6038fe1a77c4b08a678530410f41efa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a20f4a96fd8932e0b4d89c65f95991bc9"><td class="memItemLeft" align="right" valign="top">const T &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_simple_option.xhtml#a20f4a96fd8932e0b4d89c65f95991bc9">value</a> () const </td></tr>
<tr class="separator:a20f4a96fd8932e0b4d89c65f95991bc9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afeee88c6cc79c347f803741da7f325f0"><td class="memTemplParams" colspan="2">template&lt;&gt; </td></tr>
<tr class="memitem:afeee88c6cc79c347f803741da7f325f0"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_simple_option.xhtml#afeee88c6cc79c347f803741da7f325f0">parse</a> (std::string <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_simple_option.xhtml#a20f4a96fd8932e0b4d89c65f95991bc9">value</a>)</td></tr>
<tr class="memdesc:afeee88c6cc79c347f803741da7f325f0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parses the given string.  <a href="#afeee88c6cc79c347f803741da7f325f0">More...</a><br /></td></tr>
<tr class="separator:afeee88c6cc79c347f803741da7f325f0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1test_1_1framework_1_1_option"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1test_1_1framework_1_1_option')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_option.xhtml">Option</a></td></tr>
<tr class="memitem:a8432d7cd1d4ea8732a64e9df51147cbf inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_option"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_option.xhtml#a8432d7cd1d4ea8732a64e9df51147cbf">Option</a> (std::string <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_option.xhtml#a37627d5d5bba7f4a8690c71c2ab3cb07">name</a>)</td></tr>
<tr class="memdesc:a8432d7cd1d4ea8732a64e9df51147cbf inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_option"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="#a8432d7cd1d4ea8732a64e9df51147cbf">More...</a><br /></td></tr>
<tr class="separator:a8432d7cd1d4ea8732a64e9df51147cbf inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_option"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6340a62771cbbb113fccaf3425f2ae48 inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_option"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_option.xhtml#a6340a62771cbbb113fccaf3425f2ae48">Option</a> (std::string <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_option.xhtml#a37627d5d5bba7f4a8690c71c2ab3cb07">name</a>, bool <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_option.xhtml#a56603b3aba78712e979f0989a4831457">is_required</a>, bool <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_option.xhtml#ade5bfc64a698142cd97e226adf6ab1d7">is_set</a>)</td></tr>
<tr class="memdesc:a6340a62771cbbb113fccaf3425f2ae48 inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_option"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="#a6340a62771cbbb113fccaf3425f2ae48">More...</a><br /></td></tr>
<tr class="separator:a6340a62771cbbb113fccaf3425f2ae48 inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_option"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af340fed9faa9f79d3bf2e385c50d1ca0 inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_option"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_option.xhtml#af340fed9faa9f79d3bf2e385c50d1ca0">~Option</a> ()=default</td></tr>
<tr class="memdesc:af340fed9faa9f79d3bf2e385c50d1ca0 inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_option"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default destructor.  <a href="#af340fed9faa9f79d3bf2e385c50d1ca0">More...</a><br /></td></tr>
<tr class="separator:af340fed9faa9f79d3bf2e385c50d1ca0 inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_option"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a37627d5d5bba7f4a8690c71c2ab3cb07 inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_option"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_option.xhtml#a37627d5d5bba7f4a8690c71c2ab3cb07">name</a> () const </td></tr>
<tr class="memdesc:a37627d5d5bba7f4a8690c71c2ab3cb07 inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_option"><td class="mdescLeft">&#160;</td><td class="mdescRight">Name of the option.  <a href="#a37627d5d5bba7f4a8690c71c2ab3cb07">More...</a><br /></td></tr>
<tr class="separator:a37627d5d5bba7f4a8690c71c2ab3cb07 inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_option"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a564afafa4220cd36afbe388fcd24549b inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_option"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_option.xhtml#a564afafa4220cd36afbe388fcd24549b">set_required</a> (bool <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_option.xhtml#a56603b3aba78712e979f0989a4831457">is_required</a>)</td></tr>
<tr class="memdesc:a564afafa4220cd36afbe388fcd24549b inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_option"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set whether the option is required.  <a href="#a564afafa4220cd36afbe388fcd24549b">More...</a><br /></td></tr>
<tr class="separator:a564afafa4220cd36afbe388fcd24549b inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_option"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a48a2672f362eeed9a3e93403f4d3de37 inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_option"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_option.xhtml#a48a2672f362eeed9a3e93403f4d3de37">set_help</a> (std::string <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_option.xhtml#a6d472b4309f5558f94258fabeff3474e">help</a>)</td></tr>
<tr class="memdesc:a48a2672f362eeed9a3e93403f4d3de37 inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_option"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the help message for the option.  <a href="#a48a2672f362eeed9a3e93403f4d3de37">More...</a><br /></td></tr>
<tr class="separator:a48a2672f362eeed9a3e93403f4d3de37 inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_option"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a56603b3aba78712e979f0989a4831457 inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_option"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_option.xhtml#a56603b3aba78712e979f0989a4831457">is_required</a> () const </td></tr>
<tr class="memdesc:a56603b3aba78712e979f0989a4831457 inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_option"><td class="mdescLeft">&#160;</td><td class="mdescRight">Is the option required?  <a href="#a56603b3aba78712e979f0989a4831457">More...</a><br /></td></tr>
<tr class="separator:a56603b3aba78712e979f0989a4831457 inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_option"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ade5bfc64a698142cd97e226adf6ab1d7 inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_option"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_option.xhtml#ade5bfc64a698142cd97e226adf6ab1d7">is_set</a> () const </td></tr>
<tr class="memdesc:ade5bfc64a698142cd97e226adf6ab1d7 inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_option"><td class="mdescLeft">&#160;</td><td class="mdescRight">Has a value been assigned to the option?  <a href="#ade5bfc64a698142cd97e226adf6ab1d7">More...</a><br /></td></tr>
<tr class="separator:ade5bfc64a698142cd97e226adf6ab1d7 inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_option"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;typename T&gt;<br />
class arm_compute::test::framework::SimpleOption&lt; T &gt;</h3>

<p>Implementation of an option that accepts a single value. </p>

<p>Definition at line <a class="el" href="_simple_option_8h_source.xhtml#l00041">41</a> of file <a class="el" href="_simple_option_8h_source.xhtml">SimpleOption.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a53b7b0b7aee13285e6d841dc184c054b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_simple_option.xhtml">SimpleOption</a> </td>
          <td>(</td>
          <td class="paramtype">std::string&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">T&#160;</td>
          <td class="paramname"><em>default_value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Construct the option with the given default value. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">name</td><td>Name of the option. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">default_value</td><td>Default value. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="_simple_option_8h_source.xhtml#l00062">62</a> of file <a class="el" href="_simple_option_8h_source.xhtml">SimpleOption.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    : <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_option.xhtml#a8432d7cd1d4ea8732a64e9df51147cbf">Option</a>{ std::move(<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_option.xhtml#a37627d5d5bba7f4a8690c71c2ab3cb07">name</a>), <span class="keyword">false</span>, <span class="keyword">true</span> }, _value{ std::move(default_value) }</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;{</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;}</div><div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_option_xhtml_a8432d7cd1d4ea8732a64e9df51147cbf"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_option.xhtml#a8432d7cd1d4ea8732a64e9df51147cbf">arm_compute::test::framework::Option::Option</a></div><div class="ttdeci">Option(std::string name)</div><div class="ttdoc">Constructor. </div><div class="ttdef"><b>Definition:</b> <a href="_option_8cpp_source.xhtml#l00032">Option.cpp:32</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_option_xhtml_a37627d5d5bba7f4a8690c71c2ab3cb07"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_option.xhtml#a37627d5d5bba7f4a8690c71c2ab3cb07">arm_compute::test::framework::Option::name</a></div><div class="ttdeci">std::string name() const </div><div class="ttdoc">Name of the option. </div><div class="ttdef"><b>Definition:</b> <a href="_option_8cpp_source.xhtml#l00042">Option.cpp:42</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="ae6038fe1a77c4b08a678530410f41efa"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string help </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Help message for the option. </p>
<dl class="section return"><dt>Returns</dt><dd>String representing the help message for the specific subclass. </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_option.xhtml#a6d472b4309f5558f94258fabeff3474e">Option</a>.</p>

<p>Definition at line <a class="el" href="_simple_option_8h_source.xhtml#l00092">92</a> of file <a class="el" href="_simple_option_8h_source.xhtml">SimpleOption.h</a>.</p>

<p>References <a class="el" href="_option_8cpp_source.xhtml#l00042">Option::name()</a>.</p>
<div class="fragment"><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;{</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <span class="keywordflow">return</span> <span class="stringliteral">&quot;--&quot;</span> + <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_option.xhtml#a37627d5d5bba7f4a8690c71c2ab3cb07">name</a>() + <span class="stringliteral">&quot;=VALUE - &quot;</span> + _help;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;}</div><div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_option_xhtml_a37627d5d5bba7f4a8690c71c2ab3cb07"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_option.xhtml#a37627d5d5bba7f4a8690c71c2ab3cb07">arm_compute::test::framework::Option::name</a></div><div class="ttdeci">std::string name() const </div><div class="ttdoc">Name of the option. </div><div class="ttdef"><b>Definition:</b> <a href="_option_8cpp_source.xhtml#l00042">Option.cpp:42</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="aba9622f1f4bc66fcba246f30d4175a4f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool parse </td>
          <td>(</td>
          <td class="paramtype">std::string&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Parses the given string. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">value</td><td>String representation as passed on the command line.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True if the value could be parsed by the specific subclass. </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_option.xhtml#a1adbcecf58804b109b928dd852bc29ef">Option</a>.</p>

<p>Definition at line <a class="el" href="_simple_option_8h_source.xhtml#l00068">68</a> of file <a class="el" href="_simple_option_8h_source.xhtml">SimpleOption.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;{</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <span class="keywordflow">try</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    {</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        std::stringstream stream{ std::move(<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_simple_option.xhtml#a20f4a96fd8932e0b4d89c65f95991bc9">value</a>) };</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        stream &gt;&gt; _value;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        _is_set = !stream.fail();</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        <span class="keywordflow">return</span> _is_set;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    }</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <span class="keywordflow">catch</span>(<span class="keyword">const</span> std::invalid_argument &amp;)</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    {</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    }</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;}</div><div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_simple_option_xhtml_a20f4a96fd8932e0b4d89c65f95991bc9"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_simple_option.xhtml#a20f4a96fd8932e0b4d89c65f95991bc9">arm_compute::test::framework::SimpleOption::value</a></div><div class="ttdeci">const T &amp; value() const </div><div class="ttdef"><b>Definition:</b> <a href="_simple_option_8h_source.xhtml#l00098">SimpleOption.h:98</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="afeee88c6cc79c347f803741da7f325f0"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool parse </td>
          <td>(</td>
          <td class="paramtype">std::string&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Parses the given string. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">value</td><td>String representation as passed on the command line.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True if the value could be parsed by the specific subclass. </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_option.xhtml#a1adbcecf58804b109b928dd852bc29ef">Option</a>.</p>

<p>Definition at line <a class="el" href="_simple_option_8h_source.xhtml#l00084">84</a> of file <a class="el" href="_simple_option_8h_source.xhtml">SimpleOption.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;{</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    _value  = std::move(<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_simple_option.xhtml#a20f4a96fd8932e0b4d89c65f95991bc9">value</a>);</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    _is_set = <span class="keyword">true</span>;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;}</div><div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_simple_option_xhtml_a20f4a96fd8932e0b4d89c65f95991bc9"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_simple_option.xhtml#a20f4a96fd8932e0b4d89c65f95991bc9">arm_compute::test::framework::SimpleOption::value</a></div><div class="ttdeci">const T &amp; value() const </div><div class="ttdef"><b>Definition:</b> <a href="_simple_option_8h_source.xhtml#l00098">SimpleOption.h:98</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a20f4a96fd8932e0b4d89c65f95991bc9"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const T &amp; value </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="_simple_option_8h_source.xhtml#l00098">98</a> of file <a class="el" href="_simple_option_8h_source.xhtml">SimpleOption.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;{</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <span class="keywordflow">return</span> _value;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>tests/framework/command_line/<a class="el" href="_simple_option_8h_source.xhtml">SimpleOption.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1test.xhtml">test</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml">framework</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_simple_option.xhtml">SimpleOption</a></li>
    <li class="footer">Generated on Thu Dec 14 2017 23:48:38 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
  </ul>
</div>
</body>
</html>
