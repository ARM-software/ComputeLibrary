<!-- HTML header for doxygen 1.8.9.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.6"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: examples/graph_lenet.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Compute Library
   &#160;<span id="projectnumber">17.09</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.6 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>Globals</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('graph__lenet_8cpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Data Structures</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">graph_lenet.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="graph__lenet_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2017 ARM Limited.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifndef ARM_COMPUTE_CL </span><span class="comment">/* Needed by Utils.cpp to handle OpenCL exceptions properly */</span><span class="preprocessor"></span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#error &quot;This example needs to be built with -DARM_COMPUTE_CL&quot;</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#endif </span><span class="comment">/* ARM_COMPUTE_CL */</span><span class="preprocessor"></span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_graph_8h.xhtml">arm_compute/graph/Graph.h</a>&quot;</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_nodes_8h.xhtml">arm_compute/graph/Nodes.h</a>&quot;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_c_l_scheduler_8h.xhtml">arm_compute/runtime/CL/CLScheduler.h</a>&quot;</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_scheduler_8h.xhtml">arm_compute/runtime/Scheduler.h</a>&quot;</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_toolchain_support_8h.xhtml">support/ToolchainSupport.h</a>&quot;</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_graph_utils_8h.xhtml">utils/GraphUtils.h</a>&quot;</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="utils_2_utils_8h.xhtml">utils/Utils.h</a>&quot;</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor">#include &lt;cstdlib&gt;</span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="preprocessor">#include &lt;iostream&gt;</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="preprocessor">#include &lt;memory&gt;</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">using namespace </span>arm_compute::graph;</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="keyword">using namespace </span>arm_compute::graph_utils;</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div>
<div class="line"><a name="l00052"></a><span class="lineno"><a class="line" href="graph__lenet_8cpp.xhtml#acbea98d13e0adbf27ecc036feeb610f0">   52</a></span>&#160;std::unique_ptr&lt;ITensorAccessor&gt; <a class="code" href="graph__lenet_8cpp.xhtml#acbea98d13e0adbf27ecc036feeb610f0">get_accessor</a>(<span class="keyword">const</span> std::string &amp;path, <span class="keyword">const</span> std::string &amp;data_file)</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;{</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <span class="keywordflow">if</span>(path.empty())</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    {</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        <span class="keywordflow">return</span> arm_compute::support::cpp14::make_unique&lt;DummyAccessor&gt;();</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    }</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    {</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        <span class="keywordflow">return</span> arm_compute::support::cpp14::make_unique&lt;NumPyBinLoader&gt;(path + data_file);</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    }</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;}</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div>
<div class="line"><a name="l00069"></a><span class="lineno"><a class="line" href="graph__lenet_8cpp.xhtml#a8b6f84d005166799e5a371a3d3e072b3">   69</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="graph__lenet_8cpp.xhtml#a8b6f84d005166799e5a371a3d3e072b3">main_graph_lenet</a>(<span class="keywordtype">int</span> argc, <span class="keyword">const</span> <span class="keywordtype">char</span> **argv)</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;{</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    std::string  data_path;   </div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> batches = 4; </div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="comment">// Parse arguments</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <span class="keywordflow">if</span>(argc &lt; 2)</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    {</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        <span class="comment">// Print help</span></div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        std::cout &lt;&lt; <span class="stringliteral">&quot;Usage: &quot;</span> &lt;&lt; argv[0] &lt;&lt; <span class="stringliteral">&quot; [path_to_data] [batches]\n\n&quot;</span>;</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        std::cout &lt;&lt; <span class="stringliteral">&quot;No data folder provided: using random values\n\n&quot;</span>;</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    }</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span>(argc == 2)</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    {</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        <span class="comment">//Do something with argv[1]</span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        data_path = argv[1];</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        std::cout &lt;&lt; <span class="stringliteral">&quot;Usage: &quot;</span> &lt;&lt; argv[0] &lt;&lt; <span class="stringliteral">&quot; [path_to_data] [batches]\n\n&quot;</span>;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        std::cout &lt;&lt; <span class="stringliteral">&quot;No number of batches where specified, thus will use the default : &quot;</span> &lt;&lt; batches &lt;&lt; <span class="stringliteral">&quot;\n\n&quot;</span>;</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    }</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    {</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        <span class="comment">//Do something with argv[1] and argv[2]</span></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        data_path = argv[1];</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        batches   = std::strtol(argv[2], <span class="keyword">nullptr</span>, 0);</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    }</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="comment">// Check if OpenCL is available and initialize the scheduler</span></div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <span class="keywordflow">if</span>(<a class="code" href="namespacearm__compute.xhtml#aa4f4d7a58287017588fc338965873f14">arm_compute::opencl_is_available</a>())</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    {</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a60f9a6836b628a7171914c4afe43b4a7">arm_compute::CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a46ecf9ef0fe80ba2ed35acfc29856b7d">default_init</a>();</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    }</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <a class="code" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> graph;</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    graph.<a class="code" href="classarm__compute_1_1graph_1_1_graph.xhtml#afaff225242efe5b2c39c932cfdd0f459">set_info_enablement</a>(<span class="keyword">true</span>);</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <span class="comment">//conv1 &lt;&lt; pool1 &lt;&lt; conv2 &lt;&lt; pool2 &lt;&lt; fc1 &lt;&lt; act1 &lt;&lt; fc2 &lt;&lt; smx</span></div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    graph &lt;&lt; <a class="code" href="namespacearm__compute_1_1graph.xhtml#a0e3ca6c9bf8d16363c1be8fddd2cfcaea542f952490e2db695a1d544338a70cda">Hint::OPENCL</a></div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;          &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1_tensor.xhtml">Tensor</a>(<a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(28U, 28U, 1U, batches), 1, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>), <a class="code" href="classarm__compute_1_1graph__utils_1_1_dummy_accessor.xhtml">DummyAccessor</a>())</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;          &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1_convolution_layer.xhtml">ConvolutionLayer</a>(</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;              5U, 5U, 20U,</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;              <a class="code" href="graph__lenet_8cpp.xhtml#acbea98d13e0adbf27ecc036feeb610f0">get_accessor</a>(data_path, <span class="stringliteral">&quot;/cnn_data/lenet_model/conv1_w.npy&quot;</span>),</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;              <a class="code" href="graph__lenet_8cpp.xhtml#acbea98d13e0adbf27ecc036feeb610f0">get_accessor</a>(data_path, <span class="stringliteral">&quot;/cnn_data/lenet_model/conv1_b.npy&quot;</span>),</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;              <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(1, 1, 0, 0))</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;          &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1_pooling_layer.xhtml">PoolingLayer</a>(<a class="code" href="classarm__compute_1_1_pooling_layer_info.xhtml">PoolingLayerInfo</a>(<a class="code" href="namespacearm__compute.xhtml#adf2ced65e536375a1c96425d9fced858a26a4b44a837bf97b972628509912b4a5">PoolingType::MAX</a>, 2, <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(2, 2, 0, 0)))</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;          &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1_convolution_layer.xhtml">ConvolutionLayer</a>(</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;              5U, 5U, 50U,</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;              <a class="code" href="graph__lenet_8cpp.xhtml#acbea98d13e0adbf27ecc036feeb610f0">get_accessor</a>(data_path, <span class="stringliteral">&quot;/cnn_data/lenet_model/conv2_w.npy&quot;</span>),</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;              <a class="code" href="graph__lenet_8cpp.xhtml#acbea98d13e0adbf27ecc036feeb610f0">get_accessor</a>(data_path, <span class="stringliteral">&quot;/cnn_data/lenet_model/conv2_b.npy&quot;</span>),</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;              <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(1, 1, 0, 0))</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;          &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1_pooling_layer.xhtml">PoolingLayer</a>(<a class="code" href="classarm__compute_1_1_pooling_layer_info.xhtml">PoolingLayerInfo</a>(<a class="code" href="namespacearm__compute.xhtml#adf2ced65e536375a1c96425d9fced858a26a4b44a837bf97b972628509912b4a5">PoolingType::MAX</a>, 2, <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(2, 2, 0, 0)))</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;          &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1_fully_connected_layer.xhtml">FullyConnectedLayer</a>(</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;              500U,</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;              <a class="code" href="graph__lenet_8cpp.xhtml#acbea98d13e0adbf27ecc036feeb610f0">get_accessor</a>(data_path, <span class="stringliteral">&quot;/cnn_data/lenet_model/ip1_w.npy&quot;</span>),</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;              <a class="code" href="graph__lenet_8cpp.xhtml#acbea98d13e0adbf27ecc036feeb610f0">get_accessor</a>(data_path, <span class="stringliteral">&quot;/cnn_data/lenet_model/ip1_b.npy&quot;</span>))</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;          &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1_activation_layer.xhtml">ActivationLayer</a>(<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>(<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaad346bb4679d29be241279f15d7795c1c">ActivationLayerInfo::ActivationFunction::RELU</a>))</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;          &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1_fully_connected_layer.xhtml">FullyConnectedLayer</a>(</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;              10U,</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;              <a class="code" href="graph__lenet_8cpp.xhtml#acbea98d13e0adbf27ecc036feeb610f0">get_accessor</a>(data_path, <span class="stringliteral">&quot;/cnn_data/lenet_model/ip2_w.npy&quot;</span>),</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;              <a class="code" href="graph__lenet_8cpp.xhtml#acbea98d13e0adbf27ecc036feeb610f0">get_accessor</a>(data_path, <span class="stringliteral">&quot;/cnn_data/lenet_model/ip2_b.npy&quot;</span>))</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;          &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1_softmax_layer.xhtml">SoftmaxLayer</a>()</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;          &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1_tensor.xhtml">Tensor</a>(<a class="code" href="classarm__compute_1_1graph__utils_1_1_dummy_accessor.xhtml">DummyAccessor</a>());</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    graph.<a class="code" href="classarm__compute_1_1graph_1_1_graph.xhtml#a13a43e6d814de94978c515cb084873b1">run</a>();</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;}</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;</div>
<div class="line"><a name="l00139"></a><span class="lineno"><a class="line" href="graph__lenet_8cpp.xhtml#a217dbf8b442f20279ea00b898af96f52">  139</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="graph__lenet_8cpp.xhtml#a217dbf8b442f20279ea00b898af96f52">main</a>(<span class="keywordtype">int</span> argc, <span class="keyword">const</span> <span class="keywordtype">char</span> **argv)</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;{</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1utils.xhtml#a4c9395db2c8b8d0c336656a7b58fca3e">arm_compute::utils::run_example</a>(argc, argv, <a class="code" href="graph__lenet_8cpp.xhtml#a8b6f84d005166799e5a371a3d3e072b3">main_graph_lenet</a>);</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;}</div>
<div class="ttc" id="classarm__compute_1_1_tensor_shape_xhtml"><div class="ttname"><a href="classarm__compute_1_1_tensor_shape.xhtml">arm_compute::TensorShape</a></div><div class="ttdoc">Shape of a tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_shape_8h_source.xhtml#l00038">TensorShape.h:38</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_fully_connected_layer_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_fully_connected_layer.xhtml">arm_compute::graph::FullyConnectedLayer</a></div><div class="ttdoc">Fully connected layer node. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2nodes_2_fully_connected_layer_8h_source.xhtml#l00036">FullyConnectedLayer.h:36</a></div></div>
<div class="ttc" id="_toolchain_support_8h_xhtml"><div class="ttname"><a href="_toolchain_support_8h.xhtml">ToolchainSupport.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_graph_xhtml_a13a43e6d814de94978c515cb084873b1"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph.xhtml#a13a43e6d814de94978c515cb084873b1">arm_compute::graph::Graph::run</a></div><div class="ttdeci">void run()</div><div class="ttdoc">Executes the graph. </div></div>
<div class="ttc" id="classarm__compute_1_1graph__utils_1_1_dummy_accessor_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph__utils_1_1_dummy_accessor.xhtml">arm_compute::graph_utils::DummyAccessor</a></div><div class="ttdoc">Dummy accessor class. </div><div class="ttdef"><b>Definition:</b> <a href="_graph_utils_8h_source.xhtml#l00057">GraphUtils.h:57</a></div></div>
<div class="ttc" id="classarm__compute_1_1_activation_layer_info_xhtml_a56297e0f7b215eea46c818cb7528d9eaad346bb4679d29be241279f15d7795c1c"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaad346bb4679d29be241279f15d7795c1c">arm_compute::ActivationLayerInfo::ActivationFunction::RELU</a></div><div class="ttdoc">Rectifier (  ) </div></div>
<div class="ttc" id="utils_2_utils_8h_xhtml"><div class="ttname"><a href="utils_2_utils_8h.xhtml">Utils.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_graph_xhtml_afaff225242efe5b2c39c932cfdd0f459"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph.xhtml#afaff225242efe5b2c39c932cfdd0f459">arm_compute::graph::Graph::set_info_enablement</a></div><div class="ttdeci">void set_info_enablement(bool is_enabled)</div><div class="ttdoc">Sets whether to enable information print out. </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">arm_compute::Format::F32</a></div><div class="ttdoc">1 channel, 1 F16 per channel </div></div>
<div class="ttc" id="_graph_8h_xhtml"><div class="ttname"><a href="_graph_8h.xhtml">Graph.h</a></div></div>
<div class="ttc" id="graph__lenet_8cpp_xhtml_acbea98d13e0adbf27ecc036feeb610f0"><div class="ttname"><a href="graph__lenet_8cpp.xhtml#acbea98d13e0adbf27ecc036feeb610f0">get_accessor</a></div><div class="ttdeci">std::unique_ptr&lt; ITensorAccessor &gt; get_accessor(const std::string &amp;path, const std::string &amp;data_file)</div><div class="ttdoc">Generates appropriate accessor according to the specified path. </div><div class="ttdef"><b>Definition:</b> <a href="graph__lenet_8cpp_source.xhtml#l00052">graph_lenet.cpp:52</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_aa4f4d7a58287017588fc338965873f14"><div class="ttname"><a href="namespacearm__compute.xhtml#aa4f4d7a58287017588fc338965873f14">arm_compute::opencl_is_available</a></div><div class="ttdeci">bool opencl_is_available()</div></div>
<div class="ttc" id="classarm__compute_1_1_activation_layer_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml">arm_compute::ActivationLayerInfo</a></div><div class="ttdoc">Activation Layer Information class. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00511">Types.h:511</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1utils_xhtml_a4c9395db2c8b8d0c336656a7b58fca3e"><div class="ttname"><a href="namespacearm__compute_1_1utils.xhtml#a4c9395db2c8b8d0c336656a7b58fca3e">arm_compute::utils::run_example</a></div><div class="ttdeci">int run_example(int argc, const char **argv, example &amp;func)</div><div class="ttdoc">Run an example and handle the potential exceptions it throws. </div><div class="ttdef"><b>Definition:</b> <a href="utils_2_utils_8cpp_source.xhtml#l00069">Utils.cpp:69</a></div></div>
<div class="ttc" id="_c_l_scheduler_8h_xhtml"><div class="ttname"><a href="_c_l_scheduler_8h.xhtml">CLScheduler.h</a></div></div>
<div class="ttc" id="_graph_utils_8h_xhtml"><div class="ttname"><a href="_graph_utils_8h.xhtml">GraphUtils.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_scheduler_xhtml_a60f9a6836b628a7171914c4afe43b4a7"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a60f9a6836b628a7171914c4afe43b4a7">arm_compute::CLScheduler::get</a></div><div class="ttdeci">static CLScheduler &amp; get()</div><div class="ttdoc">Access the scheduler singleton. </div></div>
<div class="ttc" id="classarm__compute_1_1_pad_stride_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_pad_stride_info.xhtml">arm_compute::PadStrideInfo</a></div><div class="ttdoc">Padding and stride information class. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00406">Types.h:406</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_softmax_layer_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_softmax_layer.xhtml">arm_compute::graph::SoftmaxLayer</a></div><div class="ttdoc">Softmax layer node. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2nodes_2_softmax_layer_8h_source.xhtml#l00036">SoftmaxLayer.h:36</a></div></div>
<div class="ttc" id="_scheduler_8h_xhtml"><div class="ttname"><a href="_scheduler_8h.xhtml">Scheduler.h</a></div></div>
<div class="ttc" id="graph__lenet_8cpp_xhtml_a217dbf8b442f20279ea00b898af96f52"><div class="ttname"><a href="graph__lenet_8cpp.xhtml#a217dbf8b442f20279ea00b898af96f52">main</a></div><div class="ttdeci">int main(int argc, const char **argv)</div><div class="ttdoc">Main program for LeNet. </div><div class="ttdef"><b>Definition:</b> <a href="graph__lenet_8cpp_source.xhtml#l00139">graph_lenet.cpp:139</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_graph_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph.xhtml">arm_compute::graph::Graph</a></div><div class="ttdoc">Graph class. </div><div class="ttdef"><b>Definition:</b> <a href="_graph_8h_source.xhtml#l00041">Graph.h:41</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml_a0e3ca6c9bf8d16363c1be8fddd2cfcaea542f952490e2db695a1d544338a70cda"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#a0e3ca6c9bf8d16363c1be8fddd2cfcaea542f952490e2db695a1d544338a70cda">arm_compute::graph::Hint::OPENCL</a></div><div class="ttdoc">Run node on an OpenCL capable device (GPU) </div></div>
<div class="ttc" id="graph__lenet_8cpp_xhtml_a8b6f84d005166799e5a371a3d3e072b3"><div class="ttname"><a href="graph__lenet_8cpp.xhtml#a8b6f84d005166799e5a371a3d3e072b3">main_graph_lenet</a></div><div class="ttdeci">void main_graph_lenet(int argc, const char **argv)</div><div class="ttdoc">Example demonstrating how to implement LeNet&#39;s network using the Compute Library&#39;s graph API...</div><div class="ttdef"><b>Definition:</b> <a href="graph__lenet_8cpp_source.xhtml#l00069">graph_lenet.cpp:69</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_pooling_layer_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_pooling_layer.xhtml">arm_compute::graph::PoolingLayer</a></div><div class="ttdoc">Pooling layer node. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2nodes_2_pooling_layer_8h_source.xhtml#l00036">PoolingLayer.h:36</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml">arm_compute::TensorInfo</a></div><div class="ttdoc">Store the tensor&#39;s metadata. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00042">TensorInfo.h:42</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_activation_layer_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_activation_layer.xhtml">arm_compute::graph::ActivationLayer</a></div><div class="ttdoc">Activation Layer node. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2nodes_2_activation_layer_8h_source.xhtml#l00036">ActivationLayer.h:36</a></div></div>
<div class="ttc" id="_nodes_8h_xhtml"><div class="ttname"><a href="_nodes_8h.xhtml">Nodes.h</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_adf2ced65e536375a1c96425d9fced858a26a4b44a837bf97b972628509912b4a5"><div class="ttname"><a href="namespacearm__compute.xhtml#adf2ced65e536375a1c96425d9fced858a26a4b44a837bf97b972628509912b4a5">arm_compute::NonLinearFilterFunction::MAX</a></div><div class="ttdoc">Non linear dilate. </div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_convolution_layer_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_convolution_layer.xhtml">arm_compute::graph::ConvolutionLayer</a></div><div class="ttdoc">Convolution layer node. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2nodes_2_convolution_layer_8h_source.xhtml#l00036">ConvolutionLayer.h:36</a></div></div>
<div class="ttc" id="classarm__compute_1_1_pooling_layer_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_pooling_layer_info.xhtml">arm_compute::PoolingLayerInfo</a></div><div class="ttdoc">Pooling Layer Information class. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00445">Types.h:445</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_scheduler_xhtml_a46ecf9ef0fe80ba2ed35acfc29856b7d"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a46ecf9ef0fe80ba2ed35acfc29856b7d">arm_compute::CLScheduler::default_init</a></div><div class="ttdeci">void default_init(ICLTuner *cl_tuner=nullptr)</div><div class="ttdoc">Initialises the context and command queue used by the scheduler to default values and sets a default ...</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8h_source.xhtml#l00061">CLScheduler.h:61</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_tensor_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_tensor.xhtml">arm_compute::graph::Tensor</a></div><div class="ttdoc">Tensor class. </div><div class="ttdef"><b>Definition:</b> <a href="graph_2_tensor_8h_source.xhtml#l00038">Tensor.h:38</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_1253bad92dedae5edd993ead924afb7b.xhtml">examples</a></li><li class="navelem"><a class="el" href="graph__lenet_8cpp.xhtml">graph_lenet.cpp</a></li>
    <li class="footer">Generated on Thu Sep 28 2017 14:37:50 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.6 </li>
  </ul>
</div>
</body>
</html>
