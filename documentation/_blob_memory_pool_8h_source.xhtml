<!-- HTML header for doxygen 1.8.9.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: arm_compute/runtime/BlobMemoryPool.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Compute Library
   &#160;<span id="projectnumber">17.12</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>Globals</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_blob_memory_pool_8h_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">BlobMemoryPool.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_blob_memory_pool_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2017 ARM Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifndef __ARM_COMPUTE_BLOBMEMORYPOOL_H__</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#define __ARM_COMPUTE_BLOBMEMORYPOOL_H__</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_memory_pool_8h.xhtml">arm_compute/runtime/IMemoryPool.h</a>&quot;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2runtime_2_types_8h.xhtml">arm_compute/runtime/Types.h</a>&quot;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &lt;cstddef&gt;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &lt;memory&gt;</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;{</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keyword">class </span>IAllocator;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00040"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_blob_memory_pool.xhtml">   40</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1_blob_memory_pool.xhtml">BlobMemoryPool</a> : <span class="keyword">public</span> <a class="code" href="classarm__compute_1_1_i_memory_pool.xhtml">IMemoryPool</a></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;{</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <a class="code" href="classarm__compute_1_1_blob_memory_pool.xhtml#ae4697b43125a5f2498131d794b44d950">BlobMemoryPool</a>(<a class="code" href="classarm__compute_1_1_i_allocator.xhtml">IAllocator</a> *allocator, std::vector&lt;size_t&gt; blob_sizes);</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <a class="code" href="classarm__compute_1_1_blob_memory_pool.xhtml#a2e429f60410f02b72c74cae123aca669">~BlobMemoryPool</a>();</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <a class="code" href="classarm__compute_1_1_blob_memory_pool.xhtml#ae4697b43125a5f2498131d794b44d950">BlobMemoryPool</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_blob_memory_pool.xhtml">BlobMemoryPool</a> &amp;) = <span class="keyword">delete</span>;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <a class="code" href="classarm__compute_1_1_blob_memory_pool.xhtml">BlobMemoryPool</a> &amp;<a class="code" href="classarm__compute_1_1_blob_memory_pool.xhtml#a48ffa311cc6842633aff367dd6f0d601">operator=</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_blob_memory_pool.xhtml">BlobMemoryPool</a> &amp;) = <span class="keyword">delete</span>;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <a class="code" href="classarm__compute_1_1_blob_memory_pool.xhtml#ae4697b43125a5f2498131d794b44d950">BlobMemoryPool</a>(<a class="code" href="classarm__compute_1_1_blob_memory_pool.xhtml">BlobMemoryPool</a> &amp;&amp;) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <a class="code" href="classarm__compute_1_1_blob_memory_pool.xhtml">BlobMemoryPool</a> &amp;<a class="code" href="classarm__compute_1_1_blob_memory_pool.xhtml#a48ffa311cc6842633aff367dd6f0d601">operator=</a>(<a class="code" href="classarm__compute_1_1_blob_memory_pool.xhtml">BlobMemoryPool</a> &amp;&amp;) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <span class="comment">// Inherited methods overridden:</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_blob_memory_pool.xhtml#a93acd60164fb91350b542af0200410a6">acquire</a>(<a class="code" href="namespacearm__compute.xhtml#a762c7da7319adcc433b3ac7a67e18ed5">MemoryMappings</a> &amp;handles) <span class="keyword">override</span>;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_blob_memory_pool.xhtml#af47c67ca8d1961b09543879bb734e8be">release</a>(<a class="code" href="namespacearm__compute.xhtml#a762c7da7319adcc433b3ac7a67e18ed5">MemoryMappings</a> &amp;handles) <span class="keyword">override</span>;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#af0a4d6be70322c742c12da1edccbb74d">MappingType</a>                  <a class="code" href="classarm__compute_1_1_blob_memory_pool.xhtml#aafd3aa9650b1e764b085c76c4faa4cd5">mapping_type</a>() <span class="keyword">const override</span>;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    std::unique_ptr&lt;IMemoryPool&gt; <a class="code" href="classarm__compute_1_1_blob_memory_pool.xhtml#aceea990dd135afa94795f0ad3a532df5">duplicate</a>() <span class="keyword">override</span>;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <span class="keywordtype">void</span> allocate_blobs(<span class="keyword">const</span> std::vector&lt;size_t&gt; &amp;sizes);</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <span class="keywordtype">void</span> free_blobs();</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <a class="code" href="classarm__compute_1_1_i_allocator.xhtml">IAllocator</a>         *_allocator;  </div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    std::vector&lt;void *&gt; _blobs;      </div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    std::vector&lt;size_t&gt; _blob_sizes; </div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;};</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;} <span class="comment">// namespace arm_compute</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* __ARM_COMPUTE_BLOBMEMORYPOOL_H__ */</span><span class="preprocessor"></span></div><div class="ttc" id="classarm__compute_1_1_blob_memory_pool_xhtml_aafd3aa9650b1e764b085c76c4faa4cd5"><div class="ttname"><a href="classarm__compute_1_1_blob_memory_pool.xhtml#aafd3aa9650b1e764b085c76c4faa4cd5">arm_compute::BlobMemoryPool::mapping_type</a></div><div class="ttdeci">MappingType mapping_type() const override</div><div class="ttdoc">Returns the mapping types that this pool accepts. </div></div>
<div class="ttc" id="classarm__compute_1_1_blob_memory_pool_xhtml_a2e429f60410f02b72c74cae123aca669"><div class="ttname"><a href="classarm__compute_1_1_blob_memory_pool.xhtml#a2e429f60410f02b72c74cae123aca669">arm_compute::BlobMemoryPool::~BlobMemoryPool</a></div><div class="ttdeci">~BlobMemoryPool()</div><div class="ttdoc">Default Destructor. </div></div>
<div class="ttc" id="_i_memory_pool_8h_xhtml"><div class="ttname"><a href="_i_memory_pool_8h.xhtml">IMemoryPool.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_memory_pool_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_memory_pool.xhtml">arm_compute::IMemoryPool</a></div><div class="ttdoc">Memory Pool Inteface. </div><div class="ttdef"><b>Definition:</b> <a href="_i_memory_pool_8h_source.xhtml#l00037">IMemoryPool.h:37</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">This file contains all available output stages for GEMMLowp on OpenCL. </div><div class="ttdef"><b>Definition:</b> <a href="01__library_8dox_source.xhtml#l00001">01_library.dox:1</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_af0a4d6be70322c742c12da1edccbb74d"><div class="ttname"><a href="namespacearm__compute.xhtml#af0a4d6be70322c742c12da1edccbb74d">arm_compute::MappingType</a></div><div class="ttdeci">MappingType</div><div class="ttdoc">Mapping type. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2runtime_2_types_8h_source.xhtml#l00032">Types.h:32</a></div></div>
<div class="ttc" id="classarm__compute_1_1_blob_memory_pool_xhtml_a93acd60164fb91350b542af0200410a6"><div class="ttname"><a href="classarm__compute_1_1_blob_memory_pool.xhtml#a93acd60164fb91350b542af0200410a6">arm_compute::BlobMemoryPool::acquire</a></div><div class="ttdeci">void acquire(MemoryMappings &amp;handles) override</div><div class="ttdoc">Sets occupant to the memory pool. </div></div>
<div class="ttc" id="classarm__compute_1_1_blob_memory_pool_xhtml_ae4697b43125a5f2498131d794b44d950"><div class="ttname"><a href="classarm__compute_1_1_blob_memory_pool.xhtml#ae4697b43125a5f2498131d794b44d950">arm_compute::BlobMemoryPool::BlobMemoryPool</a></div><div class="ttdeci">BlobMemoryPool(IAllocator *allocator, std::vector&lt; size_t &gt; blob_sizes)</div><div class="ttdoc">Default Constructor. </div></div>
<div class="ttc" id="classarm__compute_1_1_blob_memory_pool_xhtml"><div class="ttname"><a href="classarm__compute_1_1_blob_memory_pool.xhtml">arm_compute::BlobMemoryPool</a></div><div class="ttdoc">Blob memory pool. </div><div class="ttdef"><b>Definition:</b> <a href="_blob_memory_pool_8h_source.xhtml#l00040">BlobMemoryPool.h:40</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_allocator_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_allocator.xhtml">arm_compute::IAllocator</a></div><div class="ttdoc">Allocator interface. </div><div class="ttdef"><b>Definition:</b> <a href="_i_allocator_8h_source.xhtml#l00032">IAllocator.h:32</a></div></div>
<div class="ttc" id="classarm__compute_1_1_blob_memory_pool_xhtml_aceea990dd135afa94795f0ad3a532df5"><div class="ttname"><a href="classarm__compute_1_1_blob_memory_pool.xhtml#aceea990dd135afa94795f0ad3a532df5">arm_compute::BlobMemoryPool::duplicate</a></div><div class="ttdeci">std::unique_ptr&lt; IMemoryPool &gt; duplicate() override</div><div class="ttdoc">Duplicates the existing memory pool. </div></div>
<div class="ttc" id="classarm__compute_1_1_blob_memory_pool_xhtml_af47c67ca8d1961b09543879bb734e8be"><div class="ttname"><a href="classarm__compute_1_1_blob_memory_pool.xhtml#af47c67ca8d1961b09543879bb734e8be">arm_compute::BlobMemoryPool::release</a></div><div class="ttdeci">void release(MemoryMappings &amp;handles) override</div><div class="ttdoc">Releases a memory block. </div></div>
<div class="ttc" id="arm__compute_2runtime_2_types_8h_xhtml"><div class="ttname"><a href="arm__compute_2runtime_2_types_8h.xhtml">Types.h</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a762c7da7319adcc433b3ac7a67e18ed5"><div class="ttname"><a href="namespacearm__compute.xhtml#a762c7da7319adcc433b3ac7a67e18ed5">arm_compute::MemoryMappings</a></div><div class="ttdeci">std::map&lt; void **, size_t &gt; MemoryMappings</div><div class="ttdoc">A map of (handle, index/offset), where handle is the memory handle of the object to provide the memor...</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2runtime_2_types_8h_source.xhtml#l00043">Types.h:43</a></div></div>
<div class="ttc" id="classarm__compute_1_1_blob_memory_pool_xhtml_a48ffa311cc6842633aff367dd6f0d601"><div class="ttname"><a href="classarm__compute_1_1_blob_memory_pool.xhtml#a48ffa311cc6842633aff367dd6f0d601">arm_compute::BlobMemoryPool::operator=</a></div><div class="ttdeci">BlobMemoryPool &amp; operator=(const BlobMemoryPool &amp;)=delete</div><div class="ttdoc">Prevent instances of this class to be copy assigned. </div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_214608ef36d61442cb2b0c1c4e9a7def.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="dir_8bc26130589aa16388b5a02f17abf2c2.xhtml">runtime</a></li><li class="navelem"><a class="el" href="_blob_memory_pool_8h.xhtml">BlobMemoryPool.h</a></li>
    <li class="footer">Generated on Thu Dec 14 2017 23:48:31 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
  </ul>
</div>
</body>
</html>
