<!-- HTML header for doxygen 1.8.9.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: InstrumentsStats Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Compute Library
   &#160;<span id="projectnumber">18.03</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li><a href="classes.xhtml"><span>Data&#160;Structure&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Data&#160;Fields</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarm__compute_1_1test_1_1framework_1_1_instruments_stats.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">InstrumentsStats Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Generate common statistics for a set of measurements.  
 <a href="classarm__compute_1_1test_1_1framework_1_1_instruments_stats.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_instruments_stats_8h_source.xhtml">InstrumentsStats.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a948b96537414305a030be8150cac2522"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instruments_stats.xhtml#a948b96537414305a030be8150cac2522">InstrumentsStats</a> (const std::vector&lt; <a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml">Measurement</a> &gt; &amp;measurements)</td></tr>
<tr class="memdesc:a948b96537414305a030be8150cac2522"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compute statistics for the passed set of measurements.  <a href="#a948b96537414305a030be8150cac2522">More...</a><br /></td></tr>
<tr class="separator:a948b96537414305a030be8150cac2522"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d5b954f8e4b47bda9d41a6c47fd0735"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml">Measurement</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instruments_stats.xhtml#a9d5b954f8e4b47bda9d41a6c47fd0735">min</a> () const </td></tr>
<tr class="memdesc:a9d5b954f8e4b47bda9d41a6c47fd0735"><td class="mdescLeft">&#160;</td><td class="mdescRight">The measurement with the minimum value.  <a href="#a9d5b954f8e4b47bda9d41a6c47fd0735">More...</a><br /></td></tr>
<tr class="separator:a9d5b954f8e4b47bda9d41a6c47fd0735"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5378e6e486090c47ac55da43a654e93d"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml">Measurement</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instruments_stats.xhtml#a5378e6e486090c47ac55da43a654e93d">max</a> () const </td></tr>
<tr class="memdesc:a5378e6e486090c47ac55da43a654e93d"><td class="mdescLeft">&#160;</td><td class="mdescRight">The measurement with the maximum value.  <a href="#a5378e6e486090c47ac55da43a654e93d">More...</a><br /></td></tr>
<tr class="separator:a5378e6e486090c47ac55da43a654e93d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad67cc28ec6eb667ca284f1933322e43e"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml">Measurement</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instruments_stats.xhtml#ad67cc28ec6eb667ca284f1933322e43e">median</a> () const </td></tr>
<tr class="memdesc:ad67cc28ec6eb667ca284f1933322e43e"><td class="mdescLeft">&#160;</td><td class="mdescRight">The median measurement.  <a href="#ad67cc28ec6eb667ca284f1933322e43e">More...</a><br /></td></tr>
<tr class="separator:ad67cc28ec6eb667ca284f1933322e43e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3281a4429af640fd91dbcfea65350fee"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml">Measurement::Value</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instruments_stats.xhtml#a3281a4429af640fd91dbcfea65350fee">mean</a> () const </td></tr>
<tr class="memdesc:a3281a4429af640fd91dbcfea65350fee"><td class="mdescLeft">&#160;</td><td class="mdescRight">The average of all the measurements.  <a href="#a3281a4429af640fd91dbcfea65350fee">More...</a><br /></td></tr>
<tr class="separator:a3281a4429af640fd91dbcfea65350fee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a155015b9a1c2f991a2089c6e78425d1a"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instruments_stats.xhtml#a155015b9a1c2f991a2089c6e78425d1a">relative_standard_deviation</a> () const </td></tr>
<tr class="memdesc:a155015b9a1c2f991a2089c6e78425d1a"><td class="mdescLeft">&#160;</td><td class="mdescRight">The relative standard deviation of the measurements.  <a href="#a155015b9a1c2f991a2089c6e78425d1a">More...</a><br /></td></tr>
<tr class="separator:a155015b9a1c2f991a2089c6e78425d1a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Generate common statistics for a set of measurements. </p>

<p>Definition at line <a class="el" href="_instruments_stats_8h_source.xhtml#l00039">39</a> of file <a class="el" href="_instruments_stats_8h_source.xhtml">InstrumentsStats.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a948b96537414305a030be8150cac2522"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instruments_stats.xhtml">InstrumentsStats</a> </td>
          <td>(</td>
          <td class="paramtype">const std::vector&lt; <a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml">Measurement</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>measurements</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Compute statistics for the passed set of measurements. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">measurements</td><td>The measurements to process </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="_instruments_stats_8cpp_source.xhtml#l00033">33</a> of file <a class="el" href="_instruments_stats_8cpp_source.xhtml">InstrumentsStats.cpp</a>.</p>

<p>References <a class="el" href="validation_2_c_l_2_g_e_m_m_8cpp_source.xhtml#l00121">arm_compute::test::validation::a</a>, <a class="el" href="accumulate_8cl_source.xhtml#l00041">accumulate()</a>, <a class="el" href="validation_2_c_l_2_g_e_m_m_8cpp_source.xhtml#l00122">arm_compute::test::validation::b</a>, <a class="el" href="_measurement_8h_source.xhtml#l00208">Measurement::Value::is_floating_point</a>, <a class="el" href="_measurement_8h_source.xhtml#l00190">Measurement::Value::relative_standard_deviation()</a>, <a class="el" href="utility_8h_source.xhtml#l00154">arm_compute::utility::sort_indices()</a>, and <a class="el" href="_measurement_8h_source.xhtml#l00288">Measurement::value()</a>.</p>
<div class="fragment"><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    : _min(<span class="keyword">nullptr</span>), _max(<span class="keyword">nullptr</span>), _median(<span class="keyword">nullptr</span>), _mean(measurements.begin()-&gt;value().is_floating_point), _stddev(0.0)</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;{</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    <span class="keyword">auto</span> add_measurements = [](Measurement::Value <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aac40b7097f2bda9274ae07fa33d15a79">a</a>, <span class="keyword">const</span> Measurement &amp; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7b8004eef325a40dd43eb80755610fff">b</a>)</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    {</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;        <span class="keywordflow">return</span> a + <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7b8004eef325a40dd43eb80755610fff">b</a>.value();</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    };</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    <span class="comment">//Calculate min, max &amp; median values</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <span class="keyword">auto</span> indices = <a class="code" href="namespacearm__compute_1_1utility.xhtml#a0c1a72cd100958036bb59f0625f0613f">arm_compute::utility::sort_indices</a>(measurements);</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    _median      = &amp;measurements[indices[measurements.size() / 2]];</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    _min         = &amp;measurements[indices[0]];</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    _max         = &amp;measurements[indices[measurements.size() - 1]];</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    Measurement::Value sum_values = <a class="code" href="accumulate_8cl.xhtml#a00e540076dd545ad59ac7482f8cdf514">std::accumulate</a>(measurements.begin(), measurements.end(), Measurement::Value(_min-&gt;<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml#a5a69ff08e2ead1fb8b4dbb15cbdf6a09">value</a>().<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#aea625d488d9eafbc023001f74f15f7af">is_floating_point</a>), add_measurements);</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="comment">// Calculate the relative standard deviation</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    _mean = sum_values / measurements.size();</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    std::vector&lt;Measurement::Value&gt; diff(measurements.size(), _min-&gt;<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml#a5a69ff08e2ead1fb8b4dbb15cbdf6a09">value</a>().<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#aea625d488d9eafbc023001f74f15f7af">is_floating_point</a>);</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    std::transform(measurements.begin(), measurements.end(), diff.begin(), [&amp;](<span class="keyword">const</span> Measurement &amp; x)</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    {</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        <span class="keywordflow">return</span> x.value() - _mean;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    });</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <span class="keyword">auto</span> sq_sum   = std::inner_product(diff.begin(), diff.end(), diff.begin(), Measurement::Value(_min-&gt;<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml#a5a69ff08e2ead1fb8b4dbb15cbdf6a09">value</a>().<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#aea625d488d9eafbc023001f74f15f7af">is_floating_point</a>));</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="keyword">auto</span> variance = sq_sum / measurements.size();</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    _stddev       = <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#a9666a65078cee68787a9aad555ad0793">Measurement::Value::relative_standard_deviation</a>(variance, _mean);</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;}</div><div class="ttc" id="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value_xhtml_a9666a65078cee68787a9aad555ad0793"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#a9666a65078cee68787a9aad555ad0793">arm_compute::test::framework::Measurement::Value::relative_standard_deviation</a></div><div class="ttdeci">static double relative_standard_deviation(const Value &amp;variance, const Value &amp;mean)</div><div class="ttdef"><b>Definition:</b> <a href="_measurement_8h_source.xhtml#l00190">Measurement.h:190</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1framework_1_1_measurement_xhtml_a5a69ff08e2ead1fb8b4dbb15cbdf6a09"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml#a5a69ff08e2ead1fb8b4dbb15cbdf6a09">arm_compute::test::framework::Measurement::value</a></div><div class="ttdeci">const Value &amp; value() const </div><div class="ttdoc">Accessor for the stored value. </div><div class="ttdef"><b>Definition:</b> <a href="_measurement_8h_source.xhtml#l00288">Measurement.h:288</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_aac40b7097f2bda9274ae07fa33d15a79"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#aac40b7097f2bda9274ae07fa33d15a79">arm_compute::test::validation::a</a></div><div class="ttdeci">CLTensor a</div><div class="ttdef"><b>Definition:</b> <a href="validation_2_c_l_2_g_e_m_m_8cpp_source.xhtml#l00121">GEMM.cpp:121</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value_xhtml_aea625d488d9eafbc023001f74f15f7af"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#aea625d488d9eafbc023001f74f15f7af">arm_compute::test::framework::Measurement::Value::is_floating_point</a></div><div class="ttdeci">bool is_floating_point</div><div class="ttdoc">Is the stored value floating point or integer ? </div><div class="ttdef"><b>Definition:</b> <a href="_measurement_8h_source.xhtml#l00208">Measurement.h:208</a></div></div>
<div class="ttc" id="accumulate_8cl_xhtml_a00e540076dd545ad59ac7482f8cdf514"><div class="ttname"><a href="accumulate_8cl.xhtml#a00e540076dd545ad59ac7482f8cdf514">accumulate</a></div><div class="ttdeci">__kernel void accumulate(__global uchar *input_ptr, uint input_stride_x, uint input_step_x, uint input_stride_y, uint input_step_y, uint input_offset_first_element_in_bytes, __global uchar *accu_ptr, uint accu_stride_x, uint accu_step_x, uint accu_stride_y, uint accu_step_y, uint accu_offset_first_element_in_bytes)</div><div class="ttdoc">This function accumulates an input image into output image. </div><div class="ttdef"><b>Definition:</b> <a href="accumulate_8cl_source.xhtml#l00041">accumulate.cl:41</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a7b8004eef325a40dd43eb80755610fff"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a7b8004eef325a40dd43eb80755610fff">arm_compute::test::validation::b</a></div><div class="ttdeci">CLTensor b</div><div class="ttdef"><b>Definition:</b> <a href="validation_2_c_l_2_g_e_m_m_8cpp_source.xhtml#l00122">GEMM.cpp:122</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1utility_xhtml_a0c1a72cd100958036bb59f0625f0613f"><div class="ttname"><a href="namespacearm__compute_1_1utility.xhtml#a0c1a72cd100958036bb59f0625f0613f">arm_compute::utility::sort_indices</a></div><div class="ttdeci">std::vector&lt; size_t &gt; sort_indices(const std::vector&lt; T &gt; &amp;v)</div><div class="ttdoc">Perform an index sort of a given vector. </div><div class="ttdef"><b>Definition:</b> <a href="utility_8h_source.xhtml#l00154">utility.h:154</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a5378e6e486090c47ac55da43a654e93d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml">Measurement</a>&amp; max </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The measurement with the maximum value. </p>

<p>Definition at line <a class="el" href="_instruments_stats_8h_source.xhtml#l00055">55</a> of file <a class="el" href="_instruments_stats_8h_source.xhtml">InstrumentsStats.h</a>.</p>

<p>Referenced by <a class="el" href="_pretty_printer_8cpp_source.xhtml#l00119">PrettyPrinter::print_measurements()</a>.</p>
<div class="fragment"><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    {</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        <span class="keywordflow">return</span> *_max;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a3281a4429af640fd91dbcfea65350fee"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml">Measurement::Value</a>&amp; mean </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The average of all the measurements. </p>

<p>Definition at line <a class="el" href="_instruments_stats_8h_source.xhtml#l00067">67</a> of file <a class="el" href="_instruments_stats_8h_source.xhtml">InstrumentsStats.h</a>.</p>

<p>Referenced by <a class="el" href="_pretty_printer_8cpp_source.xhtml#l00119">PrettyPrinter::print_measurements()</a>.</p>
<div class="fragment"><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    {</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        <span class="keywordflow">return</span> _mean;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ad67cc28ec6eb667ca284f1933322e43e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml">Measurement</a>&amp; median </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The median measurement. </p>

<p>Definition at line <a class="el" href="_instruments_stats_8h_source.xhtml#l00061">61</a> of file <a class="el" href="_instruments_stats_8h_source.xhtml">InstrumentsStats.h</a>.</p>

<p>Referenced by <a class="el" href="_pretty_printer_8cpp_source.xhtml#l00119">PrettyPrinter::print_measurements()</a>.</p>
<div class="fragment"><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    {</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        <span class="keywordflow">return</span> *_median;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a9d5b954f8e4b47bda9d41a6c47fd0735"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml">Measurement</a>&amp; min </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The measurement with the minimum value. </p>

<p>Definition at line <a class="el" href="_instruments_stats_8h_source.xhtml#l00049">49</a> of file <a class="el" href="_instruments_stats_8h_source.xhtml">InstrumentsStats.h</a>.</p>

<p>Referenced by <a class="el" href="_pretty_printer_8cpp_source.xhtml#l00119">PrettyPrinter::print_measurements()</a>.</p>
<div class="fragment"><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    {</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        <span class="keywordflow">return</span> *_min;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a155015b9a1c2f991a2089c6e78425d1a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">double relative_standard_deviation </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The relative standard deviation of the measurements. </p>

<p>Definition at line <a class="el" href="_instruments_stats_8h_source.xhtml#l00073">73</a> of file <a class="el" href="_instruments_stats_8h_source.xhtml">InstrumentsStats.h</a>.</p>

<p>Referenced by <a class="el" href="_pretty_printer_8cpp_source.xhtml#l00119">PrettyPrinter::print_measurements()</a>.</p>
<div class="fragment"><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    {</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        <span class="keywordflow">return</span> _stddev;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>tests/framework/instruments/<a class="el" href="_instruments_stats_8h_source.xhtml">InstrumentsStats.h</a></li>
<li>tests/framework/instruments/<a class="el" href="_instruments_stats_8cpp_source.xhtml">InstrumentsStats.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1test.xhtml">test</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml">framework</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instruments_stats.xhtml">InstrumentsStats</a></li>
    <li class="footer">Generated on Fri Mar 2 2018 12:38:00 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
  </ul>
</div>
</body>
</html>
