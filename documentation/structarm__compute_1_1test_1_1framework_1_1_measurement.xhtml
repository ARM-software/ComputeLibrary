<!-- HTML header for doxygen 1.8.9.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: Measurement Struct Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Compute Library
   &#160;<span id="projectnumber">17.12</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li><a href="classes.xhtml"><span>Data&#160;Structure&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Data&#160;Fields</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#friends">Friends</a>  </div>
  <div class="headertitle">
<div class="title">Measurement Struct Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Generic measurement that stores values as either double or long long int.  
 <a href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_measurement_8h_source.xhtml">Measurement.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml">Value</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a2ccc04c46bf09fcd434dc103f8ca9b2b"><td class="memTemplParams" colspan="2">template&lt;typename Floating , typename std::enable_if&lt; !std::is_integral&lt; Floating &gt;::value, int &gt;::type  = 0&gt; </td></tr>
<tr class="memitem:a2ccc04c46bf09fcd434dc103f8ca9b2b"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml#a2ccc04c46bf09fcd434dc103f8ca9b2b">Measurement</a> (Floating v, std::string <a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml#a17407369cfeffaf5df87ff044e43af82">unit</a>, std::list&lt; std::string &gt; raw={})</td></tr>
<tr class="memdesc:a2ccc04c46bf09fcd434dc103f8ca9b2b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor to store a floating point value.  <a href="#a2ccc04c46bf09fcd434dc103f8ca9b2b">More...</a><br /></td></tr>
<tr class="separator:a2ccc04c46bf09fcd434dc103f8ca9b2b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed021625a622269b23e2916fc1e06dac"><td class="memTemplParams" colspan="2">template&lt;typename Integer , typename std::enable_if&lt; std::is_integral&lt; Integer &gt;::value, int &gt;::type  = 0&gt; </td></tr>
<tr class="memitem:aed021625a622269b23e2916fc1e06dac"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml#aed021625a622269b23e2916fc1e06dac">Measurement</a> (Integer v, std::string <a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml#a17407369cfeffaf5df87ff044e43af82">unit</a>, std::list&lt; std::string &gt; raw={})</td></tr>
<tr class="memdesc:aed021625a622269b23e2916fc1e06dac"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor to store an integer value.  <a href="#aed021625a622269b23e2916fc1e06dac">More...</a><br /></td></tr>
<tr class="separator:aed021625a622269b23e2916fc1e06dac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a17407369cfeffaf5df87ff044e43af82"><td class="memItemLeft" align="right" valign="top">const std::string &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml#a17407369cfeffaf5df87ff044e43af82">unit</a> () const </td></tr>
<tr class="memdesc:a17407369cfeffaf5df87ff044e43af82"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classarm__compute_1_1test_1_1_accessor.xhtml" title="Accessor implementation for Tensor objects. ">Accessor</a> for the unit of the measurement.  <a href="#a17407369cfeffaf5df87ff044e43af82">More...</a><br /></td></tr>
<tr class="separator:a17407369cfeffaf5df87ff044e43af82"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0623ef2a13ff9b6728dff006ae6cbc47"><td class="memItemLeft" align="right" valign="top">const std::list&lt; std::string &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml#a0623ef2a13ff9b6728dff006ae6cbc47">raw_data</a> () const </td></tr>
<tr class="memdesc:a0623ef2a13ff9b6728dff006ae6cbc47"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classarm__compute_1_1test_1_1_accessor.xhtml" title="Accessor implementation for Tensor objects. ">Accessor</a> for the raw data.  <a href="#a0623ef2a13ff9b6728dff006ae6cbc47">More...</a><br /></td></tr>
<tr class="separator:a0623ef2a13ff9b6728dff006ae6cbc47"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5a69ff08e2ead1fb8b4dbb15cbdf6a09"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml">Value</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml#a5a69ff08e2ead1fb8b4dbb15cbdf6a09">value</a> () const </td></tr>
<tr class="memdesc:a5a69ff08e2ead1fb8b4dbb15cbdf6a09"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classarm__compute_1_1test_1_1_accessor.xhtml" title="Accessor implementation for Tensor objects. ">Accessor</a> for the stored value.  <a href="#a5a69ff08e2ead1fb8b4dbb15cbdf6a09">More...</a><br /></td></tr>
<tr class="separator:a5a69ff08e2ead1fb8b4dbb15cbdf6a09"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:ae0068ee19905d634193a92821067606c"><td class="memItemLeft" align="right" valign="top">std::ostream &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml#ae0068ee19905d634193a92821067606c">operator&lt;&lt;</a> (std::ostream &amp;os, const <a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml">Measurement</a> &amp;measurement)</td></tr>
<tr class="memdesc:ae0068ee19905d634193a92821067606c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Stream output operator to print the measurement.  <a href="#ae0068ee19905d634193a92821067606c">More...</a><br /></td></tr>
<tr class="separator:ae0068ee19905d634193a92821067606c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Generic measurement that stores values as either double or long long int. </p>

<p>Definition at line <a class="el" href="_measurement_8h_source.xhtml#l00041">41</a> of file <a class="el" href="_measurement_8h_source.xhtml">Measurement.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a2ccc04c46bf09fcd434dc103f8ca9b2b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml">Measurement</a> </td>
          <td>(</td>
          <td class="paramtype">Floating&#160;</td>
          <td class="paramname"><em>v</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::string&#160;</td>
          <td class="paramname"><em>unit</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::list&lt; std::string &gt;&#160;</td>
          <td class="paramname"><em>raw</em> = <code>{}</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Constructor to store a floating point value. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">v</td><td><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml">Value</a> to store </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">unit</td><td>Unit of <code>v</code> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">raw</td><td>(Optional) The raw value(s) <code>was</code> generated from. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="_measurement_8h_source.xhtml#l00228">228</a> of file <a class="el" href="_measurement_8h_source.xhtml">Measurement.h</a>.</p>

<p>References <a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#a63d8879fa76962b7d0e6cb0364be2e34">Measurement::Value::v</a>, and <a class="el" href="hwc_8hpp_source.xhtml#l00269">value</a>.</p>
<div class="fragment"><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;                                                                     {})</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;        : _unit(<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml#a17407369cfeffaf5df87ff044e43af82">unit</a>), _raw_data(std::move(raw)), _value(<span class="keyword">true</span>)</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    {</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;        _value.<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#a63d8879fa76962b7d0e6cb0364be2e34">v</a>.<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#ab32110eb040749e72f53d1a7ee30c25b">floating_point</a> = <span class="keyword">static_cast&lt;</span><span class="keywordtype">double</span><span class="keyword">&gt;</span>(v);</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;        <span class="keywordflow">if</span>(_raw_data.empty())</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;        {</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;            _raw_data = { _value.<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#aa48c39f92bc04eded742f5310c74aafe">to_string</a>() };</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;        }</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    }</div><div class="ttc" id="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value_xhtml_ab32110eb040749e72f53d1a7ee30c25b"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#ab32110eb040749e72f53d1a7ee30c25b">arm_compute::test::framework::Measurement::Value::floating_point</a></div><div class="ttdeci">double floating_point</div><div class="ttdef"><b>Definition:</b> <a href="_measurement_8h_source.xhtml#l00205">Measurement.h:205</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value_xhtml_a63d8879fa76962b7d0e6cb0364be2e34"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#a63d8879fa76962b7d0e6cb0364be2e34">arm_compute::test::framework::Measurement::Value::v</a></div><div class="ttdeci">union arm_compute::test::framework::Measurement::Value::@8 v</div><div class="ttdoc">Stored value. </div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value_xhtml_aa48c39f92bc04eded742f5310c74aafe"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#aa48c39f92bc04eded742f5310c74aafe">arm_compute::test::framework::Measurement::Value::to_string</a></div><div class="ttdeci">std::string to_string() const </div><div class="ttdoc">Convert the value stored to string. </div><div class="ttdef"><b>Definition:</b> <a href="_measurement_8h_source.xhtml#l00070">Measurement.h:70</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1framework_1_1_measurement_xhtml_a17407369cfeffaf5df87ff044e43af82"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml#a17407369cfeffaf5df87ff044e43af82">arm_compute::test::framework::Measurement::unit</a></div><div class="ttdeci">const std::string &amp; unit() const </div><div class="ttdoc">Accessor for the unit of the measurement. </div><div class="ttdef"><b>Definition:</b> <a href="_measurement_8h_source.xhtml#l00259">Measurement.h:259</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="aed021625a622269b23e2916fc1e06dac"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml">Measurement</a> </td>
          <td>(</td>
          <td class="paramtype">Integer&#160;</td>
          <td class="paramname"><em>v</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::string&#160;</td>
          <td class="paramname"><em>unit</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::list&lt; std::string &gt;&#160;</td>
          <td class="paramname"><em>raw</em> = <code>{}</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Constructor to store an integer value. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">v</td><td><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml">Value</a> to store </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">unit</td><td>Unit of <code>v</code> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">raw</td><td>(Optional) The raw value(s) <code>was</code> generated from. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="_measurement_8h_source.xhtml#l00245">245</a> of file <a class="el" href="_measurement_8h_source.xhtml">Measurement.h</a>.</p>

<p>References <a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#a63d8879fa76962b7d0e6cb0364be2e34">Measurement::Value::v</a>.</p>
<div class="fragment"><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;                                                                    {})</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;        : _unit(<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml#a17407369cfeffaf5df87ff044e43af82">unit</a>), _raw_data(std::move(raw)), _value(<span class="keyword">false</span>)</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    {</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;        _value.<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#a63d8879fa76962b7d0e6cb0364be2e34">v</a>.<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#a5283f2dae5da803262f8deb3c71525f0">integer</a> = <span class="keyword">static_cast&lt;</span><span class="keywordtype">long</span> <span class="keywordtype">long</span> <span class="keywordtype">int</span><span class="keyword">&gt;</span>(v);</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;        <span class="keywordflow">if</span>(_raw_data.empty())</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;        {</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;            _raw_data = { _value.<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#aa48c39f92bc04eded742f5310c74aafe">to_string</a>() };</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;        }</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    }</div><div class="ttc" id="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value_xhtml_a63d8879fa76962b7d0e6cb0364be2e34"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#a63d8879fa76962b7d0e6cb0364be2e34">arm_compute::test::framework::Measurement::Value::v</a></div><div class="ttdeci">union arm_compute::test::framework::Measurement::Value::@8 v</div><div class="ttdoc">Stored value. </div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value_xhtml_a5283f2dae5da803262f8deb3c71525f0"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#a5283f2dae5da803262f8deb3c71525f0">arm_compute::test::framework::Measurement::Value::integer</a></div><div class="ttdeci">long long int integer</div><div class="ttdef"><b>Definition:</b> <a href="_measurement_8h_source.xhtml#l00206">Measurement.h:206</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value_xhtml_aa48c39f92bc04eded742f5310c74aafe"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#aa48c39f92bc04eded742f5310c74aafe">arm_compute::test::framework::Measurement::Value::to_string</a></div><div class="ttdeci">std::string to_string() const </div><div class="ttdoc">Convert the value stored to string. </div><div class="ttdef"><b>Definition:</b> <a href="_measurement_8h_source.xhtml#l00070">Measurement.h:70</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1framework_1_1_measurement_xhtml_a17407369cfeffaf5df87ff044e43af82"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml#a17407369cfeffaf5df87ff044e43af82">arm_compute::test::framework::Measurement::unit</a></div><div class="ttdeci">const std::string &amp; unit() const </div><div class="ttdoc">Accessor for the unit of the measurement. </div><div class="ttdef"><b>Definition:</b> <a href="_measurement_8h_source.xhtml#l00259">Measurement.h:259</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a0623ef2a13ff9b6728dff006ae6cbc47"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const std::list&lt;std::string&gt;&amp; raw_data </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p><a class="el" href="classarm__compute_1_1test_1_1_accessor.xhtml" title="Accessor implementation for Tensor objects. ">Accessor</a> for the raw data. </p>
<dl class="section return"><dt>Returns</dt><dd>The raw data </dd></dl>

<p>Definition at line <a class="el" href="_measurement_8h_source.xhtml#l00268">268</a> of file <a class="el" href="_measurement_8h_source.xhtml">Measurement.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;    {</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;        <span class="keywordflow">return</span> _raw_data;</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a17407369cfeffaf5df87ff044e43af82"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const std::string&amp; unit </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p><a class="el" href="classarm__compute_1_1test_1_1_accessor.xhtml" title="Accessor implementation for Tensor objects. ">Accessor</a> for the unit of the measurement. </p>
<dl class="section return"><dt>Returns</dt><dd>Unit of the measurement </dd></dl>

<p>Definition at line <a class="el" href="_measurement_8h_source.xhtml#l00259">259</a> of file <a class="el" href="_measurement_8h_source.xhtml">Measurement.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;    {</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;        <span class="keywordflow">return</span> _unit;</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a5a69ff08e2ead1fb8b4dbb15cbdf6a09"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml">Value</a>&amp; value </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p><a class="el" href="classarm__compute_1_1test_1_1_accessor.xhtml" title="Accessor implementation for Tensor objects. ">Accessor</a> for the stored value. </p>
<dl class="section return"><dt>Returns</dt><dd>The stored value </dd></dl>

<p>Definition at line <a class="el" href="_measurement_8h_source.xhtml#l00277">277</a> of file <a class="el" href="_measurement_8h_source.xhtml">Measurement.h</a>.</p>

<p>Referenced by <a class="el" href="_j_s_o_n_printer_8cpp_source.xhtml#l00172">JSONPrinter::print_measurements()</a>, and <a class="el" href="_pretty_printer_8cpp_source.xhtml#l00118">PrettyPrinter::print_measurements()</a>.</p>
<div class="fragment"><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;    {</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;        <span class="keywordflow">return</span> _value;</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Friends And Related Function Documentation</h2>
<a class="anchor" id="ae0068ee19905d634193a92821067606c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::ostream&amp; operator&lt;&lt; </td>
          <td>(</td>
          <td class="paramtype">std::ostream &amp;&#160;</td>
          <td class="paramname"><em>os</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml">Measurement</a> &amp;&#160;</td>
          <td class="paramname"><em>measurement</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">friend</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Stream output operator to print the measurement. </p>
<p>Prints value and unit. </p>

<p>Definition at line <a class="el" href="_measurement_8h_source.xhtml#l00215">215</a> of file <a class="el" href="_measurement_8h_source.xhtml">Measurement.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    {</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;        os &lt;&lt; measurement._value &lt;&lt; <span class="stringliteral">&quot; &quot;</span> &lt;&lt; measurement._unit;</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;        <span class="keywordflow">return</span> os;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this struct was generated from the following file:<ul>
<li>tests/framework/instruments/<a class="el" href="_measurement_8h_source.xhtml">Measurement.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1test.xhtml">test</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml">framework</a></li><li class="navelem"><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml">Measurement</a></li>
    <li class="footer">Generated on Thu Dec 14 2017 23:48:38 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
  </ul>
</div>
</body>
</html>
