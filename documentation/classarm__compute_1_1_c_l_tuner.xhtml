<!-- HTML header for doxygen 1.8.9.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: CLTuner Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Compute Library
   &#160;<span id="projectnumber">18.03</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li><a href="classes.xhtml"><span>Data&#160;Structure&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Data&#160;Fields</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarm__compute_1_1_c_l_tuner.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Data Fields</a>  </div>
  <div class="headertitle">
<div class="title">CLTuner Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Basic implementation of the OpenCL tuner interface.  
 <a href="classarm__compute_1_1_c_l_tuner.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_c_l_tuner_8h_source.xhtml">CLTuner.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for CLTuner:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classarm__compute_1_1_c_l_tuner__coll__graph.svg" width="84" height="112"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ad551ac5b533cac7908910085117f5ca8"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_tuner.xhtml#ad551ac5b533cac7908910085117f5ca8">CLTuner</a> (bool <a class="el" href="classarm__compute_1_1_c_l_tuner.xhtml#a0ec76a5771b9521b947754d582635638">tune_new_kernels</a>=true)</td></tr>
<tr class="memdesc:ad551ac5b533cac7908910085117f5ca8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="#ad551ac5b533cac7908910085117f5ca8">More...</a><br /></td></tr>
<tr class="separator:ad551ac5b533cac7908910085117f5ca8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a577ac5b9d244bdf031905faaf08b968c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_tuner.xhtml#a577ac5b9d244bdf031905faaf08b968c">~CLTuner</a> ()=default</td></tr>
<tr class="memdesc:a577ac5b9d244bdf031905faaf08b968c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="#a577ac5b9d244bdf031905faaf08b968c">More...</a><br /></td></tr>
<tr class="separator:a577ac5b9d244bdf031905faaf08b968c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aba10acdb2d58e3e0a96364c487a71d40"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_tuner.xhtml#aba10acdb2d58e3e0a96364c487a71d40">set_tune_new_kernels</a> (bool <a class="el" href="classarm__compute_1_1_c_l_tuner.xhtml#a0ec76a5771b9521b947754d582635638">tune_new_kernels</a>)</td></tr>
<tr class="memdesc:aba10acdb2d58e3e0a96364c487a71d40"><td class="mdescLeft">&#160;</td><td class="mdescRight">Setter for tune_new_kernels option.  <a href="#aba10acdb2d58e3e0a96364c487a71d40">More...</a><br /></td></tr>
<tr class="separator:aba10acdb2d58e3e0a96364c487a71d40"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0ec76a5771b9521b947754d582635638"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_tuner.xhtml#a0ec76a5771b9521b947754d582635638">tune_new_kernels</a> () const </td></tr>
<tr class="memdesc:a0ec76a5771b9521b947754d582635638"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tune kernels that are not in the LWS table.  <a href="#a0ec76a5771b9521b947754d582635638">More...</a><br /></td></tr>
<tr class="separator:a0ec76a5771b9521b947754d582635638"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7de8b49d3ae94affb80ba48945368a8a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_tuner.xhtml#a7de8b49d3ae94affb80ba48945368a8a">add_lws_to_table</a> (const std::string &amp;kernel_id, cl::NDRange optimal_lws)</td></tr>
<tr class="memdesc:a7de8b49d3ae94affb80ba48945368a8a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Manually add a LWS for a kernel.  <a href="#a7de8b49d3ae94affb80ba48945368a8a">More...</a><br /></td></tr>
<tr class="separator:a7de8b49d3ae94affb80ba48945368a8a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaf692ee51358d05ca65755a92591f815"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_tuner.xhtml#aaf692ee51358d05ca65755a92591f815">import_lws_table</a> (const std::unordered_map&lt; std::string, cl::NDRange &gt; &amp;<a class="el" href="classarm__compute_1_1_c_l_tuner.xhtml#a14d465f5c80ab980a9f5611eb80fa43c">lws_table</a>)</td></tr>
<tr class="memdesc:aaf692ee51358d05ca65755a92591f815"><td class="mdescLeft">&#160;</td><td class="mdescRight">Import LWS table.  <a href="#aaf692ee51358d05ca65755a92591f815">More...</a><br /></td></tr>
<tr class="separator:aaf692ee51358d05ca65755a92591f815"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a14d465f5c80ab980a9f5611eb80fa43c"><td class="memItemLeft" align="right" valign="top">const std::unordered_map&lt; std::string, cl::NDRange &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_tuner.xhtml#a14d465f5c80ab980a9f5611eb80fa43c">lws_table</a> () const </td></tr>
<tr class="memdesc:a14d465f5c80ab980a9f5611eb80fa43c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Give read access to the LWS table.  <a href="#a14d465f5c80ab980a9f5611eb80fa43c">More...</a><br /></td></tr>
<tr class="separator:a14d465f5c80ab980a9f5611eb80fa43c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7937dca7876064401bb14b4443bf5d8d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_tuner.xhtml#a7937dca7876064401bb14b4443bf5d8d">set_cl_kernel_event</a> (cl_event kernel_event)</td></tr>
<tr class="memdesc:a7937dca7876064401bb14b4443bf5d8d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the OpenCL kernel event.  <a href="#a7937dca7876064401bb14b4443bf5d8d">More...</a><br /></td></tr>
<tr class="separator:a7937dca7876064401bb14b4443bf5d8d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5ddfa449f78e4c4d8345e37f1719cc57"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_tuner.xhtml#a5ddfa449f78e4c4d8345e37f1719cc57">load_from_file</a> (const std::string &amp;filename)</td></tr>
<tr class="memdesc:a5ddfa449f78e4c4d8345e37f1719cc57"><td class="mdescLeft">&#160;</td><td class="mdescRight">Load the LWS table from file.  <a href="#a5ddfa449f78e4c4d8345e37f1719cc57">More...</a><br /></td></tr>
<tr class="separator:a5ddfa449f78e4c4d8345e37f1719cc57"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0d11cd5e57c2885764baa2c558c3a353"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_tuner.xhtml#a0d11cd5e57c2885764baa2c558c3a353">save_to_file</a> (const std::string &amp;filename) const </td></tr>
<tr class="memdesc:a0d11cd5e57c2885764baa2c558c3a353"><td class="mdescLeft">&#160;</td><td class="mdescRight">Save the content of the LWS table to file.  <a href="#a0d11cd5e57c2885764baa2c558c3a353">More...</a><br /></td></tr>
<tr class="separator:a0d11cd5e57c2885764baa2c558c3a353"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3542e1479b9049456d8256d1442df1ac"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_tuner.xhtml#a3542e1479b9049456d8256d1442df1ac">tune_kernel</a> (<a class="el" href="classarm__compute_1_1_i_c_l_kernel.xhtml">ICLKernel</a> &amp;kernel) override</td></tr>
<tr class="memdesc:a3542e1479b9049456d8256d1442df1ac"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tune OpenCL kernel.  <a href="#a3542e1479b9049456d8256d1442df1ac">More...</a><br /></td></tr>
<tr class="separator:a3542e1479b9049456d8256d1442df1ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abc3ad51b9369c15ee8507e700cfcd221"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_tuner.xhtml#abc3ad51b9369c15ee8507e700cfcd221">kernel_event_is_set</a> () const </td></tr>
<tr class="memdesc:abc3ad51b9369c15ee8507e700cfcd221"><td class="mdescLeft">&#160;</td><td class="mdescRight">Is the kernel_event set ?  <a href="#abc3ad51b9369c15ee8507e700cfcd221">More...</a><br /></td></tr>
<tr class="separator:abc3ad51b9369c15ee8507e700cfcd221"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1_i_c_l_tuner"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1_i_c_l_tuner')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1_i_c_l_tuner.xhtml">ICLTuner</a></td></tr>
<tr class="memitem:a7103799fdecd6abca8fc84efebb3653f inherit pub_methods_classarm__compute_1_1_i_c_l_tuner"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_tuner.xhtml#a7103799fdecd6abca8fc84efebb3653f">~ICLTuner</a> ()=default</td></tr>
<tr class="memdesc:a7103799fdecd6abca8fc84efebb3653f inherit pub_methods_classarm__compute_1_1_i_c_l_tuner"><td class="mdescLeft">&#160;</td><td class="mdescRight">Virtual destructor.  <a href="#a7103799fdecd6abca8fc84efebb3653f">More...</a><br /></td></tr>
<tr class="separator:a7103799fdecd6abca8fc84efebb3653f inherit pub_methods_classarm__compute_1_1_i_c_l_tuner"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Data Fields</h2></td></tr>
<tr class="memitem:a5baba955626e8da33ed5dd829a538974"><td class="memItemLeft" align="right" valign="top">std::function&lt; decltype(clEnqueueNDRangeKernel)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_tuner.xhtml#a5baba955626e8da33ed5dd829a538974">real_clEnqueueNDRangeKernel</a></td></tr>
<tr class="separator:a5baba955626e8da33ed5dd829a538974"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Basic implementation of the OpenCL tuner interface. </p>

<p>Definition at line <a class="el" href="_c_l_tuner_8h_source.xhtml#l00037">37</a> of file <a class="el" href="_c_l_tuner_8h_source.xhtml">CLTuner.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="ad551ac5b533cac7908910085117f5ca8"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_tuner.xhtml">CLTuner</a> </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>tune_new_kernels</em> = <code>true</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">tune_new_kernels</td><td>Find the optimal local workgroup size for kernels which are not present in the table ? </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a577ac5b9d244bdf031905faaf08b968c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classarm__compute_1_1_c_l_tuner.xhtml">CLTuner</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Destructor. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a7de8b49d3ae94affb80ba48945368a8a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void add_lws_to_table </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>kernel_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">cl::NDRange&#160;</td>
          <td class="paramname"><em>optimal_lws</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Manually add a LWS for a kernel. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">kernel_id</td><td>Unique identifiant of the kernel </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">optimal_lws</td><td>Optimal local workgroup size to use for the given kernel </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="aaf692ee51358d05ca65755a92591f815"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void import_lws_table </td>
          <td>(</td>
          <td class="paramtype">const std::unordered_map&lt; std::string, cl::NDRange &gt; &amp;&#160;</td>
          <td class="paramname"><em>lws_table</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Import LWS table. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lws_table</td><td>The unordered_map container to import </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="abc3ad51b9369c15ee8507e700cfcd221"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool kernel_event_is_set </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Is the kernel_event set ? </p>
<dl class="section return"><dt>Returns</dt><dd>true if the kernel_event is set. </dd></dl>

</div>
</div>
<a class="anchor" id="a5ddfa449f78e4c4d8345e37f1719cc57"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void load_from_file </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>filename</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Load the LWS table from file. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">filename</td><td>Load the LWS table from this file.(Must exist) </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a14d465f5c80ab980a9f5611eb80fa43c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const std::unordered_map&lt;std::string, cl::NDRange&gt;&amp; lws_table </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Give read access to the LWS table. </p>
<p>return The lws table as unordered_map container </p>

</div>
</div>
<a class="anchor" id="a0d11cd5e57c2885764baa2c558c3a353"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void save_to_file </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>filename</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Save the content of the LWS table to file. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">filename</td><td>Save the LWS table to this file. (Content will be overwritten) </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a7937dca7876064401bb14b4443bf5d8d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void set_cl_kernel_event </td>
          <td>(</td>
          <td class="paramtype">cl_event&#160;</td>
          <td class="paramname"><em>kernel_event</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the OpenCL kernel event. </p>
<dl class="section note"><dt>Note</dt><dd>The interceptor can use this function to store the event associated to the OpenCL kernel</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">kernel_event</td><td>The OpenCL kernel event </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="aba10acdb2d58e3e0a96364c487a71d40"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void set_tune_new_kernels </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>tune_new_kernels</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Setter for tune_new_kernels option. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">tune_new_kernels</td><td>Find the optimal local workgroup size for kernels which are not present in the table ? </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a3542e1479b9049456d8256d1442df1ac"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void tune_kernel </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_c_l_kernel.xhtml">ICLKernel</a> &amp;&#160;</td>
          <td class="paramname"><em>kernel</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Tune OpenCL kernel. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">kernel</td><td><a class="el" href="classarm__compute_1_1_kernel.xhtml" title="Kernel class. ">Kernel</a> to tune </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_c_l_tuner.xhtml#aa3e463ed247bccd80278280791943d79">ICLTuner</a>.</p>

</div>
</div>
<a class="anchor" id="a0ec76a5771b9521b947754d582635638"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool tune_new_kernels </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Tune kernels that are not in the LWS table. </p>
<dl class="section return"><dt>Returns</dt><dd>True if tuning of new kernels is enabled. </dd></dl>

</div>
</div>
<h2 class="groupheader">Field Documentation</h2>
<a class="anchor" id="a5baba955626e8da33ed5dd829a538974"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;decltype(clEnqueueNDRangeKernel)&gt; real_clEnqueueNDRangeKernel</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="_c_l_tuner_8h_source.xhtml#l00086">86</a> of file <a class="el" href="_c_l_tuner_8h_source.xhtml">CLTuner.h</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>arm_compute/runtime/CL/<a class="el" href="_c_l_tuner_8h_source.xhtml">CLTuner.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1_c_l_tuner.xhtml">CLTuner</a></li>
    <li class="footer">Generated on Fri Mar 2 2018 12:37:58 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
  </ul>
</div>
</body>
</html>
