<!-- HTML header for doxygen 1.8.9.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: arm_compute/core/NEON/NEColorConvertHelper.inl Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Compute Library
   &#160;<span id="projectnumber">17.12</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>Globals</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_n_e_color_convert_helper_8inl_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">NEColorConvertHelper.inl</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_n_e_color_convert_helper_8inl.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2016, 2017 ARM Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="core_2_error_8h.xhtml">arm_compute/core/Error.h</a>&quot;</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2core_2_helpers_8h.xhtml">arm_compute/core/Helpers.h</a>&quot;</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_multi_image_8h.xhtml">arm_compute/core/IMultiImage.h</a>&quot;</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2core_2_utils_8h.xhtml">arm_compute/core/Utils.h</a>&quot;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &lt;arm_neon.h&gt;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="keyword">namespace</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;{</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;constexpr <span class="keywordtype">float</span> red_coef_bt709    = 1.5748F;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;constexpr <span class="keywordtype">float</span> green_coef_bt709  = -0.1873f;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;constexpr <span class="keywordtype">float</span> green_coef2_bt709 = -0.4681f;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;constexpr <span class="keywordtype">float</span> blue_coef_bt709   = 1.8556f;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;constexpr <span class="keywordtype">float</span> rgb2yuv_bt709_kr = 0.2126f;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;constexpr <span class="keywordtype">float</span> rgb2yuv_bt709_kb = 0.0722f;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="comment">// K_g = 1 - K_r - K_b</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;constexpr <span class="keywordtype">float</span> rgb2yuv_bt709_kg = 0.7152f;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="comment">// C_u = 1 / (2 * (1 - K_b))</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;constexpr <span class="keywordtype">float</span> rgb2yuv_bt709_cu = 0.5389f;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="comment">// C_v = 1 / (2 * (1 - K_r))</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;constexpr <span class="keywordtype">float</span> rgb2yuv_bt709_cv = 0.6350f;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="keyword">inline</span> <span class="keywordtype">void</span> convert_uint8x16_to_float32x4x4(<span class="keyword">const</span> uint8x16_t &amp;in, float32x4x4_t &amp;out)</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;{</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> tmp1 = vmovl_u8(vget_low_u8(in));</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    out.val[0]      = vcvtq_f32_u32(vmovl_u16(vget_low_u16(tmp1)));</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    out.val[1]      = vcvtq_f32_u32(vmovl_u16(vget_high_u16(tmp1)));</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> tmp2 = vmovl_u8(vget_high_u8(in));</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    out.val[2]      = vcvtq_f32_u32(vmovl_u16(vget_low_u16(tmp2)));</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    out.val[3]      = vcvtq_f32_u32(vmovl_u16(vget_high_u16(tmp2)));</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;}</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="keyword">inline</span> <span class="keywordtype">void</span> convert_float32x4x3_to_uint8x8x3(<span class="keyword">const</span> float32x4x3_t &amp;in1, <span class="keyword">const</span> float32x4x3_t &amp;in2, uint8x8x3_t &amp;out)</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;{</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    out.val[0] = vqmovn_u16(vcombine_u16(vqmovn_u32(vcvtq_u32_f32(in1.val[0])),</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;                                         vqmovn_u32(vcvtq_u32_f32(in2.val[0]))));</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    out.val[1] = vqmovn_u16(vcombine_u16(vqmovn_u32(vcvtq_u32_f32(in1.val[1])),</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;                                         vqmovn_u32(vcvtq_u32_f32(in2.val[1]))));</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    out.val[2] = vqmovn_u16(vcombine_u16(vqmovn_u32(vcvtq_u32_f32(in1.val[2])),</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;                                         vqmovn_u32(vcvtq_u32_f32(in2.val[2]))));</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;}</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="keyword">inline</span> <span class="keywordtype">void</span> convert_float32x4x4_to_unit8x16(<span class="keyword">const</span> float32x4x4_t &amp;in, uint8x16_t &amp;out)</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;{</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> low = vcombine_u16(vqmovn_u32(vcvtq_u32_f32(in.val[0])),</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;                                  vqmovn_u32(vcvtq_u32_f32(in.val[1])));</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> high = vcombine_u16(vqmovn_u32(vcvtq_u32_f32(in.val[2])),</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;                                   vqmovn_u32(vcvtq_u32_f32(in.val[3])));</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    out = vcombine_u8(vqmovn_u16(low), vqmovn_u16(high));</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;}</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="keyword">inline</span> <span class="keywordtype">void</span> rgb_to_yuv_calculation(<span class="keyword">const</span> float32x4_t &amp;rvec, <span class="keyword">const</span> float32x4_t &amp;gvec, <span class="keyword">const</span> float32x4_t &amp;bvec,</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;                                   float32x4_t &amp;yvec, float32x4_t &amp;uvec, float32x4_t &amp;vvec)</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;{</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <span class="comment">/*</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="comment">    Y&#39;= 0.2126*R&#39; + 0.7152*G&#39; + 0.0722*B&#39;</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="comment">    U&#39;=-0.1146*R&#39; - 0.3854*G&#39; + 0.5000*B&#39;</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="comment">    V&#39;= 0.5000*R&#39; - 0.4542*G&#39; - 0.0458*B&#39;</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="comment">    */</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> c128 = vdupq_n_f32(128.f);</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <span class="comment">// Y = R * K_r + G * (1 - K_r - K_b) * B * K_b</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    yvec = vmulq_n_f32(rvec, rgb2yuv_bt709_kr);</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    yvec = vmlaq_n_f32(yvec, gvec, rgb2yuv_bt709_kg);</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    yvec = vmlaq_n_f32(yvec, bvec, rgb2yuv_bt709_kb);</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <span class="comment">// U = (B - Y) / (2 * (1 - K_b))</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    uvec = vsubq_f32(bvec, yvec);</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    uvec = vmlaq_n_f32(c128, uvec, rgb2yuv_bt709_cu);</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="comment">// V = (R - Y) / (2 * (1 - K_r))</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    vvec = vsubq_f32(rvec, yvec);</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    vvec = vmlaq_n_f32(c128, vvec, rgb2yuv_bt709_cv);</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;}</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="keyword">inline</span> <span class="keywordtype">void</span> yuyv_to_rgb_calculation(<span class="keyword">const</span> float32x4_t &amp;yvec_val, float32x4_t uvec_val, <span class="keyword">const</span> float32x4_t &amp;yyvec_val,</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                                    float32x4_t vvec_val, <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> *output_ptr, <span class="keyword">const</span> <span class="keywordtype">bool</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a62197192f0fbf4e0675eb37be1c4c175">alpha</a>)</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;{</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    float32x4x3_t rgb1, rgb2;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <span class="comment">// Compute: cb - 128 and cr - 128;</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> c128 = vdupq_n_f32(128.f);</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    uvec_val        = vsubq_f32(uvec_val, c128);</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    vvec_val        = vsubq_f32(vvec_val, c128);</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <span class="comment">// Compute:</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <span class="comment">// r = 0.0000f*f_u + 1.5748f*f_v;</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <span class="comment">// g = 0.1873f*f_u - 0.4681f*f_v;</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <span class="comment">// b = 1.8556f*f_u + 0.0000f*f_v;</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> red   = vmulq_n_f32(vvec_val, red_coef_bt709);</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> blue  = vmulq_n_f32(uvec_val, blue_coef_bt709);</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> green = vaddq_f32(vmulq_n_f32(uvec_val, green_coef_bt709),</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                                 vmulq_n_f32(vvec_val, green_coef2_bt709));</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <span class="comment">// Compute the final r,g,b values using y1 for the first texel and y2 for the second one.</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="comment">// the result is stored in two float32x4x3_t which then are converted to one uint8x8x3_t</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <span class="comment">// and written back to memory using vst3 instruction</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    rgb1.val[0] = vaddq_f32(yvec_val, red);</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    rgb1.val[1] = vaddq_f32(yvec_val, green);</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    rgb1.val[2] = vaddq_f32(yvec_val, blue);</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    rgb2.val[0] = vaddq_f32(yyvec_val, red);</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    rgb2.val[1] = vaddq_f32(yyvec_val, green);</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    rgb2.val[2] = vaddq_f32(yyvec_val, blue);</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    uint8x8x3_t u8_rgb;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    convert_float32x4x3_to_uint8x8x3(rgb1, rgb2, u8_rgb);</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <span class="keywordflow">if</span>(!alpha)</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    {</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        vst3_lane_u8(&amp;output_ptr[0], u8_rgb, 0);</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        vst3_lane_u8(&amp;output_ptr[3], u8_rgb, 4);</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        vst3_lane_u8(&amp;output_ptr[6], u8_rgb, 1);</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        vst3_lane_u8(&amp;output_ptr[9], u8_rgb, 5);</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        vst3_lane_u8(&amp;output_ptr[12], u8_rgb, 2);</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        vst3_lane_u8(&amp;output_ptr[15], u8_rgb, 6);</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        vst3_lane_u8(&amp;output_ptr[18], u8_rgb, 3);</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;        vst3_lane_u8(&amp;output_ptr[21], u8_rgb, 7);</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    }</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    {</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        uint8x8x4_t u8_rgba;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;        u8_rgba.val[0] = u8_rgb.val[0];</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        u8_rgba.val[1] = u8_rgb.val[1];</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;        u8_rgba.val[2] = u8_rgb.val[2];</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;        u8_rgba.val[3] = vdup_n_u8(255);</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        vst4_lane_u8(&amp;output_ptr[0], u8_rgba, 0);</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;        vst4_lane_u8(&amp;output_ptr[4], u8_rgba, 4);</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;        vst4_lane_u8(&amp;output_ptr[8], u8_rgba, 1);</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;        vst4_lane_u8(&amp;output_ptr[12], u8_rgba, 5);</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        vst4_lane_u8(&amp;output_ptr[16], u8_rgba, 2);</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        vst4_lane_u8(&amp;output_ptr[20], u8_rgba, 6);</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        vst4_lane_u8(&amp;output_ptr[24], u8_rgba, 3);</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        vst4_lane_u8(&amp;output_ptr[28], u8_rgba, 7);</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    }</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;}</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="keyword">inline</span> uint8x16x3_t load_rgb(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> *<span class="keyword">const</span> ptr, <span class="keyword">const</span> <span class="keywordtype">bool</span> alpha)</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;{</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    uint8x16x3_t rgb;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    <span class="keywordflow">if</span>(alpha)</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    {</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> tmp = vld4q_u8(ptr);</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;        rgb.val[0]     = tmp.val[0];</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;        rgb.val[1]     = tmp.val[1];</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;        rgb.val[2]     = tmp.val[2];</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    }</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    {</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        rgb = vld3q_u8(ptr);</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    }</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    <span class="keywordflow">return</span> rgb;</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;}</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="keyword">inline</span> <span class="keywordtype">void</span> rgb_to_yuv_conversion(uint8x16x3_t &amp;vec_top, uint8x16x3_t &amp;vec_bottom)</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;{</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    <span class="comment">// Convert the uint8x16_t to float32x4x4_t</span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    float32x4x4_t frvec_top, fgvec_top, fbvec_top;</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    convert_uint8x16_to_float32x4x4(vec_top.val[0], frvec_top);</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    convert_uint8x16_to_float32x4x4(vec_top.val[1], fgvec_top);</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    convert_uint8x16_to_float32x4x4(vec_top.val[2], fbvec_top);</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    float32x4x4_t frvec_bottom, fgvec_bottom, fbvec_bottom;</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    convert_uint8x16_to_float32x4x4(vec_bottom.val[0], frvec_bottom);</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    convert_uint8x16_to_float32x4x4(vec_bottom.val[1], fgvec_bottom);</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    convert_uint8x16_to_float32x4x4(vec_bottom.val[2], fbvec_bottom);</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    float32x4x4_t fyvec_top, fuvec_top, fvvec_top;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    float32x4x4_t fyvec_bottom, fuvec_bottom, fvvec_bottom;</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    <span class="keywordflow">for</span>(<span class="keyword">auto</span> i = 0; i &lt; 4; ++i)</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    {</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        rgb_to_yuv_calculation(frvec_top.val[i], fgvec_top.val[i], fbvec_top.val[i],</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;                               fyvec_top.val[i], fuvec_top.val[i], fvvec_top.val[i]);</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;        rgb_to_yuv_calculation(frvec_bottom.val[i], fgvec_bottom.val[i], fbvec_bottom.val[i],</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;                               fyvec_bottom.val[i], fuvec_bottom.val[i], fvvec_bottom.val[i]);</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    }</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    convert_float32x4x4_to_unit8x16(fyvec_top, vec_top.val[0]);</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    convert_float32x4x4_to_unit8x16(fuvec_top, vec_top.val[1]);</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    convert_float32x4x4_to_unit8x16(fvvec_top, vec_top.val[2]);</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    convert_float32x4x4_to_unit8x16(fyvec_bottom, vec_bottom.val[0]);</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    convert_float32x4x4_to_unit8x16(fuvec_bottom, vec_bottom.val[1]);</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    convert_float32x4x4_to_unit8x16(fvvec_bottom, vec_bottom.val[2]);</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;}</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="keyword">inline</span> <span class="keywordtype">void</span> store_rgb_to_nv12(<span class="keyword">const</span> uint8x16_t &amp;rvec_top, <span class="keyword">const</span> uint8x16_t &amp;gvec_top, <span class="keyword">const</span> uint8x16_t &amp;bvec_top,</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;                              <span class="keyword">const</span> uint8x16_t &amp;rvec_bottom, <span class="keyword">const</span> uint8x16_t &amp;gvec_bottom, <span class="keyword">const</span> uint8x16_t &amp;bvec_bottom,</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;                              <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> *<span class="keyword">const</span> __restrict out_y_top, <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> *<span class="keyword">const</span> __restrict out_y_bottom,</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;                              <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> *<span class="keyword">const</span> __restrict out_uv)</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;{</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    uint8x16x3_t vec_top, vec_bottom;</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    vec_top.val[0]    = rvec_top;</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    vec_top.val[1]    = gvec_top;</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    vec_top.val[2]    = bvec_top;</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;    vec_bottom.val[0] = rvec_bottom;</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    vec_bottom.val[1] = gvec_bottom;</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;    vec_bottom.val[2] = bvec_bottom;</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    rgb_to_yuv_conversion(vec_top, vec_bottom);</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    vst1q_u8(out_y_top, vec_top.val[0]);</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    vst1q_u8(out_y_bottom, vec_bottom.val[0]);</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> uvec = vuzpq_u8(vec_top.val[1], vec_bottom.val[1]);</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> vvec = vuzpq_u8(vec_top.val[2], vec_bottom.val[2]);</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> utmp = vrhaddq_u8(uvec.val[0], uvec.val[1]);</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> vtmp = vrhaddq_u8(vvec.val[0], vvec.val[1]);</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    uint8x8x2_t uvvec;</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;    uvvec.val[0] = vhadd_u8(vget_low_u8(utmp), vget_high_u8(utmp));</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;    uvvec.val[1] = vhadd_u8(vget_low_u8(vtmp), vget_high_u8(vtmp));</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    vst2_u8(out_uv, uvvec);</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;}</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;<span class="keyword">inline</span> <span class="keywordtype">void</span> store_rgb_to_iyuv(<span class="keyword">const</span> uint8x16_t &amp;rvec_top, <span class="keyword">const</span> uint8x16_t &amp;gvec_top, <span class="keyword">const</span> uint8x16_t &amp;bvec_top,</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;                              <span class="keyword">const</span> uint8x16_t &amp;rvec_bottom, <span class="keyword">const</span> uint8x16_t &amp;gvec_bottom, <span class="keyword">const</span> uint8x16_t &amp;bvec_bottom,</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;                              <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> *<span class="keyword">const</span> __restrict out_y_top, <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> *<span class="keyword">const</span> __restrict out_y_bottom,</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;                              <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> *<span class="keyword">const</span> __restrict out_u,</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;                              <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> *<span class="keyword">const</span> __restrict out_v)</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;{</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    uint8x16x3_t vec_top, vec_bottom;</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    vec_top.val[0]    = rvec_top;</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    vec_top.val[1]    = gvec_top;</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    vec_top.val[2]    = bvec_top;</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;    vec_bottom.val[0] = rvec_bottom;</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    vec_bottom.val[1] = gvec_bottom;</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    vec_bottom.val[2] = bvec_bottom;</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    rgb_to_yuv_conversion(vec_top, vec_bottom);</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;    vst1q_u8(out_y_top, vec_top.val[0]);</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    vst1q_u8(out_y_bottom, vec_bottom.val[0]);</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> uvvec_top    = vuzpq_u8(vec_top.val[1], vec_top.val[2]);</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> uvvec_bottom = vuzpq_u8(vec_bottom.val[1], vec_bottom.val[2]);</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> uvvec        = vhaddq_u8(vrhaddq_u8(uvvec_top.val[0], uvvec_top.val[1]),</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;                                        vrhaddq_u8(uvvec_bottom.val[0], uvvec_bottom.val[1]));</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;    vst1_u8(out_u, vget_low_u8(uvvec));</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;    vst1_u8(out_v, vget_high_u8(uvvec));</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;}</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;<span class="keyword">inline</span> <span class="keywordtype">void</span> store_rgb_to_yuv4(<span class="keyword">const</span> uint8x16_t &amp;rvec, <span class="keyword">const</span> uint8x16_t &amp;gvec, <span class="keyword">const</span> uint8x16_t &amp;bvec,</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;                              <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> *<span class="keyword">const</span> __restrict out_y,</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;                              <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> *<span class="keyword">const</span> __restrict out_u,</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;                              <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> *<span class="keyword">const</span> __restrict out_v)</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;{</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;    <span class="comment">// Convert the uint8x16_t to float32x4x4_t</span></div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;    float32x4x4_t frvec, fgvec, fbvec;</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    convert_uint8x16_to_float32x4x4(rvec, frvec);</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;    convert_uint8x16_to_float32x4x4(gvec, fgvec);</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;    convert_uint8x16_to_float32x4x4(bvec, fbvec);</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;    float32x4x4_t fyvec, fuvec, fvvec;</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    <span class="keywordflow">for</span>(<span class="keyword">auto</span> i = 0; i &lt; 4; ++i)</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;    {</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;        rgb_to_yuv_calculation(frvec.val[i], fgvec.val[i], fbvec.val[i],</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;                               fyvec.val[i], fuvec.val[i], fvvec.val[i]);</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;    }</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;    uint8x16_t yvec, uvec, vvec;</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;    convert_float32x4x4_to_unit8x16(fyvec, yvec);</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;    convert_float32x4x4_to_unit8x16(fuvec, uvec);</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;    convert_float32x4x4_to_unit8x16(fvvec, vvec);</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;    vst1q_u8(out_y, yvec);</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;    vst1q_u8(out_u, uvec);</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;    vst1q_u8(out_v, vvec);</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;}</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;}</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;{</div><div class="line"><a name="l00303"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#a93cc303c8ae098d264f07d37890412de">  303</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacearm__compute.xhtml#a93cc303c8ae098d264f07d37890412de">colorconvert_rgb_to_rgbx</a>(<span class="keyword">const</span> <span class="keywordtype">void</span> *__restrict input, <span class="keywordtype">void</span> *__restrict output, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;win)</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;{</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;    <a class="code" href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(<span class="keyword">nullptr</span> == input);</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;    <a class="code" href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(<span class="keyword">nullptr</span> == output);</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> input_ptr  = <span class="keyword">static_cast&lt;</span><span class="keyword">const </span><a class="code" href="classarm__compute_1_1_i_tensor.xhtml">IImage</a> *__restrict<span class="keyword">&gt;</span>(input);</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> output_ptr = <span class="keyword">static_cast&lt;</span><a class="code" href="classarm__compute_1_1_i_tensor.xhtml">IImage</a> *__restrict<span class="keyword">&gt;</span>(output);</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> in(input_ptr, win);</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> out(output_ptr, win);</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a6c0dcc38187027dcb89cd9724bc5a823">execute_window_loop</a>(win, [&amp;](<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a> &amp; <span class="keywordtype">id</span>)</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;    {</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span>   ta1 = vld3q_u8(in.<a class="code" href="classarm__compute_1_1_iterator.xhtml#aeabcf37a281d780c90ebe812149a7a84">ptr</a>());</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;        uint8x16x4_t ta2;</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;        ta2.val[0] = ta1.val[0];</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;        ta2.val[1] = ta1.val[1];</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;        ta2.val[2] = ta1.val[2];</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;        ta2.val[3] = vdupq_n_u8(255);</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;        vst4q_u8(out.<a class="code" href="classarm__compute_1_1_iterator.xhtml#aeabcf37a281d780c90ebe812149a7a84">ptr</a>(), ta2);</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;    },</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;    in, out);</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;}</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;</div><div class="line"><a name="l00327"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#acf7451c0d0f8a4b1cfbb60d7531a43aa">  327</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacearm__compute.xhtml#acf7451c0d0f8a4b1cfbb60d7531a43aa">colorconvert_rgbx_to_rgb</a>(<span class="keyword">const</span> <span class="keywordtype">void</span> *input, <span class="keywordtype">void</span> *output, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;win)</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;{</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;    <a class="code" href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(<span class="keyword">nullptr</span> == input);</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;    <a class="code" href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(<span class="keyword">nullptr</span> == output);</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> input_ptr  = <span class="keyword">static_cast&lt;</span><span class="keyword">const </span><a class="code" href="classarm__compute_1_1_i_tensor.xhtml">IImage</a> *__restrict<span class="keyword">&gt;</span>(input);</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> output_ptr = <span class="keyword">static_cast&lt;</span><a class="code" href="classarm__compute_1_1_i_tensor.xhtml">IImage</a> *__restrict<span class="keyword">&gt;</span>(output);</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> in(input_ptr, win);</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> out(output_ptr, win);</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a6c0dcc38187027dcb89cd9724bc5a823">execute_window_loop</a>(win, [&amp;](<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a> &amp; <span class="keywordtype">id</span>)</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;    {</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span>   ta1 = vld4q_u8(in.<a class="code" href="classarm__compute_1_1_iterator.xhtml#aeabcf37a281d780c90ebe812149a7a84">ptr</a>());</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;        uint8x16x3_t ta2;</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;        ta2.val[0] = ta1.val[0];</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;        ta2.val[1] = ta1.val[1];</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;        ta2.val[2] = ta1.val[2];</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;        vst3q_u8(out.<a class="code" href="classarm__compute_1_1_iterator.xhtml#aeabcf37a281d780c90ebe812149a7a84">ptr</a>(), ta2);</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;    },</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;    in, out);</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;}</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;<span class="keyword">template</span> &lt;<span class="keywordtype">bool</span> yuyv, <span class="keywordtype">bool</span> alpha&gt;</div><div class="line"><a name="l00351"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#a3c22c0d3494660b72b4fc04fec76f92d">  351</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacearm__compute.xhtml#a3c22c0d3494660b72b4fc04fec76f92d">colorconvert_yuyv_to_rgb</a>(<span class="keyword">const</span> <span class="keywordtype">void</span> *__restrict input, <span class="keywordtype">void</span> *__restrict output, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;win)</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;{</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;    <a class="code" href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(<span class="keyword">nullptr</span> == input);</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;    <a class="code" href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(<span class="keyword">nullptr</span> == output);</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> input_ptr  = <span class="keyword">static_cast&lt;</span><span class="keyword">const </span><a class="code" href="classarm__compute_1_1_i_tensor.xhtml">IImage</a> *__restrict<span class="keyword">&gt;</span>(input);</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> output_ptr = <span class="keyword">static_cast&lt;</span><a class="code" href="classarm__compute_1_1_i_tensor.xhtml">IImage</a> *__restrict<span class="keyword">&gt;</span>(output);</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;    constexpr <span class="keyword">auto</span> element_size = alpha ? 32 : 24;</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;    constexpr <span class="keyword">auto</span> shift        = yuyv ? 0 : 1;</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> in(input_ptr, win);</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> out(output_ptr, win);</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a6c0dcc38187027dcb89cd9724bc5a823">execute_window_loop</a>(win, [&amp;](<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a> &amp; <span class="keywordtype">id</span>)</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;    {</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;        float32x4x4_t uvec, yvec, vvec, yyvec;</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span>    ta = vld4q_u8(in.<a class="code" href="classarm__compute_1_1_iterator.xhtml#aeabcf37a281d780c90ebe812149a7a84">ptr</a>());</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;        <span class="comment">//ta.val[0] = Y0 Y2 Y4 Y6 ...</span></div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;        <span class="comment">//ta.val[1] = U0 U2 U4 U6 ...</span></div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;        <span class="comment">//ta.val[2] = Y1 Y3 Y5 Y7 ...</span></div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;        <span class="comment">//ta.val[3] = V0 V2 V4 V7 ...</span></div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;        <span class="comment">// Convert the uint8x16x4_t to float32x4x4_t</span></div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;        convert_uint8x16_to_float32x4x4(ta.val[0 + shift], yvec);</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;        convert_uint8x16_to_float32x4x4(ta.val[1 - shift], uvec);</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;        convert_uint8x16_to_float32x4x4(ta.val[2 + shift], yyvec);</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;        convert_uint8x16_to_float32x4x4(ta.val[3 - shift], vvec);</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;        yuyv_to_rgb_calculation(yvec.val[0], uvec.val[0], yyvec.val[0], vvec.val[0], out.<a class="code" href="classarm__compute_1_1_iterator.xhtml#aeabcf37a281d780c90ebe812149a7a84">ptr</a>() + 0 * element_size, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a62197192f0fbf4e0675eb37be1c4c175">alpha</a>);</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;        yuyv_to_rgb_calculation(yvec.val[1], uvec.val[1], yyvec.val[1], vvec.val[1], out.<a class="code" href="classarm__compute_1_1_iterator.xhtml#aeabcf37a281d780c90ebe812149a7a84">ptr</a>() + 1 * element_size, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a62197192f0fbf4e0675eb37be1c4c175">alpha</a>);</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;        yuyv_to_rgb_calculation(yvec.val[2], uvec.val[2], yyvec.val[2], vvec.val[2], out.<a class="code" href="classarm__compute_1_1_iterator.xhtml#aeabcf37a281d780c90ebe812149a7a84">ptr</a>() + 2 * element_size, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a62197192f0fbf4e0675eb37be1c4c175">alpha</a>);</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;        yuyv_to_rgb_calculation(yvec.val[3], uvec.val[3], yyvec.val[3], vvec.val[3], out.<a class="code" href="classarm__compute_1_1_iterator.xhtml#aeabcf37a281d780c90ebe812149a7a84">ptr</a>() + 3 * element_size, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a62197192f0fbf4e0675eb37be1c4c175">alpha</a>);</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;    },</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;    in, out);</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;}</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;<span class="keyword">template</span> &lt;<span class="keywordtype">bool</span> uv, <span class="keywordtype">bool</span> alpha&gt;</div><div class="line"><a name="l00389"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#ae6a44e412bccc0705a720708b0692218">  389</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacearm__compute.xhtml#ae6a44e412bccc0705a720708b0692218">colorconvert_nv12_to_rgb</a>(<span class="keyword">const</span> <span class="keywordtype">void</span> *__restrict input, <span class="keywordtype">void</span> *__restrict output, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;win)</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;{</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;    <a class="code" href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(<span class="keyword">nullptr</span> == input);</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;    <a class="code" href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(<span class="keyword">nullptr</span> == output);</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;    win.<a class="code" href="classarm__compute_1_1_window.xhtml#a048aaadf42ac725952523dd9546e96b5">validate</a>();</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> input_ptr  = <span class="keyword">static_cast&lt;</span><span class="keyword">const </span><a class="code" href="classarm__compute_1_1_i_multi_image.xhtml">IMultiImage</a> *__restrict<span class="keyword">&gt;</span>(input);</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> output_ptr = <span class="keyword">static_cast&lt;</span><a class="code" href="classarm__compute_1_1_i_tensor.xhtml">IImage</a> *__restrict<span class="keyword">&gt;</span>(output);</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;    constexpr <span class="keyword">auto</span> element_size = alpha ? 32 : 24;</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span>     out_stride   = output_ptr-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a6b14f175bf5281f57b561e2d4e4b1f1f">strides_in_bytes</a>().<a class="code" href="classarm__compute_1_1_dimensions.xhtml#a691c9cb93365c2e33f3429de43244098">y</a>();</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;    constexpr <span class="keyword">auto</span> shift        = uv ? 0 : 1;</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;    <span class="comment">// UV&#39;s width and height are subsampled</span></div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;    <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> win_uv(win);</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;    win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#acd3d2bba51cb84d34dd7656ad2375a6e">set</a>(<a class="code" href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">Window::DimX</a>, <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml">Window::Dimension</a>(win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#ade63ce331b49eb66d330aab444e57ca9">x</a>().<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#a27c3790df96e9523b0370e7e10c0d375">start</a>() / 2, win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#ade63ce331b49eb66d330aab444e57ca9">x</a>().<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#aa9a8509af319b9e47f00c8fba23d368b">end</a>() / 2, win.<a class="code" href="classarm__compute_1_1_window.xhtml#ade63ce331b49eb66d330aab444e57ca9">x</a>().<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#a992b375fc3254afe2e38f63bc29a43d4">step</a>() / 2));</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;    win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#acd3d2bba51cb84d34dd7656ad2375a6e">set</a>(<a class="code" href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">Window::DimY</a>, <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml">Window::Dimension</a>(win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#aedd49c804f269c0e2c251c4efd44a275">y</a>().<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#a27c3790df96e9523b0370e7e10c0d375">start</a>() / 2, win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#aedd49c804f269c0e2c251c4efd44a275">y</a>().<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#aa9a8509af319b9e47f00c8fba23d368b">end</a>() / 2, 1));</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;    win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#a048aaadf42ac725952523dd9546e96b5">validate</a>();</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> in_y(input_ptr-&gt;plane(0), win);</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> in_uv(input_ptr-&gt;plane(1), win_uv);</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> out(output_ptr, win);</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a6c0dcc38187027dcb89cd9724bc5a823">execute_window_loop</a>(win, [&amp;](<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a> &amp; <span class="keywordtype">id</span>)</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;    {</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> ta_y_top    = vld2q_u8(in_y.ptr());</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> ta_y_bottom = vld2q_u8(in_y.ptr() + input_ptr-&gt;plane(0)-&gt;info()-&gt;strides_in_bytes().y());</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> ta_uv       = vld2q_u8(in_uv.ptr());</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;        <span class="comment">//ta_y.val[0] = Y0 Y2 Y4 Y6 ...</span></div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;        <span class="comment">//ta_y.val[1] = Y1 Y3 Y5 Y7 ...</span></div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;        <span class="comment">//ta_uv.val[0] = U0 U2 U4 U6 ...</span></div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;        <span class="comment">//ta_uv.val[1] = V0 V2 V4 V6 ...</span></div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;        <span class="comment">// Convert the uint8x16x4_t to float32x4x4_t</span></div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;        float32x4x4_t yvec_top, yyvec_top, yvec_bottom, yyvec_bottom, uvec, vvec;</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;        convert_uint8x16_to_float32x4x4(ta_y_top.val[0], yvec_top);</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;        convert_uint8x16_to_float32x4x4(ta_y_top.val[1], yyvec_top);</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;        convert_uint8x16_to_float32x4x4(ta_y_bottom.val[0], yvec_bottom);</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;        convert_uint8x16_to_float32x4x4(ta_y_bottom.val[1], yyvec_bottom);</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;        convert_uint8x16_to_float32x4x4(ta_uv.val[0 + shift], uvec);</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;        convert_uint8x16_to_float32x4x4(ta_uv.val[1 - shift], vvec);</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;        yuyv_to_rgb_calculation(yvec_top.val[0], uvec.val[0], yyvec_top.val[0], vvec.val[0], out.ptr() + 0 * element_size, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a62197192f0fbf4e0675eb37be1c4c175">alpha</a>);</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;        yuyv_to_rgb_calculation(yvec_top.val[1], uvec.val[1], yyvec_top.val[1], vvec.val[1], out.ptr() + 1 * element_size, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a62197192f0fbf4e0675eb37be1c4c175">alpha</a>);</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;        yuyv_to_rgb_calculation(yvec_top.val[2], uvec.val[2], yyvec_top.val[2], vvec.val[2], out.ptr() + 2 * element_size, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a62197192f0fbf4e0675eb37be1c4c175">alpha</a>);</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;        yuyv_to_rgb_calculation(yvec_top.val[3], uvec.val[3], yyvec_top.val[3], vvec.val[3], out.ptr() + 3 * element_size, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a62197192f0fbf4e0675eb37be1c4c175">alpha</a>);</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;        yuyv_to_rgb_calculation(yvec_bottom.val[0], uvec.val[0], yyvec_bottom.val[0], vvec.val[0], out.ptr() + out_stride + 0 * element_size, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a62197192f0fbf4e0675eb37be1c4c175">alpha</a>);</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;        yuyv_to_rgb_calculation(yvec_bottom.val[1], uvec.val[1], yyvec_bottom.val[1], vvec.val[1], out.ptr() + out_stride + 1 * element_size, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a62197192f0fbf4e0675eb37be1c4c175">alpha</a>);</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;        yuyv_to_rgb_calculation(yvec_bottom.val[2], uvec.val[2], yyvec_bottom.val[2], vvec.val[2], out.ptr() + out_stride + 2 * element_size, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a62197192f0fbf4e0675eb37be1c4c175">alpha</a>);</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;        yuyv_to_rgb_calculation(yvec_bottom.val[3], uvec.val[3], yyvec_bottom.val[3], vvec.val[3], out.ptr() + out_stride + 3 * element_size, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a62197192f0fbf4e0675eb37be1c4c175">alpha</a>);</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;    },</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;    in_y, in_uv, out);</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;}</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;<span class="keyword">template</span> &lt;<span class="keywordtype">bool</span> alpha&gt;</div><div class="line"><a name="l00445"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#a6e42fac1baa264b033ac430b63ebd145">  445</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacearm__compute.xhtml#a6e42fac1baa264b033ac430b63ebd145">colorconvert_iyuv_to_rgb</a>(<span class="keyword">const</span> <span class="keywordtype">void</span> *__restrict input, <span class="keywordtype">void</span> *__restrict output, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;win)</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;{</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;    <a class="code" href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(<span class="keyword">nullptr</span> == input);</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;    <a class="code" href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(<span class="keyword">nullptr</span> == output);</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;    win.<a class="code" href="classarm__compute_1_1_window.xhtml#a048aaadf42ac725952523dd9546e96b5">validate</a>();</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> input_ptr  = <span class="keyword">static_cast&lt;</span><span class="keyword">const </span><a class="code" href="classarm__compute_1_1_i_multi_image.xhtml">IMultiImage</a> *__restrict<span class="keyword">&gt;</span>(input);</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> output_ptr = <span class="keyword">static_cast&lt;</span><a class="code" href="classarm__compute_1_1_i_tensor.xhtml">IImage</a> *__restrict<span class="keyword">&gt;</span>(output);</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;    constexpr <span class="keyword">auto</span> element_size = alpha ? 32 : 24;</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span>     out_stride   = output_ptr-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a6b14f175bf5281f57b561e2d4e4b1f1f">strides_in_bytes</a>().<a class="code" href="classarm__compute_1_1_dimensions.xhtml#a691c9cb93365c2e33f3429de43244098">y</a>();</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;    <span class="comment">// UV&#39;s width and height are subsampled</span></div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;    <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> win_uv(win);</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;    win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#acd3d2bba51cb84d34dd7656ad2375a6e">set</a>(<a class="code" href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">Window::DimX</a>, <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml">Window::Dimension</a>(win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#ade63ce331b49eb66d330aab444e57ca9">x</a>().<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#a27c3790df96e9523b0370e7e10c0d375">start</a>() / 2, win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#ade63ce331b49eb66d330aab444e57ca9">x</a>().<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#aa9a8509af319b9e47f00c8fba23d368b">end</a>() / 2, win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#ade63ce331b49eb66d330aab444e57ca9">x</a>().<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#a992b375fc3254afe2e38f63bc29a43d4">step</a>() / 2));</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;    win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#acd3d2bba51cb84d34dd7656ad2375a6e">set</a>(<a class="code" href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">Window::DimY</a>, <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml">Window::Dimension</a>(win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#aedd49c804f269c0e2c251c4efd44a275">y</a>().<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#a27c3790df96e9523b0370e7e10c0d375">start</a>() / 2, win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#aedd49c804f269c0e2c251c4efd44a275">y</a>().<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#aa9a8509af319b9e47f00c8fba23d368b">end</a>() / 2, 1));</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;    win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#a048aaadf42ac725952523dd9546e96b5">validate</a>();</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> in_y(input_ptr-&gt;plane(0), win);</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> in_u(input_ptr-&gt;plane(1), win_uv);</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> in_v(input_ptr-&gt;plane(2), win_uv);</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> out(output_ptr, win);</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a6c0dcc38187027dcb89cd9724bc5a823">execute_window_loop</a>(win, [&amp;](<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a> &amp; <span class="keywordtype">id</span>)</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;    {</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> ta_y_top    = vld2q_u8(in_y.ptr());</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> ta_y_bottom = vld2q_u8(in_y.ptr() + input_ptr-&gt;plane(0)-&gt;info()-&gt;strides_in_bytes().y());</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> ta_u        = vld1q_u8(in_u.ptr());</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> ta_v        = vld1q_u8(in_v.ptr());</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;        <span class="comment">//ta_y.val[0] = Y0 Y2 Y4 Y6 ...</span></div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;        <span class="comment">//ta_y.val[1] = Y1 Y3 Y5 Y7 ...</span></div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;        <span class="comment">//ta_u.val[0] = U0 U2 U4 U6 ...</span></div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;        <span class="comment">//ta_v.val[0] = V0 V2 V4 V6 ...</span></div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;        <span class="comment">// Convert the uint8x16x4_t to float32x4x4_t</span></div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;        float32x4x4_t yvec_top, yyvec_top, yvec_bottom, yyvec_bottom, uvec, vvec;</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;        convert_uint8x16_to_float32x4x4(ta_y_top.val[0], yvec_top);</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;        convert_uint8x16_to_float32x4x4(ta_y_top.val[1], yyvec_top);</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;        convert_uint8x16_to_float32x4x4(ta_y_bottom.val[0], yvec_bottom);</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;        convert_uint8x16_to_float32x4x4(ta_y_bottom.val[1], yyvec_bottom);</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;        convert_uint8x16_to_float32x4x4(ta_u, uvec);</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;        convert_uint8x16_to_float32x4x4(ta_v, vvec);</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;        yuyv_to_rgb_calculation(yvec_top.val[0], uvec.val[0], yyvec_top.val[0], vvec.val[0], out.ptr() + 0 * element_size, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a62197192f0fbf4e0675eb37be1c4c175">alpha</a>);</div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;        yuyv_to_rgb_calculation(yvec_top.val[1], uvec.val[1], yyvec_top.val[1], vvec.val[1], out.ptr() + 1 * element_size, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a62197192f0fbf4e0675eb37be1c4c175">alpha</a>);</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;        yuyv_to_rgb_calculation(yvec_top.val[2], uvec.val[2], yyvec_top.val[2], vvec.val[2], out.ptr() + 2 * element_size, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a62197192f0fbf4e0675eb37be1c4c175">alpha</a>);</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;        yuyv_to_rgb_calculation(yvec_top.val[3], uvec.val[3], yyvec_top.val[3], vvec.val[3], out.ptr() + 3 * element_size, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a62197192f0fbf4e0675eb37be1c4c175">alpha</a>);</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;        yuyv_to_rgb_calculation(yvec_bottom.val[0], uvec.val[0], yyvec_bottom.val[0], vvec.val[0], out.ptr() + out_stride + 0 * element_size, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a62197192f0fbf4e0675eb37be1c4c175">alpha</a>);</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;        yuyv_to_rgb_calculation(yvec_bottom.val[1], uvec.val[1], yyvec_bottom.val[1], vvec.val[1], out.ptr() + out_stride + 1 * element_size, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a62197192f0fbf4e0675eb37be1c4c175">alpha</a>);</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;        yuyv_to_rgb_calculation(yvec_bottom.val[2], uvec.val[2], yyvec_bottom.val[2], vvec.val[2], out.ptr() + out_stride + 2 * element_size, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a62197192f0fbf4e0675eb37be1c4c175">alpha</a>);</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;        yuyv_to_rgb_calculation(yvec_bottom.val[3], uvec.val[3], yyvec_bottom.val[3], vvec.val[3], out.ptr() + out_stride + 3 * element_size, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a62197192f0fbf4e0675eb37be1c4c175">alpha</a>);</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;    },</div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;    in_y, in_u, in_v, out);</div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;}</div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;<span class="keyword">template</span> &lt;<span class="keywordtype">bool</span> yuyv&gt;</div><div class="line"><a name="l00502"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#a8ee13904a3f5ba84b28cb53d956021d7">  502</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacearm__compute.xhtml#a8ee13904a3f5ba84b28cb53d956021d7">colorconvert_yuyv_to_nv12</a>(<span class="keyword">const</span> <span class="keywordtype">void</span> *__restrict input, <span class="keywordtype">void</span> *__restrict output, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;win)</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;{</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;    <a class="code" href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(<span class="keyword">nullptr</span> == input);</div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;    <a class="code" href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(<span class="keyword">nullptr</span> == output);</div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;    win.<a class="code" href="classarm__compute_1_1_window.xhtml#a048aaadf42ac725952523dd9546e96b5">validate</a>();</div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;</div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> input_ptr  = <span class="keyword">static_cast&lt;</span><span class="keyword">const </span><a class="code" href="classarm__compute_1_1_i_tensor.xhtml">IImage</a> *__restrict<span class="keyword">&gt;</span>(input);</div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> output_ptr = <span class="keyword">static_cast&lt;</span><a class="code" href="classarm__compute_1_1_i_multi_image.xhtml">IMultiImage</a> *__restrict<span class="keyword">&gt;</span>(output);</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;    constexpr <span class="keyword">auto</span> shift = yuyv ? 0 : 1;</div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;    <span class="comment">// NV12&#39;s UV&#39;s width and height are subsampled</span></div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;    <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> win_uv(win);</div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;    win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#acd3d2bba51cb84d34dd7656ad2375a6e">set</a>(<a class="code" href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">Window::DimX</a>, <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml">Window::Dimension</a>(win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#ade63ce331b49eb66d330aab444e57ca9">x</a>().<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#a27c3790df96e9523b0370e7e10c0d375">start</a>() / 2, win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#ade63ce331b49eb66d330aab444e57ca9">x</a>().<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#aa9a8509af319b9e47f00c8fba23d368b">end</a>() / 2, win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#ade63ce331b49eb66d330aab444e57ca9">x</a>().<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#a992b375fc3254afe2e38f63bc29a43d4">step</a>() / 2));</div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;    win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#acd3d2bba51cb84d34dd7656ad2375a6e">set</a>(<a class="code" href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">Window::DimY</a>, <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml">Window::Dimension</a>(win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#aedd49c804f269c0e2c251c4efd44a275">y</a>().<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#a27c3790df96e9523b0370e7e10c0d375">start</a>() / 2, win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#aedd49c804f269c0e2c251c4efd44a275">y</a>().<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#aa9a8509af319b9e47f00c8fba23d368b">end</a>() / 2, 1));</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;    win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#a048aaadf42ac725952523dd9546e96b5">validate</a>();</div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;</div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> in(input_ptr, win);</div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> out_y(output_ptr-&gt;plane(0), win);</div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> out_uv(output_ptr-&gt;plane(1), win_uv);</div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;</div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a6c0dcc38187027dcb89cd9724bc5a823">execute_window_loop</a>(win, [&amp;](<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a> &amp; <span class="keywordtype">id</span>)</div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;    {</div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> ta_top    = vld4q_u8(in.<a class="code" href="classarm__compute_1_1_iterator.xhtml#aeabcf37a281d780c90ebe812149a7a84">ptr</a>());</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> ta_bottom = vld4q_u8(in.<a class="code" href="classarm__compute_1_1_iterator.xhtml#aeabcf37a281d780c90ebe812149a7a84">ptr</a>() + input_ptr-&gt;info()-&gt;strides_in_bytes().y());</div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;        <span class="comment">//ta.val[0] = Y0 Y2 Y4 Y6 ...</span></div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;        <span class="comment">//ta.val[1] = U0 U2 U4 U6 ...</span></div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;        <span class="comment">//ta.val[2] = Y1 Y3 Y5 Y7 ...</span></div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;        <span class="comment">//ta.val[3] = V0 V2 V4 V7 ...</span></div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;</div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;        uint8x16x2_t yvec;</div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;        yvec.val[0] = ta_top.val[0 + shift];</div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;        yvec.val[1] = ta_top.val[2 + shift];</div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;        vst2q_u8(out_y.ptr(), yvec);</div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;</div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;        uint8x16x2_t yyvec;</div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;        yyvec.val[0] = ta_bottom.val[0 + shift];</div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;        yyvec.val[1] = ta_bottom.val[2 + shift];</div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;        vst2q_u8(out_y.ptr() + output_ptr-&gt;plane(0)-&gt;info()-&gt;strides_in_bytes().y(), yyvec);</div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;</div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;        uint8x16x2_t uvvec;</div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;        uvvec.val[0] = vhaddq_u8(ta_top.val[1 - shift], ta_bottom.val[1 - shift]);</div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;        uvvec.val[1] = vhaddq_u8(ta_top.val[3 - shift], ta_bottom.val[3 - shift]);</div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;        vst2q_u8(out_uv.ptr(), uvvec);</div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;    },</div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;    in, out_y, out_uv);</div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;}</div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;</div><div class="line"><a name="l00550"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#af2be1325decaa34a8a1199af177148c6">  550</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacearm__compute.xhtml#af2be1325decaa34a8a1199af177148c6">colorconvert_iyuv_to_nv12</a>(<span class="keyword">const</span> <span class="keywordtype">void</span> *__restrict input, <span class="keywordtype">void</span> *__restrict output, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;win)</div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;{</div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;    <a class="code" href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(<span class="keyword">nullptr</span> == input);</div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;    <a class="code" href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(<span class="keyword">nullptr</span> == output);</div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;    win.<a class="code" href="classarm__compute_1_1_window.xhtml#a048aaadf42ac725952523dd9546e96b5">validate</a>();</div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;</div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> input_ptr  = <span class="keyword">static_cast&lt;</span><span class="keyword">const </span><a class="code" href="classarm__compute_1_1_i_multi_image.xhtml">IMultiImage</a> *__restrict<span class="keyword">&gt;</span>(input);</div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> output_ptr = <span class="keyword">static_cast&lt;</span><a class="code" href="classarm__compute_1_1_i_multi_image.xhtml">IMultiImage</a> *__restrict<span class="keyword">&gt;</span>(output);</div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;</div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;    <span class="comment">// UV&#39;s width and height are subsampled</span></div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;    <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> win_uv(win);</div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;    win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#acd3d2bba51cb84d34dd7656ad2375a6e">set</a>(<a class="code" href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">Window::DimX</a>, <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml">Window::Dimension</a>(win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#ade63ce331b49eb66d330aab444e57ca9">x</a>().<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#a27c3790df96e9523b0370e7e10c0d375">start</a>() / 2, win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#ade63ce331b49eb66d330aab444e57ca9">x</a>().<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#aa9a8509af319b9e47f00c8fba23d368b">end</a>() / 2, win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#ade63ce331b49eb66d330aab444e57ca9">x</a>().<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#a992b375fc3254afe2e38f63bc29a43d4">step</a>() / 2));</div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;    win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#acd3d2bba51cb84d34dd7656ad2375a6e">set</a>(<a class="code" href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">Window::DimY</a>, <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml">Window::Dimension</a>(win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#aedd49c804f269c0e2c251c4efd44a275">y</a>().<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#a27c3790df96e9523b0370e7e10c0d375">start</a>() / 2, win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#aedd49c804f269c0e2c251c4efd44a275">y</a>().<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#aa9a8509af319b9e47f00c8fba23d368b">end</a>() / 2, 1));</div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;    win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#a048aaadf42ac725952523dd9546e96b5">validate</a>();</div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;</div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> in_y(input_ptr-&gt;plane(0), win);</div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> in_u(input_ptr-&gt;plane(1), win_uv);</div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> in_v(input_ptr-&gt;plane(2), win_uv);</div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> out_y(output_ptr-&gt;plane(0), win);</div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> out_uv(output_ptr-&gt;plane(1), win_uv);</div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;</div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a6c0dcc38187027dcb89cd9724bc5a823">execute_window_loop</a>(win, [&amp;](<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a> &amp; <span class="keywordtype">id</span>)</div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;    {</div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span>   ta_y_top    = vld2q_u8(in_y.ptr());</div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span>   ta_y_bottom = vld2q_u8(in_y.ptr() + input_ptr-&gt;plane(0)-&gt;info()-&gt;strides_in_bytes().y());</div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;        uint8x16x2_t ta_uv;</div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;        ta_uv.val[0] = vld1q_u8(in_u.ptr());</div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;        ta_uv.val[1] = vld1q_u8(in_v.ptr());</div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;        <span class="comment">//ta_y.val[0] = Y0 Y2 Y4 Y6 ...</span></div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;        <span class="comment">//ta_y.val[1] = Y1 Y3 Y5 Y7 ...</span></div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;        <span class="comment">//ta_uv.val[0] = U0 U2 U4 U6 ...</span></div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;        <span class="comment">//ta_uv.val[1] = V0 V2 V4 V6 ...</span></div><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;</div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;        vst2q_u8(out_y.ptr(), ta_y_top);</div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;        vst2q_u8(out_y.ptr() + output_ptr-&gt;plane(0)-&gt;info()-&gt;strides_in_bytes().y(), ta_y_bottom);</div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;        vst2q_u8(out_uv.ptr(), ta_uv);</div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;    },</div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;    in_y, in_u, in_v, out_y, out_uv);</div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;}</div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;</div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;<span class="keyword">template</span> &lt;<span class="keywordtype">bool</span> uv&gt;</div><div class="line"><a name="l00591"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#a199d36780fbb4a70168f290480673650">  591</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacearm__compute.xhtml#a199d36780fbb4a70168f290480673650">colorconvert_nv12_to_iyuv</a>(<span class="keyword">const</span> <span class="keywordtype">void</span> *__restrict input, <span class="keywordtype">void</span> *__restrict output, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;win)</div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;{</div><div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;    <a class="code" href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(<span class="keyword">nullptr</span> == input);</div><div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;    <a class="code" href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(<span class="keyword">nullptr</span> == output);</div><div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;    win.<a class="code" href="classarm__compute_1_1_window.xhtml#a048aaadf42ac725952523dd9546e96b5">validate</a>();</div><div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;</div><div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> input_ptr  = <span class="keyword">static_cast&lt;</span><span class="keyword">const </span><a class="code" href="classarm__compute_1_1_i_multi_image.xhtml">IMultiImage</a> *__restrict<span class="keyword">&gt;</span>(input);</div><div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> output_ptr = <span class="keyword">static_cast&lt;</span><a class="code" href="classarm__compute_1_1_i_multi_image.xhtml">IMultiImage</a> *__restrict<span class="keyword">&gt;</span>(output);</div><div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;</div><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;    constexpr <span class="keyword">auto</span> shift = uv ? 0 : 1;</div><div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;</div><div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;    <span class="comment">// UV&#39;s width and height are subsampled</span></div><div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;    <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> win_uv(win);</div><div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;    win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#acd3d2bba51cb84d34dd7656ad2375a6e">set</a>(<a class="code" href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">Window::DimX</a>, <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml">Window::Dimension</a>(win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#ade63ce331b49eb66d330aab444e57ca9">x</a>().<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#a27c3790df96e9523b0370e7e10c0d375">start</a>() / 2, win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#ade63ce331b49eb66d330aab444e57ca9">x</a>().<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#aa9a8509af319b9e47f00c8fba23d368b">end</a>() / 2, win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#ade63ce331b49eb66d330aab444e57ca9">x</a>().<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#a992b375fc3254afe2e38f63bc29a43d4">step</a>() / 2));</div><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;    win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#acd3d2bba51cb84d34dd7656ad2375a6e">set</a>(<a class="code" href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">Window::DimY</a>, <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml">Window::Dimension</a>(win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#aedd49c804f269c0e2c251c4efd44a275">y</a>().<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#a27c3790df96e9523b0370e7e10c0d375">start</a>() / 2, win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#aedd49c804f269c0e2c251c4efd44a275">y</a>().<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#aa9a8509af319b9e47f00c8fba23d368b">end</a>() / 2, 1));</div><div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;    win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#a048aaadf42ac725952523dd9546e96b5">validate</a>();</div><div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;</div><div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> in_y(input_ptr-&gt;plane(0), win);</div><div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> in_uv(input_ptr-&gt;plane(1), win_uv);</div><div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> out_y(output_ptr-&gt;plane(0), win);</div><div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> out_u(output_ptr-&gt;plane(1), win_uv);</div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> out_v(output_ptr-&gt;plane(2), win_uv);</div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;</div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a6c0dcc38187027dcb89cd9724bc5a823">execute_window_loop</a>(win, [&amp;](<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a> &amp; <span class="keywordtype">id</span>)</div><div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;    {</div><div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> ta_y_top    = vld2q_u8(in_y.ptr());</div><div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> ta_y_bottom = vld2q_u8(in_y.ptr() + input_ptr-&gt;plane(0)-&gt;info()-&gt;strides_in_bytes().y());</div><div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> ta_uv       = vld2q_u8(in_uv.ptr());</div><div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;        <span class="comment">//ta_y.val[0] = Y0 Y2 Y4 Y6 ...</span></div><div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;        <span class="comment">//ta_y.val[1] = Y1 Y3 Y5 Y7 ...</span></div><div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;        <span class="comment">//ta_uv.val[0] = U0 U2 U4 U6 ...</span></div><div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;        <span class="comment">//ta_uv.val[1] = V0 V2 V4 V6 ...</span></div><div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;</div><div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;        vst2q_u8(out_y.ptr(), ta_y_top);</div><div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;        vst2q_u8(out_y.ptr() + output_ptr-&gt;plane(0)-&gt;info()-&gt;strides_in_bytes().y(), ta_y_bottom);</div><div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;        vst1q_u8(out_u.ptr(), ta_uv.val[0 + shift]);</div><div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;        vst1q_u8(out_v.ptr(), ta_uv.val[1 - shift]);</div><div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;    },</div><div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;    in_y, in_uv, out_y, out_u, out_v);</div><div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;}</div><div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;</div><div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;<span class="keyword">template</span> &lt;<span class="keywordtype">bool</span> yuyv&gt;</div><div class="line"><a name="l00633"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#ae43e8f0463c0289169025c3041688d36">  633</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacearm__compute.xhtml#ae43e8f0463c0289169025c3041688d36">colorconvert_yuyv_to_iyuv</a>(<span class="keyword">const</span> <span class="keywordtype">void</span> *__restrict input, <span class="keywordtype">void</span> *__restrict output, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;win)</div><div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;{</div><div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;    <a class="code" href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(<span class="keyword">nullptr</span> == input);</div><div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;    <a class="code" href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(<span class="keyword">nullptr</span> == output);</div><div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;    win.<a class="code" href="classarm__compute_1_1_window.xhtml#a048aaadf42ac725952523dd9546e96b5">validate</a>();</div><div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;</div><div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> input_ptr  = <span class="keyword">static_cast&lt;</span><span class="keyword">const </span><a class="code" href="classarm__compute_1_1_i_tensor.xhtml">IImage</a> *__restrict<span class="keyword">&gt;</span>(input);</div><div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> output_ptr = <span class="keyword">static_cast&lt;</span><a class="code" href="classarm__compute_1_1_i_multi_image.xhtml">IMultiImage</a> *__restrict<span class="keyword">&gt;</span>(output);</div><div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;</div><div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;    constexpr <span class="keyword">auto</span> shift = yuyv ? 0 : 1;</div><div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;</div><div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;    <span class="comment">// Destination&#39;s UV&#39;s width and height are subsampled</span></div><div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;    <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> win_uv(win);</div><div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;    win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#acd3d2bba51cb84d34dd7656ad2375a6e">set</a>(<a class="code" href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">Window::DimX</a>, <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml">Window::Dimension</a>(win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#ade63ce331b49eb66d330aab444e57ca9">x</a>().<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#a27c3790df96e9523b0370e7e10c0d375">start</a>() / 2, win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#ade63ce331b49eb66d330aab444e57ca9">x</a>().<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#aa9a8509af319b9e47f00c8fba23d368b">end</a>() / 2, win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#ade63ce331b49eb66d330aab444e57ca9">x</a>().<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#a992b375fc3254afe2e38f63bc29a43d4">step</a>() / 2));</div><div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;    win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#acd3d2bba51cb84d34dd7656ad2375a6e">set</a>(<a class="code" href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">Window::DimY</a>, <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml">Window::Dimension</a>(win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#aedd49c804f269c0e2c251c4efd44a275">y</a>().<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#a27c3790df96e9523b0370e7e10c0d375">start</a>() / 2, win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#aedd49c804f269c0e2c251c4efd44a275">y</a>().<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#aa9a8509af319b9e47f00c8fba23d368b">end</a>() / 2, 1));</div><div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;    win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#a048aaadf42ac725952523dd9546e96b5">validate</a>();</div><div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;</div><div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> in(input_ptr, win);</div><div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> out_y(output_ptr-&gt;plane(0), win);</div><div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> out_u(output_ptr-&gt;plane(1), win_uv);</div><div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> out_v(output_ptr-&gt;plane(2), win_uv);</div><div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;</div><div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a6c0dcc38187027dcb89cd9724bc5a823">execute_window_loop</a>(win, [&amp;](<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a> &amp; <span class="keywordtype">id</span>)</div><div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;    {</div><div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> ta_top    = vld4q_u8(in.<a class="code" href="classarm__compute_1_1_iterator.xhtml#aeabcf37a281d780c90ebe812149a7a84">ptr</a>());</div><div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> ta_bottom = vld4q_u8(in.<a class="code" href="classarm__compute_1_1_iterator.xhtml#aeabcf37a281d780c90ebe812149a7a84">ptr</a>() + input_ptr-&gt;info()-&gt;strides_in_bytes().y());</div><div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;        <span class="comment">//ta.val[0] = Y0 Y2 Y4 Y6 ...</span></div><div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;        <span class="comment">//ta.val[1] = U0 U2 U4 U6 ...</span></div><div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;        <span class="comment">//ta.val[2] = Y1 Y3 Y5 Y7 ...</span></div><div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;        <span class="comment">//ta.val[3] = V0 V2 V4 V7 ...</span></div><div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;</div><div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;        uint8x16x2_t yvec;</div><div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;        yvec.val[0] = ta_top.val[0 + shift];</div><div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;        yvec.val[1] = ta_top.val[2 + shift];</div><div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;        vst2q_u8(out_y.ptr(), yvec);</div><div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;</div><div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;        uint8x16x2_t yyvec;</div><div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;        yyvec.val[0] = ta_bottom.val[0 + shift];</div><div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;        yyvec.val[1] = ta_bottom.val[2 + shift];</div><div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;        vst2q_u8(out_y.ptr() + output_ptr-&gt;plane(0)-&gt;info()-&gt;strides_in_bytes().y(), yyvec);</div><div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;</div><div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;        uint8x16_t uvec;</div><div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;        uvec = vhaddq_u8(ta_top.val[1 - shift], ta_bottom.val[1 - shift]);</div><div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;        vst1q_u8(out_u.ptr(), uvec);</div><div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;</div><div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;        uint8x16_t vvec;</div><div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;        vvec = vhaddq_u8(ta_top.val[3 - shift], ta_bottom.val[3 - shift]);</div><div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;        vst1q_u8(out_v.ptr(), vvec);</div><div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;    },</div><div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;    in, out_y, out_u, out_v);</div><div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;}</div><div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;</div><div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;<span class="keyword">template</span> &lt;<span class="keywordtype">bool</span> uv&gt;</div><div class="line"><a name="l00686"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#a587a54c85dcc72838b8f4b5575ebafe4">  686</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacearm__compute.xhtml#a587a54c85dcc72838b8f4b5575ebafe4">colorconvert_nv12_to_yuv4</a>(<span class="keyword">const</span> <span class="keywordtype">void</span> *__restrict input, <span class="keywordtype">void</span> *__restrict output, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;win)</div><div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;{</div><div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;    <a class="code" href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(<span class="keyword">nullptr</span> == input);</div><div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;    <a class="code" href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(<span class="keyword">nullptr</span> == output);</div><div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;    win.<a class="code" href="classarm__compute_1_1_window.xhtml#a048aaadf42ac725952523dd9546e96b5">validate</a>();</div><div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;</div><div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> input_ptr  = <span class="keyword">static_cast&lt;</span><span class="keyword">const </span><a class="code" href="classarm__compute_1_1_i_multi_image.xhtml">IMultiImage</a> *__restrict<span class="keyword">&gt;</span>(input);</div><div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> output_ptr = <span class="keyword">static_cast&lt;</span><a class="code" href="classarm__compute_1_1_i_multi_image.xhtml">IMultiImage</a> *__restrict<span class="keyword">&gt;</span>(output);</div><div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;</div><div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;    constexpr <span class="keyword">auto</span> shift = uv ? 0 : 1;</div><div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;</div><div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;    <span class="comment">// UV&#39;s width and height are subsampled</span></div><div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;    <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> win_uv(win);</div><div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;    win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#acd3d2bba51cb84d34dd7656ad2375a6e">set</a>(<a class="code" href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">Window::DimX</a>, <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml">Window::Dimension</a>(win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#ade63ce331b49eb66d330aab444e57ca9">x</a>().<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#a27c3790df96e9523b0370e7e10c0d375">start</a>() / 2, win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#ade63ce331b49eb66d330aab444e57ca9">x</a>().<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#aa9a8509af319b9e47f00c8fba23d368b">end</a>() / 2, win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#ade63ce331b49eb66d330aab444e57ca9">x</a>().<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#a992b375fc3254afe2e38f63bc29a43d4">step</a>() / 2));</div><div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;    win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#acd3d2bba51cb84d34dd7656ad2375a6e">set</a>(<a class="code" href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">Window::DimY</a>, <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml">Window::Dimension</a>(win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#aedd49c804f269c0e2c251c4efd44a275">y</a>().<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#a27c3790df96e9523b0370e7e10c0d375">start</a>() / 2, win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#aedd49c804f269c0e2c251c4efd44a275">y</a>().<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#aa9a8509af319b9e47f00c8fba23d368b">end</a>() / 2, 1));</div><div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;    win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#a048aaadf42ac725952523dd9546e96b5">validate</a>();</div><div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;</div><div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> in_y(input_ptr-&gt;plane(0), win);</div><div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> in_uv(input_ptr-&gt;plane(1), win_uv);</div><div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> out_y(output_ptr-&gt;plane(0), win);</div><div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> out_u(output_ptr-&gt;plane(1), win);</div><div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> out_v(output_ptr-&gt;plane(2), win);</div><div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;</div><div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a6c0dcc38187027dcb89cd9724bc5a823">execute_window_loop</a>(win, [&amp;](<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a> &amp; <span class="keywordtype">id</span>)</div><div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;    {</div><div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> ta_y_top    = vld2q_u8(in_y.ptr());</div><div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> ta_y_bottom = vld2q_u8(in_y.ptr() + input_ptr-&gt;plane(0)-&gt;info()-&gt;strides_in_bytes().y());</div><div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> ta_uv       = vld2q_u8(in_uv.ptr());</div><div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;        <span class="comment">//ta_y.val[0] = Y0 Y2 Y4 Y6 ...</span></div><div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;        <span class="comment">//ta_y.val[1] = Y1 Y3 Y5 Y7 ...</span></div><div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;        <span class="comment">//ta_uv.val[0] = U0 U2 U4 U6 ...</span></div><div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;        <span class="comment">//ta_uv.val[1] = V0 V2 V4 V6 ...</span></div><div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;</div><div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;        vst2q_u8(out_y.ptr(), ta_y_top);</div><div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;        vst2q_u8(out_y.ptr() + output_ptr-&gt;plane(0)-&gt;info()-&gt;strides_in_bytes().y(), ta_y_bottom);</div><div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;</div><div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;        uint8x16x2_t uvec;</div><div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;        uvec.val[0] = ta_uv.val[0 + shift];</div><div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;        uvec.val[1] = ta_uv.val[0 + shift];</div><div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;        vst2q_u8(out_u.ptr(), uvec);</div><div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;        vst2q_u8(out_u.ptr() + output_ptr-&gt;plane(1)-&gt;info()-&gt;strides_in_bytes().y(), uvec);</div><div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;</div><div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;        uint8x16x2_t vvec;</div><div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;        vvec.val[0] = ta_uv.val[1 - shift];</div><div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;        vvec.val[1] = ta_uv.val[1 - shift];</div><div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;        vst2q_u8(out_v.ptr(), vvec);</div><div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;        vst2q_u8(out_v.ptr() + output_ptr-&gt;plane(2)-&gt;info()-&gt;strides_in_bytes().y(), vvec);</div><div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;    },</div><div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;    in_y, in_uv, out_y, out_u, out_v);</div><div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;}</div><div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;</div><div class="line"><a name="l00737"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#a08e9d88293a5cef787bb324c2dc0a6bf">  737</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacearm__compute.xhtml#a08e9d88293a5cef787bb324c2dc0a6bf">colorconvert_iyuv_to_yuv4</a>(<span class="keyword">const</span> <span class="keywordtype">void</span> *__restrict input, <span class="keywordtype">void</span> *__restrict output, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;win)</div><div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;{</div><div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;    <a class="code" href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(<span class="keyword">nullptr</span> == input);</div><div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;    <a class="code" href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(<span class="keyword">nullptr</span> == output);</div><div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;    win.<a class="code" href="classarm__compute_1_1_window.xhtml#a048aaadf42ac725952523dd9546e96b5">validate</a>();</div><div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;</div><div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> input_ptr  = <span class="keyword">static_cast&lt;</span><span class="keyword">const </span><a class="code" href="classarm__compute_1_1_i_multi_image.xhtml">IMultiImage</a> *__restrict<span class="keyword">&gt;</span>(input);</div><div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> output_ptr = <span class="keyword">static_cast&lt;</span><a class="code" href="classarm__compute_1_1_i_multi_image.xhtml">IMultiImage</a> *__restrict<span class="keyword">&gt;</span>(output);</div><div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;</div><div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;    <span class="comment">// UV&#39;s width and height are subsampled</span></div><div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160;    <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> win_uv(win);</div><div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;    win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#acd3d2bba51cb84d34dd7656ad2375a6e">set</a>(<a class="code" href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">Window::DimX</a>, <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml">Window::Dimension</a>(win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#ade63ce331b49eb66d330aab444e57ca9">x</a>().<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#a27c3790df96e9523b0370e7e10c0d375">start</a>() / 2, win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#ade63ce331b49eb66d330aab444e57ca9">x</a>().<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#aa9a8509af319b9e47f00c8fba23d368b">end</a>() / 2, win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#ade63ce331b49eb66d330aab444e57ca9">x</a>().<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#a992b375fc3254afe2e38f63bc29a43d4">step</a>() / 2));</div><div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;    win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#acd3d2bba51cb84d34dd7656ad2375a6e">set</a>(<a class="code" href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">Window::DimY</a>, <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml">Window::Dimension</a>(win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#aedd49c804f269c0e2c251c4efd44a275">y</a>().<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#a27c3790df96e9523b0370e7e10c0d375">start</a>() / 2, win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#aedd49c804f269c0e2c251c4efd44a275">y</a>().<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#aa9a8509af319b9e47f00c8fba23d368b">end</a>() / 2, 1));</div><div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160;    win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#a048aaadf42ac725952523dd9546e96b5">validate</a>();</div><div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;</div><div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> in_y(input_ptr-&gt;plane(0), win);</div><div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> in_u(input_ptr-&gt;plane(1), win_uv);</div><div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> in_v(input_ptr-&gt;plane(2), win_uv);</div><div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> out_y(output_ptr-&gt;plane(0), win);</div><div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> out_u(output_ptr-&gt;plane(1), win);</div><div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> out_v(output_ptr-&gt;plane(2), win);</div><div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;</div><div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a6c0dcc38187027dcb89cd9724bc5a823">execute_window_loop</a>(win, [&amp;](<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a> &amp; <span class="keywordtype">id</span>)</div><div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;    {</div><div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> ta_y_top    = vld2q_u8(in_y.ptr());</div><div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> ta_y_bottom = vld2q_u8(in_y.ptr() + input_ptr-&gt;plane(0)-&gt;info()-&gt;strides_in_bytes().y());</div><div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> ta_u        = vld1q_u8(in_u.ptr());</div><div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> ta_v        = vld1q_u8(in_v.ptr());</div><div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;        <span class="comment">//ta_y.val[0] = Y0 Y2 Y4 Y6 ...</span></div><div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;        <span class="comment">//ta_y.val[1] = Y1 Y3 Y5 Y7 ...</span></div><div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;        <span class="comment">//ta_u = U0 U2 U4 U6 ...</span></div><div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;        <span class="comment">//ta_v = V0 V2 V4 V6 ...</span></div><div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;</div><div class="line"><a name="l00770"></a><span class="lineno">  770</span>&#160;        vst2q_u8(out_y.ptr(), ta_y_top);</div><div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;        vst2q_u8(out_y.ptr() + output_ptr-&gt;plane(0)-&gt;info()-&gt;strides_in_bytes().y(), ta_y_bottom);</div><div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;</div><div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;        uint8x16x2_t uvec;</div><div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;        uvec.val[0] = ta_u;</div><div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;        uvec.val[1] = ta_u;</div><div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160;        vst2q_u8(out_u.ptr(), uvec);</div><div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160;        vst2q_u8(out_u.ptr() + output_ptr-&gt;plane(1)-&gt;info()-&gt;strides_in_bytes().y(), uvec);</div><div class="line"><a name="l00778"></a><span class="lineno">  778</span>&#160;</div><div class="line"><a name="l00779"></a><span class="lineno">  779</span>&#160;        uint8x16x2_t vvec;</div><div class="line"><a name="l00780"></a><span class="lineno">  780</span>&#160;        vvec.val[0] = ta_v;</div><div class="line"><a name="l00781"></a><span class="lineno">  781</span>&#160;        vvec.val[1] = ta_v;</div><div class="line"><a name="l00782"></a><span class="lineno">  782</span>&#160;        vst2q_u8(out_v.ptr(), vvec);</div><div class="line"><a name="l00783"></a><span class="lineno">  783</span>&#160;        vst2q_u8(out_v.ptr() + output_ptr-&gt;plane(2)-&gt;info()-&gt;strides_in_bytes().y(), vvec);</div><div class="line"><a name="l00784"></a><span class="lineno">  784</span>&#160;    },</div><div class="line"><a name="l00785"></a><span class="lineno">  785</span>&#160;    in_y, in_u, in_v, out_y, out_u, out_v);</div><div class="line"><a name="l00786"></a><span class="lineno">  786</span>&#160;}</div><div class="line"><a name="l00787"></a><span class="lineno">  787</span>&#160;</div><div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;<span class="keyword">template</span> &lt;<span class="keywordtype">bool</span> alpha&gt;</div><div class="line"><a name="l00789"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#a14fd899b732509e245976b9967b8931d">  789</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacearm__compute.xhtml#a14fd899b732509e245976b9967b8931d">colorconvert_rgb_to_nv12</a>(<span class="keyword">const</span> <span class="keywordtype">void</span> *__restrict input, <span class="keywordtype">void</span> *__restrict output, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;win)</div><div class="line"><a name="l00790"></a><span class="lineno">  790</span>&#160;{</div><div class="line"><a name="l00791"></a><span class="lineno">  791</span>&#160;    <a class="code" href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(<span class="keyword">nullptr</span> == input);</div><div class="line"><a name="l00792"></a><span class="lineno">  792</span>&#160;    <a class="code" href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(<span class="keyword">nullptr</span> == output);</div><div class="line"><a name="l00793"></a><span class="lineno">  793</span>&#160;    win.<a class="code" href="classarm__compute_1_1_window.xhtml#a048aaadf42ac725952523dd9546e96b5">validate</a>();</div><div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160;</div><div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> input_ptr  = <span class="keyword">static_cast&lt;</span><span class="keyword">const </span><a class="code" href="classarm__compute_1_1_i_tensor.xhtml">IImage</a> *__restrict<span class="keyword">&gt;</span>(input);</div><div class="line"><a name="l00796"></a><span class="lineno">  796</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> output_ptr = <span class="keyword">static_cast&lt;</span><a class="code" href="classarm__compute_1_1_i_multi_image.xhtml">IMultiImage</a> *__restrict<span class="keyword">&gt;</span>(output);</div><div class="line"><a name="l00797"></a><span class="lineno">  797</span>&#160;</div><div class="line"><a name="l00798"></a><span class="lineno">  798</span>&#160;    <span class="comment">// UV&#39;s width and height are subsampled</span></div><div class="line"><a name="l00799"></a><span class="lineno">  799</span>&#160;    <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> win_uv(win);</div><div class="line"><a name="l00800"></a><span class="lineno">  800</span>&#160;    win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#acd3d2bba51cb84d34dd7656ad2375a6e">set</a>(<a class="code" href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">Window::DimX</a>, <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml">Window::Dimension</a>(win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#ade63ce331b49eb66d330aab444e57ca9">x</a>().<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#a27c3790df96e9523b0370e7e10c0d375">start</a>() / 2, win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#ade63ce331b49eb66d330aab444e57ca9">x</a>().<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#aa9a8509af319b9e47f00c8fba23d368b">end</a>() / 2, win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#ade63ce331b49eb66d330aab444e57ca9">x</a>().<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#a992b375fc3254afe2e38f63bc29a43d4">step</a>() / 2));</div><div class="line"><a name="l00801"></a><span class="lineno">  801</span>&#160;    win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#acd3d2bba51cb84d34dd7656ad2375a6e">set</a>(<a class="code" href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">Window::DimY</a>, <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml">Window::Dimension</a>(win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#aedd49c804f269c0e2c251c4efd44a275">y</a>().<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#a27c3790df96e9523b0370e7e10c0d375">start</a>() / 2, win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#aedd49c804f269c0e2c251c4efd44a275">y</a>().<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#aa9a8509af319b9e47f00c8fba23d368b">end</a>() / 2, 1));</div><div class="line"><a name="l00802"></a><span class="lineno">  802</span>&#160;    win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#a048aaadf42ac725952523dd9546e96b5">validate</a>();</div><div class="line"><a name="l00803"></a><span class="lineno">  803</span>&#160;</div><div class="line"><a name="l00804"></a><span class="lineno">  804</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> in(input_ptr, win);</div><div class="line"><a name="l00805"></a><span class="lineno">  805</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> out_y(output_ptr-&gt;plane(0), win);</div><div class="line"><a name="l00806"></a><span class="lineno">  806</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> out_uv(output_ptr-&gt;plane(1), win_uv);</div><div class="line"><a name="l00807"></a><span class="lineno">  807</span>&#160;</div><div class="line"><a name="l00808"></a><span class="lineno">  808</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a6c0dcc38187027dcb89cd9724bc5a823">execute_window_loop</a>(win, [&amp;](<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a> &amp; <span class="keywordtype">id</span>)</div><div class="line"><a name="l00809"></a><span class="lineno">  809</span>&#160;    {</div><div class="line"><a name="l00810"></a><span class="lineno">  810</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> ta_rgb_top    = load_rgb(in.<a class="code" href="classarm__compute_1_1_iterator.xhtml#aeabcf37a281d780c90ebe812149a7a84">ptr</a>(), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a62197192f0fbf4e0675eb37be1c4c175">alpha</a>);</div><div class="line"><a name="l00811"></a><span class="lineno">  811</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> ta_rgb_bottom = load_rgb(in.<a class="code" href="classarm__compute_1_1_iterator.xhtml#aeabcf37a281d780c90ebe812149a7a84">ptr</a>() + input_ptr-&gt;info()-&gt;strides_in_bytes().y(), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a62197192f0fbf4e0675eb37be1c4c175">alpha</a>);</div><div class="line"><a name="l00812"></a><span class="lineno">  812</span>&#160;        <span class="comment">//ta_rgb.val[0] = R0 R1 R2 R3 ...</span></div><div class="line"><a name="l00813"></a><span class="lineno">  813</span>&#160;        <span class="comment">//ta_rgb.val[1] = G0 G1 G2 G3 ...</span></div><div class="line"><a name="l00814"></a><span class="lineno">  814</span>&#160;        <span class="comment">//ta_rgb.val[2] = B0 B1 B2 B3 ...</span></div><div class="line"><a name="l00815"></a><span class="lineno">  815</span>&#160;</div><div class="line"><a name="l00816"></a><span class="lineno">  816</span>&#160;        store_rgb_to_nv12(ta_rgb_top.val[0], ta_rgb_top.val[1], ta_rgb_top.val[2],</div><div class="line"><a name="l00817"></a><span class="lineno">  817</span>&#160;                          ta_rgb_bottom.val[0], ta_rgb_bottom.val[1], ta_rgb_bottom.val[2],</div><div class="line"><a name="l00818"></a><span class="lineno">  818</span>&#160;                          out_y.ptr(), out_y.ptr() + output_ptr-&gt;plane(0)-&gt;info()-&gt;strides_in_bytes().y(),</div><div class="line"><a name="l00819"></a><span class="lineno">  819</span>&#160;                          out_uv.ptr());</div><div class="line"><a name="l00820"></a><span class="lineno">  820</span>&#160;    },</div><div class="line"><a name="l00821"></a><span class="lineno">  821</span>&#160;    in, out_y, out_uv);</div><div class="line"><a name="l00822"></a><span class="lineno">  822</span>&#160;}</div><div class="line"><a name="l00823"></a><span class="lineno">  823</span>&#160;</div><div class="line"><a name="l00824"></a><span class="lineno">  824</span>&#160;<span class="keyword">template</span> &lt;<span class="keywordtype">bool</span> alpha&gt;</div><div class="line"><a name="l00825"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#a49b7a8e217ba7aad821fdeaab86bad53">  825</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacearm__compute.xhtml#a49b7a8e217ba7aad821fdeaab86bad53">colorconvert_rgb_to_iyuv</a>(<span class="keyword">const</span> <span class="keywordtype">void</span> *__restrict input, <span class="keywordtype">void</span> *__restrict output, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;win)</div><div class="line"><a name="l00826"></a><span class="lineno">  826</span>&#160;{</div><div class="line"><a name="l00827"></a><span class="lineno">  827</span>&#160;    <a class="code" href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(<span class="keyword">nullptr</span> == input);</div><div class="line"><a name="l00828"></a><span class="lineno">  828</span>&#160;    <a class="code" href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(<span class="keyword">nullptr</span> == output);</div><div class="line"><a name="l00829"></a><span class="lineno">  829</span>&#160;    win.<a class="code" href="classarm__compute_1_1_window.xhtml#a048aaadf42ac725952523dd9546e96b5">validate</a>();</div><div class="line"><a name="l00830"></a><span class="lineno">  830</span>&#160;</div><div class="line"><a name="l00831"></a><span class="lineno">  831</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> input_ptr  = <span class="keyword">static_cast&lt;</span><span class="keyword">const </span><a class="code" href="classarm__compute_1_1_i_tensor.xhtml">IImage</a> *__restrict<span class="keyword">&gt;</span>(input);</div><div class="line"><a name="l00832"></a><span class="lineno">  832</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> output_ptr = <span class="keyword">static_cast&lt;</span><a class="code" href="classarm__compute_1_1_i_multi_image.xhtml">IMultiImage</a> *__restrict<span class="keyword">&gt;</span>(output);</div><div class="line"><a name="l00833"></a><span class="lineno">  833</span>&#160;</div><div class="line"><a name="l00834"></a><span class="lineno">  834</span>&#160;    <span class="comment">// UV&#39;s width and height are subsampled</span></div><div class="line"><a name="l00835"></a><span class="lineno">  835</span>&#160;    <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> win_uv(win);</div><div class="line"><a name="l00836"></a><span class="lineno">  836</span>&#160;    win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#acd3d2bba51cb84d34dd7656ad2375a6e">set</a>(<a class="code" href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">Window::DimX</a>, <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml">Window::Dimension</a>(win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#ade63ce331b49eb66d330aab444e57ca9">x</a>().<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#a27c3790df96e9523b0370e7e10c0d375">start</a>() / 2, win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#ade63ce331b49eb66d330aab444e57ca9">x</a>().<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#aa9a8509af319b9e47f00c8fba23d368b">end</a>() / 2, win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#ade63ce331b49eb66d330aab444e57ca9">x</a>().<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#a992b375fc3254afe2e38f63bc29a43d4">step</a>() / 2));</div><div class="line"><a name="l00837"></a><span class="lineno">  837</span>&#160;    win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#acd3d2bba51cb84d34dd7656ad2375a6e">set</a>(<a class="code" href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">Window::DimY</a>, <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml">Window::Dimension</a>(win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#aedd49c804f269c0e2c251c4efd44a275">y</a>().<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#a27c3790df96e9523b0370e7e10c0d375">start</a>() / 2, win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#aedd49c804f269c0e2c251c4efd44a275">y</a>().<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#aa9a8509af319b9e47f00c8fba23d368b">end</a>() / 2, 1));</div><div class="line"><a name="l00838"></a><span class="lineno">  838</span>&#160;    win_uv.<a class="code" href="classarm__compute_1_1_window.xhtml#a048aaadf42ac725952523dd9546e96b5">validate</a>();</div><div class="line"><a name="l00839"></a><span class="lineno">  839</span>&#160;</div><div class="line"><a name="l00840"></a><span class="lineno">  840</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> in(input_ptr, win);</div><div class="line"><a name="l00841"></a><span class="lineno">  841</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> out_y(output_ptr-&gt;plane(0), win);</div><div class="line"><a name="l00842"></a><span class="lineno">  842</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> out_u(output_ptr-&gt;plane(1), win_uv);</div><div class="line"><a name="l00843"></a><span class="lineno">  843</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> out_v(output_ptr-&gt;plane(2), win_uv);</div><div class="line"><a name="l00844"></a><span class="lineno">  844</span>&#160;</div><div class="line"><a name="l00845"></a><span class="lineno">  845</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a6c0dcc38187027dcb89cd9724bc5a823">execute_window_loop</a>(win, [&amp;](<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a> &amp; <span class="keywordtype">id</span>)</div><div class="line"><a name="l00846"></a><span class="lineno">  846</span>&#160;    {</div><div class="line"><a name="l00847"></a><span class="lineno">  847</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> ta_rgb_top    = load_rgb(in.<a class="code" href="classarm__compute_1_1_iterator.xhtml#aeabcf37a281d780c90ebe812149a7a84">ptr</a>(), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a62197192f0fbf4e0675eb37be1c4c175">alpha</a>);</div><div class="line"><a name="l00848"></a><span class="lineno">  848</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> ta_rgb_bottom = load_rgb(in.<a class="code" href="classarm__compute_1_1_iterator.xhtml#aeabcf37a281d780c90ebe812149a7a84">ptr</a>() + input_ptr-&gt;info()-&gt;strides_in_bytes().y(), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a62197192f0fbf4e0675eb37be1c4c175">alpha</a>);</div><div class="line"><a name="l00849"></a><span class="lineno">  849</span>&#160;        <span class="comment">//ta_rgb.val[0] = R0 R1 R2 R3 ...</span></div><div class="line"><a name="l00850"></a><span class="lineno">  850</span>&#160;        <span class="comment">//ta_rgb.val[1] = G0 G1 G2 G3 ...</span></div><div class="line"><a name="l00851"></a><span class="lineno">  851</span>&#160;        <span class="comment">//ta_rgb.val[2] = B0 B1 B2 B3 ...</span></div><div class="line"><a name="l00852"></a><span class="lineno">  852</span>&#160;</div><div class="line"><a name="l00853"></a><span class="lineno">  853</span>&#160;        store_rgb_to_iyuv(ta_rgb_top.val[0], ta_rgb_top.val[1], ta_rgb_top.val[2],</div><div class="line"><a name="l00854"></a><span class="lineno">  854</span>&#160;                          ta_rgb_bottom.val[0], ta_rgb_bottom.val[1], ta_rgb_bottom.val[2],</div><div class="line"><a name="l00855"></a><span class="lineno">  855</span>&#160;                          out_y.ptr(), out_y.ptr() + output_ptr-&gt;plane(0)-&gt;info()-&gt;strides_in_bytes().y(),</div><div class="line"><a name="l00856"></a><span class="lineno">  856</span>&#160;                          out_u.ptr(), out_v.ptr());</div><div class="line"><a name="l00857"></a><span class="lineno">  857</span>&#160;    },</div><div class="line"><a name="l00858"></a><span class="lineno">  858</span>&#160;    in, out_y, out_u, out_v);</div><div class="line"><a name="l00859"></a><span class="lineno">  859</span>&#160;}</div><div class="line"><a name="l00860"></a><span class="lineno">  860</span>&#160;</div><div class="line"><a name="l00861"></a><span class="lineno">  861</span>&#160;<span class="keyword">template</span> &lt;<span class="keywordtype">bool</span> alpha&gt;</div><div class="line"><a name="l00862"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#ad304c0b0a72ed3f65c24fa69ab3cd53e">  862</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacearm__compute.xhtml#ad304c0b0a72ed3f65c24fa69ab3cd53e">colorconvert_rgb_to_yuv4</a>(<span class="keyword">const</span> <span class="keywordtype">void</span> *__restrict input, <span class="keywordtype">void</span> *__restrict output, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;win)</div><div class="line"><a name="l00863"></a><span class="lineno">  863</span>&#160;{</div><div class="line"><a name="l00864"></a><span class="lineno">  864</span>&#160;    <a class="code" href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(<span class="keyword">nullptr</span> == input);</div><div class="line"><a name="l00865"></a><span class="lineno">  865</span>&#160;    <a class="code" href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(<span class="keyword">nullptr</span> == output);</div><div class="line"><a name="l00866"></a><span class="lineno">  866</span>&#160;    win.<a class="code" href="classarm__compute_1_1_window.xhtml#a048aaadf42ac725952523dd9546e96b5">validate</a>();</div><div class="line"><a name="l00867"></a><span class="lineno">  867</span>&#160;</div><div class="line"><a name="l00868"></a><span class="lineno">  868</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> input_ptr  = <span class="keyword">static_cast&lt;</span><span class="keyword">const </span><a class="code" href="classarm__compute_1_1_i_tensor.xhtml">IImage</a> *__restrict<span class="keyword">&gt;</span>(input);</div><div class="line"><a name="l00869"></a><span class="lineno">  869</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> output_ptr = <span class="keyword">static_cast&lt;</span><a class="code" href="classarm__compute_1_1_i_multi_image.xhtml">IMultiImage</a> *__restrict<span class="keyword">&gt;</span>(output);</div><div class="line"><a name="l00870"></a><span class="lineno">  870</span>&#160;</div><div class="line"><a name="l00871"></a><span class="lineno">  871</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> in(input_ptr, win);</div><div class="line"><a name="l00872"></a><span class="lineno">  872</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> out_y(output_ptr-&gt;plane(0), win);</div><div class="line"><a name="l00873"></a><span class="lineno">  873</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> out_u(output_ptr-&gt;plane(1), win);</div><div class="line"><a name="l00874"></a><span class="lineno">  874</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> out_v(output_ptr-&gt;plane(2), win);</div><div class="line"><a name="l00875"></a><span class="lineno">  875</span>&#160;</div><div class="line"><a name="l00876"></a><span class="lineno">  876</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a6c0dcc38187027dcb89cd9724bc5a823">execute_window_loop</a>(win, [&amp;](<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a> &amp; <span class="keywordtype">id</span>)</div><div class="line"><a name="l00877"></a><span class="lineno">  877</span>&#160;    {</div><div class="line"><a name="l00878"></a><span class="lineno">  878</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> ta_rgb = load_rgb(in.<a class="code" href="classarm__compute_1_1_iterator.xhtml#aeabcf37a281d780c90ebe812149a7a84">ptr</a>(), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a62197192f0fbf4e0675eb37be1c4c175">alpha</a>);</div><div class="line"><a name="l00879"></a><span class="lineno">  879</span>&#160;        <span class="comment">//ta_rgb.val[0] = R0 R1 R2 R3 ...</span></div><div class="line"><a name="l00880"></a><span class="lineno">  880</span>&#160;        <span class="comment">//ta_rgb.val[1] = G0 G1 G2 G3 ...</span></div><div class="line"><a name="l00881"></a><span class="lineno">  881</span>&#160;        <span class="comment">//ta_rgb.val[2] = B0 B1 B2 B3 ...</span></div><div class="line"><a name="l00882"></a><span class="lineno">  882</span>&#160;</div><div class="line"><a name="l00883"></a><span class="lineno">  883</span>&#160;        store_rgb_to_yuv4(ta_rgb.val[0], ta_rgb.val[1], ta_rgb.val[2],</div><div class="line"><a name="l00884"></a><span class="lineno">  884</span>&#160;                          out_y.ptr(), out_u.ptr(), out_v.ptr());</div><div class="line"><a name="l00885"></a><span class="lineno">  885</span>&#160;    },</div><div class="line"><a name="l00886"></a><span class="lineno">  886</span>&#160;    in, out_y, out_u, out_v);</div><div class="line"><a name="l00887"></a><span class="lineno">  887</span>&#160;}</div><div class="line"><a name="l00888"></a><span class="lineno">  888</span>&#160;} <span class="comment">// namespace arm_compute</span></div><div class="ttc" id="namespacearm__compute_xhtml_af2be1325decaa34a8a1199af177148c6"><div class="ttname"><a href="namespacearm__compute.xhtml#af2be1325decaa34a8a1199af177148c6">arm_compute::colorconvert_iyuv_to_nv12</a></div><div class="ttdeci">void colorconvert_iyuv_to_nv12(const void *__restrict input, void *__restrict output, const Window &amp;win)</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_color_convert_helper_8inl_source.xhtml#l00550">NEColorConvertHelper.inl:550</a></div></div>
<div class="ttc" id="core_2_error_8h_xhtml"><div class="ttname"><a href="core_2_error_8h.xhtml">Error.h</a></div></div>
<div class="ttc" id="_i_multi_image_8h_xhtml"><div class="ttname"><a href="_i_multi_image_8h.xhtml">IMultiImage.h</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad304c0b0a72ed3f65c24fa69ab3cd53e"><div class="ttname"><a href="namespacearm__compute.xhtml#ad304c0b0a72ed3f65c24fa69ab3cd53e">arm_compute::colorconvert_rgb_to_yuv4</a></div><div class="ttdeci">void colorconvert_rgb_to_yuv4(const void *__restrict input, void *__restrict output, const Window &amp;win)</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_color_convert_helper_8inl_source.xhtml#l00862">NEColorConvertHelper.inl:862</a></div></div>
<div class="ttc" id="core_2_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown. </div><div class="ttdef"><b>Definition:</b> <a href="core_2_error_8h_source.xhtml#l00306">Error.h:306</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_acf7451c0d0f8a4b1cfbb60d7531a43aa"><div class="ttname"><a href="namespacearm__compute.xhtml#acf7451c0d0f8a4b1cfbb60d7531a43aa">arm_compute::colorconvert_rgbx_to_rgb</a></div><div class="ttdeci">void colorconvert_rgbx_to_rgb(const void *input, void *output, const Window &amp;win)</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_color_convert_helper_8inl_source.xhtml#l00327">NEColorConvertHelper.inl:327</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_1_1_dimension_xhtml"><div class="ttname"><a href="classarm__compute_1_1_window_1_1_dimension.xhtml">arm_compute::Window::Dimension</a></div><div class="ttdoc">Describe one of the image&amp;#39;s dimensions with a start, end and step. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00068">Window.h:68</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_1_1_dimension_xhtml_a27c3790df96e9523b0370e7e10c0d375"><div class="ttname"><a href="classarm__compute_1_1_window_1_1_dimension.xhtml#a27c3790df96e9523b0370e7e10c0d375">arm_compute::Window::Dimension::start</a></div><div class="ttdeci">constexpr int start() const </div><div class="ttdoc">Return the start of the dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00085">Window.h:85</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor.xhtml">arm_compute::ITensor</a></div><div class="ttdoc">Interface for NEON tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_8h_source.xhtml#l00036">ITensor.h:36</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">This file contains all available output stages for GEMMLowp on OpenCL. </div><div class="ttdef"><b>Definition:</b> <a href="01__library_8dox_source.xhtml#l00001">01_library.dox:1</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_1_1_dimension_xhtml_aa9a8509af319b9e47f00c8fba23d368b"><div class="ttname"><a href="classarm__compute_1_1_window_1_1_dimension.xhtml#aa9a8509af319b9e47f00c8fba23d368b">arm_compute::Window::Dimension::end</a></div><div class="ttdeci">constexpr int end() const </div><div class="ttdoc">Return the end of the dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00090">Window.h:90</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a49b7a8e217ba7aad821fdeaab86bad53"><div class="ttname"><a href="namespacearm__compute.xhtml#a49b7a8e217ba7aad821fdeaab86bad53">arm_compute::colorconvert_rgb_to_iyuv</a></div><div class="ttdeci">void colorconvert_rgb_to_iyuv(const void *__restrict input, void *__restrict output, const Window &amp;win)</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_color_convert_helper_8inl_source.xhtml#l00825">NEColorConvertHelper.inl:825</a></div></div>
<div class="ttc" id="classarm__compute_1_1_iterator_xhtml_aeabcf37a281d780c90ebe812149a7a84"><div class="ttname"><a href="classarm__compute_1_1_iterator.xhtml#aeabcf37a281d780c90ebe812149a7a84">arm_compute::Iterator::ptr</a></div><div class="ttdeci">constexpr uint8_t * ptr() const </div><div class="ttdoc">Return a pointer to the current pixel. </div><div class="ttdef"><b>Definition:</b> <a href="_helpers_8inl_source.xhtml#l00183">Helpers.inl:183</a></div></div>
<div class="ttc" id="arm__compute_2core_2_utils_8h_xhtml"><div class="ttname"><a href="arm__compute_2core_2_utils_8h.xhtml">Utils.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_aedd49c804f269c0e2c251c4efd44a275"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#aedd49c804f269c0e2c251c4efd44a275">arm_compute::Window::y</a></div><div class="ttdeci">constexpr const Dimension &amp; y() const </div><div class="ttdoc">Alias to access the second dimension of the window. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00137">Window.h:137</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_aa96e81276ee4f87ab386cd05a5539a7d"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">arm_compute::Window::DimX</a></div><div class="ttdeci">static constexpr size_t DimX</div><div class="ttdoc">Alias for dimension 0 also known as X dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00043">Window.h:43</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_multi_image_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_multi_image.xhtml">arm_compute::IMultiImage</a></div><div class="ttdoc">Interface for multi-planar images. </div><div class="ttdef"><b>Definition:</b> <a href="_i_multi_image_8h_source.xhtml#l00034">IMultiImage.h:34</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a93cc303c8ae098d264f07d37890412de"><div class="ttname"><a href="namespacearm__compute.xhtml#a93cc303c8ae098d264f07d37890412de">arm_compute::colorconvert_rgb_to_rgbx</a></div><div class="ttdeci">void colorconvert_rgb_to_rgbx(const void *__restrict input, void *__restrict output, const Window &amp;win)</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_color_convert_helper_8inl_source.xhtml#l00303">NEColorConvertHelper.inl:303</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ae6a44e412bccc0705a720708b0692218"><div class="ttname"><a href="namespacearm__compute.xhtml#ae6a44e412bccc0705a720708b0692218">arm_compute::colorconvert_nv12_to_rgb</a></div><div class="ttdeci">void colorconvert_nv12_to_rgb(const void *__restrict input, void *__restrict output, const Window &amp;win)</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_color_convert_helper_8inl_source.xhtml#l00389">NEColorConvertHelper.inl:389</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a6c0dcc38187027dcb89cd9724bc5a823"><div class="ttname"><a href="namespacearm__compute.xhtml#a6c0dcc38187027dcb89cd9724bc5a823">arm_compute::execute_window_loop</a></div><div class="ttdeci">void execute_window_loop(const Window &amp;w, L &amp;&amp;lambda_function, Ts &amp;&amp;...iterators)</div><div class="ttdoc">Iterate through the passed window, automatically adjusting the iterators and calling the lambda_funct...</div><div class="ttdef"><b>Definition:</b> <a href="_helpers_8inl_source.xhtml#l00127">Helpers.inl:127</a></div></div>
<div class="ttc" id="classarm__compute_1_1_coordinates_xhtml"><div class="ttname"><a href="classarm__compute_1_1_coordinates.xhtml">arm_compute::Coordinates</a></div><div class="ttdoc">Coordinates of an item. </div><div class="ttdef"><b>Definition:</b> <a href="_coordinates_8h_source.xhtml#l00037">Coordinates.h:37</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_xhtml_a0e95dc1e53c361348314873b168ae237"><div class="ttname"><a href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">arm_compute::ITensor::info</a></div><div class="ttdeci">virtual ITensorInfo * info() const =0</div><div class="ttdoc">Interface to be implemented by the child class to return the tensor&amp;#39;s metadata. </div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_acd3d2bba51cb84d34dd7656ad2375a6e"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#acd3d2bba51cb84d34dd7656ad2375a6e">arm_compute::Window::set</a></div><div class="ttdeci">void set(size_t dimension, const Dimension &amp;dim)</div><div class="ttdoc">Set the values of a given dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8inl_source.xhtml#l00040">Window.inl:40</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a3c22c0d3494660b72b4fc04fec76f92d"><div class="ttname"><a href="namespacearm__compute.xhtml#a3c22c0d3494660b72b4fc04fec76f92d">arm_compute::colorconvert_yuyv_to_rgb</a></div><div class="ttdeci">void colorconvert_yuyv_to_rgb(const void *__restrict input, void *__restrict output, const Window &amp;win)</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_color_convert_helper_8inl_source.xhtml#l00351">NEColorConvertHelper.inl:351</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a14fd899b732509e245976b9967b8931d"><div class="ttname"><a href="namespacearm__compute.xhtml#a14fd899b732509e245976b9967b8931d">arm_compute::colorconvert_rgb_to_nv12</a></div><div class="ttdeci">void colorconvert_rgb_to_nv12(const void *__restrict input, void *__restrict output, const Window &amp;win)</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_color_convert_helper_8inl_source.xhtml#l00789">NEColorConvertHelper.inl:789</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_a048aaadf42ac725952523dd9546e96b5"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#a048aaadf42ac725952523dd9546e96b5">arm_compute::Window::validate</a></div><div class="ttdeci">void validate() const </div><div class="ttdoc">Will validate all the window&amp;#39;s dimensions&amp;#39; values when asserts are enabled. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8inl_source.xhtml#l00112">Window.inl:112</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_ad2d402364fa822b0b7775081291eeca9"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">arm_compute::Window::DimY</a></div><div class="ttdeci">static constexpr size_t DimY</div><div class="ttdoc">Alias for dimension 1 also known as Y dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00045">Window.h:45</a></div></div>
<div class="ttc" id="classarm__compute_1_1_dimensions_xhtml_a691c9cb93365c2e33f3429de43244098"><div class="ttname"><a href="classarm__compute_1_1_dimensions.xhtml#a691c9cb93365c2e33f3429de43244098">arm_compute::Dimensions::y</a></div><div class="ttdeci">T y() const </div><div class="ttdoc">Alias to access the size of the second dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_dimensions_8h_source.xhtml#l00086">Dimensions.h:86</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a08e9d88293a5cef787bb324c2dc0a6bf"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e9d88293a5cef787bb324c2dc0a6bf">arm_compute::colorconvert_iyuv_to_yuv4</a></div><div class="ttdeci">void colorconvert_iyuv_to_yuv4(const void *__restrict input, void *__restrict output, const Window &amp;win)</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_color_convert_helper_8inl_source.xhtml#l00737">NEColorConvertHelper.inl:737</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_1_1_dimension_xhtml_a992b375fc3254afe2e38f63bc29a43d4"><div class="ttname"><a href="classarm__compute_1_1_window_1_1_dimension.xhtml#a992b375fc3254afe2e38f63bc29a43d4">arm_compute::Window::Dimension::step</a></div><div class="ttdeci">constexpr int step() const </div><div class="ttdoc">Return the step of the dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00095">Window.h:95</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a199d36780fbb4a70168f290480673650"><div class="ttname"><a href="namespacearm__compute.xhtml#a199d36780fbb4a70168f290480673650">arm_compute::colorconvert_nv12_to_iyuv</a></div><div class="ttdeci">void colorconvert_nv12_to_iyuv(const void *__restrict input, void *__restrict output, const Window &amp;win)</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_color_convert_helper_8inl_source.xhtml#l00591">NEColorConvertHelper.inl:591</a></div></div>
<div class="ttc" id="arm__compute_2core_2_helpers_8h_xhtml"><div class="ttname"><a href="arm__compute_2core_2_helpers_8h.xhtml">Helpers.h</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a62197192f0fbf4e0675eb37be1c4c175"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a62197192f0fbf4e0675eb37be1c4c175">arm_compute::test::validation::alpha</a></div><div class="ttdeci">alpha</div><div class="ttdef"><b>Definition:</b> <a href="validation_2_n_e_o_n_2_g_e_m_m_8cpp_source.xhtml#l00109">GEMM.cpp:109</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a6b14f175bf5281f57b561e2d4e4b1f1f"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a6b14f175bf5281f57b561e2d4e4b1f1f">arm_compute::ITensorInfo::strides_in_bytes</a></div><div class="ttdeci">virtual const Strides &amp; strides_in_bytes() const =0</div><div class="ttdoc">The strides in bytes for accessing each dimension of the tensor. </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ae43e8f0463c0289169025c3041688d36"><div class="ttname"><a href="namespacearm__compute.xhtml#ae43e8f0463c0289169025c3041688d36">arm_compute::colorconvert_yuyv_to_iyuv</a></div><div class="ttdeci">void colorconvert_yuyv_to_iyuv(const void *__restrict input, void *__restrict output, const Window &amp;win)</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_color_convert_helper_8inl_source.xhtml#l00633">NEColorConvertHelper.inl:633</a></div></div>
<div class="ttc" id="classarm__compute_1_1_iterator_xhtml"><div class="ttname"><a href="classarm__compute_1_1_iterator.xhtml">arm_compute::Iterator</a></div><div class="ttdoc">Iterator updated by execute_window_loop for each window element. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_helpers_8h_source.xhtml#l00323">Helpers.h:323</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml">arm_compute::Window</a></div><div class="ttdoc">Describe a multidimensional execution window. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00039">Window.h:39</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_ade63ce331b49eb66d330aab444e57ca9"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#ade63ce331b49eb66d330aab444e57ca9">arm_compute::Window::x</a></div><div class="ttdeci">constexpr const Dimension &amp; x() const </div><div class="ttdoc">Alias to access the first dimension of the window. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00128">Window.h:128</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a587a54c85dcc72838b8f4b5575ebafe4"><div class="ttname"><a href="namespacearm__compute.xhtml#a587a54c85dcc72838b8f4b5575ebafe4">arm_compute::colorconvert_nv12_to_yuv4</a></div><div class="ttdeci">void colorconvert_nv12_to_yuv4(const void *__restrict input, void *__restrict output, const Window &amp;win)</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_color_convert_helper_8inl_source.xhtml#l00686">NEColorConvertHelper.inl:686</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a8ee13904a3f5ba84b28cb53d956021d7"><div class="ttname"><a href="namespacearm__compute.xhtml#a8ee13904a3f5ba84b28cb53d956021d7">arm_compute::colorconvert_yuyv_to_nv12</a></div><div class="ttdeci">void colorconvert_yuyv_to_nv12(const void *__restrict input, void *__restrict output, const Window &amp;win)</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_color_convert_helper_8inl_source.xhtml#l00502">NEColorConvertHelper.inl:502</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a6e42fac1baa264b033ac430b63ebd145"><div class="ttname"><a href="namespacearm__compute.xhtml#a6e42fac1baa264b033ac430b63ebd145">arm_compute::colorconvert_iyuv_to_rgb</a></div><div class="ttdeci">void colorconvert_iyuv_to_rgb(const void *__restrict input, void *__restrict output, const Window &amp;win)</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_color_convert_helper_8inl_source.xhtml#l00445">NEColorConvertHelper.inl:445</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_214608ef36d61442cb2b0c1c4e9a7def.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="dir_1fb090f0c6070330bfaccc4236d3ca0d.xhtml">core</a></li><li class="navelem"><a class="el" href="dir_315f6cf1ec0b2df3ae747ff8286a19f5.xhtml">NEON</a></li><li class="navelem"><a class="el" href="_n_e_color_convert_helper_8inl.xhtml">NEColorConvertHelper.inl</a></li>
    <li class="footer">Generated on Thu Dec 14 2017 23:48:31 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
  </ul>
</div>
</body>
</html>
