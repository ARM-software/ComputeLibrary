<!-- HTML header for doxygen 1.8.9.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: arm_compute/core/NEON/kernels/assembly/transform.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Compute Library
   &#160;<span id="projectnumber">17.12</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>Globals</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('transform_8hpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">transform.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="transform_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2017 ARM Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#pragma once</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="comment"> * Generic transform.</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="comment"> * Assuming the untransposed case, this works by first reading &lt;BlockBy&gt;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="comment"> * consecutive values from the first input row.  This same number of values</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="comment"> * are then read from the next &lt;IntBy-1&gt; rows.  Now return to the first</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="comment"> * input row and repeat.</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="comment"> * Need to cope with the work requested in either dimension not actually</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="comment"> * being a multiple of the block sizes.</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keyword">template</span> &lt;<span class="keywordtype">unsigned</span> IntBy, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> BlockBy, <span class="keywordtype">bool</span> Transposed, <span class="keywordtype">size_t</span> TOutSize, <span class="keywordtype">size_t</span> TInSize&gt;</div><div class="line"><a name="l00038"></a><span class="lineno"><a class="line" href="struct_transform_impl.xhtml">   38</a></span>&#160;<span class="keyword">struct </span><a class="code" href="struct_transform_impl.xhtml">TransformImpl</a> {</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> TOut, <span class="keyword">typename</span> TIn&gt;</div><div class="line"><a name="l00040"></a><span class="lineno"><a class="line" href="struct_transform_impl.xhtml#a63b509dd384dfffc0d4f650115799f8b">   40</a></span>&#160;    <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="struct_transform_impl.xhtml#a63b509dd384dfffc0d4f650115799f8b">Transform</a>(TOut* out, <span class="keyword">const</span> TIn* <span class="keyword">const</span> in, <span class="keyword">const</span> <span class="keywordtype">int</span> stride,</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;                          <span class="keyword">const</span> <span class="keywordtype">int</span> y0, <span class="keyword">const</span> <span class="keywordtype">int</span> ymax, <span class="keyword">const</span> <span class="keywordtype">int</span> x0, <span class="keyword">const</span> <span class="keywordtype">int</span> xmax) {</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">int</span> n_whole_y_blocks = (ymax - y0) / IntBy;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">int</span> y_remainders = (ymax - y0) % IntBy;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">int</span> n_y_blocks = n_whole_y_blocks + (y_remainders ? 1 : 0);</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">int</span> n_whole_x_blocks = (xmax - x0) / BlockBy;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">int</span> x_remainders = (xmax - x0) % BlockBy;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">int</span> n_x_blocks = n_whole_x_blocks + (x_remainders ? 1 : 0);</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;        <span class="comment">// &quot;Y&quot; loop: advance down the rows of the source IntBy rows at a time.</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        <span class="comment">// Set up fill_rows to show the number rows to copy from, and blank_rows</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        <span class="comment">// for the number of blank rows to add.</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">int</span> y_block=0 ; y_block &lt; n_y_blocks; y_block++) {</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;            <span class="keywordtype">int</span> fill_rows = (y_block &lt; n_whole_y_blocks) ? IntBy : y_remainders;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;            <span class="keywordtype">int</span> blank_rows = IntBy - fill_rows;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;            <span class="keywordtype">int</span> y_base = y0 + (y_block * IntBy);</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;            <span class="comment">// So now advance along this block of rows, BlockBy columns at a time.</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">int</span> x_block=0 ; x_block &lt; n_x_blocks; x_block++) {</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                <span class="keywordtype">int</span> fill_cols = (x_block &lt; n_whole_x_blocks) ? BlockBy : x_remainders;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;                <span class="keywordtype">int</span> blank_cols = BlockBy - fill_cols;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;                <span class="keywordtype">int</span> x_base = x0 + (x_block * BlockBy);</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;                <span class="keywordflow">for</span> (<span class="keywordtype">int</span> row = 0; row &lt; fill_rows; row++) {</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;                    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> col = 0; col &lt; fill_cols; col++) {</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;                        <span class="comment">// In-range copy.  If it&#39;s transposed, we reverse the sense of rows and columns here.</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;                        <span class="keywordflow">if</span> (Transposed) {</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;                            *out++ = <span class="keyword">static_cast&lt;</span>TOut<span class="keyword">&gt;</span>(in[(x_base + col) * stride + y_base + row]);</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;                        } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;                            *out++ = <span class="keyword">static_cast&lt;</span>TOut<span class="keyword">&gt;</span>(in[(y_base + row) * stride + x_base + col]);</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;                        }</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;                    }</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;                    <span class="comment">// &quot;col&quot; tail - row is in range but column is out of range.</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;                    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> col=0; col &lt; blank_cols; col++) {</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;                        *out++ = <span class="keyword">static_cast&lt;</span>TOut<span class="keyword">&gt;</span>(0);</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;                    }</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;                }</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;                <span class="comment">// &quot;row&quot; tail - row is out of range so fill with zeros always.</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;                <span class="keywordflow">for</span> (<span class="keywordtype">int</span> row = 0; row &lt; blank_rows; row++) {</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;                    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> col=0; col &lt; (fill_cols + blank_cols); col++) {</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;                        *out++ = <span class="keyword">static_cast&lt;</span>TOut<span class="keyword">&gt;</span>(0);</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;                    }</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;                }</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;            }</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        }</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    }</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00091"></a><span class="lineno"><a class="line" href="struct_transform_impl.xhtml#a1c7a0b8d7bd5f883e459db42f2165755">   91</a></span>&#160;    <span class="keyword">static</span> <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="struct_transform_impl.xhtml#a1c7a0b8d7bd5f883e459db42f2165755">Transform</a>(T* out, <span class="keyword">const</span> T* <span class="keyword">const</span> in, <span class="keyword">const</span> <span class="keywordtype">int</span> stride,</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;                                 <span class="keyword">const</span> <span class="keywordtype">int</span> k0, <span class="keyword">const</span> <span class="keywordtype">int</span> kmax, <span class="keyword">const</span> <span class="keywordtype">int</span> x0, <span class="keyword">const</span> <span class="keywordtype">int</span> xmax) {</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        Transform&lt;T, T&gt;(out, in, stride, k0, kmax, x0, xmax);</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    }</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;};</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="comment">/*****************************************************************************/</span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="keyword">template</span> &lt;<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> IntBy, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> BlockBy, <span class="keywordtype">bool</span> Transposed, <span class="keyword">typename</span> TOut, <span class="keyword">typename</span> TIn&gt;</div><div class="line"><a name="l00099"></a><span class="lineno"><a class="line" href="transform_8hpp.xhtml#a881e3b6fa0d13739275df849c8157b76">   99</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="struct_transform_impl.xhtml#a63b509dd384dfffc0d4f650115799f8b">Transform</a>(</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;  TOut* out, <span class="keyword">const</span> TIn* <span class="keyword">const</span> in, <span class="keyword">const</span> <span class="keywordtype">int</span> stride,</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">int</span> k0, <span class="keyword">const</span> <span class="keywordtype">int</span> kmax, <span class="keyword">const</span> <span class="keywordtype">int</span> x0, <span class="keyword">const</span> <span class="keywordtype">int</span> xmax</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;) {</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;  <span class="comment">// Redirect to a specialised implementation predicated on argument size.</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;  <a class="code" href="struct_transform_impl.xhtml">TransformImpl&lt;IntBy, BlockBy, Transposed, sizeof(TOut), sizeof(TIn)&gt;::Transform</a>(</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    out, in, stride, k0, kmax, x0, xmax</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;  );</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;}</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="comment">/*****************************************************************************/</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="transforms_2list_8hpp.xhtml">transforms/list.hpp</a>&quot;</span></div><div class="ttc" id="transforms_2list_8hpp_xhtml"><div class="ttname"><a href="transforms_2list_8hpp.xhtml">list.hpp</a></div></div>
<div class="ttc" id="struct_transform_impl_xhtml_a1c7a0b8d7bd5f883e459db42f2165755"><div class="ttname"><a href="struct_transform_impl.xhtml#a1c7a0b8d7bd5f883e459db42f2165755">TransformImpl::Transform</a></div><div class="ttdeci">static void Transform(T *out, const T *const in, const int stride, const int k0, const int kmax, const int x0, const int xmax)</div><div class="ttdef"><b>Definition:</b> <a href="transform_8hpp_source.xhtml#l00091">transform.hpp:91</a></div></div>
<div class="ttc" id="struct_transform_impl_xhtml_a63b509dd384dfffc0d4f650115799f8b"><div class="ttname"><a href="struct_transform_impl.xhtml#a63b509dd384dfffc0d4f650115799f8b">TransformImpl::Transform</a></div><div class="ttdeci">static void Transform(TOut *out, const TIn *const in, const int stride, const int y0, const int ymax, const int x0, const int xmax)</div><div class="ttdef"><b>Definition:</b> <a href="transform_8hpp_source.xhtml#l00040">transform.hpp:40</a></div></div>
<div class="ttc" id="struct_transform_impl_xhtml"><div class="ttname"><a href="struct_transform_impl.xhtml">TransformImpl</a></div><div class="ttdef"><b>Definition:</b> <a href="transform_8hpp_source.xhtml#l00038">transform.hpp:38</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_214608ef36d61442cb2b0c1c4e9a7def.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="dir_1fb090f0c6070330bfaccc4236d3ca0d.xhtml">core</a></li><li class="navelem"><a class="el" href="dir_315f6cf1ec0b2df3ae747ff8286a19f5.xhtml">NEON</a></li><li class="navelem"><a class="el" href="dir_2c3c4cb85e732569e2614ad40a451d53.xhtml">kernels</a></li><li class="navelem"><a class="el" href="dir_1528feb24a69b98c734f0fefcf3a82e1.xhtml">assembly</a></li><li class="navelem"><a class="el" href="transform_8hpp.xhtml">transform.hpp</a></li>
    <li class="footer">Generated on Thu Dec 14 2017 23:48:30 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
  </ul>
</div>
</body>
</html>
