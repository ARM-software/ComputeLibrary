<!-- HTML header for doxygen 1.8.9.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.6"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: arm_compute::support::cpp11 Namespace Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Compute Library
   &#160;<span id="projectnumber">17.09</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.6 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li class="current"><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="namespaces.xhtml"><span>Namespace&#160;List</span></a></li>
      <li><a href="namespacemembers.xhtml"><span>Namespace&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('namespacearm__compute_1_1support_1_1cpp11.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Data Structures</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">arm_compute::support::cpp11 Namespace Reference</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:acc5dddee1cbe93a4eaf0a9f74ee96bb7"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:acc5dddee1cbe93a4eaf0a9f74ee96bb7"><td class="memTemplItemLeft" align="right" valign="top">std::string&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">to_string</a> (T &amp;&amp;<a class="el" href="hwc_8hpp.xhtml#a0f61d63b009d0880a89c843bd50d8d76">value</a>)</td></tr>
<tr class="memdesc:acc5dddee1cbe93a4eaf0a9f74ee96bb7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convert integer and float values to string.  <a href="#acc5dddee1cbe93a4eaf0a9f74ee96bb7">More...</a><br/></td></tr>
<tr class="separator:acc5dddee1cbe93a4eaf0a9f74ee96bb7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeb1811acb18248b8919a2cf1203e3faf"><td class="memTemplParams" colspan="2">template&lt;typename... Ts&gt; </td></tr>
<tr class="memitem:aeb1811acb18248b8919a2cf1203e3faf"><td class="memTemplItemLeft" align="right" valign="top">int&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#aeb1811acb18248b8919a2cf1203e3faf">stoi</a> (Ts &amp;&amp;...args)</td></tr>
<tr class="memdesc:aeb1811acb18248b8919a2cf1203e3faf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convert string values to integer.  <a href="#aeb1811acb18248b8919a2cf1203e3faf">More...</a><br/></td></tr>
<tr class="separator:aeb1811acb18248b8919a2cf1203e3faf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c9ee94e1de3032f244cf041310868b4"><td class="memTemplParams" colspan="2">template&lt;typename... Ts&gt; </td></tr>
<tr class="memitem:a3c9ee94e1de3032f244cf041310868b4"><td class="memTemplItemLeft" align="right" valign="top">int&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#a3c9ee94e1de3032f244cf041310868b4">stoul</a> (Ts &amp;&amp;...args)</td></tr>
<tr class="memdesc:a3c9ee94e1de3032f244cf041310868b4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convert string values to unsigned long.  <a href="#a3c9ee94e1de3032f244cf041310868b4">More...</a><br/></td></tr>
<tr class="separator:a3c9ee94e1de3032f244cf041310868b4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa4152693b62db2a43edcc0039de95e38"><td class="memTemplParams" colspan="2">template&lt;typename... Ts&gt; </td></tr>
<tr class="memitem:aa4152693b62db2a43edcc0039de95e38"><td class="memTemplItemLeft" align="right" valign="top">int&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#aa4152693b62db2a43edcc0039de95e38">stof</a> (Ts &amp;&amp;...args)</td></tr>
<tr class="memdesc:aa4152693b62db2a43edcc0039de95e38"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convert string values to float.  <a href="#aa4152693b62db2a43edcc0039de95e38">More...</a><br/></td></tr>
<tr class="separator:aa4152693b62db2a43edcc0039de95e38"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab71c35ca207b916a9f8b0336ab88484e"><td class="memTemplParams" colspan="2">template&lt;typename T , typename  = typename std::enable_if&lt;std::is_floating_point&lt;T&gt;::value&gt;::type&gt; </td></tr>
<tr class="memitem:ab71c35ca207b916a9f8b0336ab88484e"><td class="memTemplItemLeft" align="right" valign="top">T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#ab71c35ca207b916a9f8b0336ab88484e">round</a> (T <a class="el" href="hwc_8hpp.xhtml#a0f61d63b009d0880a89c843bd50d8d76">value</a>)</td></tr>
<tr class="memdesc:ab71c35ca207b916a9f8b0336ab88484e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Round floating-point value with half value rounding away from zero.  <a href="#ab71c35ca207b916a9f8b0336ab88484e">More...</a><br/></td></tr>
<tr class="separator:ab71c35ca207b916a9f8b0336ab88484e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae04d407202e3d50ce6a4c79ac00a5d59"><td class="memTemplParams" colspan="2">template&lt;typename T , typename  = typename std::enable_if&lt;std::is_floating_point&lt;T&gt;::value&gt;::type&gt; </td></tr>
<tr class="memitem:ae04d407202e3d50ce6a4c79ac00a5d59"><td class="memTemplItemLeft" align="right" valign="top">T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#ae04d407202e3d50ce6a4c79ac00a5d59">trunc</a> (T <a class="el" href="hwc_8hpp.xhtml#a0f61d63b009d0880a89c843bd50d8d76">value</a>)</td></tr>
<tr class="memdesc:ae04d407202e3d50ce6a4c79ac00a5d59"><td class="mdescLeft">&#160;</td><td class="mdescRight">Truncate floating-point value.  <a href="#ae04d407202e3d50ce6a4c79ac00a5d59">More...</a><br/></td></tr>
<tr class="separator:ae04d407202e3d50ce6a4c79ac00a5d59"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a28096f8372c0ad762864c790917375e2"><td class="memTemplParams" colspan="2">template&lt;typename T , typename  = typename std::enable_if&lt;std::is_floating_point&lt;T&gt;::value&gt;::type&gt; </td></tr>
<tr class="memitem:a28096f8372c0ad762864c790917375e2"><td class="memTemplItemLeft" align="right" valign="top">T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#a28096f8372c0ad762864c790917375e2">copysign</a> (T x, T y)</td></tr>
<tr class="memdesc:a28096f8372c0ad762864c790917375e2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Composes a floating point value with the magnitude of <code>x</code> and the sign of <code>y</code>.  <a href="#a28096f8372c0ad762864c790917375e2">More...</a><br/></td></tr>
<tr class="separator:a28096f8372c0ad762864c790917375e2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aae1437f4a38c4ada64e7a2586aa35bf8"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#aae1437f4a38c4ada64e7a2586aa35bf8">to_string</a> (bool <a class="el" href="hwc_8hpp.xhtml#a0f61d63b009d0880a89c843bd50d8d76">value</a>)</td></tr>
<tr class="separator:aae1437f4a38c4ada64e7a2586aa35bf8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9e51e04e3f86c823883757ef22d4f39a"><td class="memItemLeft" align="right" valign="top">void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#a9e51e04e3f86c823883757ef22d4f39a">align</a> (std::size_t alignment, std::size_t <a class="el" href="hwc_8hpp.xhtml#ab2c6b258f02add8fdf4cfc7c371dd772">size</a>, void *&amp;ptr, std::size_t &amp;space)</td></tr>
<tr class="separator:a9e51e04e3f86c823883757ef22d4f39a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="a9e51e04e3f86c823883757ef22d4f39a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void* arm_compute::support::cpp11::align </td>
          <td>(</td>
          <td class="paramtype">std::size_t&#160;</td>
          <td class="paramname"><em>alignment</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::size_t&#160;</td>
          <td class="paramname"><em>size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&amp;&#160;</td>
          <td class="paramname"><em>ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::size_t &amp;&#160;</td>
          <td class="paramname"><em>space</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="_toolchain_support_8h_source.xhtml#l00274">274</a> of file <a class="el" href="_toolchain_support_8h_source.xhtml">ToolchainSupport.h</a>.</p>

<p>References <a class="el" href="hwc_8hpp_source.xhtml#l00265">padding</a>.</p>
<div class="fragment"><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;{</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;    std::uintptr_t pn      = <span class="keyword">reinterpret_cast&lt;</span>std::uintptr_t<span class="keyword">&gt;</span>(ptr);</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;    std::uintptr_t aligned = (pn + alignment - 1) &amp; -alignment;</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;    std::size_t    <a class="code" href="hwc_8hpp.xhtml#ad487ce76e40f524a7f5e350763b91ae5">padding</a> = aligned - pn;</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    <span class="keywordflow">if</span>(space &lt; <a class="code" href="hwc_8hpp.xhtml#ab2c6b258f02add8fdf4cfc7c371dd772">size</a> + padding)</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;    {</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;    }</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    space -= <a class="code" href="hwc_8hpp.xhtml#ad487ce76e40f524a7f5e350763b91ae5">padding</a>;</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;    <span class="keywordflow">return</span> ptr = <span class="keyword">reinterpret_cast&lt;</span><span class="keywordtype">void</span> *<span class="keyword">&gt;</span>(aligned);</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;}</div>
<div class="ttc" id="hwc_8hpp_xhtml_ab2c6b258f02add8fdf4cfc7c371dd772"><div class="ttname"><a href="hwc_8hpp.xhtml#ab2c6b258f02add8fdf4cfc7c371dd772">size</a></div><div class="ttdeci">uint32_t size</div><div class="ttdef"><b>Definition:</b> <a href="hwc_8hpp_source.xhtml#l00276">hwc.hpp:276</a></div></div>
<div class="ttc" id="hwc_8hpp_xhtml_ad487ce76e40f524a7f5e350763b91ae5"><div class="ttname"><a href="hwc_8hpp.xhtml#ad487ce76e40f524a7f5e350763b91ae5">padding</a></div><div class="ttdeci">uint8_t padding[4]</div><div class="ttdef"><b>Definition:</b> <a href="hwc_8hpp_source.xhtml#l00265">hwc.hpp:265</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a28096f8372c0ad762864c790917375e2"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">T arm_compute::support::cpp11::copysign </td>
          <td>(</td>
          <td class="paramtype">T&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">T&#160;</td>
          <td class="paramname"><em>y</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Composes a floating point value with the magnitude of <code>x</code> and the sign of <code>y</code>. </p>
<dl class="section note"><dt>Note</dt><dd>This function implements the same behaviour as std::copysign except that it doesn't support Integral type. The latter is not in the namespace std in some Android toolchains.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">x</td><td>value that contains the magnitued to be used in constructing the result. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">y</td><td>value that contains the sign to be used in constructin the result.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Floating-point value with magnitude of <code>x</code> and sign of <code>y</code>. </dd></dl>

<p>Definition at line <a class="el" href="_toolchain_support_8h_source.xhtml#l00259">259</a> of file <a class="el" href="_toolchain_support_8h_source.xhtml">ToolchainSupport.h</a>.</p>

<p>Referenced by <a class="el" href="tests_2_utils_8h_source.xhtml#l00069">arm_compute::test::round_half_even()</a>.</p>
<div class="fragment"><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;{</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#a28096f8372c0ad762864c790917375e2">std::copysign</a>(x, y);</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;}</div>
<div class="ttc" id="namespacearm__compute_1_1support_1_1cpp11_xhtml_a28096f8372c0ad762864c790917375e2"><div class="ttname"><a href="namespacearm__compute_1_1support_1_1cpp11.xhtml#a28096f8372c0ad762864c790917375e2">arm_compute::support::cpp11::copysign</a></div><div class="ttdeci">T copysign(T x, T y)</div><div class="ttdoc">Composes a floating point value with the magnitude of x and the sign of y. </div><div class="ttdef"><b>Definition:</b> <a href="_toolchain_support_8h_source.xhtml#l00259">ToolchainSupport.h:259</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ab71c35ca207b916a9f8b0336ab88484e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">T arm_compute::support::cpp11::round </td>
          <td>(</td>
          <td class="paramtype">T&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Round floating-point value with half value rounding away from zero. </p>
<dl class="section note"><dt>Note</dt><dd>This function implements the same behaviour as std::round except that it doesn't support Integral type. The latter is not in the namespace std in some Android toolchains.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">value</td><td>floating-point value to be rounded.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Floating-point value of rounded <code>value</code>. </dd></dl>

<p>Definition at line <a class="el" href="_toolchain_support_8h_source.xhtml#l00228">228</a> of file <a class="el" href="_toolchain_support_8h_source.xhtml">ToolchainSupport.h</a>.</p>

<p>Referenced by <a class="el" href="optical__flow__pyramid__lk_8cl_source.xhtml#l00157">finalize()</a>, <a class="el" href="optical__flow__pyramid__lk_8cl_source.xhtml#l00207">lktracker_stage0()</a>, <a class="el" href="optical__flow__pyramid__lk_8cl_source.xhtml#l00358">lktracker_stage1()</a>, <a class="el" href="roi__pooling__layer_8cl_source.xhtml#l00123">roi_pooling_layer()</a>, and <a class="el" href="tests_2_utils_8h_source.xhtml#l00069">arm_compute::test::round_half_even()</a>.</p>
<div class="fragment"><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;{</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#ab71c35ca207b916a9f8b0336ab88484e">std::round</a>(<a class="code" href="hwc_8hpp.xhtml#a0f61d63b009d0880a89c843bd50d8d76">value</a>);</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;}</div>
<div class="ttc" id="hwc_8hpp_xhtml_a0f61d63b009d0880a89c843bd50d8d76"><div class="ttname"><a href="hwc_8hpp.xhtml#a0f61d63b009d0880a89c843bd50d8d76">value</a></div><div class="ttdeci">void * value</div><div class="ttdef"><b>Definition:</b> <a href="hwc_8hpp_source.xhtml#l00269">hwc.hpp:269</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1support_1_1cpp11_xhtml_ab71c35ca207b916a9f8b0336ab88484e"><div class="ttname"><a href="namespacearm__compute_1_1support_1_1cpp11.xhtml#ab71c35ca207b916a9f8b0336ab88484e">arm_compute::support::cpp11::round</a></div><div class="ttdeci">T round(T value)</div><div class="ttdoc">Round floating-point value with half value rounding away from zero. </div><div class="ttdef"><b>Definition:</b> <a href="_toolchain_support_8h_source.xhtml#l00228">ToolchainSupport.h:228</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="aa4152693b62db2a43edcc0039de95e38"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int arm_compute::support::cpp11::stof </td>
          <td>(</td>
          <td class="paramtype">Ts &amp;&amp;...&#160;</td>
          <td class="paramname"><em>args</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Convert string values to float. </p>
<dl class="section note"><dt>Note</dt><dd>This function acts as a convenience wrapper around std::stof. The latter is missing in some Android toolchains.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">args</td><td>Arguments forwarded to std::stof.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Float representation of input string. </dd></dl>

<p>Definition at line <a class="el" href="_toolchain_support_8h_source.xhtml#l00213">213</a> of file <a class="el" href="_toolchain_support_8h_source.xhtml">ToolchainSupport.h</a>.</p>

<p>References <a class="el" href="caffe__data__extractor_8py_source.xhtml#l00021">caffe_data_extractor::args</a>.</p>
<div class="fragment"><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;{</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#aa4152693b62db2a43edcc0039de95e38">return ::std::stof</a>(std::forward&lt;Ts&gt;(<a class="code" href="namespacecaffe__data__extractor.xhtml#aad3cdfd6574de97bf37448087aaff11d">args</a>)...);</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;}</div>
<div class="ttc" id="namespacecaffe__data__extractor_xhtml_aad3cdfd6574de97bf37448087aaff11d"><div class="ttname"><a href="namespacecaffe__data__extractor.xhtml#aad3cdfd6574de97bf37448087aaff11d">caffe_data_extractor.args</a></div><div class="ttdeci">tuple args</div><div class="ttdef"><b>Definition:</b> <a href="caffe__data__extractor_8py_source.xhtml#l00021">caffe_data_extractor.py:21</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1support_1_1cpp11_xhtml_aa4152693b62db2a43edcc0039de95e38"><div class="ttname"><a href="namespacearm__compute_1_1support_1_1cpp11.xhtml#aa4152693b62db2a43edcc0039de95e38">arm_compute::support::cpp11::stof</a></div><div class="ttdeci">int stof(Ts &amp;&amp;...args)</div><div class="ttdoc">Convert string values to float. </div><div class="ttdef"><b>Definition:</b> <a href="_toolchain_support_8h_source.xhtml#l00213">ToolchainSupport.h:213</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="aeb1811acb18248b8919a2cf1203e3faf"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int arm_compute::support::cpp11::stoi </td>
          <td>(</td>
          <td class="paramtype">Ts &amp;&amp;...&#160;</td>
          <td class="paramname"><em>args</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Convert string values to integer. </p>
<dl class="section note"><dt>Note</dt><dd>This function acts as a convenience wrapper around std::stoi. The latter is missing in some Android toolchains.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">args</td><td>Arguments forwarded to std::stoi.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Integer representation of input string. </dd></dl>

<p>Definition at line <a class="el" href="_toolchain_support_8h_source.xhtml#l00183">183</a> of file <a class="el" href="_toolchain_support_8h_source.xhtml">ToolchainSupport.h</a>.</p>

<p>References <a class="el" href="caffe__data__extractor_8py_source.xhtml#l00021">caffe_data_extractor::args</a>.</p>
<div class="fragment"><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;{</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#aeb1811acb18248b8919a2cf1203e3faf">return ::std::stoi</a>(std::forward&lt;Ts&gt;(<a class="code" href="namespacecaffe__data__extractor.xhtml#aad3cdfd6574de97bf37448087aaff11d">args</a>)...);</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;}</div>
<div class="ttc" id="namespacecaffe__data__extractor_xhtml_aad3cdfd6574de97bf37448087aaff11d"><div class="ttname"><a href="namespacecaffe__data__extractor.xhtml#aad3cdfd6574de97bf37448087aaff11d">caffe_data_extractor.args</a></div><div class="ttdeci">tuple args</div><div class="ttdef"><b>Definition:</b> <a href="caffe__data__extractor_8py_source.xhtml#l00021">caffe_data_extractor.py:21</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1support_1_1cpp11_xhtml_aeb1811acb18248b8919a2cf1203e3faf"><div class="ttname"><a href="namespacearm__compute_1_1support_1_1cpp11.xhtml#aeb1811acb18248b8919a2cf1203e3faf">arm_compute::support::cpp11::stoi</a></div><div class="ttdeci">int stoi(Ts &amp;&amp;...args)</div><div class="ttdoc">Convert string values to integer. </div><div class="ttdef"><b>Definition:</b> <a href="_toolchain_support_8h_source.xhtml#l00183">ToolchainSupport.h:183</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a3c9ee94e1de3032f244cf041310868b4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int arm_compute::support::cpp11::stoul </td>
          <td>(</td>
          <td class="paramtype">Ts &amp;&amp;...&#160;</td>
          <td class="paramname"><em>args</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Convert string values to unsigned long. </p>
<dl class="section note"><dt>Note</dt><dd>This function acts as a convenience wrapper around std::stoul. The latter is missing in some Android toolchains.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">args</td><td>Arguments forwarded to std::stoul.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Unsigned long representation of input string. </dd></dl>

<p>Definition at line <a class="el" href="_toolchain_support_8h_source.xhtml#l00198">198</a> of file <a class="el" href="_toolchain_support_8h_source.xhtml">ToolchainSupport.h</a>.</p>

<p>References <a class="el" href="caffe__data__extractor_8py_source.xhtml#l00021">caffe_data_extractor::args</a>.</p>
<div class="fragment"><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;{</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#a3c9ee94e1de3032f244cf041310868b4">return ::std::stoul</a>(std::forward&lt;Ts&gt;(<a class="code" href="namespacecaffe__data__extractor.xhtml#aad3cdfd6574de97bf37448087aaff11d">args</a>)...);</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;}</div>
<div class="ttc" id="namespacecaffe__data__extractor_xhtml_aad3cdfd6574de97bf37448087aaff11d"><div class="ttname"><a href="namespacecaffe__data__extractor.xhtml#aad3cdfd6574de97bf37448087aaff11d">caffe_data_extractor.args</a></div><div class="ttdeci">tuple args</div><div class="ttdef"><b>Definition:</b> <a href="caffe__data__extractor_8py_source.xhtml#l00021">caffe_data_extractor.py:21</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1support_1_1cpp11_xhtml_a3c9ee94e1de3032f244cf041310868b4"><div class="ttname"><a href="namespacearm__compute_1_1support_1_1cpp11.xhtml#a3c9ee94e1de3032f244cf041310868b4">arm_compute::support::cpp11::stoul</a></div><div class="ttdeci">int stoul(Ts &amp;&amp;...args)</div><div class="ttdoc">Convert string values to unsigned long. </div><div class="ttdef"><b>Definition:</b> <a href="_toolchain_support_8h_source.xhtml#l00198">ToolchainSupport.h:198</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="acc5dddee1cbe93a4eaf0a9f74ee96bb7"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string arm_compute::support::cpp11::to_string </td>
          <td>(</td>
          <td class="paramtype">T &amp;&amp;&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Convert integer and float values to string. </p>
<dl class="section note"><dt>Note</dt><dd>This function acts as a convenience wrapper around std::to_string. The latter is missing in some Android toolchains.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">value</td><td>Value to be converted to string.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>String representation of <code>value</code>. </dd></dl>

<p>Definition at line <a class="el" href="_toolchain_support_8h_source.xhtml#l00168">168</a> of file <a class="el" href="_toolchain_support_8h_source.xhtml">ToolchainSupport.h</a>.</p>

<p>References <a class="el" href="_toolchain_support_8h_source.xhtml#l00265">to_string()</a>.</p>

<p>Referenced by <a class="el" href="_initializer_list_dataset_8h_source.xhtml#l00075">InitializerListDataset&lt; T &gt;::iterator::description()</a>, <a class="el" href="_range_dataset_8h_source.xhtml#l00076">RangeDataset&lt; T &gt;::iterator::description()</a>, <a class="el" href="_singleton_dataset_8h_source.xhtml#l00079">SingletonDataset&lt; T &gt;::iterator::description()</a>, <a class="el" href="_container_dataset_8h_source.xhtml#l00088">ContainerDataset&lt; T &gt;::iterator::description()</a>, <a class="el" href="utils_2_utils_8h_source.xhtml#l00411">arm_compute::utils::get_typestring()</a>, <a class="el" href="tests_2_utils_8h_source.xhtml#l00445">arm_compute::test::get_typestring()</a>, <a class="el" href="tests_2framework_2_utils_8h_source.xhtml#l00136">arm_compute::test::join()</a>, <a class="el" href="main_8cpp_source.xhtml#l00058">main()</a>, <a class="el" href="_mali_counter_8cpp_source.xhtml#l00403">MaliCounter::measurements()</a>, and <a class="el" href="_j_s_o_n_printer_8cpp_source.xhtml#l00157">JSONPrinter::print_measurements()</a>.</p>
<div class="fragment"><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;{</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#aae1437f4a38c4ada64e7a2586aa35bf8">return ::std::to_string</a>(std::forward&lt;T&gt;(<a class="code" href="hwc_8hpp.xhtml#a0f61d63b009d0880a89c843bd50d8d76">value</a>));</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;}</div>
<div class="ttc" id="namespacearm__compute_1_1support_1_1cpp11_xhtml_aae1437f4a38c4ada64e7a2586aa35bf8"><div class="ttname"><a href="namespacearm__compute_1_1support_1_1cpp11.xhtml#aae1437f4a38c4ada64e7a2586aa35bf8">arm_compute::support::cpp11::to_string</a></div><div class="ttdeci">std::string to_string(bool value)</div><div class="ttdef"><b>Definition:</b> <a href="_toolchain_support_8h_source.xhtml#l00265">ToolchainSupport.h:265</a></div></div>
<div class="ttc" id="hwc_8hpp_xhtml_a0f61d63b009d0880a89c843bd50d8d76"><div class="ttname"><a href="hwc_8hpp.xhtml#a0f61d63b009d0880a89c843bd50d8d76">value</a></div><div class="ttdeci">void * value</div><div class="ttdef"><b>Definition:</b> <a href="hwc_8hpp_source.xhtml#l00269">hwc.hpp:269</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="aae1437f4a38c4ada64e7a2586aa35bf8"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string arm_compute::support::cpp11::to_string </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="_toolchain_support_8h_source.xhtml#l00265">265</a> of file <a class="el" href="_toolchain_support_8h_source.xhtml">ToolchainSupport.h</a>.</p>

<p>References <a class="el" href="hwc_8hpp_source.xhtml#l00269">value</a>.</p>

<p>Referenced by <a class="el" href="_toolchain_support_8h_source.xhtml#l00168">to_string()</a>.</p>
<div class="fragment"><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;{</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;    std::stringstream str;</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;    str &lt;&lt; std::boolalpha &lt;&lt; <a class="code" href="hwc_8hpp.xhtml#a0f61d63b009d0880a89c843bd50d8d76">value</a>;</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;    <span class="keywordflow">return</span> str.str();</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;}</div>
<div class="ttc" id="hwc_8hpp_xhtml_a0f61d63b009d0880a89c843bd50d8d76"><div class="ttname"><a href="hwc_8hpp.xhtml#a0f61d63b009d0880a89c843bd50d8d76">value</a></div><div class="ttdeci">void * value</div><div class="ttdef"><b>Definition:</b> <a href="hwc_8hpp_source.xhtml#l00269">hwc.hpp:269</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ae04d407202e3d50ce6a4c79ac00a5d59"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">T arm_compute::support::cpp11::trunc </td>
          <td>(</td>
          <td class="paramtype">T&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Truncate floating-point value. </p>
<dl class="section note"><dt>Note</dt><dd>This function implements the same behaviour as std::truncate except that it doesn't support Integral type. The latter is not in the namespace std in some Android toolchains.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">value</td><td>floating-point value to be truncated.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Floating-point value of truncated <code>value</code>. </dd></dl>

<p>Definition at line <a class="el" href="_toolchain_support_8h_source.xhtml#l00243">243</a> of file <a class="el" href="_toolchain_support_8h_source.xhtml">ToolchainSupport.h</a>.</p>

<p>Referenced by <a class="el" href="tests_2validation_2_c_p_p_2_utils_8h_source.xhtml#l00081">arm_compute::test::validation::apply_2d_spatial_filter()</a>.</p>
<div class="fragment"><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;{</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#ae04d407202e3d50ce6a4c79ac00a5d59">std::trunc</a>(<a class="code" href="hwc_8hpp.xhtml#a0f61d63b009d0880a89c843bd50d8d76">value</a>);</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;}</div>
<div class="ttc" id="namespacearm__compute_1_1support_1_1cpp11_xhtml_ae04d407202e3d50ce6a4c79ac00a5d59"><div class="ttname"><a href="namespacearm__compute_1_1support_1_1cpp11.xhtml#ae04d407202e3d50ce6a4c79ac00a5d59">arm_compute::support::cpp11::trunc</a></div><div class="ttdeci">T trunc(T value)</div><div class="ttdoc">Truncate floating-point value. </div><div class="ttdef"><b>Definition:</b> <a href="_toolchain_support_8h_source.xhtml#l00243">ToolchainSupport.h:243</a></div></div>
<div class="ttc" id="hwc_8hpp_xhtml_a0f61d63b009d0880a89c843bd50d8d76"><div class="ttname"><a href="hwc_8hpp.xhtml#a0f61d63b009d0880a89c843bd50d8d76">value</a></div><div class="ttdeci">void * value</div><div class="ttdef"><b>Definition:</b> <a href="hwc_8hpp_source.xhtml#l00269">hwc.hpp:269</a></div></div>
</div><!-- fragment -->
</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1support.xhtml">support</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1support_1_1cpp11.xhtml">cpp11</a></li>
    <li class="footer">Generated on Thu Sep 28 2017 14:37:58 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.6 </li>
  </ul>
</div>
</body>
</html>
