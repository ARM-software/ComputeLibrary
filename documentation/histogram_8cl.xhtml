<!-- HTML header for doxygen 1.8.9.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/core/CL/cl_kernels/histogram.cl File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Compute Library
   &#160;<span id="projectnumber">17.12</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>Globals</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('histogram_8cl.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#define-members">Macros</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">histogram.cl File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="helpers_8h_source.xhtml">helpers.h</a>&quot;</code><br />
</div>
<p><a href="histogram_8cl_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:a2c8a35cfde24ca7728709200962e1a91"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="histogram_8cl.xhtml#a2c8a35cfde24ca7728709200962e1a91">VATOMIC_INC16</a>(histogram,  win_pos)</td></tr>
<tr class="separator:a2c8a35cfde24ca7728709200962e1a91"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:abc81d92c9655c4ec22fff9163b66279d"><td class="memItemLeft" align="right" valign="top">__kernel void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="histogram_8cl.xhtml#abc81d92c9655c4ec22fff9163b66279d">hist_local_kernel</a> (__global uchar *input_ptr, uint input_stride_x, uint input_step_x, uint input_stride_y, uint input_step_y, uint input_offset_first_element_in_bytes, __local uint *histogram_local, __global uint *restrict histogram, uint num_bins, uint <a class="el" href="helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>, uint range, uint offrange)</td></tr>
<tr class="memdesc:abc81d92c9655c4ec22fff9163b66279d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculate the histogram of an 8 bit grayscale image.  <a href="#abc81d92c9655c4ec22fff9163b66279d">More...</a><br /></td></tr>
<tr class="separator:abc81d92c9655c4ec22fff9163b66279d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af82fea967051b827585009463255262d"><td class="memItemLeft" align="right" valign="top">__kernel void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="histogram_8cl.xhtml#af82fea967051b827585009463255262d">hist_border_kernel</a> (__global uchar *input_ptr, uint input_stride_x, uint input_step_x, uint input_stride_y, uint input_step_y, uint input_offset_first_element_in_bytes, __global uint *restrict histogram, uint num_bins, uint <a class="el" href="helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>, uint range, uint offrange)</td></tr>
<tr class="memdesc:af82fea967051b827585009463255262d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculate the histogram of an 8 bit grayscale image's border.  <a href="#af82fea967051b827585009463255262d">More...</a><br /></td></tr>
<tr class="separator:af82fea967051b827585009463255262d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7c8051ab952a597e66090d77f4dc60e4"><td class="memItemLeft" align="right" valign="top">__kernel void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="histogram_8cl.xhtml#a7c8051ab952a597e66090d77f4dc60e4">hist_local_kernel_fixed</a> (__global uchar *input_ptr, uint input_stride_x, uint input_step_x, uint input_stride_y, uint input_step_y, uint input_offset_first_element_in_bytes, __local uint *histogram_local, __global uint *restrict histogram)</td></tr>
<tr class="memdesc:a7c8051ab952a597e66090d77f4dc60e4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculate the histogram of an 8 bit grayscale image with bin size of 256 and window size of 1.  <a href="#a7c8051ab952a597e66090d77f4dc60e4">More...</a><br /></td></tr>
<tr class="separator:a7c8051ab952a597e66090d77f4dc60e4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aec6ec6157573195df9694109ebbb38ae"><td class="memItemLeft" align="right" valign="top">__kernel void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="histogram_8cl.xhtml#aec6ec6157573195df9694109ebbb38ae">hist_border_kernel_fixed</a> (__global uchar *input_ptr, uint input_stride_x, uint input_step_x, uint input_stride_y, uint input_step_y, uint input_offset_first_element_in_bytes, __global uint *restrict histogram)</td></tr>
<tr class="memdesc:aec6ec6157573195df9694109ebbb38ae"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculate the histogram of an 8 bit grayscale image with bin size as 256 and window size as 1.  <a href="#aec6ec6157573195df9694109ebbb38ae">More...</a><br /></td></tr>
<tr class="separator:aec6ec6157573195df9694109ebbb38ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Macro Definition Documentation</h2>
<a class="anchor" id="a2c8a35cfde24ca7728709200962e1a91"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define VATOMIC_INC16</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">histogram, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">win_pos&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line">{                                       \</div><div class="line">        atomic_inc(<a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a8c37b244d8aec5993e58b2c7f67d936d">histogram</a> + win_pos.s0); \</div><div class="line">        atomic_inc(<a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a8c37b244d8aec5993e58b2c7f67d936d">histogram</a> + win_pos.s1); \</div><div class="line">        atomic_inc(<a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a8c37b244d8aec5993e58b2c7f67d936d">histogram</a> + win_pos.s2); \</div><div class="line">        atomic_inc(<a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a8c37b244d8aec5993e58b2c7f67d936d">histogram</a> + win_pos.s3); \</div><div class="line">        atomic_inc(<a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a8c37b244d8aec5993e58b2c7f67d936d">histogram</a> + win_pos.s4); \</div><div class="line">        atomic_inc(<a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a8c37b244d8aec5993e58b2c7f67d936d">histogram</a> + win_pos.s5); \</div><div class="line">        atomic_inc(<a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a8c37b244d8aec5993e58b2c7f67d936d">histogram</a> + win_pos.s6); \</div><div class="line">        atomic_inc(<a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a8c37b244d8aec5993e58b2c7f67d936d">histogram</a> + win_pos.s7); \</div><div class="line">        atomic_inc(<a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a8c37b244d8aec5993e58b2c7f67d936d">histogram</a> + win_pos.s8); \</div><div class="line">        atomic_inc(<a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a8c37b244d8aec5993e58b2c7f67d936d">histogram</a> + win_pos.s9); \</div><div class="line">        atomic_inc(<a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a8c37b244d8aec5993e58b2c7f67d936d">histogram</a> + win_pos.sa); \</div><div class="line">        atomic_inc(<a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a8c37b244d8aec5993e58b2c7f67d936d">histogram</a> + win_pos.sb); \</div><div class="line">        atomic_inc(<a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a8c37b244d8aec5993e58b2c7f67d936d">histogram</a> + win_pos.sc); \</div><div class="line">        atomic_inc(<a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a8c37b244d8aec5993e58b2c7f67d936d">histogram</a> + win_pos.sd); \</div><div class="line">        atomic_inc(<a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a8c37b244d8aec5993e58b2c7f67d936d">histogram</a> + win_pos.se); \</div><div class="line">        atomic_inc(<a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a8c37b244d8aec5993e58b2c7f67d936d">histogram</a> + win_pos.sf); \</div><div class="line">    }</div><div class="ttc" id="namespacearm__compute_1_1test_1_1validation_1_1reference_xhtml_a8c37b244d8aec5993e58b2c7f67d936d"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a8c37b244d8aec5993e58b2c7f67d936d">arm_compute::test::validation::reference::histogram</a></div><div class="ttdeci">SimpleTensor&lt; uint32_t &gt; histogram(const SimpleTensor&lt; T &gt; &amp;src, size_t num_bins, int32_t offset, uint32_t range)</div><div class="ttdef"><b>Definition:</b> <a href="reference_2_histogram_8cpp_source.xhtml#l00038">Histogram.cpp:38</a></div></div>
</div><!-- fragment -->
<p>Definition at line <a class="el" href="histogram_8cl_source.xhtml#l00026">26</a> of file <a class="el" href="histogram_8cl_source.xhtml">histogram.cl</a>.</p>

<p>Referenced by <a class="el" href="histogram_8cl_source.xhtml#l00068">hist_local_kernel()</a>.</p>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="af82fea967051b827585009463255262d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__kernel void hist_border_kernel </td>
          <td>(</td>
          <td class="paramtype">__global uchar *&#160;</td>
          <td class="paramname"><em>input_ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>input_stride_x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>input_step_x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>input_stride_y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>input_step_y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>input_offset_first_element_in_bytes</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">__global uint *restrict&#160;</td>
          <td class="paramname"><em>histogram</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>num_bins</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>offset</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>range</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>offrange</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Calculate the histogram of an 8 bit grayscale image's border. </p>
<p>Each thread will process one pixel using global atomic. When all work items in a work group are done the resulting local histograms are added to the global histogram using global atomics.</p>
<dl class="section note"><dt>Note</dt><dd>The input image is represented as a two-dimensional array of type uchar. The output is represented as a one-dimensional uint array of length of num_bins</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">input_ptr</td><td>Pointer to the first source image. Supported data types: U8 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">input_stride_x</td><td>Stride of the first source image in X dimension (in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">input_step_x</td><td>input_stride_x * number of elements along X processed per workitem(in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">input_stride_y</td><td>Stride of the first source image in Y dimension (in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">input_step_y</td><td>input_stride_y * number of elements along Y processed per workitem(in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">input_offset_first_element_in_bytes</td><td>The offset of the first element in the first source image </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">histogram</td><td>The output buffer to hold histogram final result. Supported data types: U32 </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">num_bins</td><td>The number of bins </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">offset</td><td>The start of values to use (inclusive) </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">range</td><td>The range of a bin </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">offrange</td><td>The maximum value (exclusive) </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="histogram_8cl_source.xhtml#l00141">141</a> of file <a class="el" href="histogram_8cl_source.xhtml">histogram.cl</a>.</p>

<p>References <a class="el" href="helpers_8h_source.xhtml#l00102">CONVERT_TO_IMAGE_STRUCT</a>, <a class="el" href="helpers_8h_source.xhtml#l00301">offset()</a>, and <a class="el" href="helpers_8h_source.xhtml#l00142">Image::ptr</a>.</p>
<div class="fragment"><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;{</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    <a class="code" href="struct_image.xhtml">Image</a> input_buffer = <a class="code" href="helpers_8h.xhtml#aebe814363556c244be043b13e7969197">CONVERT_TO_IMAGE_STRUCT</a>(input);</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    uint val = (uint)(*input_buffer.<a class="code" href="struct_image.xhtml#acf52c23cbd7424606c10a606524e3e32">ptr</a>);</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    uint win_pos = (val &gt;= <a class="code" href="helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>) ? (((val - <a class="code" href="helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>) * num_bins) / range) : 0;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    <span class="keywordflow">if</span>(val &gt;= <a class="code" href="helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a> &amp;&amp; (val &lt; offrange))</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    {</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        atomic_inc(<a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a8c37b244d8aec5993e58b2c7f67d936d">histogram</a> + win_pos);</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    }</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;}</div><div class="ttc" id="helpers_8h_xhtml_a009469e4d9b8fce3b6d5e97d2077827d"><div class="ttname"><a href="helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a></div><div class="ttdeci">__global uchar * offset(const Image *img, int x, int y)</div><div class="ttdoc">Get the pointer position of a Image. </div><div class="ttdef"><b>Definition:</b> <a href="helpers_8h_source.xhtml#l00301">helpers.h:301</a></div></div>
<div class="ttc" id="helpers_8h_xhtml_aebe814363556c244be043b13e7969197"><div class="ttname"><a href="helpers_8h.xhtml#aebe814363556c244be043b13e7969197">CONVERT_TO_IMAGE_STRUCT</a></div><div class="ttdeci">#define CONVERT_TO_IMAGE_STRUCT(name)</div><div class="ttdef"><b>Definition:</b> <a href="helpers_8h_source.xhtml#l00102">helpers.h:102</a></div></div>
<div class="ttc" id="struct_image_xhtml"><div class="ttname"><a href="struct_image.xhtml">Image</a></div><div class="ttdoc">Structure to hold Image information. </div><div class="ttdef"><b>Definition:</b> <a href="helpers_8h_source.xhtml#l00140">helpers.h:140</a></div></div>
<div class="ttc" id="struct_image_xhtml_acf52c23cbd7424606c10a606524e3e32"><div class="ttname"><a href="struct_image.xhtml#acf52c23cbd7424606c10a606524e3e32">Image::ptr</a></div><div class="ttdeci">__global uchar * ptr</div><div class="ttdoc">Pointer to the starting postion of the buffer. </div><div class="ttdef"><b>Definition:</b> <a href="helpers_8h_source.xhtml#l00142">helpers.h:142</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_1_1reference_xhtml_a8c37b244d8aec5993e58b2c7f67d936d"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a8c37b244d8aec5993e58b2c7f67d936d">arm_compute::test::validation::reference::histogram</a></div><div class="ttdeci">SimpleTensor&lt; uint32_t &gt; histogram(const SimpleTensor&lt; T &gt; &amp;src, size_t num_bins, int32_t offset, uint32_t range)</div><div class="ttdef"><b>Definition:</b> <a href="reference_2_histogram_8cpp_source.xhtml#l00038">Histogram.cpp:38</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="aec6ec6157573195df9694109ebbb38ae"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__kernel void hist_border_kernel_fixed </td>
          <td>(</td>
          <td class="paramtype">__global uchar *&#160;</td>
          <td class="paramname"><em>input_ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>input_stride_x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>input_step_x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>input_stride_y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>input_step_y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>input_offset_first_element_in_bytes</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">__global uint *restrict&#160;</td>
          <td class="paramname"><em>histogram</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Calculate the histogram of an 8 bit grayscale image with bin size as 256 and window size as 1. </p>
<p>Each thread will process one pixel using global atomic. When all work items in a work group are done the resulting local histograms are added to the global histogram using global atomics.</p>
<dl class="section note"><dt>Note</dt><dd>The input image is represented as a two-dimensional array of type uchar. The output is represented as a one-dimensional uint array of 256</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">input_ptr</td><td>Pointer to the first source image. Supported data types: U8 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">input_stride_x</td><td>Stride of the first source image in X dimension (in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">input_step_x</td><td>input_stride_x * number of elements along X processed per workitem(in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">input_stride_y</td><td>Stride of the first source image in Y dimension (in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">input_step_y</td><td>input_stride_y * number of elements along Y processed per workitem(in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">input_offset_first_element_in_bytes</td><td>The offset of the first element in the first source image </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">histogram</td><td>The output buffer to hold histogram final result. Supported data types: U32 </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="histogram_8cl_source.xhtml#l00238">238</a> of file <a class="el" href="histogram_8cl_source.xhtml">histogram.cl</a>.</p>

<p>References <a class="el" href="helpers_8h_source.xhtml#l00102">CONVERT_TO_IMAGE_STRUCT</a>, and <a class="el" href="helpers_8h_source.xhtml#l00142">Image::ptr</a>.</p>
<div class="fragment"><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;{</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    <a class="code" href="struct_image.xhtml">Image</a> input_buffer = <a class="code" href="helpers_8h.xhtml#aebe814363556c244be043b13e7969197">CONVERT_TO_IMAGE_STRUCT</a>(input);</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    atomic_inc(<a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a8c37b244d8aec5993e58b2c7f67d936d">histogram</a> + *input_buffer.<a class="code" href="struct_image.xhtml#acf52c23cbd7424606c10a606524e3e32">ptr</a>);</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;}</div><div class="ttc" id="helpers_8h_xhtml_aebe814363556c244be043b13e7969197"><div class="ttname"><a href="helpers_8h.xhtml#aebe814363556c244be043b13e7969197">CONVERT_TO_IMAGE_STRUCT</a></div><div class="ttdeci">#define CONVERT_TO_IMAGE_STRUCT(name)</div><div class="ttdef"><b>Definition:</b> <a href="helpers_8h_source.xhtml#l00102">helpers.h:102</a></div></div>
<div class="ttc" id="struct_image_xhtml"><div class="ttname"><a href="struct_image.xhtml">Image</a></div><div class="ttdoc">Structure to hold Image information. </div><div class="ttdef"><b>Definition:</b> <a href="helpers_8h_source.xhtml#l00140">helpers.h:140</a></div></div>
<div class="ttc" id="struct_image_xhtml_acf52c23cbd7424606c10a606524e3e32"><div class="ttname"><a href="struct_image.xhtml#acf52c23cbd7424606c10a606524e3e32">Image::ptr</a></div><div class="ttdeci">__global uchar * ptr</div><div class="ttdoc">Pointer to the starting postion of the buffer. </div><div class="ttdef"><b>Definition:</b> <a href="helpers_8h_source.xhtml#l00142">helpers.h:142</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_1_1reference_xhtml_a8c37b244d8aec5993e58b2c7f67d936d"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a8c37b244d8aec5993e58b2c7f67d936d">arm_compute::test::validation::reference::histogram</a></div><div class="ttdeci">SimpleTensor&lt; uint32_t &gt; histogram(const SimpleTensor&lt; T &gt; &amp;src, size_t num_bins, int32_t offset, uint32_t range)</div><div class="ttdef"><b>Definition:</b> <a href="reference_2_histogram_8cpp_source.xhtml#l00038">Histogram.cpp:38</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="abc81d92c9655c4ec22fff9163b66279d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__kernel void hist_local_kernel </td>
          <td>(</td>
          <td class="paramtype">__global uchar *&#160;</td>
          <td class="paramname"><em>input_ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>input_stride_x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>input_step_x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>input_stride_y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>input_step_y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>input_offset_first_element_in_bytes</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">__local uint *&#160;</td>
          <td class="paramname"><em>histogram_local</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">__global uint *restrict&#160;</td>
          <td class="paramname"><em>histogram</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>num_bins</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>offset</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>range</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>offrange</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Calculate the histogram of an 8 bit grayscale image. </p>
<p>Each thread will process 16 pixels and use one local atomic operation per pixel. When all work items in a work group are done the resulting local histograms are added to the global histogram using global atomics.</p>
<dl class="section note"><dt>Note</dt><dd>The input image is represented as a two-dimensional array of type uchar. The output is represented as a one-dimensional uint array of length of num_bins</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">input_ptr</td><td>Pointer to the first source image. Supported data types: U8 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">input_stride_x</td><td>Stride of the first source image in X dimension (in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">input_step_x</td><td>input_stride_x * number of elements along X processed per workitem(in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">input_stride_y</td><td>Stride of the first source image in Y dimension (in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">input_step_y</td><td>input_stride_y * number of elements along Y processed per workitem(in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">input_offset_first_element_in_bytes</td><td>The offset of the first element in the first source image </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">histogram_local</td><td>The local buffer to hold histogram result in per workgroup. Supported data types: U32 </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">histogram</td><td>The output buffer to hold histogram final result. Supported data types: U32 </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">num_bins</td><td>The number of bins </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">offset</td><td>The start of values to use (inclusive) </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">range</td><td>The range of a bin </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">offrange</td><td>The maximum value (exclusive) </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="histogram_8cl_source.xhtml#l00068">68</a> of file <a class="el" href="histogram_8cl_source.xhtml">histogram.cl</a>.</p>

<p>References <a class="el" href="helpers_8h_source.xhtml#l00102">CONVERT_TO_IMAGE_STRUCT</a>, <a class="el" href="helpers_8h_source.xhtml#l00142">Image::ptr</a>, and <a class="el" href="histogram_8cl_source.xhtml#l00026">VATOMIC_INC16</a>.</p>
<div class="fragment"><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;{</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <a class="code" href="struct_image.xhtml">Image</a> input_buffer = <a class="code" href="helpers_8h.xhtml#aebe814363556c244be043b13e7969197">CONVERT_TO_IMAGE_STRUCT</a>(input);</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    uint  local_id_x   = get_local_id(0);</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    uint local_x_size = get_local_size(0);</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <span class="keywordflow">if</span>(num_bins &gt; local_x_size)</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    {</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        <span class="keywordflow">for</span>(<span class="keywordtype">int</span> i = local_id_x; i &lt; num_bins; i += local_x_size)</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        {</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;            histogram_local[i] = 0;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        }</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    }</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    {</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        <span class="keywordflow">if</span>(local_id_x &lt;= num_bins)</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        {</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;            histogram_local[local_id_x] = 0;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        }</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    }</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    uint16 vals = convert_uint16(vload16(0, input_buffer.<a class="code" href="struct_image.xhtml#acf52c23cbd7424606c10a606524e3e32">ptr</a>));</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    uint16 win_pos = select(num_bins, ((vals - <a class="code" href="helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>) * num_bins) / range, (vals &gt;= <a class="code" href="helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a> &amp;&amp; vals &lt; offrange));</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    barrier(CLK_LOCAL_MEM_FENCE);</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <a class="code" href="histogram_8cl.xhtml#a2c8a35cfde24ca7728709200962e1a91">VATOMIC_INC16</a>(histogram_local, win_pos);</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    barrier(CLK_LOCAL_MEM_FENCE);</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <span class="keywordflow">if</span>(num_bins &gt; local_x_size)</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    {</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        <span class="keywordflow">for</span>(<span class="keywordtype">int</span> i = local_id_x; i &lt; num_bins; i += local_x_size)</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        {</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;            atomic_add(<a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a8c37b244d8aec5993e58b2c7f67d936d">histogram</a> + i, histogram_local[i]);</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        }</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    }</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    {</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        <span class="keywordflow">if</span>(local_id_x &lt;= num_bins)</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        {</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;            atomic_add(<a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a8c37b244d8aec5993e58b2c7f67d936d">histogram</a> + local_id_x, histogram_local[local_id_x]);</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        }</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    }</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;}</div><div class="ttc" id="histogram_8cl_xhtml_a2c8a35cfde24ca7728709200962e1a91"><div class="ttname"><a href="histogram_8cl.xhtml#a2c8a35cfde24ca7728709200962e1a91">VATOMIC_INC16</a></div><div class="ttdeci">#define VATOMIC_INC16(histogram, win_pos)</div><div class="ttdef"><b>Definition:</b> <a href="histogram_8cl_source.xhtml#l00026">histogram.cl:26</a></div></div>
<div class="ttc" id="helpers_8h_xhtml_a009469e4d9b8fce3b6d5e97d2077827d"><div class="ttname"><a href="helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a></div><div class="ttdeci">__global uchar * offset(const Image *img, int x, int y)</div><div class="ttdoc">Get the pointer position of a Image. </div><div class="ttdef"><b>Definition:</b> <a href="helpers_8h_source.xhtml#l00301">helpers.h:301</a></div></div>
<div class="ttc" id="helpers_8h_xhtml_aebe814363556c244be043b13e7969197"><div class="ttname"><a href="helpers_8h.xhtml#aebe814363556c244be043b13e7969197">CONVERT_TO_IMAGE_STRUCT</a></div><div class="ttdeci">#define CONVERT_TO_IMAGE_STRUCT(name)</div><div class="ttdef"><b>Definition:</b> <a href="helpers_8h_source.xhtml#l00102">helpers.h:102</a></div></div>
<div class="ttc" id="struct_image_xhtml"><div class="ttname"><a href="struct_image.xhtml">Image</a></div><div class="ttdoc">Structure to hold Image information. </div><div class="ttdef"><b>Definition:</b> <a href="helpers_8h_source.xhtml#l00140">helpers.h:140</a></div></div>
<div class="ttc" id="struct_image_xhtml_acf52c23cbd7424606c10a606524e3e32"><div class="ttname"><a href="struct_image.xhtml#acf52c23cbd7424606c10a606524e3e32">Image::ptr</a></div><div class="ttdeci">__global uchar * ptr</div><div class="ttdoc">Pointer to the starting postion of the buffer. </div><div class="ttdef"><b>Definition:</b> <a href="helpers_8h_source.xhtml#l00142">helpers.h:142</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_1_1reference_xhtml_a8c37b244d8aec5993e58b2c7f67d936d"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a8c37b244d8aec5993e58b2c7f67d936d">arm_compute::test::validation::reference::histogram</a></div><div class="ttdeci">SimpleTensor&lt; uint32_t &gt; histogram(const SimpleTensor&lt; T &gt; &amp;src, size_t num_bins, int32_t offset, uint32_t range)</div><div class="ttdef"><b>Definition:</b> <a href="reference_2_histogram_8cpp_source.xhtml#l00038">Histogram.cpp:38</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a7c8051ab952a597e66090d77f4dc60e4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__kernel void hist_local_kernel_fixed </td>
          <td>(</td>
          <td class="paramtype">__global uchar *&#160;</td>
          <td class="paramname"><em>input_ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>input_stride_x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>input_step_x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>input_stride_y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>input_step_y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>input_offset_first_element_in_bytes</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">__local uint *&#160;</td>
          <td class="paramname"><em>histogram_local</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">__global uint *restrict&#160;</td>
          <td class="paramname"><em>histogram</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Calculate the histogram of an 8 bit grayscale image with bin size of 256 and window size of 1. </p>
<p>Each thread will process 16 pixels and use one local atomic operation per pixel. When all work items in a work group are done the resulting local histograms are added to the global histogram using global atomics.</p>
<dl class="section note"><dt>Note</dt><dd>The input image is represented as a two-dimensional array of type uchar. The output is represented as a one-dimensional uint array of 256 elements</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">input_ptr</td><td>Pointer to the first source image. Supported data types: U8 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">input_stride_x</td><td>Stride of the first source image in X dimension (in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">input_step_x</td><td>input_stride_x * number of elements along X processed per workitem(in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">input_stride_y</td><td>Stride of the first source image in Y dimension (in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">input_step_y</td><td>input_stride_y * number of elements along Y processed per workitem(in bytes) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">input_offset_first_element_in_bytes</td><td>The offset of the first element in the first source image </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">histogram_local</td><td>The local buffer to hold histogram result in per workgroup. Supported data types: U32 </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">histogram</td><td>The output buffer to hold histogram final result. Supported data types: U32 </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="histogram_8cl_source.xhtml#l00178">178</a> of file <a class="el" href="histogram_8cl_source.xhtml">histogram.cl</a>.</p>

<p>References <a class="el" href="helpers_8h_source.xhtml#l00102">CONVERT_TO_IMAGE_STRUCT</a>, and <a class="el" href="helpers_8h_source.xhtml#l00142">Image::ptr</a>.</p>
<div class="fragment"><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;{</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    <a class="code" href="struct_image.xhtml">Image</a> input_buffer = <a class="code" href="helpers_8h.xhtml#aebe814363556c244be043b13e7969197">CONVERT_TO_IMAGE_STRUCT</a>(input);</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    uint local_index  = get_local_id(0);</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    uint local_x_size = get_local_size(0);</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    <span class="keywordflow">for</span>(<span class="keywordtype">int</span> i = local_index; i &lt; 256; i += local_x_size)</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    {</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;        histogram_local[i] = 0;</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    }</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    uint16 vals = convert_uint16(vload16(0, input_buffer.<a class="code" href="struct_image.xhtml#acf52c23cbd7424606c10a606524e3e32">ptr</a>));</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    barrier(CLK_LOCAL_MEM_FENCE);</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    atomic_inc(histogram_local + vals.s0);</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    atomic_inc(histogram_local + vals.s1);</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    atomic_inc(histogram_local + vals.s2);</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    atomic_inc(histogram_local + vals.s3);</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    atomic_inc(histogram_local + vals.s4);</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    atomic_inc(histogram_local + vals.s5);</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    atomic_inc(histogram_local + vals.s6);</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    atomic_inc(histogram_local + vals.s7);</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    atomic_inc(histogram_local + vals.s8);</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    atomic_inc(histogram_local + vals.s9);</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    atomic_inc(histogram_local + vals.sa);</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    atomic_inc(histogram_local + vals.sb);</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    atomic_inc(histogram_local + vals.sc);</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    atomic_inc(histogram_local + vals.sd);</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    atomic_inc(histogram_local + vals.se);</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    atomic_inc(histogram_local + vals.sf);</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    barrier(CLK_LOCAL_MEM_FENCE);</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    <span class="keywordflow">for</span>(<span class="keywordtype">int</span> i = local_index; i &lt; 256; i += local_x_size)</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    {</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;        atomic_add(<a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a8c37b244d8aec5993e58b2c7f67d936d">histogram</a> + i, histogram_local[i]);</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    }</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;}</div><div class="ttc" id="helpers_8h_xhtml_aebe814363556c244be043b13e7969197"><div class="ttname"><a href="helpers_8h.xhtml#aebe814363556c244be043b13e7969197">CONVERT_TO_IMAGE_STRUCT</a></div><div class="ttdeci">#define CONVERT_TO_IMAGE_STRUCT(name)</div><div class="ttdef"><b>Definition:</b> <a href="helpers_8h_source.xhtml#l00102">helpers.h:102</a></div></div>
<div class="ttc" id="struct_image_xhtml"><div class="ttname"><a href="struct_image.xhtml">Image</a></div><div class="ttdoc">Structure to hold Image information. </div><div class="ttdef"><b>Definition:</b> <a href="helpers_8h_source.xhtml#l00140">helpers.h:140</a></div></div>
<div class="ttc" id="struct_image_xhtml_acf52c23cbd7424606c10a606524e3e32"><div class="ttname"><a href="struct_image.xhtml#acf52c23cbd7424606c10a606524e3e32">Image::ptr</a></div><div class="ttdeci">__global uchar * ptr</div><div class="ttdoc">Pointer to the starting postion of the buffer. </div><div class="ttdef"><b>Definition:</b> <a href="helpers_8h_source.xhtml#l00142">helpers.h:142</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_1_1reference_xhtml_a8c37b244d8aec5993e58b2c7f67d936d"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a8c37b244d8aec5993e58b2c7f67d936d">arm_compute::test::validation::reference::histogram</a></div><div class="ttdeci">SimpleTensor&lt; uint32_t &gt; histogram(const SimpleTensor&lt; T &gt; &amp;src, size_t num_bins, int32_t offset, uint32_t range)</div><div class="ttdef"><b>Definition:</b> <a href="reference_2_histogram_8cpp_source.xhtml#l00038">Histogram.cpp:38</a></div></div>
</div><!-- fragment -->
</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_aebb8dcc11953d78e620bbef0b9e2183.xhtml">core</a></li><li class="navelem"><a class="el" href="dir_8c278f79c760e5c5fbd911f9870614c1.xhtml">CL</a></li><li class="navelem"><a class="el" href="dir_25885286e9dad4fa105b7b25a8031bbf.xhtml">cl_kernels</a></li><li class="navelem"><a class="el" href="histogram_8cl.xhtml">histogram.cl</a></li>
    <li class="footer">Generated on Thu Dec 14 2017 23:48:34 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
  </ul>
</div>
</body>
</html>
