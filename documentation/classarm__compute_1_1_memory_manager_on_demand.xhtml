<!-- HTML header for doxygen 1.8.9.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: MemoryManagerOnDemand Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Compute Library
   &#160;<span id="projectnumber">17.12</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li><a href="classes.xhtml"><span>Data&#160;Structure&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Data&#160;Fields</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarm__compute_1_1_memory_manager_on_demand.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">MemoryManagerOnDemand Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>On-demand memory manager.  
 <a href="classarm__compute_1_1_memory_manager_on_demand.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_memory_manager_on_demand_8h_source.xhtml">MemoryManagerOnDemand.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for MemoryManagerOnDemand:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classarm__compute_1_1_memory_manager_on_demand__coll__graph.svg" width="214" height="112"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:aba71fc8e689732c37684436aec7bf763"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_memory_manager_on_demand.xhtml#aba71fc8e689732c37684436aec7bf763">MemoryManagerOnDemand</a> (std::shared_ptr&lt; <a class="el" href="classarm__compute_1_1_i_lifetime_manager.xhtml">ILifetimeManager</a> &gt; <a class="el" href="classarm__compute_1_1_memory_manager_on_demand.xhtml#ab551a6658a80a521dfb3426b1a3cbfb8">lifetime_manager</a>, std::shared_ptr&lt; <a class="el" href="classarm__compute_1_1_i_pool_manager.xhtml">IPoolManager</a> &gt; <a class="el" href="classarm__compute_1_1_memory_manager_on_demand.xhtml#a725ccfd45df434cfc14a7faac951ab5b">pool_manager</a>)</td></tr>
<tr class="memdesc:aba71fc8e689732c37684436aec7bf763"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default Constructor.  <a href="#aba71fc8e689732c37684436aec7bf763">More...</a><br /></td></tr>
<tr class="separator:aba71fc8e689732c37684436aec7bf763"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad61f5da57995738b717da9e1fb53c25b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_memory_manager_on_demand.xhtml#ad61f5da57995738b717da9e1fb53c25b">MemoryManagerOnDemand</a> (const <a class="el" href="classarm__compute_1_1_memory_manager_on_demand.xhtml">MemoryManagerOnDemand</a> &amp;)=delete</td></tr>
<tr class="memdesc:ad61f5da57995738b717da9e1fb53c25b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class to be copy constructed.  <a href="#ad61f5da57995738b717da9e1fb53c25b">More...</a><br /></td></tr>
<tr class="separator:ad61f5da57995738b717da9e1fb53c25b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1bd945bc8d435108eb44610985af22c2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_memory_manager_on_demand.xhtml">MemoryManagerOnDemand</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_memory_manager_on_demand.xhtml#a1bd945bc8d435108eb44610985af22c2">operator=</a> (const <a class="el" href="classarm__compute_1_1_memory_manager_on_demand.xhtml">MemoryManagerOnDemand</a> &amp;)=delete</td></tr>
<tr class="memdesc:a1bd945bc8d435108eb44610985af22c2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class to be copied.  <a href="#a1bd945bc8d435108eb44610985af22c2">More...</a><br /></td></tr>
<tr class="separator:a1bd945bc8d435108eb44610985af22c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae3ae1d55baae4d04de1b3d5fca78c941"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_memory_manager_on_demand.xhtml#ae3ae1d55baae4d04de1b3d5fca78c941">MemoryManagerOnDemand</a> (<a class="el" href="classarm__compute_1_1_memory_manager_on_demand.xhtml">MemoryManagerOnDemand</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:ae3ae1d55baae4d04de1b3d5fca78c941"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be move constructed.  <a href="#ae3ae1d55baae4d04de1b3d5fca78c941">More...</a><br /></td></tr>
<tr class="separator:ae3ae1d55baae4d04de1b3d5fca78c941"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae1fea3bf72cb300aab21e99cb8b278b9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_memory_manager_on_demand.xhtml">MemoryManagerOnDemand</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_memory_manager_on_demand.xhtml#ae1fea3bf72cb300aab21e99cb8b278b9">operator=</a> (<a class="el" href="classarm__compute_1_1_memory_manager_on_demand.xhtml">MemoryManagerOnDemand</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:ae1fea3bf72cb300aab21e99cb8b278b9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be moved.  <a href="#ae1fea3bf72cb300aab21e99cb8b278b9">More...</a><br /></td></tr>
<tr class="separator:ae1fea3bf72cb300aab21e99cb8b278b9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a659d81c3e8f1e485712e12780aa06f09"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_memory_manager_on_demand.xhtml#a659d81c3e8f1e485712e12780aa06f09">set_num_pools</a> (unsigned int num_pools)</td></tr>
<tr class="memdesc:a659d81c3e8f1e485712e12780aa06f09"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the number of pools to create.  <a href="#a659d81c3e8f1e485712e12780aa06f09">More...</a><br /></td></tr>
<tr class="separator:a659d81c3e8f1e485712e12780aa06f09"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a068c36b905736af9b9752c5b8b301d27"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_memory_manager_on_demand.xhtml#a068c36b905736af9b9752c5b8b301d27">set_allocator</a> (<a class="el" href="classarm__compute_1_1_i_allocator.xhtml">IAllocator</a> *allocator)</td></tr>
<tr class="memdesc:a068c36b905736af9b9752c5b8b301d27"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the allocator to be used for configuring the pools.  <a href="#a068c36b905736af9b9752c5b8b301d27">More...</a><br /></td></tr>
<tr class="separator:a068c36b905736af9b9752c5b8b301d27"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a124158df350467fad011658341224355"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_memory_manager_on_demand.xhtml#a124158df350467fad011658341224355">is_finalized</a> () const </td></tr>
<tr class="memdesc:a124158df350467fad011658341224355"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks if the memory manager has been finalized.  <a href="#a124158df350467fad011658341224355">More...</a><br /></td></tr>
<tr class="separator:a124158df350467fad011658341224355"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab551a6658a80a521dfb3426b1a3cbfb8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_i_lifetime_manager.xhtml">ILifetimeManager</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_memory_manager_on_demand.xhtml#ab551a6658a80a521dfb3426b1a3cbfb8">lifetime_manager</a> () override</td></tr>
<tr class="memdesc:ab551a6658a80a521dfb3426b1a3cbfb8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the lifetime manager used by the memory manager.  <a href="#ab551a6658a80a521dfb3426b1a3cbfb8">More...</a><br /></td></tr>
<tr class="separator:ab551a6658a80a521dfb3426b1a3cbfb8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a725ccfd45df434cfc14a7faac951ab5b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_i_pool_manager.xhtml">IPoolManager</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_memory_manager_on_demand.xhtml#a725ccfd45df434cfc14a7faac951ab5b">pool_manager</a> () override</td></tr>
<tr class="memdesc:a725ccfd45df434cfc14a7faac951ab5b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the pool manager used by the memory manager.  <a href="#a725ccfd45df434cfc14a7faac951ab5b">More...</a><br /></td></tr>
<tr class="separator:a725ccfd45df434cfc14a7faac951ab5b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a32bafa8064e666aed52486c4af4144"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_memory_manager_on_demand.xhtml#a6a32bafa8064e666aed52486c4af4144">finalize</a> () override</td></tr>
<tr class="memdesc:a6a32bafa8064e666aed52486c4af4144"><td class="mdescLeft">&#160;</td><td class="mdescRight">Finalize memory manager.  <a href="#a6a32bafa8064e666aed52486c4af4144">More...</a><br /></td></tr>
<tr class="separator:a6a32bafa8064e666aed52486c4af4144"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1_i_memory_manager"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1_i_memory_manager')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1_i_memory_manager.xhtml">IMemoryManager</a></td></tr>
<tr class="memitem:ae63a106826a5a9104a39b0faa9558bf5 inherit pub_methods_classarm__compute_1_1_i_memory_manager"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_memory_manager.xhtml#ae63a106826a5a9104a39b0faa9558bf5">~IMemoryManager</a> ()=default</td></tr>
<tr class="memdesc:ae63a106826a5a9104a39b0faa9558bf5 inherit pub_methods_classarm__compute_1_1_i_memory_manager"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default virtual destructor.  <a href="#ae63a106826a5a9104a39b0faa9558bf5">More...</a><br /></td></tr>
<tr class="separator:ae63a106826a5a9104a39b0faa9558bf5 inherit pub_methods_classarm__compute_1_1_i_memory_manager"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>On-demand memory manager. </p>

<p>Definition at line <a class="el" href="_memory_manager_on_demand_8h_source.xhtml#l00042">42</a> of file <a class="el" href="_memory_manager_on_demand_8h_source.xhtml">MemoryManagerOnDemand.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="aba71fc8e689732c37684436aec7bf763"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_memory_manager_on_demand.xhtml">MemoryManagerOnDemand</a> </td>
          <td>(</td>
          <td class="paramtype">std::shared_ptr&lt; <a class="el" href="classarm__compute_1_1_i_lifetime_manager.xhtml">ILifetimeManager</a> &gt;&#160;</td>
          <td class="paramname"><em>lifetime_manager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::shared_ptr&lt; <a class="el" href="classarm__compute_1_1_i_pool_manager.xhtml">IPoolManager</a> &gt;&#160;</td>
          <td class="paramname"><em>pool_manager</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Default Constructor. </p>

</div>
</div>
<a class="anchor" id="ad61f5da57995738b717da9e1fb53c25b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_memory_manager_on_demand.xhtml">MemoryManagerOnDemand</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_memory_manager_on_demand.xhtml">MemoryManagerOnDemand</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class to be copy constructed. </p>

</div>
</div>
<a class="anchor" id="ae3ae1d55baae4d04de1b3d5fca78c941"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_memory_manager_on_demand.xhtml">MemoryManagerOnDemand</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_memory_manager_on_demand.xhtml">MemoryManagerOnDemand</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allow instances of this class to be move constructed. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a6a32bafa8064e666aed52486c4af4144"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void finalize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Finalize memory manager. </p>

<p>Implements <a class="el" href="classarm__compute_1_1_i_memory_manager.xhtml#a5882b5eaf11f8b1561d5bb4ecdc217c3">IMemoryManager</a>.</p>

</div>
</div>
<a class="anchor" id="a124158df350467fad011658341224355"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool is_finalized </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Checks if the memory manager has been finalized. </p>
<dl class="section return"><dt>Returns</dt><dd>True if the memory manager has been finalized else false </dd></dl>

</div>
</div>
<a class="anchor" id="ab551a6658a80a521dfb3426b1a3cbfb8"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_i_lifetime_manager.xhtml">ILifetimeManager</a>* lifetime_manager </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the lifetime manager used by the memory manager. </p>
<dl class="section return"><dt>Returns</dt><dd>The lifetime manager </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_memory_manager.xhtml#ab065826e9ee10f61d681b2103eaa74ed">IMemoryManager</a>.</p>

</div>
</div>
<a class="anchor" id="a1bd945bc8d435108eb44610985af22c2"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_memory_manager_on_demand.xhtml">MemoryManagerOnDemand</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_memory_manager_on_demand.xhtml">MemoryManagerOnDemand</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class to be copied. </p>

</div>
</div>
<a class="anchor" id="ae1fea3bf72cb300aab21e99cb8b278b9"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_memory_manager_on_demand.xhtml">MemoryManagerOnDemand</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_memory_manager_on_demand.xhtml">MemoryManagerOnDemand</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allow instances of this class to be moved. </p>

</div>
</div>
<a class="anchor" id="a725ccfd45df434cfc14a7faac951ab5b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_i_pool_manager.xhtml">IPoolManager</a>* pool_manager </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the pool manager used by the memory manager. </p>
<dl class="section return"><dt>Returns</dt><dd>The pool manager </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_memory_manager.xhtml#a3a47f406dc0d1b046ad26c3097f15293">IMemoryManager</a>.</p>

</div>
</div>
<a class="anchor" id="a068c36b905736af9b9752c5b8b301d27"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void set_allocator </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_allocator.xhtml">IAllocator</a> *&#160;</td>
          <td class="paramname"><em>allocator</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the allocator to be used for configuring the pools. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">allocator</td><td><a class="el" href="classarm__compute_1_1_allocator.xhtml" title="Default malloc allocator implementation. ">Allocator</a> to use </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a659d81c3e8f1e485712e12780aa06f09"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void set_num_pools </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>num_pools</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the number of pools to create. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">num_pools</td><td>Number of pools </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>arm_compute/runtime/<a class="el" href="_memory_manager_on_demand_8h_source.xhtml">MemoryManagerOnDemand.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1_memory_manager_on_demand.xhtml">MemoryManagerOnDemand</a></li>
    <li class="footer">Generated on Thu Dec 14 2017 23:48:36 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
  </ul>
</div>
</body>
</html>
