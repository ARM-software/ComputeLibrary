<!-- HTML header for doxygen 1.8.9.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.6"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: tests/framework/printers/PrettyPrinter.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Compute Library
   &#160;<span id="projectnumber">17.09</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.6 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>Globals</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_pretty_printer_8cpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Data Structures</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">PrettyPrinter.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_pretty_printer_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2017 ARM Limited.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_pretty_printer_8h.xhtml">PrettyPrinter.h</a>&quot;</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;../Framework.h&quot;</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;../instruments/Measurement.h&quot;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &lt;algorithm&gt;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="keyword">namespace </span>arm_compute</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;{</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keyword">namespace </span>test</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;{</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="keyword">namespace </span>framework</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;{</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;std::string PrettyPrinter::begin_color(<span class="keyword">const</span> std::string &amp;color)<span class="keyword"> const</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    <span class="keywordflow">if</span>(!_color_output)</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    {</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;        <span class="keywordflow">return</span> <span class="stringliteral">&quot;&quot;</span>;</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    }</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <span class="keywordflow">return</span> <span class="stringliteral">&quot;\033[0;3&quot;</span> + color + <span class="stringliteral">&quot;m&quot;</span>;</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;}</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;std::string PrettyPrinter::end_color()<span class="keyword"> const</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="keywordflow">if</span>(!_color_output)</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    {</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        <span class="keywordflow">return</span> <span class="stringliteral">&quot;&quot;</span>;</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    }</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <span class="keywordflow">return</span> <span class="stringliteral">&quot;\033[m&quot;</span>;</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;}</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div>
<div class="line"><a name="l00057"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#afcf598578056fcc9e9ed8916b68e28a2">   57</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#afcf598578056fcc9e9ed8916b68e28a2">PrettyPrinter::set_color_output</a>(<span class="keywordtype">bool</span> color_output)</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;{</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    _color_output = color_output;</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;}</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div>
<div class="line"><a name="l00062"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#a2a3ad8a62c2d169ba98b99fc849cb8c0">   62</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#a2a3ad8a62c2d169ba98b99fc849cb8c0">PrettyPrinter::print_entry</a>(<span class="keyword">const</span> std::string &amp;name, <span class="keyword">const</span> std::string &amp;<a class="code" href="hwc_8hpp.xhtml#a0f61d63b009d0880a89c843bd50d8d76">value</a>)</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;{</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    *_stream &lt;&lt; begin_color(<span class="stringliteral">&quot;4&quot;</span>) &lt;&lt; name &lt;&lt; <span class="stringliteral">&quot; = &quot;</span> &lt;&lt; value &lt;&lt; end_color() &lt;&lt; <span class="stringliteral">&quot;\n&quot;</span>;</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;}</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div>
<div class="line"><a name="l00067"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#a4e3955a20faf3bcda615ae62b0b24efa">   67</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#a4e3955a20faf3bcda615ae62b0b24efa">PrettyPrinter::print_global_header</a>()</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;{</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;}</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div>
<div class="line"><a name="l00071"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#a73c2cb1847e4110041efe047cb9421e6">   71</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#a73c2cb1847e4110041efe047cb9421e6">PrettyPrinter::print_global_footer</a>()</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;{</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;}</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div>
<div class="line"><a name="l00075"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#aa520a585d43bb30a6c483e69d40f01a1">   75</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#aa520a585d43bb30a6c483e69d40f01a1">PrettyPrinter::print_run_header</a>()</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;{</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;}</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div>
<div class="line"><a name="l00079"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#a906cf0547c72a5e2c38697c7d6c669ba">   79</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#a906cf0547c72a5e2c38697c7d6c669ba">PrettyPrinter::print_run_footer</a>()</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;{</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;}</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div>
<div class="line"><a name="l00083"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#a0bd164e8c3de0910183bdb50315ab282">   83</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#a0bd164e8c3de0910183bdb50315ab282">PrettyPrinter::print_test_header</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml">TestInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a096668313a9a819d54a2e65ec21ff0cc">info</a>)</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;{</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    *_stream &lt;&lt; begin_color(<span class="stringliteral">&quot;2&quot;</span>) &lt;&lt; <span class="stringliteral">&quot;Running [&quot;</span> &lt;&lt; info.<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml#a7441ef0865bcb3db9b8064dd7375c1ea">id</a> &lt;&lt; <span class="stringliteral">&quot;] &#39;&quot;</span> &lt;&lt; info.<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml#a9b45b3e13bd9167aab02e17e08916231">name</a> &lt;&lt; <span class="stringliteral">&quot;&#39;&quot;</span> &lt;&lt; end_color() &lt;&lt; <span class="stringliteral">&quot;\n&quot;</span>;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;}</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div>
<div class="line"><a name="l00088"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#a1012b95505daaa0be227d812b7329dc0">   88</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#a1012b95505daaa0be227d812b7329dc0">PrettyPrinter::print_test_footer</a>()</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;{</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;}</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div>
<div class="line"><a name="l00092"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#a69ca6fda3763ffa3dd7a18ed70eb685b">   92</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#a69ca6fda3763ffa3dd7a18ed70eb685b">PrettyPrinter::print_errors_header</a>()</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;{</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;}</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div>
<div class="line"><a name="l00096"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#a09777172c75440fb57577f538c3354fa">   96</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#a09777172c75440fb57577f538c3354fa">PrettyPrinter::print_errors_footer</a>()</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;{</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;}</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div>
<div class="line"><a name="l00100"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#a1b8f26a11ed27e8d4af56b4b297e5cd2">  100</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#a1b8f26a11ed27e8d4af56b4b297e5cd2">PrettyPrinter::print_info</a>(<span class="keyword">const</span> std::string &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a096668313a9a819d54a2e65ec21ff0cc">info</a>)</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;{</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    *_stream &lt;&lt; begin_color(<span class="stringliteral">&quot;1&quot;</span>) &lt;&lt; <span class="stringliteral">&quot;INFO: &quot;</span> &lt;&lt; info &lt;&lt; end_color() &lt;&lt; <span class="stringliteral">&quot;\n&quot;</span>;</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;}</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div>
<div class="line"><a name="l00105"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#afb8becd7931a06d74a77ee9b51a67dd6">  105</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#afb8becd7931a06d74a77ee9b51a67dd6">PrettyPrinter::print_error</a>(<span class="keyword">const</span> std::exception &amp;<a class="code" href="namespacearm__compute.xhtml#a568b0fbfa3d903099d9c9f7b6acf188d">error</a>, <span class="keywordtype">bool</span> expected)</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;{</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    std::string prefix = expected ? <span class="stringliteral">&quot;EXPECTED ERROR: &quot;</span> : <span class="stringliteral">&quot;ERROR: &quot;</span>;</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    *_stream &lt;&lt; begin_color(<span class="stringliteral">&quot;1&quot;</span>) &lt;&lt; prefix &lt;&lt; error.what() &lt;&lt; end_color() &lt;&lt; <span class="stringliteral">&quot;\n&quot;</span>;</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;}</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div>
<div class="line"><a name="l00111"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#a1989aab0187e56f1cf45e92e892c9d2d">  111</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#a1989aab0187e56f1cf45e92e892c9d2d">PrettyPrinter::print_measurements</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_profiler.xhtml#a20bb995bb0d5415692917b2f9a36f948">Profiler::MeasurementsMap</a> &amp;measurements)</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;{</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <span class="keywordflow">for</span>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;instrument : measurements)</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    {</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        *_stream &lt;&lt; begin_color(<span class="stringliteral">&quot;3&quot;</span>) &lt;&lt; <span class="stringliteral">&quot;  &quot;</span> &lt;&lt; instrument.first &lt;&lt; <span class="stringliteral">&quot;:&quot;</span>;</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;        <span class="keyword">auto</span> add_measurements = [](<span class="keywordtype">double</span> a, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml">Measurement</a> &amp; b)</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        {</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;            <span class="keywordflow">return</span> a + b.value;</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        };</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        <span class="keyword">auto</span> cmp_measurements = [](<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml">Measurement</a> &amp; a, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml">Measurement</a> &amp; b)</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        {</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;            <span class="keywordflow">return</span> a.<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_typed_measurement.xhtml#a4fc7f59e3113e19697159919a5aad095">value</a> &lt; b.value;</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        };</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        <span class="keywordtype">double</span>     sum_values    = <a class="code" href="accumulate_8cl.xhtml#a00e540076dd545ad59ac7482f8cdf514">std::accumulate</a>(instrument.second.begin(), instrument.second.end(), 0., add_measurements);</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        <span class="keywordtype">int</span>        num_values    = instrument.second.size();</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> minmax_values = std::minmax_element(instrument.second.begin(), instrument.second.end(), cmp_measurements);</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        <span class="keywordflow">if</span>(num_values &gt; 2)</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        {</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;            sum_values -= minmax_values.first-&gt;value + minmax_values.second-&gt;value;</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;            num_values -= 2;</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        }</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml">Measurement</a> avg{ sum_values / num_values, minmax_values.first-&gt;<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_i_measurement.xhtml#a1729796f03559082040198b11c08f0ff">unit</a> };</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        *_stream &lt;&lt; <span class="stringliteral">&quot;    &quot;</span>;</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        *_stream &lt;&lt; <span class="stringliteral">&quot;AVG=&quot;</span> &lt;&lt; avg &lt;&lt; <span class="stringliteral">&quot;, &quot;</span>;</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        *_stream &lt;&lt; <span class="stringliteral">&quot;MIN=&quot;</span> &lt;&lt; *minmax_values.first &lt;&lt; <span class="stringliteral">&quot;, &quot;</span>;</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        *_stream &lt;&lt; <span class="stringliteral">&quot;MAX=&quot;</span> &lt;&lt; *minmax_values.second &lt;&lt; end_color() &lt;&lt; <span class="stringliteral">&quot;\n&quot;</span>;</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    }</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;}</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;} <span class="comment">// namespace framework</span></div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;} <span class="comment">// namespace test</span></div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;} <span class="comment">// namespace arm_compute</span></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_pretty_printer_xhtml_a09777172c75440fb57577f538c3354fa"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#a09777172c75440fb57577f538c3354fa">arm_compute::test::framework::PrettyPrinter::print_errors_footer</a></div><div class="ttdeci">void print_errors_footer() override</div><div class="ttdoc">Print footer after errors. </div><div class="ttdef"><b>Definition:</b> <a href="_pretty_printer_8cpp_source.xhtml#l00096">PrettyPrinter.cpp:96</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_pretty_printer_xhtml_a4e3955a20faf3bcda615ae62b0b24efa"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#a4e3955a20faf3bcda615ae62b0b24efa">arm_compute::test::framework::PrettyPrinter::print_global_header</a></div><div class="ttdeci">void print_global_header() override</div><div class="ttdoc">Print global header. </div><div class="ttdef"><b>Definition:</b> <a href="_pretty_printer_8cpp_source.xhtml#l00067">PrettyPrinter.cpp:67</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1framework_1_1_i_measurement_xhtml_a1729796f03559082040198b11c08f0ff"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_i_measurement.xhtml#a1729796f03559082040198b11c08f0ff">arm_compute::test::framework::IMeasurement::unit</a></div><div class="ttdeci">std::string unit</div><div class="ttdef"><b>Definition:</b> <a href="_measurement_8h_source.xhtml#l00053">Measurement.h:53</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1framework_1_1_measurement_xhtml"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml">arm_compute::test::framework::Measurement</a></div><div class="ttdoc">Generic measurement that stores values as double. </div><div class="ttdef"><b>Definition:</b> <a href="_measurement_8h_source.xhtml#l00085">Measurement.h:85</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_pretty_printer_xhtml_a69ca6fda3763ffa3dd7a18ed70eb685b"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#a69ca6fda3763ffa3dd7a18ed70eb685b">arm_compute::test::framework::PrettyPrinter::print_errors_header</a></div><div class="ttdeci">void print_errors_header() override</div><div class="ttdoc">Print header before errors. </div><div class="ttdef"><b>Definition:</b> <a href="_pretty_printer_8cpp_source.xhtml#l00092">PrettyPrinter.cpp:92</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a096668313a9a819d54a2e65ec21ff0cc"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a096668313a9a819d54a2e65ec21ff0cc">arm_compute::test::validation::info</a></div><div class="ttdeci">src info() -&gt; set_format(Format::S16)</div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1framework_1_1_test_info_xhtml_a7441ef0865bcb3db9b8064dd7375c1ea"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml#a7441ef0865bcb3db9b8064dd7375c1ea">arm_compute::test::framework::TestInfo::id</a></div><div class="ttdeci">int id</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8h_source.xhtml#l00068">Framework.h:68</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1framework_1_1_typed_measurement_xhtml_a4fc7f59e3113e19697159919a5aad095"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_typed_measurement.xhtml#a4fc7f59e3113e19697159919a5aad095">arm_compute::test::framework::TypedMeasurement::value</a></div><div class="ttdeci">T value</div><div class="ttdef"><b>Definition:</b> <a href="_measurement_8h_source.xhtml#l00070">Measurement.h:70</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1framework_1_1_test_info_xhtml_a9b45b3e13bd9167aab02e17e08916231"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml#a9b45b3e13bd9167aab02e17e08916231">arm_compute::test::framework::TestInfo::name</a></div><div class="ttdeci">std::string name</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8h_source.xhtml#l00069">Framework.h:69</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a568b0fbfa3d903099d9c9f7b6acf188d"><div class="ttname"><a href="namespacearm__compute.xhtml#a568b0fbfa3d903099d9c9f7b6acf188d">arm_compute::error</a></div><div class="ttdeci">void error(const char *function, const char *file, const int line, const char *msg,...)</div><div class="ttdoc">Print an error message then throw an std::runtime_error. </div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_profiler_xhtml_a20bb995bb0d5415692917b2f9a36f948"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_profiler.xhtml#a20bb995bb0d5415692917b2f9a36f948">arm_compute::test::framework::Profiler::MeasurementsMap</a></div><div class="ttdeci">std::map&lt; std::string, std::vector&lt; Measurement &gt;&gt; MeasurementsMap</div><div class="ttdoc">Mapping from instrument ids to their measurements. </div><div class="ttdef"><b>Definition:</b> <a href="_profiler_8h_source.xhtml#l00049">Profiler.h:49</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_pretty_printer_xhtml_a73c2cb1847e4110041efe047cb9421e6"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#a73c2cb1847e4110041efe047cb9421e6">arm_compute::test::framework::PrettyPrinter::print_global_footer</a></div><div class="ttdeci">void print_global_footer() override</div><div class="ttdoc">Print global footer. </div><div class="ttdef"><b>Definition:</b> <a href="_pretty_printer_8cpp_source.xhtml#l00071">PrettyPrinter.cpp:71</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1framework_1_1_test_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml">arm_compute::test::framework::TestInfo</a></div><div class="ttdoc">Information about a test case. </div><div class="ttdef"><b>Definition:</b> <a href="_framework_8h_source.xhtml#l00066">Framework.h:66</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_pretty_printer_xhtml_afb8becd7931a06d74a77ee9b51a67dd6"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#afb8becd7931a06d74a77ee9b51a67dd6">arm_compute::test::framework::PrettyPrinter::print_error</a></div><div class="ttdeci">void print_error(const std::exception &amp;error, bool expected) override</div><div class="ttdoc">Print test error. </div><div class="ttdef"><b>Definition:</b> <a href="_pretty_printer_8cpp_source.xhtml#l00105">PrettyPrinter.cpp:105</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_pretty_printer_xhtml_aa520a585d43bb30a6c483e69d40f01a1"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#aa520a585d43bb30a6c483e69d40f01a1">arm_compute::test::framework::PrettyPrinter::print_run_header</a></div><div class="ttdeci">void print_run_header() override</div><div class="ttdoc">Print header before running all tests. </div><div class="ttdef"><b>Definition:</b> <a href="_pretty_printer_8cpp_source.xhtml#l00075">PrettyPrinter.cpp:75</a></div></div>
<div class="ttc" id="hwc_8hpp_xhtml_a0f61d63b009d0880a89c843bd50d8d76"><div class="ttname"><a href="hwc_8hpp.xhtml#a0f61d63b009d0880a89c843bd50d8d76">value</a></div><div class="ttdeci">void * value</div><div class="ttdef"><b>Definition:</b> <a href="hwc_8hpp_source.xhtml#l00269">hwc.hpp:269</a></div></div>
<div class="ttc" id="_pretty_printer_8h_xhtml"><div class="ttname"><a href="_pretty_printer_8h.xhtml">PrettyPrinter.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_pretty_printer_xhtml_a906cf0547c72a5e2c38697c7d6c669ba"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#a906cf0547c72a5e2c38697c7d6c669ba">arm_compute::test::framework::PrettyPrinter::print_run_footer</a></div><div class="ttdeci">void print_run_footer() override</div><div class="ttdoc">Print footer after running all tests. </div><div class="ttdef"><b>Definition:</b> <a href="_pretty_printer_8cpp_source.xhtml#l00079">PrettyPrinter.cpp:79</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_pretty_printer_xhtml_a2a3ad8a62c2d169ba98b99fc849cb8c0"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#a2a3ad8a62c2d169ba98b99fc849cb8c0">arm_compute::test::framework::PrettyPrinter::print_entry</a></div><div class="ttdeci">void print_entry(const std::string &amp;name, const std::string &amp;value) override</div><div class="ttdoc">Print an entry consisting of a (name, value) pair. </div><div class="ttdef"><b>Definition:</b> <a href="_pretty_printer_8cpp_source.xhtml#l00062">PrettyPrinter.cpp:62</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_pretty_printer_xhtml_a1012b95505daaa0be227d812b7329dc0"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#a1012b95505daaa0be227d812b7329dc0">arm_compute::test::framework::PrettyPrinter::print_test_footer</a></div><div class="ttdeci">void print_test_footer() override</div><div class="ttdoc">Print footer after a test. </div><div class="ttdef"><b>Definition:</b> <a href="_pretty_printer_8cpp_source.xhtml#l00088">PrettyPrinter.cpp:88</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_pretty_printer_xhtml_afcf598578056fcc9e9ed8916b68e28a2"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#afcf598578056fcc9e9ed8916b68e28a2">arm_compute::test::framework::PrettyPrinter::set_color_output</a></div><div class="ttdeci">void set_color_output(bool color_output)</div><div class="ttdoc">Set if the output is colored. </div><div class="ttdef"><b>Definition:</b> <a href="_pretty_printer_8cpp_source.xhtml#l00057">PrettyPrinter.cpp:57</a></div></div>
<div class="ttc" id="accumulate_8cl_xhtml_a00e540076dd545ad59ac7482f8cdf514"><div class="ttname"><a href="accumulate_8cl.xhtml#a00e540076dd545ad59ac7482f8cdf514">accumulate</a></div><div class="ttdeci">__kernel void accumulate(__global uchar *input_ptr, uint input_stride_x, uint input_step_x, uint input_stride_y, uint input_step_y, uint input_offset_first_element_in_bytes, __global uchar *accu_ptr, uint accu_stride_x, uint accu_step_x, uint accu_stride_y, uint accu_step_y, uint accu_offset_first_element_in_bytes)</div><div class="ttdoc">This function accumulates an input image into output image. </div><div class="ttdef"><b>Definition:</b> <a href="accumulate_8cl_source.xhtml#l00041">accumulate.cl:41</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_pretty_printer_xhtml_a1989aab0187e56f1cf45e92e892c9d2d"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#a1989aab0187e56f1cf45e92e892c9d2d">arm_compute::test::framework::PrettyPrinter::print_measurements</a></div><div class="ttdeci">void print_measurements(const Profiler::MeasurementsMap &amp;measurements) override</div><div class="ttdoc">Print measurements for a test. </div><div class="ttdef"><b>Definition:</b> <a href="_pretty_printer_8cpp_source.xhtml#l00111">PrettyPrinter.cpp:111</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_pretty_printer_xhtml_a1b8f26a11ed27e8d4af56b4b297e5cd2"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#a1b8f26a11ed27e8d4af56b4b297e5cd2">arm_compute::test::framework::PrettyPrinter::print_info</a></div><div class="ttdeci">void print_info(const std::string &amp;info) override</div><div class="ttdoc">Print test log info. </div><div class="ttdef"><b>Definition:</b> <a href="_pretty_printer_8cpp_source.xhtml#l00100">PrettyPrinter.cpp:100</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_pretty_printer_xhtml_a0bd164e8c3de0910183bdb50315ab282"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#a0bd164e8c3de0910183bdb50315ab282">arm_compute::test::framework::PrettyPrinter::print_test_header</a></div><div class="ttdeci">void print_test_header(const TestInfo &amp;info) override</div><div class="ttdoc">Print header before a test. </div><div class="ttdef"><b>Definition:</b> <a href="_pretty_printer_8cpp_source.xhtml#l00083">PrettyPrinter.cpp:83</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_3b4cc335dce0408d77b688e575522aa5.xhtml">tests</a></li><li class="navelem"><a class="el" href="dir_2dd0e1a78595595cf02ec0d9123d5f3a.xhtml">framework</a></li><li class="navelem"><a class="el" href="dir_1303d8caafe45834fe107701db2b0040.xhtml">printers</a></li><li class="navelem"><a class="el" href="_pretty_printer_8cpp.xhtml">PrettyPrinter.cpp</a></li>
    <li class="footer">Generated on Thu Sep 28 2017 14:37:51 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.6 </li>
  </ul>
</div>
</body>
</html>
