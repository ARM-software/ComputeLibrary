<!-- HTML header for doxygen 1.8.9.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: IGCKernel Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Compute Library
   &#160;<span id="projectnumber">17.12</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li><a href="classes.xhtml"><span>Data&#160;Structure&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Data&#160;Fields</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarm__compute_1_1_i_g_c_kernel.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">IGCKernel Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p>Common interface for all the GLES kernels.  
 <a href="classarm__compute_1_1_i_g_c_kernel.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_i_g_c_kernel_8h_source.xhtml">IGCKernel.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for IGCKernel:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classarm__compute_1_1_i_g_c_kernel__coll__graph.svg" width="94" height="112"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_g_c_kernel_1_1_buffer_param.xhtml">BufferParam</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:abd51b7f007e5846ae05efdaca32e876c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_g_c_kernel.xhtml#abd51b7f007e5846ae05efdaca32e876c">IGCKernel</a> ()</td></tr>
<tr class="memdesc:abd51b7f007e5846ae05efdaca32e876c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="#abd51b7f007e5846ae05efdaca32e876c">More...</a><br /></td></tr>
<tr class="separator:abd51b7f007e5846ae05efdaca32e876c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abca9f85e09acd3e4de49711b62dc8549"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_g_c_kernel.xhtml">GCKernel</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_g_c_kernel.xhtml#abca9f85e09acd3e4de49711b62dc8549">kernel</a> ()</td></tr>
<tr class="memdesc:abca9f85e09acd3e4de49711b62dc8549"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a reference to the GLES kernel of this object.  <a href="#abca9f85e09acd3e4de49711b62dc8549">More...</a><br /></td></tr>
<tr class="separator:abca9f85e09acd3e4de49711b62dc8549"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae7a1e979b3442bd2f7732b5f51d5dded"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_g_c_kernel.xhtml#ae7a1e979b3442bd2f7732b5f51d5dded">add_1D_tensor_argument</a> (unsigned int &amp;idx, const <a class="el" href="classarm__compute_1_1_i_g_c_tensor.xhtml">IGCTensor</a> *tensor, const unsigned int binding_point, const <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;<a class="el" href="classarm__compute_1_1_i_kernel.xhtml#a3f5646133956f06348b310ccc3d36353">window</a>)</td></tr>
<tr class="memdesc:ae7a1e979b3442bd2f7732b5f51d5dded"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add the passed 1D tensor's parameters to the object's kernel's arguments starting from the index idx.  <a href="#ae7a1e979b3442bd2f7732b5f51d5dded">More...</a><br /></td></tr>
<tr class="separator:ae7a1e979b3442bd2f7732b5f51d5dded"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2d29ef32500e170cdf6d2fec4de83813"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_g_c_kernel.xhtml#a2d29ef32500e170cdf6d2fec4de83813">add_1D_tensor_argument</a> (unsigned int &amp;idx, const <a class="el" href="classarm__compute_1_1_i_g_c_tensor.xhtml">IGCTensor</a> *tensor, const <a class="el" href="classarm__compute_1_1_i_g_c_kernel_1_1_buffer_param.xhtml">BufferParam</a> &amp;param, const <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;<a class="el" href="classarm__compute_1_1_i_kernel.xhtml#a3f5646133956f06348b310ccc3d36353">window</a>)</td></tr>
<tr class="memdesc:a2d29ef32500e170cdf6d2fec4de83813"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add the passed 1D tensor's parameters to the object's kernel's arguments starting from the index idx.  <a href="#a2d29ef32500e170cdf6d2fec4de83813">More...</a><br /></td></tr>
<tr class="separator:a2d29ef32500e170cdf6d2fec4de83813"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a633d6a0cb573106e4d420b664cb29b66"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_g_c_kernel.xhtml#a633d6a0cb573106e4d420b664cb29b66">add_2D_tensor_argument</a> (unsigned int &amp;idx, const <a class="el" href="classarm__compute_1_1_i_g_c_tensor.xhtml">IGCTensor</a> *tensor, const unsigned int binding_point, const <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;<a class="el" href="classarm__compute_1_1_i_kernel.xhtml#a3f5646133956f06348b310ccc3d36353">window</a>)</td></tr>
<tr class="memdesc:a633d6a0cb573106e4d420b664cb29b66"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add the passed 2D tensor's parameters to the object's kernel's arguments starting from the index idx.  <a href="#a633d6a0cb573106e4d420b664cb29b66">More...</a><br /></td></tr>
<tr class="separator:a633d6a0cb573106e4d420b664cb29b66"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8caf742ce1a48a9a14982826a30ec397"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_g_c_kernel.xhtml#a8caf742ce1a48a9a14982826a30ec397">add_2D_tensor_argument</a> (unsigned int &amp;idx, const <a class="el" href="classarm__compute_1_1_i_g_c_tensor.xhtml">IGCTensor</a> *tensor, const <a class="el" href="classarm__compute_1_1_i_g_c_kernel_1_1_buffer_param.xhtml">BufferParam</a> &amp;param, const <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;<a class="el" href="classarm__compute_1_1_i_kernel.xhtml#a3f5646133956f06348b310ccc3d36353">window</a>)</td></tr>
<tr class="memdesc:a8caf742ce1a48a9a14982826a30ec397"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add the passed 2D tensor's parameters to the object's kernel's arguments starting from the index idx.  <a href="#a8caf742ce1a48a9a14982826a30ec397">More...</a><br /></td></tr>
<tr class="separator:a8caf742ce1a48a9a14982826a30ec397"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa9ed9d806fc3364df21027387b9e735a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_g_c_kernel.xhtml#aa9ed9d806fc3364df21027387b9e735a">add_3D_tensor_argument</a> (unsigned int &amp;idx, const <a class="el" href="classarm__compute_1_1_i_g_c_tensor.xhtml">IGCTensor</a> *tensor, const unsigned int binding_point, const <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;<a class="el" href="classarm__compute_1_1_i_kernel.xhtml#a3f5646133956f06348b310ccc3d36353">window</a>)</td></tr>
<tr class="memdesc:aa9ed9d806fc3364df21027387b9e735a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add the passed 3D tensor's parameters to the object's kernel's arguments starting from the index idx.  <a href="#aa9ed9d806fc3364df21027387b9e735a">More...</a><br /></td></tr>
<tr class="separator:aa9ed9d806fc3364df21027387b9e735a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaaeff9c7844fe0e5de26ed7756b22e02"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_g_c_kernel.xhtml#aaaeff9c7844fe0e5de26ed7756b22e02">add_3D_tensor_argument</a> (unsigned int &amp;idx, const <a class="el" href="classarm__compute_1_1_i_g_c_tensor.xhtml">IGCTensor</a> *tensor, const <a class="el" href="classarm__compute_1_1_i_g_c_kernel_1_1_buffer_param.xhtml">BufferParam</a> &amp;param, const <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;<a class="el" href="classarm__compute_1_1_i_kernel.xhtml#a3f5646133956f06348b310ccc3d36353">window</a>)</td></tr>
<tr class="memdesc:aaaeff9c7844fe0e5de26ed7756b22e02"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add the passed 3D tensor's parameters to the object's kernel's arguments starting from the index idx.  <a href="#aaaeff9c7844fe0e5de26ed7756b22e02">More...</a><br /></td></tr>
<tr class="separator:aaaeff9c7844fe0e5de26ed7756b22e02"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a770f45838881fc061294e56d64f34386"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_g_c_kernel.xhtml#a770f45838881fc061294e56d64f34386">num_arguments_per_1D_tensor</a> () const </td></tr>
<tr class="memdesc:a770f45838881fc061294e56d64f34386"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of arguments enqueued per 1D tensor object.  <a href="#a770f45838881fc061294e56d64f34386">More...</a><br /></td></tr>
<tr class="separator:a770f45838881fc061294e56d64f34386"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac734502531e7f95e25b3bf688a304a59"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_g_c_kernel.xhtml#ac734502531e7f95e25b3bf688a304a59">num_arguments_per_2D_tensor</a> () const </td></tr>
<tr class="memdesc:ac734502531e7f95e25b3bf688a304a59"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of arguments enqueued per 2D tensor object.  <a href="#ac734502531e7f95e25b3bf688a304a59">More...</a><br /></td></tr>
<tr class="separator:ac734502531e7f95e25b3bf688a304a59"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4feaae9c860cddfa843d37c953674a22"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_g_c_kernel.xhtml#a4feaae9c860cddfa843d37c953674a22">num_arguments_per_3D_tensor</a> () const </td></tr>
<tr class="memdesc:a4feaae9c860cddfa843d37c953674a22"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of arguments enqueued per 3D tensor object.  <a href="#a4feaae9c860cddfa843d37c953674a22">More...</a><br /></td></tr>
<tr class="separator:a4feaae9c860cddfa843d37c953674a22"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6f56c8bb44166634652b877d6eb7a9a2"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_g_c_kernel.xhtml#a6f56c8bb44166634652b877d6eb7a9a2">run</a> (const <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;<a class="el" href="classarm__compute_1_1_i_kernel.xhtml#a3f5646133956f06348b310ccc3d36353">window</a>)=0</td></tr>
<tr class="memdesc:a6f56c8bb44166634652b877d6eb7a9a2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enqueue the OpenGL ES shader to process the given window.  <a href="#a6f56c8bb44166634652b877d6eb7a9a2">More...</a><br /></td></tr>
<tr class="separator:a6f56c8bb44166634652b877d6eb7a9a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1_i_kernel"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1_i_kernel')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1_i_kernel.xhtml">IKernel</a></td></tr>
<tr class="memitem:a7250cb8cbaa4104a93a2d77155085507 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_kernel.xhtml#a7250cb8cbaa4104a93a2d77155085507">IKernel</a> ()</td></tr>
<tr class="memdesc:a7250cb8cbaa4104a93a2d77155085507 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="#a7250cb8cbaa4104a93a2d77155085507">More...</a><br /></td></tr>
<tr class="separator:a7250cb8cbaa4104a93a2d77155085507 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a341b60d15a5e12a5b8f3825194dd3b12 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_kernel.xhtml#a341b60d15a5e12a5b8f3825194dd3b12">~IKernel</a> ()=default</td></tr>
<tr class="memdesc:a341b60d15a5e12a5b8f3825194dd3b12 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="#a341b60d15a5e12a5b8f3825194dd3b12">More...</a><br /></td></tr>
<tr class="separator:a341b60d15a5e12a5b8f3825194dd3b12 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abfab8f0d4928e1081d9f65b77933e24a inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_kernel.xhtml#abfab8f0d4928e1081d9f65b77933e24a">is_parallelisable</a> () const </td></tr>
<tr class="memdesc:abfab8f0d4928e1081d9f65b77933e24a inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Indicates whether or not the kernel is parallelisable.  <a href="#abfab8f0d4928e1081d9f65b77933e24a">More...</a><br /></td></tr>
<tr class="separator:abfab8f0d4928e1081d9f65b77933e24a inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa6daa9b04e2035bf007e5e5c3c4396a8 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="structarm__compute_1_1_border_size.xhtml">BorderSize</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_kernel.xhtml#aa6daa9b04e2035bf007e5e5c3c4396a8">border_size</a> () const </td></tr>
<tr class="memdesc:aa6daa9b04e2035bf007e5e5c3c4396a8 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">The size of the border for that kernel.  <a href="#aa6daa9b04e2035bf007e5e5c3c4396a8">More...</a><br /></td></tr>
<tr class="separator:aa6daa9b04e2035bf007e5e5c3c4396a8 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f5646133956f06348b310ccc3d36353 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_kernel.xhtml#a3f5646133956f06348b310ccc3d36353">window</a> () const </td></tr>
<tr class="memdesc:a3f5646133956f06348b310ccc3d36353 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">The maximum window the kernel can be executed on.  <a href="#a3f5646133956f06348b310ccc3d36353">More...</a><br /></td></tr>
<tr class="separator:a3f5646133956f06348b310ccc3d36353 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Common interface for all the GLES kernels. </p>

<p>Definition at line <a class="el" href="_i_g_c_kernel_8h_source.xhtml#l00038">38</a> of file <a class="el" href="_i_g_c_kernel_8h_source.xhtml">IGCKernel.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="abd51b7f007e5846ae05efdaca32e876c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_i_g_c_kernel.xhtml">IGCKernel</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructor. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="ae7a1e979b3442bd2f7732b5f51d5dded"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void add_1D_tensor_argument </td>
          <td>(</td>
          <td class="paramtype">unsigned int &amp;&#160;</td>
          <td class="paramname"><em>idx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_g_c_tensor.xhtml">IGCTensor</a> *&#160;</td>
          <td class="paramname"><em>tensor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>binding_point</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;&#160;</td>
          <td class="paramname"><em>window</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Add the passed 1D tensor's parameters to the object's kernel's arguments starting from the index idx. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">idx</td><td>Index at which to start adding the tensor's arguments.Input and output tensor will have sperated index, multiple indices start from 1, single index have to be set to 0. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">tensor</td><td><a class="el" href="classarm__compute_1_1_tensor.xhtml" title="Basic implementation of the tensor interface. ">Tensor</a> to set as an argument of the object's kernel. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">binding_point</td><td><a class="el" href="classarm__compute_1_1_tensor.xhtml" title="Basic implementation of the tensor interface. ">Tensor</a>'s binding point in this kernel. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">window</td><td><a class="el" href="classarm__compute_1_1_window.xhtml" title="Describe a multidimensional execution window. ">Window</a> the kernel will be executed on. </td></tr>
  </table>
  </dd>
</dl>

<p>Referenced by <a class="el" href="_i_g_c_kernel_8h_source.xhtml#l00062">IGCKernel::BufferParam::BufferParam()</a>.</p>

</div>
</div>
<a class="anchor" id="a2d29ef32500e170cdf6d2fec4de83813"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void add_1D_tensor_argument </td>
          <td>(</td>
          <td class="paramtype">unsigned int &amp;&#160;</td>
          <td class="paramname"><em>idx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_g_c_tensor.xhtml">IGCTensor</a> *&#160;</td>
          <td class="paramname"><em>tensor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_g_c_kernel_1_1_buffer_param.xhtml">BufferParam</a> &amp;&#160;</td>
          <td class="paramname"><em>param</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;&#160;</td>
          <td class="paramname"><em>window</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Add the passed 1D tensor's parameters to the object's kernel's arguments starting from the index idx. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">idx</td><td>Index at which to start adding the tensor's arguments.Input and output tensor will have sperated index, multiple indices start from 1, single index have to be set to 0. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">tensor</td><td><a class="el" href="classarm__compute_1_1_tensor.xhtml" title="Basic implementation of the tensor interface. ">Tensor</a> to set as an argument of the object's kernel. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">param</td><td>Additional parameter for GLES SSBO buffer. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">window</td><td><a class="el" href="classarm__compute_1_1_window.xhtml" title="Describe a multidimensional execution window. ">Window</a> the kernel will be executed on. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a633d6a0cb573106e4d420b664cb29b66"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void add_2D_tensor_argument </td>
          <td>(</td>
          <td class="paramtype">unsigned int &amp;&#160;</td>
          <td class="paramname"><em>idx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_g_c_tensor.xhtml">IGCTensor</a> *&#160;</td>
          <td class="paramname"><em>tensor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>binding_point</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;&#160;</td>
          <td class="paramname"><em>window</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Add the passed 2D tensor's parameters to the object's kernel's arguments starting from the index idx. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">idx</td><td>Index at which to start adding the tensor's arguments.Input and output tensor will have sperated index, multiple indices start from 1, single index have to be set to 0. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">tensor</td><td><a class="el" href="classarm__compute_1_1_tensor.xhtml" title="Basic implementation of the tensor interface. ">Tensor</a> to set as an argument of the object's kernel. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">binding_point</td><td><a class="el" href="classarm__compute_1_1_tensor.xhtml" title="Basic implementation of the tensor interface. ">Tensor</a>'s binding point in this kernel. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">window</td><td><a class="el" href="classarm__compute_1_1_window.xhtml" title="Describe a multidimensional execution window. ">Window</a> the kernel will be executed on. </td></tr>
  </table>
  </dd>
</dl>

<p>Referenced by <a class="el" href="_i_g_c_kernel_8h_source.xhtml#l00062">IGCKernel::BufferParam::BufferParam()</a>.</p>

</div>
</div>
<a class="anchor" id="a8caf742ce1a48a9a14982826a30ec397"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void add_2D_tensor_argument </td>
          <td>(</td>
          <td class="paramtype">unsigned int &amp;&#160;</td>
          <td class="paramname"><em>idx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_g_c_tensor.xhtml">IGCTensor</a> *&#160;</td>
          <td class="paramname"><em>tensor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_g_c_kernel_1_1_buffer_param.xhtml">BufferParam</a> &amp;&#160;</td>
          <td class="paramname"><em>param</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;&#160;</td>
          <td class="paramname"><em>window</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Add the passed 2D tensor's parameters to the object's kernel's arguments starting from the index idx. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">idx</td><td>Index at which to start adding the tensor's arguments.Input and output tensor will have sperated index, multiple indices start from 1, single index have to be set to 0. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">tensor</td><td><a class="el" href="classarm__compute_1_1_tensor.xhtml" title="Basic implementation of the tensor interface. ">Tensor</a> to set as an argument of the object's kernel. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">param</td><td>Additional parameter for GLES SSBO buffer. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">window</td><td><a class="el" href="classarm__compute_1_1_window.xhtml" title="Describe a multidimensional execution window. ">Window</a> the kernel will be executed on. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="aa9ed9d806fc3364df21027387b9e735a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void add_3D_tensor_argument </td>
          <td>(</td>
          <td class="paramtype">unsigned int &amp;&#160;</td>
          <td class="paramname"><em>idx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_g_c_tensor.xhtml">IGCTensor</a> *&#160;</td>
          <td class="paramname"><em>tensor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>binding_point</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;&#160;</td>
          <td class="paramname"><em>window</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Add the passed 3D tensor's parameters to the object's kernel's arguments starting from the index idx. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">idx</td><td>Index at which to start adding the tensor's arguments.Input and output tensor will have sperated index, multiple indices start from 1, single index have to be set to 0. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">tensor</td><td><a class="el" href="classarm__compute_1_1_tensor.xhtml" title="Basic implementation of the tensor interface. ">Tensor</a> to set as an argument of the object's kernel. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">binding_point</td><td><a class="el" href="classarm__compute_1_1_tensor.xhtml" title="Basic implementation of the tensor interface. ">Tensor</a>'s binding point in this kernel. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">window</td><td><a class="el" href="classarm__compute_1_1_window.xhtml" title="Describe a multidimensional execution window. ">Window</a> the kernel will be executed on. </td></tr>
  </table>
  </dd>
</dl>

<p>Referenced by <a class="el" href="_i_g_c_kernel_8h_source.xhtml#l00062">IGCKernel::BufferParam::BufferParam()</a>.</p>

</div>
</div>
<a class="anchor" id="aaaeff9c7844fe0e5de26ed7756b22e02"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void add_3D_tensor_argument </td>
          <td>(</td>
          <td class="paramtype">unsigned int &amp;&#160;</td>
          <td class="paramname"><em>idx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_g_c_tensor.xhtml">IGCTensor</a> *&#160;</td>
          <td class="paramname"><em>tensor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_g_c_kernel_1_1_buffer_param.xhtml">BufferParam</a> &amp;&#160;</td>
          <td class="paramname"><em>param</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;&#160;</td>
          <td class="paramname"><em>window</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Add the passed 3D tensor's parameters to the object's kernel's arguments starting from the index idx. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">idx</td><td>Index at which to start adding the tensor's arguments.Input and output tensor will have sperated index, multiple indices start from 1, single index have to be set to 0. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">tensor</td><td><a class="el" href="classarm__compute_1_1_tensor.xhtml" title="Basic implementation of the tensor interface. ">Tensor</a> to set as an argument of the object's kernel. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">param</td><td>Additional parameter for GLES SSBO buffer. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">window</td><td><a class="el" href="classarm__compute_1_1_window.xhtml" title="Describe a multidimensional execution window. ">Window</a> the kernel will be executed on. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="abca9f85e09acd3e4de49711b62dc8549"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_g_c_kernel.xhtml">GCKernel</a>&amp; kernel </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns a reference to the GLES kernel of this object. </p>
<dl class="section return"><dt>Returns</dt><dd>A reference to the GLES kernel of this object. </dd></dl>

<p>Referenced by <a class="el" href="_i_g_c_kernel_8h_source.xhtml#l00062">IGCKernel::BufferParam::BufferParam()</a>.</p>

</div>
</div>
<a class="anchor" id="a770f45838881fc061294e56d64f34386"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int num_arguments_per_1D_tensor </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the number of arguments enqueued per 1D tensor object. </p>
<dl class="section return"><dt>Returns</dt><dd>The number of arguments enqueues per 1D tensor object. </dd></dl>

<p>Referenced by <a class="el" href="_i_g_c_kernel_8h_source.xhtml#l00062">IGCKernel::BufferParam::BufferParam()</a>.</p>

</div>
</div>
<a class="anchor" id="ac734502531e7f95e25b3bf688a304a59"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int num_arguments_per_2D_tensor </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the number of arguments enqueued per 2D tensor object. </p>
<dl class="section return"><dt>Returns</dt><dd>The number of arguments enqueues per 2D tensor object. </dd></dl>

<p>Referenced by <a class="el" href="_i_g_c_kernel_8h_source.xhtml#l00062">IGCKernel::BufferParam::BufferParam()</a>.</p>

</div>
</div>
<a class="anchor" id="a4feaae9c860cddfa843d37c953674a22"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int num_arguments_per_3D_tensor </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the number of arguments enqueued per 3D tensor object. </p>
<dl class="section return"><dt>Returns</dt><dd>The number of arguments enqueues per 3D tensor object. </dd></dl>

<p>Referenced by <a class="el" href="_i_g_c_kernel_8h_source.xhtml#l00062">IGCKernel::BufferParam::BufferParam()</a>.</p>

</div>
</div>
<a class="anchor" id="a6f56c8bb44166634652b877d6eb7a9a2"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void run </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;&#160;</td>
          <td class="paramname"><em>window</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Enqueue the OpenGL ES shader to process the given window. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">window</td><td>Region on which to execute the kernel. (Must be a valid region of the window returned by <a class="el" href="classarm__compute_1_1_i_kernel.xhtml#a3f5646133956f06348b310ccc3d36353" title="The maximum window the kernel can be executed on. ">window()</a>). </td></tr>
  </table>
  </dd>
</dl>

<p>Implemented in <a class="el" href="classarm__compute_1_1_g_c_logits1_d_norm_kernel.xhtml#a8fd12b95bdde3f93db96bc9b1598db69">GCLogits1DNormKernel</a>, <a class="el" href="classarm__compute_1_1_g_c_col2_im_kernel.xhtml#a8fd12b95bdde3f93db96bc9b1598db69">GCCol2ImKernel</a>, <a class="el" href="classarm__compute_1_1_g_c_im2_col_kernel.xhtml#a8fd12b95bdde3f93db96bc9b1598db69">GCIm2ColKernel</a>, <a class="el" href="classarm__compute_1_1_g_c_g_e_m_m_interleave4x4_kernel.xhtml#a8fd12b95bdde3f93db96bc9b1598db69">GCGEMMInterleave4x4Kernel</a>, <a class="el" href="classarm__compute_1_1_g_c_g_e_m_m_matrix_multiply_kernel.xhtml#a8fd12b95bdde3f93db96bc9b1598db69">GCGEMMMatrixMultiplyKernel</a>, <a class="el" href="classarm__compute_1_1_g_c_fill_border_kernel.xhtml#a8fd12b95bdde3f93db96bc9b1598db69">GCFillBorderKernel</a>, <a class="el" href="classarm__compute_1_1_g_c_dropout_layer_kernel.xhtml#a8fd12b95bdde3f93db96bc9b1598db69">GCDropoutLayerKernel</a>, <a class="el" href="classarm__compute_1_1_g_c_logits1_d_shift_exp_sum_kernel.xhtml#a8fd12b95bdde3f93db96bc9b1598db69">GCLogits1DShiftExpSumKernel</a>, <a class="el" href="classarm__compute_1_1_g_c_direct_convolution_layer_kernel.xhtml#a8fd12b95bdde3f93db96bc9b1598db69">GCDirectConvolutionLayerKernel&lt; kernel_size &gt;</a>, <a class="el" href="classarm__compute_1_1_g_c_depth_concatenate_layer_kernel.xhtml#a8fd12b95bdde3f93db96bc9b1598db69">GCDepthConcatenateLayerKernel</a>, <a class="el" href="classarm__compute_1_1_g_c_batch_normalization_layer_kernel.xhtml#a8fd12b95bdde3f93db96bc9b1598db69">GCBatchNormalizationLayerKernel</a>, <a class="el" href="classarm__compute_1_1_g_c_g_e_m_m_transpose1x_w_kernel.xhtml#a8fd12b95bdde3f93db96bc9b1598db69">GCGEMMTranspose1xWKernel</a>, <a class="el" href="classarm__compute_1_1_g_c_absolute_difference_kernel.xhtml#a8fd12b95bdde3f93db96bc9b1598db69">GCAbsoluteDifferenceKernel</a>, <a class="el" href="classarm__compute_1_1_g_c_g_e_m_m_matrix_addition_kernel.xhtml#a8fd12b95bdde3f93db96bc9b1598db69">GCGEMMMatrixAdditionKernel</a>, <a class="el" href="classarm__compute_1_1_g_c_normalization_layer_kernel.xhtml#a8fd12b95bdde3f93db96bc9b1598db69">GCNormalizationLayerKernel</a>, <a class="el" href="classarm__compute_1_1_g_c_activation_layer_kernel.xhtml#a8fd12b95bdde3f93db96bc9b1598db69">GCActivationLayerKernel</a>, <a class="el" href="classarm__compute_1_1_g_c_pixel_wise_multiplication_kernel.xhtml#a8fd12b95bdde3f93db96bc9b1598db69">GCPixelWiseMultiplicationKernel</a>, <a class="el" href="classarm__compute_1_1_g_c_pooling_layer_kernel.xhtml#a8fd12b95bdde3f93db96bc9b1598db69">GCPoolingLayerKernel</a>, <a class="el" href="classarm__compute_1_1_g_c_g_e_m_m_matrix_accumulate_biases_kernel.xhtml#a8fd12b95bdde3f93db96bc9b1598db69">GCGEMMMatrixAccumulateBiasesKernel</a>, <a class="el" href="classarm__compute_1_1_g_c_transpose_kernel.xhtml#a8fd12b95bdde3f93db96bc9b1598db69">GCTransposeKernel</a>, <a class="el" href="classarm__compute_1_1_i_g_c_simple3_d_kernel.xhtml#a8fd12b95bdde3f93db96bc9b1598db69">IGCSimple3DKernel</a>, and <a class="el" href="classarm__compute_1_1_i_g_c_simple2_d_kernel.xhtml#a8fd12b95bdde3f93db96bc9b1598db69">IGCSimple2DKernel</a>.</p>

<p>Referenced by <a class="el" href="_i_g_c_kernel_8h_source.xhtml#l00062">IGCKernel::BufferParam::BufferParam()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>arm_compute/core/GLES_COMPUTE/<a class="el" href="_i_g_c_kernel_8h_source.xhtml">IGCKernel.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1_i_g_c_kernel.xhtml">IGCKernel</a></li>
    <li class="footer">Generated on Thu Dec 14 2017 23:48:36 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
  </ul>
</div>
</body>
</html>
