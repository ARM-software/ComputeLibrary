<!-- HTML header for doxygen 1.8.9.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: tests/validation/NEON/PixelWiseMultiplication.cpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Compute Library
   &#160;<span id="projectnumber">17.12</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>Globals</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_n_e_o_n_2_pixel_wise_multiplication_8cpp.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#namespaces">Namespaces</a> &#124;
<a href="#define-members">Macros</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">PixelWiseMultiplication.cpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="_n_e_pixel_wise_multiplication_8h_source.xhtml">arm_compute/runtime/NEON/functions/NEPixelWiseMultiplication.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_accessor_8h_source.xhtml">tests/NEON/Accessor.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_padding_calculator_8h_source.xhtml">tests/PaddingCalculator.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_convert_policy_dataset_8h_source.xhtml">tests/datasets/ConvertPolicyDataset.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_shape_datasets_8h_source.xhtml">tests/datasets/ShapeDatasets.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="tests_2framework_2_macros_8h_source.xhtml">tests/framework/Macros.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_validation_8h_source.xhtml">tests/validation/Validation.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_pixel_wise_multiplication_fixture_8h_source.xhtml">tests/validation/fixtures/PixelWiseMultiplicationFixture.h</a>&quot;</code><br />
</div>
<p><a href="_n_e_o_n_2_pixel_wise_multiplication_8cpp_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"></a>
Namespaces</h2></td></tr>
<tr class="memitem:namespacearm__compute"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></td></tr>
<tr class="memdesc:namespacearm__compute"><td class="mdescLeft">&#160;</td><td class="mdescRight">This file contains all available output stages for GEMMLowp on OpenCL. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacearm__compute_1_1test"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test.xhtml">arm_compute::test</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacearm__compute_1_1test_1_1validation"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml">arm_compute::test::validation</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:aafb2ac305c1cfb580f29d538687f1fb5"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_n_e_o_n_2_pixel_wise_multiplication_8cpp.xhtml#aafb2ac305c1cfb580f29d538687f1fb5">DEFAULT_VALIDATE</a>&#160;&#160;&#160;validate(Accessor(_target), _reference);</td></tr>
<tr class="separator:aafb2ac305c1cfb580f29d538687f1fb5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8d69c709ef45fd63b622f283b0723eaf"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_n_e_o_n_2_pixel_wise_multiplication_8cpp.xhtml#a8d69c709ef45fd63b622f283b0723eaf">VALIDATE</a>(<a class="el" href="activation__layer__qa8_8cl.xhtml#a5a392548f2df67370cb15d2a5d75cd7b">TYPE</a>,  TOLERANCE)&#160;&#160;&#160;validate(Accessor(_target), _reference, AbsoluteTolerance&lt;<a class="el" href="activation__layer__qa8_8cl.xhtml#a5a392548f2df67370cb15d2a5d75cd7b">TYPE</a>&gt;(TOLERANCE), 0.f);</td></tr>
<tr class="separator:a8d69c709ef45fd63b622f283b0723eaf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6c21e1e9072e5251356f8a97ffb7b98d"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_n_e_o_n_2_pixel_wise_multiplication_8cpp.xhtml#a6c21e1e9072e5251356f8a97ffb7b98d">WRAP_VALIDATE</a>(<a class="el" href="activation__layer__qa8_8cl.xhtml#a5a392548f2df67370cb15d2a5d75cd7b">TYPE</a>,  TOLERANCE)&#160;&#160;&#160;validate_wrap(Accessor(_target), _reference, AbsoluteTolerance&lt;<a class="el" href="activation__layer__qa8_8cl.xhtml#a5a392548f2df67370cb15d2a5d75cd7b">TYPE</a>&gt;(TOLERANCE), 0.f);</td></tr>
<tr class="separator:a6c21e1e9072e5251356f8a97ffb7b98d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac598fd8a5d0b27a19e9efa5f9d4aee82"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_n_e_o_n_2_pixel_wise_multiplication_8cpp.xhtml#ac598fd8a5d0b27a19e9efa5f9d4aee82">PIXEL_WISE_MULTIPLICATION_DATA_TEST_CASE</a>(DT1,  DT2,  SCALE,  RP)</td></tr>
<tr class="separator:ac598fd8a5d0b27a19e9efa5f9d4aee82"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a715b00582b213476123ac1439e8e0c1a"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_n_e_o_n_2_pixel_wise_multiplication_8cpp.xhtml#a715b00582b213476123ac1439e8e0c1a">PIXEL_WISE_MULTIPLICATION_FIXTURE_DATA_TEST_CASE</a>(TEST_NAME,  FIXTURE,  MODE,  SHAPES,  DT1,  DT2,  SCALE,  RP,  <a class="el" href="_n_e_o_n_2_pixel_wise_multiplication_8cpp.xhtml#a8d69c709ef45fd63b622f283b0723eaf">VALIDATE</a>)</td></tr>
<tr class="separator:a715b00582b213476123ac1439e8e0c1a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:afee06a3dc4c4d76774fd21379082899b"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:afee06a3dc4c4d76774fd21379082899b"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#afee06a3dc4c4d76774fd21379082899b">NEPixelWiseMultiplicationToU8Fixture</a> = PixelWiseMultiplicationValidationFixture&lt; Tensor, Accessor, NEPixelWiseMultiplication, T, uint8_t &gt;</td></tr>
<tr class="separator:afee06a3dc4c4d76774fd21379082899b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa89d74432688d58ba7731203876c55cb"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:aa89d74432688d58ba7731203876c55cb"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa89d74432688d58ba7731203876c55cb">NEPixelWiseMultiplicationToS16Fixture</a> = PixelWiseMultiplicationValidationFixture&lt; Tensor, Accessor, NEPixelWiseMultiplication, T, int16_t &gt;</td></tr>
<tr class="separator:aa89d74432688d58ba7731203876c55cb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a00633c0a03f1a6a5d04e25b365ca5750"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a00633c0a03f1a6a5d04e25b365ca5750"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00633c0a03f1a6a5d04e25b365ca5750">NEPixelWiseMultiplicationToF16Fixture</a> = PixelWiseMultiplicationValidationFixture&lt; Tensor, Accessor, NEPixelWiseMultiplication, T, half_float::half &gt;</td></tr>
<tr class="separator:a00633c0a03f1a6a5d04e25b365ca5750"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2de8d560e3aa77dcd9f7f6d9094d1174"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a2de8d560e3aa77dcd9f7f6d9094d1174"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a2de8d560e3aa77dcd9f7f6d9094d1174">NEPixelWiseMultiplicationToF32Fixture</a> = PixelWiseMultiplicationValidationFixture&lt; Tensor, Accessor, NEPixelWiseMultiplication, T, float &gt;</td></tr>
<tr class="separator:a2de8d560e3aa77dcd9f7f6d9094d1174"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa883c51738598a0bcb917e9144fdb28"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:aaa883c51738598a0bcb917e9144fdb28"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aaa883c51738598a0bcb917e9144fdb28">NEPixelWiseMultiplicationToQS8Fixture</a> = PixelWiseMultiplicationValidationFixture&lt; Tensor, Accessor, NEPixelWiseMultiplication, T, qint8_t &gt;</td></tr>
<tr class="separator:aaa883c51738598a0bcb917e9144fdb28"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae189f7e57647548db068b25486a6e86b"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:ae189f7e57647548db068b25486a6e86b"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae189f7e57647548db068b25486a6e86b">NEPixelWiseMultiplicationToQS16Fixture</a> = PixelWiseMultiplicationValidationFixture&lt; Tensor, Accessor, NEPixelWiseMultiplication, T, qint16_t &gt;</td></tr>
<tr class="separator:ae189f7e57647548db068b25486a6e86b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a561cc4612c658b22561a7e8bb659ed18"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a561cc4612c658b22561a7e8bb659ed18">DATA_TEST_CASE</a> (Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;Input1Info&quot;,{TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QS8, 2), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QS8, 2), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QS8, 2),}), framework::dataset::make(&quot;Input2Info&quot;,{TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S16), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QS16, 2), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QS8, 3), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QS8, 2),})), framework::dataset::make(&quot;OutputInfo&quot;,{TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QS8, 3), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QS8, 2), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QS8, 2),})), framework::dataset::make(&quot;Scale&quot;,{scale_unity, scale_unity, scale_unity,-1.f, scale_unity, scale_unity, scale_unity, scale_unity, 3.f})), framework::dataset::make(&quot;Expected&quot;,{true, true, false, false, false, false, false, false, false})), input1_info, input2_info, output_info, scale, expected)</td></tr>
<tr class="separator:a561cc4612c658b22561a7e8bb659ed18"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4ae7460640c71d16d6a8a9f582ac6064"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4ae7460640c71d16d6a8a9f582ac6064">DATA_TEST_CASE</a> (Configuration, framework::DatasetMode::ALL, combine(combine(combine(combine(combine(concat(datasets::SmallShapes(), datasets::LargeShapes()), framework::dataset::make(&quot;DataType1&quot;, DataType::U8)), framework::dataset::make(&quot;DataType2&quot;, DataType::U8)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_255))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_NEAREST_UP)), shape, dt1, dt2, scale, convert_policy, rounding_policy)</td></tr>
<tr class="separator:a4ae7460640c71d16d6a8a9f582ac6064"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8f725602915f9a36862ea6ff4aff925e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8f725602915f9a36862ea6ff4aff925e">FIXTURE_DATA_TEST_CASE</a> (RunSmall, NEPixelWiseMultiplicationToU8Fixture&lt; uint8_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataType1&quot;, DataType::U8)), framework::dataset::make(&quot;DataType2&quot;, DataType::U8)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_255))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_NEAREST_UP)))</td></tr>
<tr class="separator:a8f725602915f9a36862ea6ff4aff925e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a60fee647a75c9ef766fae0f41d4f14c5"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a60fee647a75c9ef766fae0f41d4f14c5">FIXTURE_DATA_TEST_CASE</a> (RunLarge, NEPixelWiseMultiplicationToU8Fixture&lt; uint8_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(datasets::LargeShapes(), framework::dataset::make(&quot;DataType1&quot;, DataType::U8)), framework::dataset::make(&quot;DataType2&quot;, DataType::U8)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_255))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_NEAREST_UP)))</td></tr>
<tr class="separator:a60fee647a75c9ef766fae0f41d4f14c5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af77b34bd2ffc2b5b0b87daa9b5e63ea8"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#af77b34bd2ffc2b5b0b87daa9b5e63ea8">TEST_SUITE_END</a> () const auto quantize_down_int32_to_uint8_scale_cases</td></tr>
<tr class="separator:af77b34bd2ffc2b5b0b87daa9b5e63ea8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad094e874a245764e0133c61a85e7d3a4"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad094e874a245764e0133c61a85e7d3a4">combine</a> (combine(combine(combine(combine(concat(datasets::SmallShapes(), datasets::LargeShapes()), framework::dataset::make(&quot;DataType1&quot;, DataType::U8)), framework::dataset::make(&quot;DataType2&quot;, DataType::U8)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_unity))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_ZERO))</td></tr>
<tr class="separator:ad094e874a245764e0133c61a85e7d3a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa39faa5bc7636a7981279c09204fb4c7"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa39faa5bc7636a7981279c09204fb4c7">FIXTURE_DATA_TEST_CASE</a> (RunSmall, NEPixelWiseMultiplicationToU8Fixture&lt; uint8_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataType1&quot;, DataType::U8)), framework::dataset::make(&quot;DataType2&quot;, DataType::U8)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_unity))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_ZERO)))</td></tr>
<tr class="separator:aa39faa5bc7636a7981279c09204fb4c7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a45a9fdf5736081ef4cada3c6a13fefd1"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a45a9fdf5736081ef4cada3c6a13fefd1">FIXTURE_DATA_TEST_CASE</a> (RunLarge, NEPixelWiseMultiplicationToU8Fixture&lt; uint8_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(datasets::LargeShapes(), framework::dataset::make(&quot;DataType1&quot;, DataType::U8)), framework::dataset::make(&quot;DataType2&quot;, DataType::U8)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_unity))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_ZERO)))</td></tr>
<tr class="separator:a45a9fdf5736081ef4cada3c6a13fefd1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a246ff6c535c53ebc0fed7a9a2ba8b3cf"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a246ff6c535c53ebc0fed7a9a2ba8b3cf">combine</a> (combine(combine(combine(combine(concat(datasets::SmallShapes(), datasets::LargeShapes()), framework::dataset::make(&quot;DataType1&quot;, DataType::U8)), framework::dataset::make(&quot;DataType2&quot;, DataType::U8)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_other))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_ZERO))</td></tr>
<tr class="separator:a246ff6c535c53ebc0fed7a9a2ba8b3cf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeef7e78eea6da0668b136ced1176a734"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aeef7e78eea6da0668b136ced1176a734">FIXTURE_DATA_TEST_CASE</a> (RunSmall, NEPixelWiseMultiplicationToU8Fixture&lt; uint8_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataType1&quot;, DataType::U8)), framework::dataset::make(&quot;DataType2&quot;, DataType::U8)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_other))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_ZERO)))</td></tr>
<tr class="separator:aeef7e78eea6da0668b136ced1176a734"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5a3441aa92b954816ec3a2154b6ba1e9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5a3441aa92b954816ec3a2154b6ba1e9">FIXTURE_DATA_TEST_CASE</a> (RunLarge, NEPixelWiseMultiplicationToU8Fixture&lt; uint8_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(datasets::LargeShapes(), framework::dataset::make(&quot;DataType1&quot;, DataType::U8)), framework::dataset::make(&quot;DataType2&quot;, DataType::U8)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_other))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_ZERO)))</td></tr>
<tr class="separator:a5a3441aa92b954816ec3a2154b6ba1e9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a40cf8fe3a3c43782b0347ae818e5c798"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a40cf8fe3a3c43782b0347ae818e5c798">combine</a> (combine(combine(combine(combine(concat(datasets::SmallShapes(), datasets::LargeShapes()), framework::dataset::make(&quot;DataType1&quot;, DataType::U8)), framework::dataset::make(&quot;DataType2&quot;, DataType::S16)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_255))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_NEAREST_UP))</td></tr>
<tr class="separator:a40cf8fe3a3c43782b0347ae818e5c798"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a05f89ccd037778e4faae08db8a57c3eb"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a05f89ccd037778e4faae08db8a57c3eb">FIXTURE_DATA_TEST_CASE</a> (RunSmall, NEPixelWiseMultiplicationToS16Fixture&lt; uint8_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataType1&quot;, DataType::U8)), framework::dataset::make(&quot;DataType2&quot;, DataType::S16)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_255))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_NEAREST_UP)))</td></tr>
<tr class="separator:a05f89ccd037778e4faae08db8a57c3eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac089d4ab2011db4bc96f46c617362c62"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac089d4ab2011db4bc96f46c617362c62">FIXTURE_DATA_TEST_CASE</a> (RunLarge, NEPixelWiseMultiplicationToS16Fixture&lt; uint8_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(datasets::LargeShapes(), framework::dataset::make(&quot;DataType1&quot;, DataType::U8)), framework::dataset::make(&quot;DataType2&quot;, DataType::S16)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_255))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_NEAREST_UP)))</td></tr>
<tr class="separator:ac089d4ab2011db4bc96f46c617362c62"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a547ec451bd92391b6fac0ec4b6daa8be"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a547ec451bd92391b6fac0ec4b6daa8be">combine</a> (combine(combine(combine(combine(concat(datasets::SmallShapes(), datasets::LargeShapes()), framework::dataset::make(&quot;DataType1&quot;, DataType::U8)), framework::dataset::make(&quot;DataType2&quot;, DataType::S16)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_unity))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_ZERO))</td></tr>
<tr class="separator:a547ec451bd92391b6fac0ec4b6daa8be"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae3a0f90a41ed20795d362db90913ca42"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae3a0f90a41ed20795d362db90913ca42">FIXTURE_DATA_TEST_CASE</a> (RunSmall, NEPixelWiseMultiplicationToS16Fixture&lt; uint8_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataType1&quot;, DataType::U8)), framework::dataset::make(&quot;DataType2&quot;, DataType::S16)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_unity))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_ZERO)))</td></tr>
<tr class="separator:ae3a0f90a41ed20795d362db90913ca42"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab38f2668572d3766460002cad2f12063"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ab38f2668572d3766460002cad2f12063">FIXTURE_DATA_TEST_CASE</a> (RunLarge, NEPixelWiseMultiplicationToS16Fixture&lt; uint8_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(datasets::LargeShapes(), framework::dataset::make(&quot;DataType1&quot;, DataType::U8)), framework::dataset::make(&quot;DataType2&quot;, DataType::S16)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_unity))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_ZERO)))</td></tr>
<tr class="separator:ab38f2668572d3766460002cad2f12063"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a43dac421227584910e1cf5fdc40e37bc"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a43dac421227584910e1cf5fdc40e37bc">combine</a> (combine(combine(combine(combine(concat(datasets::SmallShapes(), datasets::LargeShapes()), framework::dataset::make(&quot;DataType1&quot;, DataType::U8)), framework::dataset::make(&quot;DataType2&quot;, DataType::S16)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_other))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_ZERO))</td></tr>
<tr class="separator:a43dac421227584910e1cf5fdc40e37bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae9c5149638f83cdec624f15c992a1c87"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae9c5149638f83cdec624f15c992a1c87">FIXTURE_DATA_TEST_CASE</a> (RunSmall, NEPixelWiseMultiplicationToS16Fixture&lt; uint8_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataType1&quot;, DataType::U8)), framework::dataset::make(&quot;DataType2&quot;, DataType::S16)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_other))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_ZERO)))</td></tr>
<tr class="separator:ae9c5149638f83cdec624f15c992a1c87"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0a8e207b93423f59931b89c0461915ab"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a0a8e207b93423f59931b89c0461915ab">FIXTURE_DATA_TEST_CASE</a> (RunLarge, NEPixelWiseMultiplicationToS16Fixture&lt; uint8_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(datasets::LargeShapes(), framework::dataset::make(&quot;DataType1&quot;, DataType::U8)), framework::dataset::make(&quot;DataType2&quot;, DataType::S16)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_other))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_ZERO)))</td></tr>
<tr class="separator:a0a8e207b93423f59931b89c0461915ab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a429340c0121881e7301e17804f50bb16"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a429340c0121881e7301e17804f50bb16">combine</a> (combine(combine(combine(combine(concat(datasets::SmallShapes(), datasets::LargeShapes()), framework::dataset::make(&quot;DataType1&quot;, DataType::S16)), framework::dataset::make(&quot;DataType2&quot;, DataType::S16)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_255))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_NEAREST_UP))</td></tr>
<tr class="separator:a429340c0121881e7301e17804f50bb16"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4a869936fe653dfaf2cc28abdda8dad6"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4a869936fe653dfaf2cc28abdda8dad6">FIXTURE_DATA_TEST_CASE</a> (RunSmall, NEPixelWiseMultiplicationToS16Fixture&lt; int16_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataType1&quot;, DataType::S16)), framework::dataset::make(&quot;DataType2&quot;, DataType::S16)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_255))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_NEAREST_UP)))</td></tr>
<tr class="separator:a4a869936fe653dfaf2cc28abdda8dad6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afcdc8de20e27ba531bfef776ecdface3"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#afcdc8de20e27ba531bfef776ecdface3">FIXTURE_DATA_TEST_CASE</a> (RunLarge, NEPixelWiseMultiplicationToS16Fixture&lt; int16_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(datasets::LargeShapes(), framework::dataset::make(&quot;DataType1&quot;, DataType::S16)), framework::dataset::make(&quot;DataType2&quot;, DataType::S16)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_255))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_NEAREST_UP)))</td></tr>
<tr class="separator:afcdc8de20e27ba531bfef776ecdface3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a1bcc11395e1ae79eb8b7690755a659"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6a1bcc11395e1ae79eb8b7690755a659">combine</a> (combine(combine(combine(combine(concat(datasets::SmallShapes(), datasets::LargeShapes()), framework::dataset::make(&quot;DataType1&quot;, DataType::S16)), framework::dataset::make(&quot;DataType2&quot;, DataType::S16)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_unity))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_ZERO))</td></tr>
<tr class="separator:a6a1bcc11395e1ae79eb8b7690755a659"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a051d3165eccbd35e75fa2fdb6385d244"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a051d3165eccbd35e75fa2fdb6385d244">FIXTURE_DATA_TEST_CASE</a> (RunSmall, NEPixelWiseMultiplicationToS16Fixture&lt; int16_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataType1&quot;, DataType::S16)), framework::dataset::make(&quot;DataType2&quot;, DataType::S16)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_unity))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_ZERO)))</td></tr>
<tr class="separator:a051d3165eccbd35e75fa2fdb6385d244"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2b784b3c67ae875ff7627e3a535dcac8"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a2b784b3c67ae875ff7627e3a535dcac8">FIXTURE_DATA_TEST_CASE</a> (RunLarge, NEPixelWiseMultiplicationToS16Fixture&lt; int16_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(datasets::LargeShapes(), framework::dataset::make(&quot;DataType1&quot;, DataType::S16)), framework::dataset::make(&quot;DataType2&quot;, DataType::S16)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_unity))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_ZERO)))</td></tr>
<tr class="separator:a2b784b3c67ae875ff7627e3a535dcac8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5b1c766fcd694609051e4d7a8fdb0df1"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5b1c766fcd694609051e4d7a8fdb0df1">combine</a> (combine(combine(combine(combine(concat(datasets::SmallShapes(), datasets::LargeShapes()), framework::dataset::make(&quot;DataType1&quot;, DataType::S16)), framework::dataset::make(&quot;DataType2&quot;, DataType::S16)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_other))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_ZERO))</td></tr>
<tr class="separator:a5b1c766fcd694609051e4d7a8fdb0df1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a95230ffbed4068c3da024bec3f27b334"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a95230ffbed4068c3da024bec3f27b334">FIXTURE_DATA_TEST_CASE</a> (RunSmall, NEPixelWiseMultiplicationToS16Fixture&lt; int16_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataType1&quot;, DataType::S16)), framework::dataset::make(&quot;DataType2&quot;, DataType::S16)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_other))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_ZERO)))</td></tr>
<tr class="separator:a95230ffbed4068c3da024bec3f27b334"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a73a6f7f4d28a884a3bd6831a27a720cc"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a73a6f7f4d28a884a3bd6831a27a720cc">FIXTURE_DATA_TEST_CASE</a> (RunLarge, NEPixelWiseMultiplicationToS16Fixture&lt; int16_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(datasets::LargeShapes(), framework::dataset::make(&quot;DataType1&quot;, DataType::S16)), framework::dataset::make(&quot;DataType2&quot;, DataType::S16)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_other))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_ZERO)))</td></tr>
<tr class="separator:a73a6f7f4d28a884a3bd6831a27a720cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a501df29d417ae1790160ebc1357d1717"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a501df29d417ae1790160ebc1357d1717">combine</a> (combine(combine(combine(combine(concat(datasets::SmallShapes(), datasets::LargeShapes()), framework::dataset::make(&quot;DataType1&quot;, DataType::F32)), framework::dataset::make(&quot;DataType2&quot;, DataType::F32)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_255))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_NEAREST_UP))</td></tr>
<tr class="separator:a501df29d417ae1790160ebc1357d1717"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a027c9ed250173025e2469ad5d5818c69"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a027c9ed250173025e2469ad5d5818c69">FIXTURE_DATA_TEST_CASE</a> (RunSmall, NEPixelWiseMultiplicationToF32Fixture&lt; float &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataType1&quot;, DataType::F32)), framework::dataset::make(&quot;DataType2&quot;, DataType::F32)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_255))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_NEAREST_UP)))</td></tr>
<tr class="separator:a027c9ed250173025e2469ad5d5818c69"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a59c6093a849cb44df90025dea3366400"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a59c6093a849cb44df90025dea3366400">FIXTURE_DATA_TEST_CASE</a> (RunLarge, NEPixelWiseMultiplicationToF32Fixture&lt; float &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(datasets::LargeShapes(), framework::dataset::make(&quot;DataType1&quot;, DataType::F32)), framework::dataset::make(&quot;DataType2&quot;, DataType::F32)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_255))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_NEAREST_UP)))</td></tr>
<tr class="separator:a59c6093a849cb44df90025dea3366400"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a46c2c41e06d21c47f960505c9f49fa0d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a46c2c41e06d21c47f960505c9f49fa0d">combine</a> (combine(combine(combine(combine(concat(datasets::SmallShapes(), datasets::LargeShapes()), framework::dataset::make(&quot;DataType1&quot;, DataType::F32)), framework::dataset::make(&quot;DataType2&quot;, DataType::F32)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_unity))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_ZERO))</td></tr>
<tr class="separator:a46c2c41e06d21c47f960505c9f49fa0d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe68ff0cc80b6d68c2bd56a1dd330514"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#afe68ff0cc80b6d68c2bd56a1dd330514">FIXTURE_DATA_TEST_CASE</a> (RunSmall, NEPixelWiseMultiplicationToF32Fixture&lt; float &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataType1&quot;, DataType::F32)), framework::dataset::make(&quot;DataType2&quot;, DataType::F32)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_unity))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_ZERO)))</td></tr>
<tr class="separator:afe68ff0cc80b6d68c2bd56a1dd330514"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac52b56b57d9dcfdb12e0df9da3eb5b75"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac52b56b57d9dcfdb12e0df9da3eb5b75">FIXTURE_DATA_TEST_CASE</a> (RunLarge, NEPixelWiseMultiplicationToF32Fixture&lt; float &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(datasets::LargeShapes(), framework::dataset::make(&quot;DataType1&quot;, DataType::F32)), framework::dataset::make(&quot;DataType2&quot;, DataType::F32)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_unity))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_ZERO)))</td></tr>
<tr class="separator:ac52b56b57d9dcfdb12e0df9da3eb5b75"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af664738437237ceaafa84915b636396b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#af664738437237ceaafa84915b636396b">combine</a> (combine(combine(combine(combine(concat(datasets::SmallShapes(), datasets::LargeShapes()), framework::dataset::make(&quot;DataType1&quot;, DataType::F32)), framework::dataset::make(&quot;DataType2&quot;, DataType::F32)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_other))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_ZERO))</td></tr>
<tr class="separator:af664738437237ceaafa84915b636396b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acaca42ec0ec6459356598dba527eaf06"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#acaca42ec0ec6459356598dba527eaf06">FIXTURE_DATA_TEST_CASE</a> (RunSmall, NEPixelWiseMultiplicationToF32Fixture&lt; float &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataType1&quot;, DataType::F32)), framework::dataset::make(&quot;DataType2&quot;, DataType::F32)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_other))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_ZERO)))</td></tr>
<tr class="separator:acaca42ec0ec6459356598dba527eaf06"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed966eb5c0c998ceed6fc0a11dc83848"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aed966eb5c0c998ceed6fc0a11dc83848">FIXTURE_DATA_TEST_CASE</a> (RunLarge, NEPixelWiseMultiplicationToF32Fixture&lt; float &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(datasets::LargeShapes(), framework::dataset::make(&quot;DataType1&quot;, DataType::F32)), framework::dataset::make(&quot;DataType2&quot;, DataType::F32)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_other))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_ZERO)))</td></tr>
<tr class="separator:aed966eb5c0c998ceed6fc0a11dc83848"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:a291ba30858ed1dc2a1154ddfcf28eac9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a291ba30858ed1dc2a1154ddfcf28eac9">dt1</a></td></tr>
<tr class="separator:a291ba30858ed1dc2a1154ddfcf28eac9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a80668d60af0d74d7e9f33bf4a233d695"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a80668d60af0d74d7e9f33bf4a233d695">dt2</a></td></tr>
<tr class="separator:a80668d60af0d74d7e9f33bf4a233d695"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acec6d8ad52a28972fa74e071c1a63b6a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#acec6d8ad52a28972fa74e071c1a63b6a">scale</a></td></tr>
<tr class="separator:acec6d8ad52a28972fa74e071c1a63b6a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d58c32bff63e4c34b3234f884a4da58"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5d58c32bff63e4c34b3234f884a4da58">convert_policy</a></td></tr>
<tr class="separator:a5d58c32bff63e4c34b3234f884a4da58"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a60ad1078faeaf3f59266d69ad937339f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a60ad1078faeaf3f59266d69ad937339f">rounding_policy</a> { validate_configuration(shape, dt1, dt2, scale, convert_policy, rounding_policy)</td></tr>
<tr class="separator:a60ad1078faeaf3f59266d69ad937339f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Macro Definition Documentation</h2>
<a class="anchor" id="aafb2ac305c1cfb580f29d538687f1fb5"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define DEFAULT_VALIDATE&#160;&#160;&#160;validate(Accessor(_target), _reference);</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="_n_e_o_n_2_pixel_wise_multiplication_8cpp_source.xhtml#l00045">45</a> of file <a class="el" href="_n_e_o_n_2_pixel_wise_multiplication_8cpp_source.xhtml">PixelWiseMultiplication.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ac598fd8a5d0b27a19e9efa5f9d4aee82"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PIXEL_WISE_MULTIPLICATION_DATA_TEST_CASE</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">DT1, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">DT2, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">SCALE, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">RP&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line"><a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4ae7460640c71d16d6a8a9f582ac6064">DATA_TEST_CASE</a>(Configuration, framework::DatasetMode::ALL,                                                   \</div><div class="line">                   <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#af664738437237ceaafa84915b636396b">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#af664738437237ceaafa84915b636396b">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#af664738437237ceaafa84915b636396b">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#af664738437237ceaafa84915b636396b">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#af664738437237ceaafa84915b636396b">combine</a>(                                                      \</div><div class="line">                   <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a20b2c46a6ccea85acf64c599a68251d7">concat</a>(datasets::SmallShapes(), datasets::LargeShapes()),                                     \</div><div class="line">                   <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;DataType1&quot;</span>, DataType::DT1)),                                        \</div><div class="line">                   <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;DataType2&quot;</span>, DataType::DT2)),                                        \</div><div class="line">                   <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;Scale&quot;</span>, std::move(SCALE))),                                         \</div><div class="line">                   datasets::ConvertPolicies()),                                                                 \</div><div class="line">                   <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;RoundingPolicy&quot;</span>, RoundingPolicy::RP)),                              \</div><div class="line">                   <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">shape</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a291ba30858ed1dc2a1154ddfcf28eac9">dt1</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a80668d60af0d74d7e9f33bf4a233d695">dt2</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acec6d8ad52a28972fa74e071c1a63b6a">scale</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5d58c32bff63e4c34b3234f884a4da58">convert_policy</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a60ad1078faeaf3f59266d69ad937339f">rounding_policy</a>)                                      \</div><div class="line">    {                                                                                                            <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4773668d05f0071ef209f3b19e2938af">\</a></div><div class="line"><a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4773668d05f0071ef209f3b19e2938af">        validate_configuration</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">shape</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a291ba30858ed1dc2a1154ddfcf28eac9">dt1</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a80668d60af0d74d7e9f33bf4a233d695">dt2</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acec6d8ad52a28972fa74e071c1a63b6a">scale</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5d58c32bff63e4c34b3234f884a4da58">convert_policy</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a60ad1078faeaf3f59266d69ad937339f">rounding_policy</a>);                         \</div><div class="line">    }</div><div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_af664738437237ceaafa84915b636396b"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#af664738437237ceaafa84915b636396b">arm_compute::test::validation::combine</a></div><div class="ttdeci">combine(combine(combine(combine(combine(concat(datasets::SmallShapes(), datasets::LargeShapes()), framework::dataset::make(&quot;DataType1&quot;, DataType::F32)), framework::dataset::make(&quot;DataType2&quot;, DataType::F32)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_other))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_ZERO))</div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a45cde9abb508c62d67c3bb2b9bf566a5"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">arm_compute::test::validation::shape</a></div><div class="ttdeci">shape</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_min_max_location_8cpp_source.xhtml#l00089">MinMaxLocation.cpp:89</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a80668d60af0d74d7e9f33bf4a233d695"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a80668d60af0d74d7e9f33bf4a233d695">arm_compute::test::validation::dt2</a></div><div class="ttdeci">dt2</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_o_n_2_pixel_wise_multiplication_8cpp_source.xhtml#l00176">PixelWiseMultiplication.cpp:176</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a5d58c32bff63e4c34b3234f884a4da58"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a5d58c32bff63e4c34b3234f884a4da58">arm_compute::test::validation::convert_policy</a></div><div class="ttdeci">convert_policy</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_o_n_2_pixel_wise_multiplication_8cpp_source.xhtml#l00176">PixelWiseMultiplication.cpp:176</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_1_1dataset_xhtml_a352791fb808d42a82ad70df5efa3508b"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">arm_compute::test::framework::dataset::make</a></div><div class="ttdeci">std::enable_if&lt; is_container&lt; T &gt;::value, ContainerDataset&lt; T &gt; &gt;::type make(std::string name, T &amp;&amp;values)</div><div class="ttdoc">Helper function to create a ContainerDataset. </div><div class="ttdef"><b>Definition:</b> <a href="_container_dataset_8h_source.xhtml#l00140">ContainerDataset.h:140</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a4773668d05f0071ef209f3b19e2938af"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a4773668d05f0071ef209f3b19e2938af">arm_compute::test::validation::validate_configuration</a></div><div class="ttdeci">void validate_configuration(const CLTensor &amp;src, TensorShape shape)</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_min_max_location_8cpp_source.xhtml#l00045">MinMaxLocation.cpp:45</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a4ae7460640c71d16d6a8a9f582ac6064"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a4ae7460640c71d16d6a8a9f582ac6064">arm_compute::test::validation::DATA_TEST_CASE</a></div><div class="ttdeci">DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(combine(combine(combine(concat(datasets::SmallShapes(), datasets::LargeShapes()), framework::dataset::make(&quot;DataType1&quot;, DataType::U8)), framework::dataset::make(&quot;DataType2&quot;, DataType::U8)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_255))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_NEAREST_UP)), shape, dt1, dt2, scale, convert_policy, rounding_policy)</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_o_n_2_pixel_wise_multiplication_8cpp_source.xhtml#l00170">PixelWiseMultiplication.cpp:170</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a291ba30858ed1dc2a1154ddfcf28eac9"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a291ba30858ed1dc2a1154ddfcf28eac9">arm_compute::test::validation::dt1</a></div><div class="ttdeci">dt1</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_o_n_2_pixel_wise_multiplication_8cpp_source.xhtml#l00176">PixelWiseMultiplication.cpp:176</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_acec6d8ad52a28972fa74e071c1a63b6a"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#acec6d8ad52a28972fa74e071c1a63b6a">arm_compute::test::validation::scale</a></div><div class="ttdeci">scale</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_o_n_2_pixel_wise_multiplication_8cpp_source.xhtml#l00176">PixelWiseMultiplication.cpp:176</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a60ad1078faeaf3f59266d69ad937339f"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a60ad1078faeaf3f59266d69ad937339f">arm_compute::test::validation::rounding_policy</a></div><div class="ttdeci">rounding_policy</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_o_n_2_pixel_wise_multiplication_8cpp_source.xhtml#l00176">PixelWiseMultiplication.cpp:176</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_1_1dataset_xhtml_a20b2c46a6ccea85acf64c599a68251d7"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a20b2c46a6ccea85acf64c599a68251d7">arm_compute::test::framework::dataset::concat</a></div><div class="ttdeci">JoinDataset&lt; T, U &gt; concat(T &amp;&amp;dataset1, U &amp;&amp;dataset2)</div><div class="ttdoc">Helper function to create a JoinDataset. </div><div class="ttdef"><b>Definition:</b> <a href="_join_dataset_8h_source.xhtml#l00140">JoinDataset.h:140</a></div></div>
</div><!-- fragment -->
<p>Definition at line <a class="el" href="_n_e_o_n_2_pixel_wise_multiplication_8cpp_source.xhtml#l00051">51</a> of file <a class="el" href="_n_e_o_n_2_pixel_wise_multiplication_8cpp_source.xhtml">PixelWiseMultiplication.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a715b00582b213476123ac1439e8e0c1a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PIXEL_WISE_MULTIPLICATION_FIXTURE_DATA_TEST_CASE</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">TEST_NAME, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">FIXTURE, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">MODE, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">SHAPES, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">DT1, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">DT2, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">SCALE, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">RP, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><a class="el" href="_n_e_o_n_2_pixel_wise_multiplication_8cpp.xhtml#a8d69c709ef45fd63b622f283b0723eaf">VALIDATE</a>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line"><a class="code" href="tests_2framework_2_macros_8h.xhtml#a42699a26fbdddf91da4aa58a610bb8a8">FIXTURE_DATA_TEST_CASE</a>(TEST_NAME, NEPixelWiseMultiplication##FIXTURE, framework::DatasetMode::MODE,                   \</div><div class="line">                           <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#af664738437237ceaafa84915b636396b">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#af664738437237ceaafa84915b636396b">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#af664738437237ceaafa84915b636396b">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#af664738437237ceaafa84915b636396b">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#af664738437237ceaafa84915b636396b">combine</a>(                                                       \</div><div class="line">                           datasets::SHAPES,                                                                              \</div><div class="line">                           <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;DataType1&quot;</span>, DataType::DT1)),                                         \</div><div class="line">                           <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;DataType2&quot;</span>, DataType::DT2)),                                         \</div><div class="line">                           <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;Scale&quot;</span>, std::move(SCALE))),                                          \</div><div class="line">                           datasets::ConvertPolicies()),                                                                  \</div><div class="line">                           <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;RoundingPolicy&quot;</span>, RoundingPolicy::RP)))                               \</div><div class="line">    {                                                                                                                     <a class="code" href="_n_e_o_n_2_pixel_wise_multiplication_8cpp.xhtml#a8d69c709ef45fd63b622f283b0723eaf">\</a></div><div class="line"><a class="code" href="_n_e_o_n_2_pixel_wise_multiplication_8cpp.xhtml#a8d69c709ef45fd63b622f283b0723eaf">        VALIDATE</a>                                                                                                          \</div><div class="line">    }</div><div class="ttc" id="_n_e_o_n_2_pixel_wise_multiplication_8cpp_xhtml_a8d69c709ef45fd63b622f283b0723eaf"><div class="ttname"><a href="_n_e_o_n_2_pixel_wise_multiplication_8cpp.xhtml#a8d69c709ef45fd63b622f283b0723eaf">VALIDATE</a></div><div class="ttdeci">#define VALIDATE(TYPE, TOLERANCE)</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_o_n_2_pixel_wise_multiplication_8cpp_source.xhtml#l00046">PixelWiseMultiplication.cpp:46</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_af664738437237ceaafa84915b636396b"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#af664738437237ceaafa84915b636396b">arm_compute::test::validation::combine</a></div><div class="ttdeci">combine(combine(combine(combine(combine(concat(datasets::SmallShapes(), datasets::LargeShapes()), framework::dataset::make(&quot;DataType1&quot;, DataType::F32)), framework::dataset::make(&quot;DataType2&quot;, DataType::F32)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_other))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_ZERO))</div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_1_1dataset_xhtml_a352791fb808d42a82ad70df5efa3508b"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">arm_compute::test::framework::dataset::make</a></div><div class="ttdeci">std::enable_if&lt; is_container&lt; T &gt;::value, ContainerDataset&lt; T &gt; &gt;::type make(std::string name, T &amp;&amp;values)</div><div class="ttdoc">Helper function to create a ContainerDataset. </div><div class="ttdef"><b>Definition:</b> <a href="_container_dataset_8h_source.xhtml#l00140">ContainerDataset.h:140</a></div></div>
<div class="ttc" id="tests_2framework_2_macros_8h_xhtml_a42699a26fbdddf91da4aa58a610bb8a8"><div class="ttname"><a href="tests_2framework_2_macros_8h.xhtml#a42699a26fbdddf91da4aa58a610bb8a8">FIXTURE_DATA_TEST_CASE</a></div><div class="ttdeci">#define FIXTURE_DATA_TEST_CASE(TEST_NAME, FIXTURE, MODE, DATASET)</div><div class="ttdef"><b>Definition:</b> <a href="tests_2framework_2_macros_8h_source.xhtml#l00212">Macros.h:212</a></div></div>
</div><!-- fragment -->
<p>Definition at line <a class="el" href="_n_e_o_n_2_pixel_wise_multiplication_8cpp_source.xhtml#l00065">65</a> of file <a class="el" href="_n_e_o_n_2_pixel_wise_multiplication_8cpp_source.xhtml">PixelWiseMultiplication.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a8d69c709ef45fd63b622f283b0723eaf"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define VALIDATE</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><a class="el" href="activation__layer__qa8_8cl.xhtml#a5a392548f2df67370cb15d2a5d75cd7b">TYPE</a>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">TOLERANCE&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;validate(Accessor(_target), _reference, AbsoluteTolerance&lt;<a class="el" href="activation__layer__qa8_8cl.xhtml#a5a392548f2df67370cb15d2a5d75cd7b">TYPE</a>&gt;(TOLERANCE), 0.f);</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="_n_e_o_n_2_pixel_wise_multiplication_8cpp_source.xhtml#l00046">46</a> of file <a class="el" href="_n_e_o_n_2_pixel_wise_multiplication_8cpp_source.xhtml">PixelWiseMultiplication.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a6c21e1e9072e5251356f8a97ffb7b98d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define WRAP_VALIDATE</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><a class="el" href="activation__layer__qa8_8cl.xhtml#a5a392548f2df67370cb15d2a5d75cd7b">TYPE</a>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">TOLERANCE&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;validate_wrap(Accessor(_target), _reference, AbsoluteTolerance&lt;<a class="el" href="activation__layer__qa8_8cl.xhtml#a5a392548f2df67370cb15d2a5d75cd7b">TYPE</a>&gt;(TOLERANCE), 0.f);</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="_n_e_o_n_2_pixel_wise_multiplication_8cpp_source.xhtml#l00047">47</a> of file <a class="el" href="_n_e_o_n_2_pixel_wise_multiplication_8cpp_source.xhtml">PixelWiseMultiplication.cpp</a>.</p>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_59425e443f801f1f2fd8bbe4959a3ccf.xhtml">tests</a></li><li class="navelem"><a class="el" href="dir_e7c7b16542faa38cb4655ff1750d3604.xhtml">validation</a></li><li class="navelem"><a class="el" href="dir_0538a82dae0483a21d0f1e9d7e0a45c6.xhtml">NEON</a></li><li class="navelem"><a class="el" href="_n_e_o_n_2_pixel_wise_multiplication_8cpp.xhtml">PixelWiseMultiplication.cpp</a></li>
    <li class="footer">Generated on Thu Dec 14 2017 23:48:34 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
  </ul>
</div>
</body>
</html>
