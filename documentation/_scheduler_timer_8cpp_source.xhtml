<!-- HTML header for doxygen 1.8.9.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: tests/framework/instruments/SchedulerTimer.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Compute Library
   &#160;<span id="projectnumber">18.03</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>Globals</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_scheduler_timer_8cpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">SchedulerTimer.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_scheduler_timer_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2017-2018 ARM Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_scheduler_timer_8h.xhtml">SchedulerTimer.h</a>&quot;</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_wall_clock_timer_8h.xhtml">WallClockTimer.h</a>&quot;</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_c_p_p_kernel_8h.xhtml">arm_compute/core/CPP/ICPPKernel.h</a>&quot;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;{</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="keyword">namespace </span>test</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;{</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keyword">namespace </span>framework</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;{</div><div class="line"><a name="l00035"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_scheduler_timer.xhtml#a501ef37fef441a0a6a8ea8b8e30a7181">   35</a></span>&#160;std::string <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_scheduler_timer.xhtml#a501ef37fef441a0a6a8ea8b8e30a7181">SchedulerTimer::id</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    <span class="keywordflow">return</span> <span class="stringliteral">&quot;SchedulerTimer&quot;</span>;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;}</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">class </span>Interceptor final : <span class="keyword">public</span> <a class="code" href="classarm__compute_1_1_i_scheduler.xhtml">IScheduler</a></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;{</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    Interceptor(std::list&lt;SchedulerTimer::kernel_info&gt; &amp;kernels, <a class="code" href="classarm__compute_1_1_i_scheduler.xhtml">IScheduler</a> &amp;real_scheduler, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100">ScaleFactor</a> scale_factor)</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;        : _kernels(kernels), _real_scheduler(real_scheduler), _timer(scale_factor)</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    {</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    }</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="keywordtype">void</span> set_num_threads(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> num_threads)<span class="keyword"> override</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        _real_scheduler.set_num_threads(num_threads);</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    }</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> num_threads()<span class="keyword"> const override</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        <span class="keywordflow">return</span> _real_scheduler.num_threads();</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    }</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <span class="keywordtype">void</span> schedule(<a class="code" href="classarm__compute_1_1_i_c_p_p_kernel.xhtml">ICPPKernel</a> *kernel, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> split_dimension)<span class="keyword"> override</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        _timer.start();</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        _real_scheduler.schedule(kernel, split_dimension);</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        _timer.stop();</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_scheduler_timer_1_1kernel__info.xhtml">SchedulerTimer::kernel_info</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a096668313a9a819d54a2e65ec21ff0cc">info</a>;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        info.<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_scheduler_timer_1_1kernel__info.xhtml#a9b45b3e13bd9167aab02e17e08916231">name</a>         = kernel-&gt;<a class="code" href="classarm__compute_1_1_i_c_p_p_kernel.xhtml#a1a30ad8f276a2310571c36239554831a">name</a>();</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        info.<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_scheduler_timer_1_1kernel__info.xhtml#a5f061b503cb1681c0b047c04d645e24e">measurements</a> = _timer.measurements();</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        _kernels.push_back(std::move(info));</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    }</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    std::list&lt;SchedulerTimer::kernel_info&gt; &amp;_kernels;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <a class="code" href="classarm__compute_1_1_i_scheduler.xhtml">IScheduler</a>                             &amp;_real_scheduler;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_wall_clock_timer.xhtml">WallClockTimer</a>                          _timer;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;};</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div><div class="line"><a name="l00077"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_scheduler_timer.xhtml#a815af174fc6a8042c65644687b7d3338">   77</a></span>&#160;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_scheduler_timer.xhtml#ad20c4027c4914e731aef370807ca8987">SchedulerTimer::SchedulerTimer</a>(<a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100">ScaleFactor</a> scale_factor)</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    : _kernels(), _real_scheduler(nullptr), _real_scheduler_type(), _scale_factor(scale_factor)</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;{</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;}</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div><div class="line"><a name="l00082"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_scheduler_timer.xhtml#a5d5d9ebd12cd3a7d268bc98a3fc7bf97">   82</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_scheduler_timer.xhtml#a5d5d9ebd12cd3a7d268bc98a3fc7bf97">SchedulerTimer::start</a>()</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;{</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <a class="code" href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(_real_scheduler != <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    _real_scheduler_type = <a class="code" href="classarm__compute_1_1_scheduler.xhtml#ab394515f710c2aac0f132ecc0b9323d9">Scheduler::get_type</a>();</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <span class="comment">//Note: We can&#39;t currently replace a custom scheduler</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <span class="keywordflow">if</span>(_real_scheduler_type != <a class="code" href="classarm__compute_1_1_scheduler.xhtml#a1d1cfd8ffb84e947f82999c682b666a7a72baef04098f035e8a320b03ad197818">Scheduler::Type::CUSTOM</a>)</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    {</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        _real_scheduler  = &amp;<a class="code" href="classarm__compute_1_1_scheduler.xhtml#acb4f87f1831680d8d1b70e1bef06bb81">Scheduler::get</a>();</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        <span class="keyword">auto</span> interceptor = std::make_shared&lt;Interceptor&gt;(_kernels, *_real_scheduler, _scale_factor);</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        <a class="code" href="classarm__compute_1_1_scheduler.xhtml#a12775a7fbfa126fa4f9f06f8e02d9a8e">Scheduler::set</a>(std::static_pointer_cast&lt;IScheduler&gt;(interceptor));</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    }</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    _kernels.clear();</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;}</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div><div class="line"><a name="l00096"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_scheduler_timer.xhtml#ab3536e22848ce87b16a9b96d6d824d45">   96</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_scheduler_timer.xhtml#ab3536e22848ce87b16a9b96d6d824d45">SchedulerTimer::stop</a>()</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;{</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <span class="comment">// Restore real scheduler</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <a class="code" href="classarm__compute_1_1_scheduler.xhtml#a12775a7fbfa126fa4f9f06f8e02d9a8e">Scheduler::set</a>(_real_scheduler_type);</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    _real_scheduler = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;}</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div><div class="line"><a name="l00103"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_scheduler_timer.xhtml#a73cabccc9d4406bf48f1db033dc35005">  103</a></span>&#160;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml#afc7df496e6026b91c3f48da6821c86a9">Instrument::MeasurementsMap</a> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_scheduler_timer.xhtml#a73cabccc9d4406bf48f1db033dc35005">SchedulerTimer::measurements</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml#afc7df496e6026b91c3f48da6821c86a9">MeasurementsMap</a> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_scheduler_timer.xhtml#a73cabccc9d4406bf48f1db033dc35005">measurements</a>;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>    kernel_number = 0;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <span class="keywordflow">for</span>(<span class="keyword">auto</span> kernel : _kernels)</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    {</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        measurements.emplace(kernel.name + <span class="stringliteral">&quot; #&quot;</span> + <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(kernel_number++), kernel.measurements.begin()-&gt;second);</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    }</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_scheduler_timer.xhtml#a73cabccc9d4406bf48f1db033dc35005">measurements</a>;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;}</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;} <span class="comment">// namespace framework</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;} <span class="comment">// namespace test</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;} <span class="comment">// namespace arm_compute</span></div><div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_scheduler_timer_xhtml_a73cabccc9d4406bf48f1db033dc35005"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_scheduler_timer.xhtml#a73cabccc9d4406bf48f1db033dc35005">arm_compute::test::framework::SchedulerTimer::measurements</a></div><div class="ttdeci">Instrument::MeasurementsMap measurements() const override</div><div class="ttdoc">Return the latest measurement. </div><div class="ttdef"><b>Definition:</b> <a href="_scheduler_timer_8cpp_source.xhtml#l00103">SchedulerTimer.cpp:103</a></div></div>
<div class="ttc" id="classarm__compute_1_1_scheduler_xhtml_ab394515f710c2aac0f132ecc0b9323d9"><div class="ttname"><a href="classarm__compute_1_1_scheduler.xhtml#ab394515f710c2aac0f132ecc0b9323d9">arm_compute::Scheduler::get_type</a></div><div class="ttdeci">static Type get_type()</div><div class="ttdoc">Returns the type of the active scheduler. </div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_scheduler_timer_xhtml_a5d5d9ebd12cd3a7d268bc98a3fc7bf97"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_scheduler_timer.xhtml#a5d5d9ebd12cd3a7d268bc98a3fc7bf97">arm_compute::test::framework::SchedulerTimer::start</a></div><div class="ttdeci">void start() override</div><div class="ttdoc">Start measuring. </div><div class="ttdef"><b>Definition:</b> <a href="_scheduler_timer_8cpp_source.xhtml#l00082">SchedulerTimer.cpp:82</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_c_p_p_kernel_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_c_p_p_kernel.xhtml">arm_compute::ICPPKernel</a></div><div class="ttdoc">Common interface for all kernels implemented in C++. </div><div class="ttdef"><b>Definition:</b> <a href="_i_c_p_p_kernel_8h_source.xhtml#l00035">ICPPKernel.h:35</a></div></div>
<div class="ttc" id="core_2_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown. </div><div class="ttdef"><b>Definition:</b> <a href="core_2_error_8h_source.xhtml#l00306">Error.h:306</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1support_1_1cpp11_xhtml_acc5dddee1cbe93a4eaf0a9f74ee96bb7"><div class="ttname"><a href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">arm_compute::support::cpp11::to_string</a></div><div class="ttdeci">std::string to_string(T &amp;&amp;value)</div><div class="ttdoc">Convert integer and float values to string. </div><div class="ttdef"><b>Definition:</b> <a href="_toolchain_support_8h_source.xhtml#l00187">ToolchainSupport.h:187</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_scheduler_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_scheduler.xhtml">arm_compute::IScheduler</a></div><div class="ttdoc">Scheduler interface to run kernels. </div><div class="ttdef"><b>Definition:</b> <a href="_i_scheduler_8h_source.xhtml#l00034">IScheduler.h:34</a></div></div>
<div class="ttc" id="classarm__compute_1_1_scheduler_xhtml_a12775a7fbfa126fa4f9f06f8e02d9a8e"><div class="ttname"><a href="classarm__compute_1_1_scheduler.xhtml#a12775a7fbfa126fa4f9f06f8e02d9a8e">arm_compute::Scheduler::set</a></div><div class="ttdeci">static void set(std::shared_ptr&lt; IScheduler &gt; scheduler)</div><div class="ttdoc">Sets the user defined scheduler and makes it the active scheduler. </div></div>
<div class="ttc" id="_wall_clock_timer_8h_xhtml"><div class="ttname"><a href="_wall_clock_timer_8h.xhtml">WallClockTimer.h</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a096668313a9a819d54a2e65ec21ff0cc"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a096668313a9a819d54a2e65ec21ff0cc">arm_compute::test::validation::info</a></div><div class="ttdeci">src info() -&gt; set_format(Format::S16)</div></div>
<div class="ttc" id="namespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">This file contains all available output stages for GEMMLowp on OpenCL. </div><div class="ttdef"><b>Definition:</b> <a href="00__introduction_8dox_source.xhtml#l00001">00_introduction.dox:1</a></div></div>
<div class="ttc" id="_i_c_p_p_kernel_8h_xhtml"><div class="ttname"><a href="_i_c_p_p_kernel_8h.xhtml">ICPPKernel.h</a></div></div>
<div class="ttc" id="_scheduler_timer_8h_xhtml"><div class="ttname"><a href="_scheduler_timer_8h.xhtml">SchedulerTimer.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_scheduler_xhtml_a1d1cfd8ffb84e947f82999c682b666a7a72baef04098f035e8a320b03ad197818"><div class="ttname"><a href="classarm__compute_1_1_scheduler.xhtml#a1d1cfd8ffb84e947f82999c682b666a7a72baef04098f035e8a320b03ad197818">arm_compute::Scheduler::Type::CUSTOM</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_scheduler_timer_xhtml_a501ef37fef441a0a6a8ea8b8e30a7181"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_scheduler_timer.xhtml#a501ef37fef441a0a6a8ea8b8e30a7181">arm_compute::test::framework::SchedulerTimer::id</a></div><div class="ttdeci">std::string id() const override</div><div class="ttdoc">Identifier for the instrument. </div><div class="ttdef"><b>Definition:</b> <a href="_scheduler_timer_8cpp_source.xhtml#l00035">SchedulerTimer.cpp:35</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_scheduler_timer_xhtml_ad20c4027c4914e731aef370807ca8987"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_scheduler_timer.xhtml#ad20c4027c4914e731aef370807ca8987">arm_compute::test::framework::SchedulerTimer::SchedulerTimer</a></div><div class="ttdeci">SchedulerTimer(const SchedulerTimer &amp;)=delete</div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_instrument_xhtml_afc7df496e6026b91c3f48da6821c86a9"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml#afc7df496e6026b91c3f48da6821c86a9">arm_compute::test::framework::Instrument::MeasurementsMap</a></div><div class="ttdeci">std::map&lt; std::string, Measurement &gt; MeasurementsMap</div><div class="ttdef"><b>Definition:</b> <a href="_instrument_8h_source.xhtml#l00077">Instrument.h:77</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1framework_1_1_scheduler_timer_1_1kernel__info_xhtml_a9b45b3e13bd9167aab02e17e08916231"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_scheduler_timer_1_1kernel__info.xhtml#a9b45b3e13bd9167aab02e17e08916231">arm_compute::test::framework::SchedulerTimer::kernel_info::name</a></div><div class="ttdeci">std::string name</div><div class="ttdoc">Kernel name. </div><div class="ttdef"><b>Definition:</b> <a href="_scheduler_timer_8h_source.xhtml#l00051">SchedulerTimer.h:51</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_a3a01a70ad3a22d8b80c413e8a5977100"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100">arm_compute::test::framework::ScaleFactor</a></div><div class="ttdeci">ScaleFactor</div><div class="ttdef"><b>Definition:</b> <a href="_instrument_8h_source.xhtml#l00040">Instrument.h:40</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_wall_clock_timer_xhtml"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_wall_clock_timer.xhtml">arm_compute::test::framework::WallClockTimer</a></div><div class="ttdoc">Implementation of an instrument to measure elapsed wall-clock time in milliseconds. </div><div class="ttdef"><b>Definition:</b> <a href="_wall_clock_timer_8h_source.xhtml#l00038">WallClockTimer.h:38</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1framework_1_1_scheduler_timer_1_1kernel__info_xhtml_a5f061b503cb1681c0b047c04d645e24e"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_scheduler_timer_1_1kernel__info.xhtml#a5f061b503cb1681c0b047c04d645e24e">arm_compute::test::framework::SchedulerTimer::kernel_info::measurements</a></div><div class="ttdeci">Instrument::MeasurementsMap measurements</div><div class="ttdoc">Time it took the kernel to run. </div><div class="ttdef"><b>Definition:</b> <a href="_scheduler_timer_8h_source.xhtml#l00050">SchedulerTimer.h:50</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_c_p_p_kernel_xhtml_a1a30ad8f276a2310571c36239554831a"><div class="ttname"><a href="classarm__compute_1_1_i_c_p_p_kernel.xhtml#a1a30ad8f276a2310571c36239554831a">arm_compute::ICPPKernel::name</a></div><div class="ttdeci">virtual const char * name() const =0</div><div class="ttdoc">Name of the kernel. </div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1framework_1_1_scheduler_timer_1_1kernel__info_xhtml"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_scheduler_timer_1_1kernel__info.xhtml">arm_compute::test::framework::SchedulerTimer::kernel_info</a></div><div class="ttdef"><b>Definition:</b> <a href="_scheduler_timer_8h_source.xhtml#l00048">SchedulerTimer.h:48</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_scheduler_timer_xhtml_ab3536e22848ce87b16a9b96d6d824d45"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_scheduler_timer.xhtml#ab3536e22848ce87b16a9b96d6d824d45">arm_compute::test::framework::SchedulerTimer::stop</a></div><div class="ttdeci">void stop() override</div><div class="ttdoc">Stop measuring. </div><div class="ttdef"><b>Definition:</b> <a href="_scheduler_timer_8cpp_source.xhtml#l00096">SchedulerTimer.cpp:96</a></div></div>
<div class="ttc" id="classarm__compute_1_1_scheduler_xhtml_acb4f87f1831680d8d1b70e1bef06bb81"><div class="ttname"><a href="classarm__compute_1_1_scheduler.xhtml#acb4f87f1831680d8d1b70e1bef06bb81">arm_compute::Scheduler::get</a></div><div class="ttdeci">static IScheduler &amp; get()</div><div class="ttdoc">Access the scheduler singleton. </div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_59425e443f801f1f2fd8bbe4959a3ccf.xhtml">tests</a></li><li class="navelem"><a class="el" href="dir_9e71e2da941d3cafc4d98a9f6ae3de4f.xhtml">framework</a></li><li class="navelem"><a class="el" href="dir_4efd0ee2ecda32567e74991b08d544ea.xhtml">instruments</a></li><li class="navelem"><a class="el" href="_scheduler_timer_8cpp.xhtml">SchedulerTimer.cpp</a></li>
    <li class="footer">Generated on Fri Mar 2 2018 12:37:54 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
  </ul>
</div>
</body>
</html>
