<!-- HTML header for doxygen 1.8.9.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: IScheduler Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Compute Library
   &#160;<span id="projectnumber">17.12</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li><a href="classes.xhtml"><span>Data&#160;Structure&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Data&#160;Fields</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarm__compute_1_1_i_scheduler.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">IScheduler Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p><a class="el" href="classarm__compute_1_1_scheduler.xhtml" title="Configurable scheduler which supports multiple multithreading APIs and choosing between different sch...">Scheduler</a> interface to run kernels.  
 <a href="classarm__compute_1_1_i_scheduler.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_i_scheduler_8h_source.xhtml">IScheduler.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a34956db09db14c551e9966c9b66036f9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_scheduler.xhtml#a34956db09db14c551e9966c9b66036f9">IScheduler</a> ()</td></tr>
<tr class="memdesc:a34956db09db14c551e9966c9b66036f9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor.  <a href="#a34956db09db14c551e9966c9b66036f9">More...</a><br /></td></tr>
<tr class="separator:a34956db09db14c551e9966c9b66036f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6d209385481644d97e7ca96072b73eb8"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_scheduler.xhtml#a6d209385481644d97e7ca96072b73eb8">~IScheduler</a> ()=default</td></tr>
<tr class="memdesc:a6d209385481644d97e7ca96072b73eb8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="#a6d209385481644d97e7ca96072b73eb8">More...</a><br /></td></tr>
<tr class="separator:a6d209385481644d97e7ca96072b73eb8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a645ac2d9d4144fd0174296de7eb1e1b5"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_scheduler.xhtml#a645ac2d9d4144fd0174296de7eb1e1b5">set_num_threads</a> (unsigned int <a class="el" href="classarm__compute_1_1_i_scheduler.xhtml#ac24584a63e484123e3756d1b2a1c9e2f">num_threads</a>)=0</td></tr>
<tr class="memdesc:a645ac2d9d4144fd0174296de7eb1e1b5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the number of threads the scheduler will use to run the kernels.  <a href="#a645ac2d9d4144fd0174296de7eb1e1b5">More...</a><br /></td></tr>
<tr class="separator:a645ac2d9d4144fd0174296de7eb1e1b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac24584a63e484123e3756d1b2a1c9e2f"><td class="memItemLeft" align="right" valign="top">virtual unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_scheduler.xhtml#ac24584a63e484123e3756d1b2a1c9e2f">num_threads</a> () const =0</td></tr>
<tr class="memdesc:ac24584a63e484123e3756d1b2a1c9e2f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of threads that the <a class="el" href="classarm__compute_1_1_single_thread_scheduler.xhtml" title="Pool of threads to automatically split a kernel&#39;s execution among several threads. ">SingleThreadScheduler</a> has in his pool.  <a href="#ac24584a63e484123e3756d1b2a1c9e2f">More...</a><br /></td></tr>
<tr class="separator:ac24584a63e484123e3756d1b2a1c9e2f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a38e28e556fea6e2024019dbb9c7cc943"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_scheduler.xhtml#a38e28e556fea6e2024019dbb9c7cc943">schedule</a> (<a class="el" href="classarm__compute_1_1_i_c_p_p_kernel.xhtml">ICPPKernel</a> *kernel, unsigned int split_dimension)=0</td></tr>
<tr class="memdesc:a38e28e556fea6e2024019dbb9c7cc943"><td class="mdescLeft">&#160;</td><td class="mdescRight">Runs the kernel in the same thread as the caller synchronously.  <a href="#a38e28e556fea6e2024019dbb9c7cc943">More...</a><br /></td></tr>
<tr class="separator:a38e28e556fea6e2024019dbb9c7cc943"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a49fcb6640894fb5ec2da99f10a1593"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_scheduler.xhtml#a6a49fcb6640894fb5ec2da99f10a1593">set_target</a> (<a class="el" href="namespacearm__compute.xhtml#a5bc939238e1f14a4c39aaee8186a853d">CPUTarget</a> target)</td></tr>
<tr class="memdesc:a6a49fcb6640894fb5ec2da99f10a1593"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the target CPU architecture.  <a href="#a6a49fcb6640894fb5ec2da99f10a1593">More...</a><br /></td></tr>
<tr class="separator:a6a49fcb6640894fb5ec2da99f10a1593"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a671307bb78c1d64435708feead8c04da"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structarm__compute_1_1_c_p_u_info.xhtml">CPUInfo</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_scheduler.xhtml#a671307bb78c1d64435708feead8c04da">cpu_info</a> () const </td></tr>
<tr class="memdesc:a671307bb78c1d64435708feead8c04da"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get CPU info.  <a href="#a671307bb78c1d64435708feead8c04da">More...</a><br /></td></tr>
<tr class="separator:a671307bb78c1d64435708feead8c04da"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p><a class="el" href="classarm__compute_1_1_scheduler.xhtml" title="Configurable scheduler which supports multiple multithreading APIs and choosing between different sch...">Scheduler</a> interface to run kernels. </p>

<p>Definition at line <a class="el" href="_i_scheduler_8h_source.xhtml#l00034">34</a> of file <a class="el" href="_i_scheduler_8h_source.xhtml">IScheduler.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a34956db09db14c551e9966c9b66036f9"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_i_scheduler.xhtml">IScheduler</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Default constructor. </p>

</div>
</div>
<a class="anchor" id="a6d209385481644d97e7ca96072b73eb8"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual ~<a class="el" href="classarm__compute_1_1_i_scheduler.xhtml">IScheduler</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Destructor. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a671307bb78c1d64435708feead8c04da"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structarm__compute_1_1_c_p_u_info.xhtml">CPUInfo</a> cpu_info </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get CPU info. </p>
<dl class="section return"><dt>Returns</dt><dd>CPU info. </dd></dl>

<p>Referenced by <a class="el" href="_alex_net_network_8h_source.xhtml#l00057">AlexNetNetwork&lt; ITensorType, TensorType, SubTensorType, arm_compute::test::Accessor, ActivationLayerFunction, ConvolutionLayerFunction, DirectConvolutionLayerFunction, FullyConnectedLayerFunction, NormalizationLayerFunction, PoolingLayerFunction, SoftmaxLayerFunction &gt;::init()</a>, and <a class="el" href="validation_2fixtures_2_convolution_layer_fixture_8h_source.xhtml#l00057">ConvolutionValidationGenericFixture&lt; TensorType, AccessorType, FunctionType, T &gt;::setup()</a>.</p>

</div>
</div>
<a class="anchor" id="ac24584a63e484123e3756d1b2a1c9e2f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual unsigned int num_threads </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the number of threads that the <a class="el" href="classarm__compute_1_1_single_thread_scheduler.xhtml" title="Pool of threads to automatically split a kernel&#39;s execution among several threads. ">SingleThreadScheduler</a> has in his pool. </p>
<dl class="section return"><dt>Returns</dt><dd>Number of threads available in <a class="el" href="classarm__compute_1_1_single_thread_scheduler.xhtml" title="Pool of threads to automatically split a kernel&#39;s execution among several threads. ">SingleThreadScheduler</a>. </dd></dl>

<p>Implemented in <a class="el" href="classarm__compute_1_1_c_p_p_scheduler.xhtml#a0da94220ee1e0f4928aa31ed0d4b30f7">CPPScheduler</a>, <a class="el" href="classarm__compute_1_1_o_m_p_scheduler.xhtml#a0da94220ee1e0f4928aa31ed0d4b30f7">OMPScheduler</a>, and <a class="el" href="classarm__compute_1_1_single_thread_scheduler.xhtml#a0da94220ee1e0f4928aa31ed0d4b30f7">SingleThreadScheduler</a>.</p>

</div>
</div>
<a class="anchor" id="a38e28e556fea6e2024019dbb9c7cc943"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void schedule </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_c_p_p_kernel.xhtml">ICPPKernel</a> *&#160;</td>
          <td class="paramname"><em>kernel</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>split_dimension</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Runs the kernel in the same thread as the caller synchronously. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">kernel</td><td><a class="el" href="classarm__compute_1_1_kernel.xhtml" title="Kernel class. ">Kernel</a> to execute. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">split_dimension</td><td>Dimension along which to split the kernel's execution window. </td></tr>
  </table>
  </dd>
</dl>

<p>Implemented in <a class="el" href="classarm__compute_1_1_c_p_p_scheduler.xhtml#aa4fc1e7b1c1d9d42903cfc48351e57ad">CPPScheduler</a>, <a class="el" href="classarm__compute_1_1_o_m_p_scheduler.xhtml#aa4fc1e7b1c1d9d42903cfc48351e57ad">OMPScheduler</a>, and <a class="el" href="classarm__compute_1_1_single_thread_scheduler.xhtml#aa4fc1e7b1c1d9d42903cfc48351e57ad">SingleThreadScheduler</a>.</p>

</div>
</div>
<a class="anchor" id="a645ac2d9d4144fd0174296de7eb1e1b5"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void set_num_threads </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>num_threads</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the number of threads the scheduler will use to run the kernels. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">num_threads</td><td>If set to 0, then one thread per CPU core available on the system will be used, otherwise the number of threads specified. </td></tr>
  </table>
  </dd>
</dl>

<p>Implemented in <a class="el" href="classarm__compute_1_1_c_p_p_scheduler.xhtml#ae64eebaa07f4d2da6cc2ba538c3cb095">CPPScheduler</a>, <a class="el" href="classarm__compute_1_1_o_m_p_scheduler.xhtml#ae64eebaa07f4d2da6cc2ba538c3cb095">OMPScheduler</a>, and <a class="el" href="classarm__compute_1_1_single_thread_scheduler.xhtml#ae64eebaa07f4d2da6cc2ba538c3cb095">SingleThreadScheduler</a>.</p>

<p>Referenced by <a class="el" href="main_8cpp_source.xhtml#l00062">main()</a>.</p>

</div>
</div>
<a class="anchor" id="a6a49fcb6640894fb5ec2da99f10a1593"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void set_target </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacearm__compute.xhtml#a5bc939238e1f14a4c39aaee8186a853d">CPUTarget</a>&#160;</td>
          <td class="paramname"><em>target</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the target CPU architecture. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">target</td><td>Target CPU. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>arm_compute/runtime/<a class="el" href="_i_scheduler_8h_source.xhtml">IScheduler.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1_i_scheduler.xhtml">IScheduler</a></li>
    <li class="footer">Generated on Thu Dec 14 2017 23:48:36 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
  </ul>
</div>
</body>
</html>
