<!-- HTML header for doxygen 1.8.9.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: Data Structures</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Compute Library
   &#160;<span id="projectnumber">18.03</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li class="current"><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li><a href="classes.xhtml"><span>Data&#160;Structure&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Data&#160;Fields</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('annotated.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">Data Structures</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock">Here are the data structures with brief descriptions:</div><div class="directory">
<div class="levels">[detail level <span onclick="javascript:toggleLevel(1);">1</span><span onclick="javascript:toggleLevel(2);">2</span><span onclick="javascript:toggleLevel(3);">3</span><span onclick="javascript:toggleLevel(4);">4</span><span onclick="javascript:toggleLevel(5);">5</span><span onclick="javascript:toggleLevel(6);">6</span>]</div><table class="directory">
<tr id="row_0_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_0_" class="arrow" onclick="toggleFolder('0_')">&#9658;</span><span class="icona"><span class="icon">N</span></span><a class="el" href="namespacearm__compute.xhtml" target="_self">arm_compute</a></td><td class="desc">This file contains all available output stages for GEMMLowp on OpenCL </td></tr>
<tr id="row_0_0_" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_0_0_" class="arrow" onclick="toggleFolder('0_0_')">&#9658;</span><span class="icona"><span class="icon">N</span></span><a class="el" href="namespacearm__compute_1_1detail.xhtml" target="_self">detail</a></td><td class="desc"></td></tr>
<tr id="row_0_0_0_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1detail_1_1brelu.xhtml" target="_self">brelu</a></td><td class="desc">Bounded RELU activation object </td></tr>
<tr id="row_0_0_1_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1detail_1_1compare__dimension.xhtml" target="_self">compare_dimension</a></td><td class="desc">Functor to compare two <a class="el" href="classarm__compute_1_1_dimensions.xhtml">Dimensions</a> objects and throw an error on mismatch </td></tr>
<tr id="row_0_0_2_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1detail_1_1dummy.xhtml" target="_self">dummy</a></td><td class="desc">Dummy activation object </td></tr>
<tr id="row_0_0_3_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1detail_1_1get__tensor__info__t.xhtml" target="_self">get_tensor_info_t</a></td><td class="desc"></td></tr>
<tr id="row_0_0_4_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1detail_1_1get__tensor__info__t_3_01_i_tensor_info_01_5_01_4.xhtml" target="_self">get_tensor_info_t&lt; ITensorInfo * &gt;</a></td><td class="desc"></td></tr>
<tr id="row_0_0_5_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1detail_1_1lubrelu.xhtml" target="_self">lubrelu</a></td><td class="desc">Lower-Upper Bounded RELU activation object </td></tr>
<tr id="row_0_0_6_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1detail_1_1relu.xhtml" target="_self">relu</a></td><td class="desc">RELU activation object </td></tr>
<tr id="row_0_1_" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_0_1_" class="arrow" onclick="toggleFolder('0_1_')">&#9658;</span><span class="icona"><span class="icon">N</span></span><a class="el" href="namespacearm__compute_1_1gles.xhtml" target="_self">gles</a></td><td class="desc"></td></tr>
<tr id="row_0_1_0_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1gles_1_1_n_d_range.xhtml" target="_self">NDRange</a></td><td class="desc">Class interface for specifying <a class="el" href="classarm__compute_1_1gles_1_1_n_d_range.xhtml" title="Class interface for specifying NDRange values. ">NDRange</a> values </td></tr>
<tr id="row_0_2_" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_0_2_" class="arrow" onclick="toggleFolder('0_2_')">&#9658;</span><span class="icona"><span class="icon">N</span></span><a class="el" href="namespacearm__compute_1_1graph.xhtml" target="_self">graph</a></td><td class="desc"></td></tr>
<tr id="row_0_2_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_0_2_0_" class="arrow" onclick="toggleFolder('0_2_0_')">&#9658;</span><span class="icona"><span class="icon">N</span></span><a class="el" href="namespacearm__compute_1_1graph_1_1detail.xhtml" target="_self">detail</a></td><td class="desc"></td></tr>
<tr id="row_0_2_0_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1detail_1_1_operation_registrar.xhtml" target="_self">OperationRegistrar</a></td><td class="desc">Helper class to statically register an operation </td></tr>
<tr id="row_0_2_1_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_activation_layer.xhtml" target="_self">ActivationLayer</a></td><td class="desc">Activation Layer node </td></tr>
<tr id="row_0_2_2_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_batch_normalization_layer.xhtml" target="_self">BatchNormalizationLayer</a></td><td class="desc">BatchNormalization layer node </td></tr>
<tr id="row_0_2_3_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_branch_layer.xhtml" target="_self">BranchLayer</a></td><td class="desc">Branch Layer node </td></tr>
<tr id="row_0_2_4_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_c_l_map.xhtml" target="_self">CLMap</a></td><td class="desc">OpenCL map function </td></tr>
<tr id="row_0_2_5_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_c_l_unmap.xhtml" target="_self">CLUnmap</a></td><td class="desc">OpenCL un-map function </td></tr>
<tr id="row_0_2_6_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_convolution_layer.xhtml" target="_self">ConvolutionLayer</a></td><td class="desc">Convolution layer node </td></tr>
<tr id="row_0_2_7_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_depth_convert_layer.xhtml" target="_self">DepthConvertLayer</a></td><td class="desc"><a class="el" href="classarm__compute_1_1graph_1_1_depth_convert_layer.xhtml" title="DepthConvertLayer layer node. ">DepthConvertLayer</a> layer node </td></tr>
<tr id="row_0_2_8_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_depthwise_convolution_layer.xhtml" target="_self">DepthwiseConvolutionLayer</a></td><td class="desc">Convolution layer node </td></tr>
<tr id="row_0_2_9_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_dequantization_layer.xhtml" target="_self">DequantizationLayer</a></td><td class="desc"><a class="el" href="classarm__compute_1_1graph_1_1_dequantization_layer.xhtml" title="DequantizationLayer layer node. ">DequantizationLayer</a> layer node </td></tr>
<tr id="row_0_2_10_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_flatten_layer.xhtml" target="_self">FlattenLayer</a></td><td class="desc">Flatten layer node </td></tr>
<tr id="row_0_2_11_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_floor_layer.xhtml" target="_self">FloorLayer</a></td><td class="desc">Floor layer node </td></tr>
<tr id="row_0_2_12_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_fully_connected_layer.xhtml" target="_self">FullyConnectedLayer</a></td><td class="desc">Fully connected layer node </td></tr>
<tr id="row_0_2_13_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml" target="_self">Graph</a></td><td class="desc"><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml" title="Graph class. ">Graph</a> class </td></tr>
<tr id="row_0_2_14_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_graph_context.xhtml" target="_self">GraphContext</a></td><td class="desc"><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml" title="Graph class. ">Graph</a> context </td></tr>
<tr id="row_0_2_15_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_graph_hints.xhtml" target="_self">GraphHints</a></td><td class="desc">Hints that can be passed to the graph to expose parameterization </td></tr>
<tr id="row_0_2_16_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml" target="_self">INode</a></td><td class="desc">Node interface </td></tr>
<tr id="row_0_2_17_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_i_operation.xhtml" target="_self">IOperation</a></td><td class="desc">Operation functor interface </td></tr>
<tr id="row_0_2_18_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_i_tensor_accessor.xhtml" target="_self">ITensorAccessor</a></td><td class="desc"><a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml" title="Tensor class. ">Tensor</a> accessor interface </td></tr>
<tr id="row_0_2_19_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_i_tensor_object.xhtml" target="_self">ITensorObject</a></td><td class="desc"><a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml" title="Tensor class. ">Tensor</a> object interface </td></tr>
<tr id="row_0_2_20_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_l2_normalize_layer.xhtml" target="_self">L2NormalizeLayer</a></td><td class="desc"><a class="el" href="classarm__compute_1_1graph_1_1_l2_normalize_layer.xhtml" title="L2NormalizeLayer layer node. ">L2NormalizeLayer</a> layer node </td></tr>
<tr id="row_0_2_21_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_node_context.xhtml" target="_self">NodeContext</a></td><td class="desc">Node Context class </td></tr>
<tr id="row_0_2_22_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_node_parameter.xhtml" target="_self">NodeParameter</a></td><td class="desc">Template parameter implementation </td></tr>
<tr id="row_0_2_23_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_node_parameter_base.xhtml" target="_self">NodeParameterBase</a></td><td class="desc">Node Parameter Empty base class </td></tr>
<tr id="row_0_2_24_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_normalization_layer.xhtml" target="_self">NormalizationLayer</a></td><td class="desc">Normalization layer node </td></tr>
<tr id="row_0_2_25_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_operation_registry.xhtml" target="_self">OperationRegistry</a></td><td class="desc">Registry holding all the supported operations </td></tr>
<tr id="row_0_2_26_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_pooling_layer.xhtml" target="_self">PoolingLayer</a></td><td class="desc">Pooling layer node </td></tr>
<tr id="row_0_2_27_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_quantization_layer.xhtml" target="_self">QuantizationLayer</a></td><td class="desc">Quantization layer node </td></tr>
<tr id="row_0_2_28_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_reshape_layer.xhtml" target="_self">ReshapeLayer</a></td><td class="desc">Reshape layer node </td></tr>
<tr id="row_0_2_29_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_residual_layer.xhtml" target="_self">ResidualLayer</a></td><td class="desc">Branch Layer node </td></tr>
<tr id="row_0_2_30_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_softmax_layer.xhtml" target="_self">SoftmaxLayer</a></td><td class="desc">Softmax layer node </td></tr>
<tr id="row_0_2_31_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_sub_graph.xhtml" target="_self">SubGraph</a></td><td class="desc"><a class="el" href="classarm__compute_1_1graph_1_1_sub_graph.xhtml" title="SubGraph class. ">SubGraph</a> class </td></tr>
<tr id="row_0_2_32_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_sub_tensor.xhtml" target="_self">SubTensor</a></td><td class="desc"><a class="el" href="classarm__compute_1_1graph_1_1_sub_tensor.xhtml" title="SubTensor class. ">SubTensor</a> class </td></tr>
<tr id="row_0_2_33_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml" target="_self">Tensor</a></td><td class="desc"><a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml" title="Tensor class. ">Tensor</a> class </td></tr>
<tr id="row_0_3_" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_0_3_" class="arrow" onclick="toggleFolder('0_3_')">&#9658;</span><span class="icona"><span class="icon">N</span></span><a class="el" href="namespacearm__compute_1_1graph__utils.xhtml" target="_self">graph_utils</a></td><td class="desc"></td></tr>
<tr id="row_0_3_0_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph__utils_1_1_caffe_preproccessor.xhtml" target="_self">CaffePreproccessor</a></td><td class="desc">Caffe preproccessor </td></tr>
<tr id="row_0_3_1_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph__utils_1_1_dummy_accessor.xhtml" target="_self">DummyAccessor</a></td><td class="desc">Dummy accessor class </td></tr>
<tr id="row_0_3_2_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph__utils_1_1_i_preprocessor.xhtml" target="_self">IPreprocessor</a></td><td class="desc">Preprocessor interface </td></tr>
<tr id="row_0_3_3_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph__utils_1_1_num_py_bin_loader.xhtml" target="_self">NumPyBinLoader</a></td><td class="desc">Numpy Binary loader class </td></tr>
<tr id="row_0_3_4_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph__utils_1_1_p_p_m_accessor.xhtml" target="_self">PPMAccessor</a></td><td class="desc">PPM accessor class </td></tr>
<tr id="row_0_3_5_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph__utils_1_1_p_p_m_writer.xhtml" target="_self">PPMWriter</a></td><td class="desc">PPM writer class </td></tr>
<tr id="row_0_3_6_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph__utils_1_1_random_accessor.xhtml" target="_self">RandomAccessor</a></td><td class="desc">Random accessor class </td></tr>
<tr id="row_0_3_7_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph__utils_1_1_t_f_preproccessor.xhtml" target="_self">TFPreproccessor</a></td><td class="desc">TF preproccessor </td></tr>
<tr id="row_0_3_8_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1graph__utils_1_1_top_n_predictions_accessor.xhtml" target="_self">TopNPredictionsAccessor</a></td><td class="desc">Result accessor class </td></tr>
<tr id="row_0_4_" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_0_4_" class="arrow" onclick="toggleFolder('0_4_')">&#9658;</span><span class="icona"><span class="icon">N</span></span><a class="el" href="namespacearm__compute_1_1io.xhtml" target="_self">io</a></td><td class="desc"></td></tr>
<tr id="row_0_4_0_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1io_1_1_file_handler.xhtml" target="_self">FileHandler</a></td><td class="desc">File Handling interface </td></tr>
<tr id="row_0_5_" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_0_5_" class="arrow" onclick="toggleFolder('0_5_')">&#9658;</span><span class="icona"><span class="icon">N</span></span><a class="el" href="namespacearm__compute_1_1logging.xhtml" target="_self">logging</a></td><td class="desc"></td></tr>
<tr id="row_0_5_0_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1logging_1_1_date_decorator.xhtml" target="_self">DateDecorator</a></td><td class="desc">Date Decorator </td></tr>
<tr id="row_0_5_1_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1logging_1_1_file_printer.xhtml" target="_self">FilePrinter</a></td><td class="desc">File <a class="el" href="classarm__compute_1_1logging_1_1_printer.xhtml" title="Base printer class to be inherited by other printer classes. ">Printer</a> </td></tr>
<tr id="row_0_5_2_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1logging_1_1_i_decorator.xhtml" target="_self">IDecorator</a></td><td class="desc">Log message decorator interface </td></tr>
<tr id="row_0_5_3_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1logging_1_1_logger.xhtml" target="_self">Logger</a></td><td class="desc"><a class="el" href="classarm__compute_1_1logging_1_1_logger.xhtml" title="Logger class. ">Logger</a> class </td></tr>
<tr id="row_0_5_4_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1logging_1_1_logger_registry.xhtml" target="_self">LoggerRegistry</a></td><td class="desc">Registry class holding all the instantiated loggers </td></tr>
<tr id="row_0_5_5_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1logging_1_1_log_level_decorator.xhtml" target="_self">LogLevelDecorator</a></td><td class="desc">Log Level Decorator </td></tr>
<tr id="row_0_5_6_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1logging_1_1_log_msg.xhtml" target="_self">LogMsg</a></td><td class="desc"></td></tr>
<tr id="row_0_5_7_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1logging_1_1_printer.xhtml" target="_self">Printer</a></td><td class="desc">Base printer class to be inherited by other printer classes </td></tr>
<tr id="row_0_5_8_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1logging_1_1_std_printer.xhtml" target="_self">StdPrinter</a></td><td class="desc">Std <a class="el" href="classarm__compute_1_1logging_1_1_printer.xhtml" title="Base printer class to be inherited by other printer classes. ">Printer</a> </td></tr>
<tr id="row_0_5_9_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1logging_1_1_string_decorator.xhtml" target="_self">StringDecorator</a></td><td class="desc">String Decorator </td></tr>
<tr id="row_0_5_10_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1logging_1_1_thread_id_decorator.xhtml" target="_self">ThreadIdDecorator</a></td><td class="desc">Thread ID Decorator </td></tr>
<tr id="row_0_6_" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_0_6_" class="arrow" onclick="toggleFolder('0_6_')">&#9658;</span><span class="icona"><span class="icon">N</span></span><a class="el" href="namespacearm__compute_1_1misc.xhtml" target="_self">misc</a></td><td class="desc"></td></tr>
<tr id="row_0_6_0_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1misc_1_1_i_cloneable.xhtml" target="_self">ICloneable</a></td><td class="desc">Clonable Interface </td></tr>
<tr id="row_0_7_" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_0_7_" class="arrow" onclick="toggleFolder('0_7_')">&#9658;</span><span class="icona"><span class="icon">N</span></span><a class="el" href="namespacearm__compute_1_1support.xhtml" target="_self">support</a></td><td class="desc"></td></tr>
<tr id="row_0_7_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_0_7_0_" class="arrow" onclick="toggleFolder('0_7_0_')">&#9658;</span><span class="icona"><span class="icon">N</span></span><a class="el" href="namespacearm__compute_1_1support_1_1cpp14.xhtml" target="_self">cpp14</a></td><td class="desc"></td></tr>
<tr id="row_0_7_0_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1support_1_1cpp14_1_1___unique__if.xhtml" target="_self">_Unique_if</a></td><td class="desc">Make_unique is missing in CPP11 </td></tr>
<tr id="row_0_7_0_1_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1support_1_1cpp14_1_1___unique__if_3_01_t[]_4.xhtml" target="_self">_Unique_if&lt; T[]&gt;</a></td><td class="desc"></td></tr>
<tr id="row_0_7_0_2_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1support_1_1cpp14_1_1___unique__if_3_01_t[_n]_4.xhtml" target="_self">_Unique_if&lt; T[N]&gt;</a></td><td class="desc"></td></tr>
<tr id="row_0_8_" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_0_8_" class="arrow" onclick="toggleFolder('0_8_')">&#9658;</span><span class="icona"><span class="icon">N</span></span><a class="el" href="namespacearm__compute_1_1test.xhtml" target="_self">test</a></td><td class="desc"></td></tr>
<tr id="row_0_8_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_0_8_0_" class="arrow" onclick="toggleFolder('0_8_0_')">&#9658;</span><span class="icona"><span class="icon">N</span></span><a class="el" href="namespacearm__compute_1_1test_1_1benchmark.xhtml" target="_self">benchmark</a></td><td class="desc"></td></tr>
<tr id="row_0_8_0_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1benchmark_1_1_depth_concatenate_layer_fixture.xhtml" target="_self">DepthConcatenateLayerFixture</a></td><td class="desc">Fixture that can be used for NE/CL/GC </td></tr>
<tr id="row_0_8_0_1_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1benchmark_1_1_dequantization_layer_fixture.xhtml" target="_self">DequantizationLayerFixture</a></td><td class="desc">Fixture that can be used for NEON and CL </td></tr>
<tr id="row_0_8_0_2_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1benchmark_1_1_flatten_layer_fixture.xhtml" target="_self">FlattenLayerFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_0_3_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1benchmark_1_1_g_e_m_m_interleave4x4_fixture.xhtml" target="_self">GEMMInterleave4x4Fixture</a></td><td class="desc">Fixture that can be used for NEON and CL </td></tr>
<tr id="row_0_8_0_4_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1benchmark_1_1_harris_corners_fixture.xhtml" target="_self">HarrisCornersFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_0_5_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1benchmark_1_1_l2_normalize_layer_fixture.xhtml" target="_self">L2NormalizeLayerFixture</a></td><td class="desc">Fixture that can be used for NEON and CL </td></tr>
<tr id="row_0_8_0_6_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1benchmark_1_1_magnitude_fixture.xhtml" target="_self">MagnitudeFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_0_7_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1benchmark_1_1_quantization_layer_fixture.xhtml" target="_self">QuantizationLayerFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_0_8_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1benchmark_1_1_reshape_layer_fixture.xhtml" target="_self">ReshapeLayerFixture</a></td><td class="desc">Fixture that can be used for NEON and CL </td></tr>
<tr id="row_0_8_0_9_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1benchmark_1_1_scale_fixture.xhtml" target="_self">ScaleFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_0_10_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1benchmark_1_1_transpose_fixture.xhtml" target="_self">TransposeFixture</a></td><td class="desc">Fixture that can be used for NE/CL/GC </td></tr>
<tr id="row_0_8_1_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_0_8_1_" class="arrow" onclick="toggleFolder('0_8_1_')">&#9658;</span><span class="icona"><span class="icon">N</span></span><a class="el" href="namespacearm__compute_1_1test_1_1_c_l_suite.xhtml" target="_self">CLSuite</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_0_8_2_" class="arrow" onclick="toggleFolder('0_8_2_')">&#9658;</span><span class="icona"><span class="icon">N</span></span><a class="el" href="namespacearm__compute_1_1test_1_1datasets.xhtml" target="_self">datasets</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_activation_functions.xhtml" target="_self">ActivationFunctions</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_1_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_alex_net_activation_layer_dataset.xhtml" target="_self">AlexNetActivationLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_2_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_alex_net_convolution_layer_dataset.xhtml" target="_self">AlexNetConvolutionLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_3_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_alex_net_direct_convolution_layer_dataset.xhtml" target="_self">AlexNetDirectConvolutionLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_4_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_alex_net_fully_connected_layer_dataset.xhtml" target="_self">AlexNetFullyConnectedLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_5_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_alex_net_g_e_m_m_dataset.xhtml" target="_self">AlexNetGEMMDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_6_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_alex_net_normalization_layer_dataset.xhtml" target="_self">AlexNetNormalizationLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_7_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_alex_net_pooling_layer_dataset.xhtml" target="_self">AlexNetPoolingLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_8_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_alex_net_winograd_layer_dataset.xhtml" target="_self">AlexNetWinogradLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_9_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span id="arr_0_8_2_9_" class="arrow" onclick="toggleFolder('0_8_2_9_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_batch_normalization_layer_dataset.xhtml" target="_self">BatchNormalizationLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_9_0_" style="display:none;"><td class="entry"><span style="width:80px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1datasets_1_1_batch_normalization_layer_dataset_1_1iterator.xhtml" target="_self">iterator</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_10_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_border_modes.xhtml" target="_self">BorderModes</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_11_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_convert_policies.xhtml" target="_self">ConvertPolicies</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_12_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span id="arr_0_8_2_12_" class="arrow" onclick="toggleFolder('0_8_2_12_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_convolution_layer_dataset.xhtml" target="_self">ConvolutionLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_12_0_" style="display:none;"><td class="entry"><span style="width:80px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1datasets_1_1_convolution_layer_dataset_1_1iterator.xhtml" target="_self">iterator</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_13_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_depth_concatenate_layer_shapes.xhtml" target="_self">DepthConcatenateLayerShapes</a></td><td class="desc">Data set containing 2D tensor shapes for DepthConcatenateLayer </td></tr>
<tr id="row_0_8_2_14_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span id="arr_0_8_2_14_" class="arrow" onclick="toggleFolder('0_8_2_14_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_depthwise_convolution_layer_dataset.xhtml" target="_self">DepthwiseConvolutionLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_14_0_" style="display:none;"><td class="entry"><span style="width:80px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1datasets_1_1_depthwise_convolution_layer_dataset_1_1iterator.xhtml" target="_self">iterator</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_15_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span id="arr_0_8_2_15_" class="arrow" onclick="toggleFolder('0_8_2_15_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_depthwise_separable_convolution_layer_dataset.xhtml" target="_self">DepthwiseSeparableConvolutionLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_15_0_" style="display:none;"><td class="entry"><span style="width:80px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1datasets_1_1_depthwise_separable_convolution_layer_dataset_1_1iterator.xhtml" target="_self">iterator</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_16_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_direct_convolution_layer_dataset.xhtml" target="_self">DirectConvolutionLayerDataset</a></td><td class="desc">Stripped down version of AlexNet as not all kernel sizes and strides are supported </td></tr>
<tr id="row_0_8_2_17_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span id="arr_0_8_2_17_" class="arrow" onclick="toggleFolder('0_8_2_17_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_fully_connected_layer_dataset.xhtml" target="_self">FullyConnectedLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_17_0_" style="display:none;"><td class="entry"><span style="width:80px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1datasets_1_1_fully_connected_layer_dataset_1_1iterator.xhtml" target="_self">iterator</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_18_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span id="arr_0_8_2_18_" class="arrow" onclick="toggleFolder('0_8_2_18_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_g_e_m_m_dataset.xhtml" target="_self">GEMMDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_18_0_" style="display:none;"><td class="entry"><span style="width:80px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1datasets_1_1_g_e_m_m_dataset_1_1iterator.xhtml" target="_self">iterator</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_19_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span id="arr_0_8_2_19_" class="arrow" onclick="toggleFolder('0_8_2_19_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_g_e_m_m_lowp_dataset.xhtml" target="_self">GEMMLowpDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_19_0_" style="display:none;"><td class="entry"><span style="width:80px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1datasets_1_1_g_e_m_m_lowp_dataset_1_1iterator.xhtml" target="_self">iterator</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_20_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_global_pooling_shapes.xhtml" target="_self">GlobalPoolingShapes</a></td><td class="desc">Data set containing global pooling tensor shapes </td></tr>
<tr id="row_0_8_2_21_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_google_net_g_e_m_m_dataset.xhtml" target="_self">GoogleNetGEMMDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_22_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_goog_le_net_inception_v1_activation_layer_dataset.xhtml" target="_self">GoogLeNetInceptionV1ActivationLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_23_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_goog_le_net_inception_v1_convolution_layer_dataset.xhtml" target="_self">GoogLeNetInceptionV1ConvolutionLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_24_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_goog_le_net_inception_v1_direct_convolution_layer_dataset.xhtml" target="_self">GoogLeNetInceptionV1DirectConvolutionLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_25_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_goog_le_net_inception_v1_fully_connected_layer_dataset.xhtml" target="_self">GoogLeNetInceptionV1FullyConnectedLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_26_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_goog_le_net_inception_v1_g_e_m_m_dataset.xhtml" target="_self">GoogLeNetInceptionV1GEMMDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_27_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_goog_le_net_inception_v1_normalization_layer_dataset.xhtml" target="_self">GoogLeNetInceptionV1NormalizationLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_28_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_goog_le_net_inception_v1_pooling_layer_dataset.xhtml" target="_self">GoogLeNetInceptionV1PoolingLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_29_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_goog_le_net_inception_v1_winograd_layer_dataset.xhtml" target="_self">GoogLeNetInceptionV1WinogradLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_30_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_goog_le_net_inception_v4_activation_layer_dataset.xhtml" target="_self">GoogLeNetInceptionV4ActivationLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_31_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_goog_le_net_inception_v4_batch_normalization_layer_dataset.xhtml" target="_self">GoogLeNetInceptionV4BatchNormalizationLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_32_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_goog_le_net_inception_v4_convolution_layer_dataset.xhtml" target="_self">GoogLeNetInceptionV4ConvolutionLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_33_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_goog_le_net_inception_v4_direct_convolution_layer_dataset.xhtml" target="_self">GoogLeNetInceptionV4DirectConvolutionLayerDataset</a></td><td class="desc">A subset of GoogLeNetInceptionV4 convolution layers with filter dimensions supported by DirectConvolution kernel </td></tr>
<tr id="row_0_8_2_34_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_goog_le_net_inception_v4_fully_connected_layer_dataset.xhtml" target="_self">GoogLeNetInceptionV4FullyConnectedLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_35_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_goog_le_net_inception_v4_normalize_planar_y_u_v_layer_dataset.xhtml" target="_self">GoogLeNetInceptionV4NormalizePlanarYUVLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_36_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_goog_le_net_inception_v4_pooling_layer_dataset.xhtml" target="_self">GoogLeNetInceptionV4PoolingLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_37_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_goog_le_net_inception_v4_winograd_layer_dataset.xhtml" target="_self">GoogLeNetInceptionV4WinogradLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_38_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_gradient_dimensions.xhtml" target="_self">GradientDimensions</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_39_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span id="arr_0_8_2_39_" class="arrow" onclick="toggleFolder('0_8_2_39_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_h_o_g_descriptor_dataset.xhtml" target="_self">HOGDescriptorDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_39_0_" style="display:none;"><td class="entry"><span style="width:80px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1datasets_1_1_h_o_g_descriptor_dataset_1_1iterator.xhtml" target="_self">iterator</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_40_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span id="arr_0_8_2_40_" class="arrow" onclick="toggleFolder('0_8_2_40_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_image_file_dataset.xhtml" target="_self">ImageFileDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_40_0_" style="display:none;"><td class="entry"><span style="width:80px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1datasets_1_1_image_file_dataset_1_1iterator.xhtml" target="_self">iterator</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_41_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_interpolation_policies.xhtml" target="_self">InterpolationPolicies</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_42_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_large1_d_shapes.xhtml" target="_self">Large1DShapes</a></td><td class="desc">Data set containing large 1D tensor shapes </td></tr>
<tr id="row_0_8_2_43_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_large2_d_shapes.xhtml" target="_self">Large2DShapes</a></td><td class="desc">Data set containing large 2D tensor shapes </td></tr>
<tr id="row_0_8_2_44_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_large3_d_shapes.xhtml" target="_self">Large3DShapes</a></td><td class="desc">Data set containing large 3D tensor shapes </td></tr>
<tr id="row_0_8_2_45_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_large4_d_shapes.xhtml" target="_self">Large4DShapes</a></td><td class="desc">Data set containing large 4D tensor shapes </td></tr>
<tr id="row_0_8_2_46_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_large_convolution_layer_dataset.xhtml" target="_self">LargeConvolutionLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_47_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_large_depthwise_convolution_layer_dataset.xhtml" target="_self">LargeDepthwiseConvolutionLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_48_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_large_depthwise_convolution_layer_dataset3x3.xhtml" target="_self">LargeDepthwiseConvolutionLayerDataset3x3</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_49_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_large_fully_connected_layer_dataset.xhtml" target="_self">LargeFullyConnectedLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_50_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_large_g_e_m_m_dataset.xhtml" target="_self">LargeGEMMDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_51_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_large_g_e_m_m_lowp_dataset.xhtml" target="_self">LargeGEMMLowpDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_52_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_large_h_o_g_descriptor_dataset.xhtml" target="_self">LargeHOGDescriptorDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_53_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_large_image_files.xhtml" target="_self">LargeImageFiles</a></td><td class="desc">Data set containing names of small image files </td></tr>
<tr id="row_0_8_2_54_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_large_image_shapes.xhtml" target="_self">LargeImageShapes</a></td><td class="desc">Data set containing 2D tensor shapes relative to an image size </td></tr>
<tr id="row_0_8_2_55_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_large_scale_layer_shapes.xhtml" target="_self">LargeScaleLayerShapes</a></td><td class="desc">Data set containing large scale layer shapes </td></tr>
<tr id="row_0_8_2_56_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_large_shapes.xhtml" target="_self">LargeShapes</a></td><td class="desc">Data set containing large tensor shapes </td></tr>
<tr id="row_0_8_2_57_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_large_shapes_broadcast.xhtml" target="_self">LargeShapesBroadcast</a></td><td class="desc">Data set containing pairs of large tensor shapes that are broadcast compatible </td></tr>
<tr id="row_0_8_2_58_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_le_net5_activation_layer_dataset.xhtml" target="_self">LeNet5ActivationLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_59_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_le_net5_convolution_layer_dataset.xhtml" target="_self">LeNet5ConvolutionLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_60_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_le_net5_fully_connected_layer_dataset.xhtml" target="_self">LeNet5FullyConnectedLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_61_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_le_net5_pooling_layer_dataset.xhtml" target="_self">LeNet5PoolingLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_62_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_matrix_multiply_g_e_m_m_dataset.xhtml" target="_self">MatrixMultiplyGEMMDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_63_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_matrix_patterns.xhtml" target="_self">MatrixPatterns</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_64_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_medium2_d_shapes.xhtml" target="_self">Medium2DShapes</a></td><td class="desc">Data set containing medium 2D tensor shapes </td></tr>
<tr id="row_0_8_2_65_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_medium_shapes.xhtml" target="_self">MediumShapes</a></td><td class="desc">Data set containing medium tensor shapes </td></tr>
<tr id="row_0_8_2_66_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_mixed_threshold_dataset.xhtml" target="_self">MixedThresholdDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_67_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_mobile_net_activation_layer_dataset.xhtml" target="_self">MobileNetActivationLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_68_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_mobile_net_batch_normalization_layer_dataset.xhtml" target="_self">MobileNetBatchNormalizationLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_69_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_mobile_net_depthwise_convolution_layer_dataset.xhtml" target="_self">MobileNetDepthwiseConvolutionLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_70_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_mobile_net_depthwise_separable_convolution_layer_dataset.xhtml" target="_self">MobileNetDepthwiseSeparableConvolutionLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_71_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_non_linear_filter_functions.xhtml" target="_self">NonLinearFilterFunctions</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_72_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_normalization_types.xhtml" target="_self">NormalizationTypes</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_73_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span id="arr_0_8_2_73_" class="arrow" onclick="toggleFolder('0_8_2_73_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_normalize_planar_y_u_v_layer_dataset.xhtml" target="_self">NormalizePlanarYUVLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_73_0_" style="display:none;"><td class="entry"><span style="width:80px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1datasets_1_1_normalize_planar_y_u_v_layer_dataset_1_1iterator.xhtml" target="_self">iterator</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_74_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_optimized_depthwise_convolution_layer_dataset3x3.xhtml" target="_self">OptimizedDepthwiseConvolutionLayerDataset3x3</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_75_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span id="arr_0_8_2_75_" class="arrow" onclick="toggleFolder('0_8_2_75_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_pooling_layer_dataset.xhtml" target="_self">PoolingLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_75_0_" style="display:none;"><td class="entry"><span style="width:80px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1datasets_1_1_pooling_layer_dataset_1_1iterator.xhtml" target="_self">iterator</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_76_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_pooling_layer_dataset_special.xhtml" target="_self">PoolingLayerDatasetSpecial</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_77_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_pooling_types.xhtml" target="_self">PoolingTypes</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_78_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_random_batch_normalization_layer_dataset.xhtml" target="_self">RandomBatchNormalizationLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_79_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_random_normalize_planar_y_u_v_layer_dataset.xhtml" target="_self">RandomNormalizePlanarYUVLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_80_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_reduction_operations.xhtml" target="_self">ReductionOperations</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_81_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span id="arr_0_8_2_81_" class="arrow" onclick="toggleFolder('0_8_2_81_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_reshape_layer_dataset.xhtml" target="_self">ReshapeLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_81_0_" style="display:none;"><td class="entry"><span style="width:80px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1datasets_1_1_reshape_layer_dataset_1_1iterator.xhtml" target="_self">iterator</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_82_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span id="arr_0_8_2_82_" class="arrow" onclick="toggleFolder('0_8_2_82_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_r_o_i_pooling_layer_dataset.xhtml" target="_self">ROIPoolingLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_82_0_" style="display:none;"><td class="entry"><span style="width:80px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1datasets_1_1_r_o_i_pooling_layer_dataset_1_1iterator.xhtml" target="_self">iterator</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_83_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_sampling_policies.xhtml" target="_self">SamplingPolicies</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_84_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span id="arr_0_8_2_84_" class="arrow" onclick="toggleFolder('0_8_2_84_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_scale_layer_dataset.xhtml" target="_self">ScaleLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_84_0_" style="display:none;"><td class="entry"><span style="width:80px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1datasets_1_1_scale_layer_dataset_1_1iterator.xhtml" target="_self">iterator</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_85_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_small1_d_shapes.xhtml" target="_self">Small1DShapes</a></td><td class="desc">Data set containing small 1D tensor shapes </td></tr>
<tr id="row_0_8_2_86_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_small2_d_shapes.xhtml" target="_self">Small2DShapes</a></td><td class="desc">Data set containing small 2D tensor shapes </td></tr>
<tr id="row_0_8_2_87_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_small3_d_shapes.xhtml" target="_self">Small3DShapes</a></td><td class="desc">Data set containing small 3D tensor shapes </td></tr>
<tr id="row_0_8_2_88_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_small4_d_shapes.xhtml" target="_self">Small4DShapes</a></td><td class="desc">Data set containing small 4D tensor shapes </td></tr>
<tr id="row_0_8_2_89_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_small_convolution_layer_dataset.xhtml" target="_self">SmallConvolutionLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_90_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_small_deconvolution_shapes.xhtml" target="_self">SmallDeconvolutionShapes</a></td><td class="desc">Data set containing small tensor shapes for deconvolution </td></tr>
<tr id="row_0_8_2_91_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_small_depthwise_convolution_layer_dataset.xhtml" target="_self">SmallDepthwiseConvolutionLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_92_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_small_depthwise_convolution_layer_dataset3x3.xhtml" target="_self">SmallDepthwiseConvolutionLayerDataset3x3</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_93_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_small_direct_convolution_shapes.xhtml" target="_self">SmallDirectConvolutionShapes</a></td><td class="desc">Data set containing small tensor shapes for direct convolution </td></tr>
<tr id="row_0_8_2_94_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_small_direct_convolution_tensor_shift_shapes.xhtml" target="_self">SmallDirectConvolutionTensorShiftShapes</a></td><td class="desc">Data set containing small tensor shapes for direct convolution </td></tr>
<tr id="row_0_8_2_95_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_small_fully_connected_layer_dataset.xhtml" target="_self">SmallFullyConnectedLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_96_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_small_g_e_m_m_dataset.xhtml" target="_self">SmallGEMMDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_97_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_small_g_e_m_m_lowp_dataset.xhtml" target="_self">SmallGEMMLowpDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_98_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_small_h_o_g_descriptor_dataset.xhtml" target="_self">SmallHOGDescriptorDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_99_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_small_image_files.xhtml" target="_self">SmallImageFiles</a></td><td class="desc">Data set containing names of small image files </td></tr>
<tr id="row_0_8_2_100_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_small_image_shapes.xhtml" target="_self">SmallImageShapes</a></td><td class="desc">Data set containing 2D tensor shapes relative to an image size </td></tr>
<tr id="row_0_8_2_101_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_small_reshape_layer_dataset.xhtml" target="_self">SmallReshapeLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_102_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_small_r_o_i_pooling_layer_dataset.xhtml" target="_self">SmallROIPoolingLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_103_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_small_scale_layer_shapes.xhtml" target="_self">SmallScaleLayerShapes</a></td><td class="desc">Data set containing small scale layer shapes </td></tr>
<tr id="row_0_8_2_104_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_small_shapes.xhtml" target="_self">SmallShapes</a></td><td class="desc">Data set containing small tensor shapes </td></tr>
<tr id="row_0_8_2_105_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_small_shapes_broadcast.xhtml" target="_self">SmallShapesBroadcast</a></td><td class="desc">Data set containing pairs of small tensor shapes that are broadcast compatible </td></tr>
<tr id="row_0_8_2_106_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_small_winograd_layer_dataset.xhtml" target="_self">SmallWinogradLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_107_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_softmax_layer_large_shapes.xhtml" target="_self">SoftmaxLayerLargeShapes</a></td><td class="desc">Data set containing large softmax layer shapes </td></tr>
<tr id="row_0_8_2_108_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_softmax_layer_small_shapes.xhtml" target="_self">SoftmaxLayerSmallShapes</a></td><td class="desc">Data set containing small softmax layer shapes </td></tr>
<tr id="row_0_8_2_109_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_softmax_layer_tiny_shapes.xhtml" target="_self">SoftmaxLayerTinyShapes</a></td><td class="desc">Data set containing tiny softmax layer shapes </td></tr>
<tr id="row_0_8_2_110_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_squeeze_net_activation_layer_dataset.xhtml" target="_self">SqueezeNetActivationLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_111_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_squeeze_net_convolution_layer_dataset.xhtml" target="_self">SqueezeNetConvolutionLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_112_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_squeeze_net_pooling_layer_dataset.xhtml" target="_self">SqueezeNetPoolingLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_113_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_squeeze_net_winograd_layer_dataset.xhtml" target="_self">SqueezeNetWinogradLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_114_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span id="arr_0_8_2_114_" class="arrow" onclick="toggleFolder('0_8_2_114_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_threshold_dataset.xhtml" target="_self">ThresholdDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_114_0_" style="display:none;"><td class="entry"><span style="width:80px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1datasets_1_1_threshold_dataset_1_1iterator.xhtml" target="_self">iterator</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_115_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_tiny2_d_shapes.xhtml" target="_self">Tiny2DShapes</a></td><td class="desc">Data set containing tiny 2D tensor shapes </td></tr>
<tr id="row_0_8_2_116_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_tiny3_d_shapes.xhtml" target="_self">Tiny3DShapes</a></td><td class="desc">Data set containing tiny 3D tensor shapes </td></tr>
<tr id="row_0_8_2_117_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_tiny4_d_shapes.xhtml" target="_self">Tiny4DShapes</a></td><td class="desc">Data set containing tiny 4D tensor shapes </td></tr>
<tr id="row_0_8_2_118_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_tiny_convolution_layer_dataset.xhtml" target="_self">TinyConvolutionLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_119_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_tiny_direct_convolution_shapes.xhtml" target="_self">TinyDirectConvolutionShapes</a></td><td class="desc">Data set containing tiny tensor shapes for direct convolution </td></tr>
<tr id="row_0_8_2_120_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_tiny_fully_connected_layer_dataset.xhtml" target="_self">TinyFullyConnectedLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_121_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_tiny_g_e_m_m_dataset.xhtml" target="_self">TinyGEMMDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_122_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_tiny_shapes.xhtml" target="_self">TinyShapes</a></td><td class="desc">Data set containing small tensor shapes </td></tr>
<tr id="row_0_8_2_123_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_v_g_g16_activation_layer_dataset.xhtml" target="_self">VGG16ActivationLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_124_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_v_g_g16_convolution_layer_dataset.xhtml" target="_self">VGG16ConvolutionLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_125_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_v_g_g16_direct_convolution_layer_dataset.xhtml" target="_self">VGG16DirectConvolutionLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_126_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_v_g_g16_fully_connected_layer_dataset.xhtml" target="_self">VGG16FullyConnectedLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_127_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_v_g_g16_pooling_layer_dataset.xhtml" target="_self">VGG16PoolingLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_128_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_y_o_l_o_v2_activation_layer_dataset.xhtml" target="_self">YOLOV2ActivationLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_129_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_y_o_l_o_v2_activation_layer_l_i_n_e_a_r_dataset.xhtml" target="_self">YOLOV2ActivationLayerLINEARDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_130_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_y_o_l_o_v2_activation_layer_r_e_l_u_dataset.xhtml" target="_self">YOLOV2ActivationLayerRELUDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_131_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_y_o_l_o_v2_batch_normalization_layer_dataset.xhtml" target="_self">YOLOV2BatchNormalizationLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_132_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_y_o_l_o_v2_convolution_layer_dataset.xhtml" target="_self">YOLOV2ConvolutionLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_2_133_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1datasets_1_1_y_o_l_o_v2_pooling_layer_dataset.xhtml" target="_self">YOLOV2PoolingLayerDataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_3_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_0_8_3_" class="arrow" onclick="toggleFolder('0_8_3_')">&#9658;</span><span class="icona"><span class="icon">N</span></span><a class="el" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic.xhtml" target="_self">fixed_point_arithmetic</a></td><td class="desc"></td></tr>
<tr id="row_0_8_3_0_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span id="arr_0_8_3_0_" class="arrow" onclick="toggleFolder('0_8_3_0_')">&#9658;</span><span class="icona"><span class="icon">N</span></span><a class="el" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml" target="_self">detail</a></td><td class="desc"></td></tr>
<tr id="row_0_8_3_0_0_" style="display:none;"><td class="entry"><span style="width:80px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1constant__expr.xhtml" target="_self">constant_expr</a></td><td class="desc"></td></tr>
<tr id="row_0_8_3_0_1_" style="display:none;"><td class="entry"><span style="width:80px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml" target="_self">functions</a></td><td class="desc"></td></tr>
<tr id="row_0_8_3_1_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span id="arr_0_8_3_1_" class="arrow" onclick="toggleFolder('0_8_3_1_')">&#9658;</span><span class="icona"><span class="icon">N</span></span><a class="el" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits.xhtml" target="_self">traits</a></td><td class="desc">Fixed point traits </td></tr>
<tr id="row_0_8_3_1_0_" style="display:none;"><td class="entry"><span style="width:80px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits_1_1promote.xhtml" target="_self">promote</a></td><td class="desc"></td></tr>
<tr id="row_0_8_3_1_1_" style="display:none;"><td class="entry"><span style="width:80px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits_1_1promote_3_01int16__t_01_4.xhtml" target="_self">promote&lt; int16_t &gt;</a></td><td class="desc"></td></tr>
<tr id="row_0_8_3_1_2_" style="display:none;"><td class="entry"><span style="width:80px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits_1_1promote_3_01int32__t_01_4.xhtml" target="_self">promote&lt; int32_t &gt;</a></td><td class="desc"></td></tr>
<tr id="row_0_8_3_1_3_" style="display:none;"><td class="entry"><span style="width:80px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits_1_1promote_3_01int64__t_01_4.xhtml" target="_self">promote&lt; int64_t &gt;</a></td><td class="desc"></td></tr>
<tr id="row_0_8_3_1_4_" style="display:none;"><td class="entry"><span style="width:80px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits_1_1promote_3_01int8__t_01_4.xhtml" target="_self">promote&lt; int8_t &gt;</a></td><td class="desc"></td></tr>
<tr id="row_0_8_3_1_5_" style="display:none;"><td class="entry"><span style="width:80px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits_1_1promote_3_01uint16__t_01_4.xhtml" target="_self">promote&lt; uint16_t &gt;</a></td><td class="desc"></td></tr>
<tr id="row_0_8_3_1_6_" style="display:none;"><td class="entry"><span style="width:80px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits_1_1promote_3_01uint32__t_01_4.xhtml" target="_self">promote&lt; uint32_t &gt;</a></td><td class="desc"></td></tr>
<tr id="row_0_8_3_1_7_" style="display:none;"><td class="entry"><span style="width:80px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits_1_1promote_3_01uint64__t_01_4.xhtml" target="_self">promote&lt; uint64_t &gt;</a></td><td class="desc"></td></tr>
<tr id="row_0_8_3_1_8_" style="display:none;"><td class="entry"><span style="width:80px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits_1_1promote_3_01uint8__t_01_4.xhtml" target="_self">promote&lt; uint8_t &gt;</a></td><td class="desc"></td></tr>
<tr id="row_0_8_3_2_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml" target="_self">fixed_point</a></td><td class="desc">Arbitrary fixed-point arithmetic class </td></tr>
<tr id="row_0_8_4_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_0_8_4_" class="arrow" onclick="toggleFolder('0_8_4_')">&#9658;</span><span class="icona"><span class="icon">N</span></span><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml" target="_self">framework</a></td><td class="desc"></td></tr>
<tr id="row_0_8_4_0_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span id="arr_0_8_4_0_" class="arrow" onclick="toggleFolder('0_8_4_0_')">&#9658;</span><span class="icona"><span class="icon">N</span></span><a class="el" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml" target="_self">dataset</a></td><td class="desc"></td></tr>
<tr id="row_0_8_4_0_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span id="arr_0_8_4_0_0_" class="arrow" onclick="toggleFolder('0_8_4_0_0_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset.xhtml" target="_self">CartesianProductDataset</a></td><td class="desc">Implementation of a dataset representing all combinations of values of the input datasets </td></tr>
<tr id="row_0_8_4_0_0_0_" style="display:none;"><td class="entry"><span style="width:96px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset_1_1iterator.xhtml" target="_self">iterator</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_iterator.xhtml" title="Iterator updated by execute_window_loop for each window element. ">Iterator</a> for the dataset </td></tr>
<tr id="row_0_8_4_0_1_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span id="arr_0_8_4_0_1_" class="arrow" onclick="toggleFolder('0_8_4_0_1_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_container_dataset.xhtml" target="_self">ContainerDataset</a></td><td class="desc">Implementation of a dataset created from a container </td></tr>
<tr id="row_0_8_4_0_1_0_" style="display:none;"><td class="entry"><span style="width:96px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_container_dataset_1_1iterator.xhtml" target="_self">iterator</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_iterator.xhtml" title="Iterator updated by execute_window_loop for each window element. ">Iterator</a> for the dataset </td></tr>
<tr id="row_0_8_4_0_2_" style="display:none;"><td class="entry"><span style="width:80px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_dataset.xhtml" target="_self">Dataset</a></td><td class="desc">Abstract dataset base class </td></tr>
<tr id="row_0_8_4_0_3_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span id="arr_0_8_4_0_3_" class="arrow" onclick="toggleFolder('0_8_4_0_3_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_initializer_list_dataset.xhtml" target="_self">InitializerListDataset</a></td><td class="desc">Implementation of a dataset created from an initializer list </td></tr>
<tr id="row_0_8_4_0_3_0_" style="display:none;"><td class="entry"><span style="width:96px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_initializer_list_dataset_1_1iterator.xhtml" target="_self">iterator</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_iterator.xhtml" title="Iterator updated by execute_window_loop for each window element. ">Iterator</a> for the dataset </td></tr>
<tr id="row_0_8_4_0_4_" style="display:none;"><td class="entry"><span style="width:80px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1is__container.xhtml" target="_self">is_container</a></td><td class="desc">Base case </td></tr>
<tr id="row_0_8_4_0_5_" style="display:none;"><td class="entry"><span style="width:80px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1is__container_3_01std_1_1vector_3_01_v_00_01_a_01_4_01_4.xhtml" target="_self">is_container&lt; std::vector&lt; V, A &gt; &gt;</a></td><td class="desc"><a class="el" href="struct_vector.xhtml" title="Structure to hold Vector information. ">Vector</a> is considered a container </td></tr>
<tr id="row_0_8_4_0_6_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span id="arr_0_8_4_0_6_" class="arrow" onclick="toggleFolder('0_8_4_0_6_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_join_dataset.xhtml" target="_self">JoinDataset</a></td><td class="desc">Implementation of a dataset representing the concatenation of the input datasets </td></tr>
<tr id="row_0_8_4_0_6_0_" style="display:none;"><td class="entry"><span style="width:96px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_join_dataset_1_1iterator.xhtml" target="_self">iterator</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_iterator.xhtml" title="Iterator updated by execute_window_loop for each window element. ">Iterator</a> for the dataset </td></tr>
<tr id="row_0_8_4_0_7_" style="display:none;"><td class="entry"><span style="width:80px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_named_dataset.xhtml" target="_self">NamedDataset</a></td><td class="desc">Abstract implementation of a named dataset </td></tr>
<tr id="row_0_8_4_0_8_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span id="arr_0_8_4_0_8_" class="arrow" onclick="toggleFolder('0_8_4_0_8_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_range_dataset.xhtml" target="_self">RangeDataset</a></td><td class="desc">Implementation of a dataset created from a range of values </td></tr>
<tr id="row_0_8_4_0_8_0_" style="display:none;"><td class="entry"><span style="width:96px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_range_dataset_1_1iterator.xhtml" target="_self">iterator</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_iterator.xhtml" title="Iterator updated by execute_window_loop for each window element. ">Iterator</a> for the dataset </td></tr>
<tr id="row_0_8_4_0_9_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span id="arr_0_8_4_0_9_" class="arrow" onclick="toggleFolder('0_8_4_0_9_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_singleton_dataset.xhtml" target="_self">SingletonDataset</a></td><td class="desc">Implementation of a dataset holding a single value </td></tr>
<tr id="row_0_8_4_0_9_0_" style="display:none;"><td class="entry"><span style="width:96px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_singleton_dataset_1_1iterator.xhtml" target="_self">iterator</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_iterator.xhtml" title="Iterator updated by execute_window_loop for each window element. ">Iterator</a> for the dataset </td></tr>
<tr id="row_0_8_4_0_10_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span id="arr_0_8_4_0_10_" class="arrow" onclick="toggleFolder('0_8_4_0_10_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_zip_dataset.xhtml" target="_self">ZipDataset</a></td><td class="desc">Implementation of a dataset representing pairs of values of the input datasets </td></tr>
<tr id="row_0_8_4_0_10_0_" style="display:none;"><td class="entry"><span style="width:96px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_zip_dataset_1_1iterator.xhtml" target="_self">iterator</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_iterator.xhtml" title="Iterator updated by execute_window_loop for each window element. ">Iterator</a> for the dataset </td></tr>
<tr id="row_0_8_4_1_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span id="arr_0_8_4_1_" class="arrow" onclick="toggleFolder('0_8_4_1_')">&#9658;</span><span class="icona"><span class="icon">N</span></span><a class="el" href="namespacearm__compute_1_1test_1_1framework_1_1detail.xhtml" target="_self">detail</a></td><td class="desc"></td></tr>
<tr id="row_0_8_4_1_0_" style="display:none;"><td class="entry"><span style="width:80px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1detail_1_1_test_case_registrar.xhtml" target="_self">TestCaseRegistrar</a></td><td class="desc">Helper class to statically register a test case </td></tr>
<tr id="row_0_8_4_1_1_" style="display:none;"><td class="entry"><span style="width:80px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1detail_1_1_test_suite_registrar.xhtml" target="_self">TestSuiteRegistrar</a></td><td class="desc">Helper class to statically begin and end a test suite </td></tr>
<tr id="row_0_8_4_2_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_command_line_parser.xhtml" target="_self">CommandLineParser</a></td><td class="desc">Class to parse command line arguments </td></tr>
<tr id="row_0_8_4_3_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_common_options.xhtml" target="_self">CommonOptions</a></td><td class="desc">Common command line options used to configure the framework </td></tr>
<tr id="row_0_8_4_4_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_data_test_case.xhtml" target="_self">DataTestCase</a></td><td class="desc"></td></tr>
<tr id="row_0_8_4_5_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_data_test_case_factory.xhtml" target="_self">DataTestCaseFactory</a></td><td class="desc"></td></tr>
<tr id="row_0_8_4_6_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_enum_list_option.xhtml" target="_self">EnumListOption</a></td><td class="desc">Implementation of an option that accepts any number of values from a fixed set </td></tr>
<tr id="row_0_8_4_7_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_enum_option.xhtml" target="_self">EnumOption</a></td><td class="desc">Implementation of a simple option that accepts a value from a fixed set </td></tr>
<tr id="row_0_8_4_8_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_file_not_found.xhtml" target="_self">FileNotFound</a></td><td class="desc">Error class for when some external assets are missing </td></tr>
<tr id="row_0_8_4_9_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_fixture.xhtml" target="_self">Fixture</a></td><td class="desc">Abstract fixture class </td></tr>
<tr id="row_0_8_4_10_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml" target="_self">Framework</a></td><td class="desc">Main framework class </td></tr>
<tr id="row_0_8_4_11_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml" target="_self">Instrument</a></td><td class="desc">Interface for classes that can be used to measure performance </td></tr>
<tr id="row_0_8_4_12_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instruments_stats.xhtml" target="_self">InstrumentsStats</a></td><td class="desc">Generate common statistics for a set of measurements </td></tr>
<tr id="row_0_8_4_13_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_j_s_o_n_printer.xhtml" target="_self">JSONPrinter</a></td><td class="desc">Implementation of a <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml">Printer</a> that produces JSON output </td></tr>
<tr id="row_0_8_4_14_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_list_option.xhtml" target="_self">ListOption</a></td><td class="desc">Implementation of an option that accepts any number of values </td></tr>
<tr id="row_0_8_4_15_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_mali_counter.xhtml" target="_self">MaliCounter</a></td><td class="desc"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml" title="Interface for classes that can be used to measure performance. ">Instrument</a> implementation for mali hw counters </td></tr>
<tr id="row_0_8_4_16_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span id="arr_0_8_4_16_" class="arrow" onclick="toggleFolder('0_8_4_16_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml" target="_self">Measurement</a></td><td class="desc">Generic measurement that stores values as either double or long long int </td></tr>
<tr id="row_0_8_4_16_0_" style="display:none;"><td class="entry"><span style="width:80px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml" target="_self">Value</a></td><td class="desc"></td></tr>
<tr id="row_0_8_4_17_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_open_c_l_timer.xhtml" target="_self">OpenCLTimer</a></td><td class="desc"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml" title="Interface for classes that can be used to measure performance. ">Instrument</a> creating measurements based on the information returned by clGetEventProfilingInfo for each OpenCL kernel executed </td></tr>
<tr id="row_0_8_4_18_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_option.xhtml" target="_self">Option</a></td><td class="desc">Abstract base class for a command line option </td></tr>
<tr id="row_0_8_4_19_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_p_m_u.xhtml" target="_self">PMU</a></td><td class="desc">Class provides access to CPU hardware counters </td></tr>
<tr id="row_0_8_4_20_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_p_m_u_counter.xhtml" target="_self">PMUCounter</a></td><td class="desc">Implementation of an instrument to count CPU cycles </td></tr>
<tr id="row_0_8_4_21_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml" target="_self">PrettyPrinter</a></td><td class="desc">Implementation of a <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml">Printer</a> that produces human readable output </td></tr>
<tr id="row_0_8_4_22_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml" target="_self">Printer</a></td><td class="desc">Abstract printer class used by the <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml">Framework</a> to present output </td></tr>
<tr id="row_0_8_4_23_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_profiler.xhtml" target="_self">Profiler</a></td><td class="desc"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_profiler.xhtml" title="Profiler class to collect benchmark numbers. ">Profiler</a> class to collect benchmark numbers </td></tr>
<tr id="row_0_8_4_24_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span id="arr_0_8_4_24_" class="arrow" onclick="toggleFolder('0_8_4_24_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_scheduler_timer.xhtml" target="_self">SchedulerTimer</a></td><td class="desc"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml" title="Interface for classes that can be used to measure performance. ">Instrument</a> creating measurements based on the information returned by clGetEventProfilingInfo for each OpenCL kernel executed </td></tr>
<tr id="row_0_8_4_24_0_" style="display:none;"><td class="entry"><span style="width:80px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_scheduler_timer_1_1kernel__info.xhtml" target="_self">kernel_info</a></td><td class="desc"></td></tr>
<tr id="row_0_8_4_25_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_simple_option.xhtml" target="_self">SimpleOption</a></td><td class="desc">Implementation of an option that accepts a single value </td></tr>
<tr id="row_0_8_4_26_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_simple_test_case_factory.xhtml" target="_self">SimpleTestCaseFactory</a></td><td class="desc">Implementation of a test case factory to create non-data test cases </td></tr>
<tr id="row_0_8_4_27_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_test_case.xhtml" target="_self">TestCase</a></td><td class="desc">Abstract test case class </td></tr>
<tr id="row_0_8_4_28_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_test_case_factory.xhtml" target="_self">TestCaseFactory</a></td><td class="desc">Abstract factory class to create test cases </td></tr>
<tr id="row_0_8_4_29_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_test_error.xhtml" target="_self">TestError</a></td><td class="desc">Error class for failures during test execution </td></tr>
<tr id="row_0_8_4_30_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_test_filter.xhtml" target="_self">TestFilter</a></td><td class="desc">Test filter class </td></tr>
<tr id="row_0_8_4_31_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml" target="_self">TestInfo</a></td><td class="desc">Information about a test case </td></tr>
<tr id="row_0_8_4_32_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_test_result.xhtml" target="_self">TestResult</a></td><td class="desc">Class to store results of a test </td></tr>
<tr id="row_0_8_4_33_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_toggle_option.xhtml" target="_self">ToggleOption</a></td><td class="desc">Implementation of an option that can be either true or false </td></tr>
<tr id="row_0_8_4_34_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_wall_clock_timer.xhtml" target="_self">WallClockTimer</a></td><td class="desc">Implementation of an instrument to measure elapsed wall-clock time in milliseconds </td></tr>
<tr id="row_0_8_5_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_0_8_5_" class="arrow" onclick="toggleFolder('0_8_5_')">&#9658;</span><span class="icona"><span class="icon">N</span></span><a class="el" href="namespacearm__compute_1_1test_1_1networks.xhtml" target="_self">networks</a></td><td class="desc"></td></tr>
<tr id="row_0_8_5_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1networks_1_1_alex_net_network.xhtml" target="_self">AlexNetNetwork</a></td><td class="desc">AlexNet model object </td></tr>
<tr id="row_0_8_5_1_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1networks_1_1_le_net5_network.xhtml" target="_self">LeNet5Network</a></td><td class="desc">Lenet5 model object </td></tr>
<tr id="row_0_8_5_2_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1networks_1_1_mobile_net_network.xhtml" target="_self">MobileNetNetwork</a></td><td class="desc">MobileNet model object </td></tr>
<tr id="row_0_8_5_3_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1networks_1_1_mobile_net_v1_network.xhtml" target="_self">MobileNetV1Network</a></td><td class="desc">MobileNet model object </td></tr>
<tr id="row_0_8_6_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_0_8_6_" class="arrow" onclick="toggleFolder('0_8_6_')">&#9658;</span><span class="icona"><span class="icon">N</span></span><a class="el" href="namespacearm__compute_1_1test_1_1traits.xhtml" target="_self">traits</a></td><td class="desc"></td></tr>
<tr id="row_0_8_6_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1traits_1_1promote.xhtml" target="_self">promote</a></td><td class="desc"></td></tr>
<tr id="row_0_8_6_1_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1traits_1_1promote_3_01float_01_4.xhtml" target="_self">promote&lt; float &gt;</a></td><td class="desc"></td></tr>
<tr id="row_0_8_6_2_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1traits_1_1promote_3_01half_01_4.xhtml" target="_self">promote&lt; half &gt;</a></td><td class="desc"></td></tr>
<tr id="row_0_8_6_3_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1traits_1_1promote_3_01int16__t_01_4.xhtml" target="_self">promote&lt; int16_t &gt;</a></td><td class="desc"></td></tr>
<tr id="row_0_8_6_4_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1traits_1_1promote_3_01int32__t_01_4.xhtml" target="_self">promote&lt; int32_t &gt;</a></td><td class="desc"></td></tr>
<tr id="row_0_8_6_5_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1traits_1_1promote_3_01int8__t_01_4.xhtml" target="_self">promote&lt; int8_t &gt;</a></td><td class="desc"></td></tr>
<tr id="row_0_8_6_6_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1traits_1_1promote_3_01uint16__t_01_4.xhtml" target="_self">promote&lt; uint16_t &gt;</a></td><td class="desc"></td></tr>
<tr id="row_0_8_6_7_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1traits_1_1promote_3_01uint32__t_01_4.xhtml" target="_self">promote&lt; uint32_t &gt;</a></td><td class="desc"></td></tr>
<tr id="row_0_8_6_8_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1traits_1_1promote_3_01uint8__t_01_4.xhtml" target="_self">promote&lt; uint8_t &gt;</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_0_8_7_" class="arrow" onclick="toggleFolder('0_8_7_')">&#9658;</span><span class="icona"><span class="icon">N</span></span><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml" target="_self">validation</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_absolute_difference_validation_fixture.xhtml" target="_self">AbsoluteDifferenceValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_1_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_absolute_tolerance.xhtml" target="_self">AbsoluteTolerance</a></td><td class="desc">Class reprensenting an absolute tolerance value </td></tr>
<tr id="row_0_8_7_2_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_accumulate_base_validation_fixture.xhtml" target="_self">AccumulateBaseValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_3_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_accumulate_squared_validation_fixture.xhtml" target="_self">AccumulateSquaredValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_4_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_accumulate_validation_fixture.xhtml" target="_self">AccumulateValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_5_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_accumulate_weighted_validation_fixture.xhtml" target="_self">AccumulateWeightedValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_6_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_activation_validation_fixed_point_fixture.xhtml" target="_self">ActivationValidationFixedPointFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_7_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_activation_validation_fixture.xhtml" target="_self">ActivationValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_8_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_activation_validation_generic_fixture.xhtml" target="_self">ActivationValidationGenericFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_9_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_activation_validation_quantized_fixture.xhtml" target="_self">ActivationValidationQuantizedFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_10_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_arithmetic_addition_broadcast_validation_fixed_point_fixture.xhtml" target="_self">ArithmeticAdditionBroadcastValidationFixedPointFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_11_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_arithmetic_addition_broadcast_validation_fixture.xhtml" target="_self">ArithmeticAdditionBroadcastValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_12_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_arithmetic_addition_validation_fixed_point_fixture.xhtml" target="_self">ArithmeticAdditionValidationFixedPointFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_13_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_arithmetic_addition_validation_fixture.xhtml" target="_self">ArithmeticAdditionValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_14_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_arithmetic_subtraction_validation_fixed_point_fixture.xhtml" target="_self">ArithmeticSubtractionValidationFixedPointFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_15_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_arithmetic_subtraction_validation_fixture.xhtml" target="_self">ArithmeticSubtractionValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_16_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_batch_normalization_layer_validation_fixed_point_fixture.xhtml" target="_self">BatchNormalizationLayerValidationFixedPointFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_17_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_batch_normalization_layer_validation_fixture.xhtml" target="_self">BatchNormalizationLayerValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_18_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_bitwise_and_validation_fixture.xhtml" target="_self">BitwiseAndValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_19_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_bitwise_not_validation_fixture.xhtml" target="_self">BitwiseNotValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_20_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_bitwise_or_validation_fixture.xhtml" target="_self">BitwiseOrValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_21_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_bitwise_xor_validation_fixture.xhtml" target="_self">BitwiseXorValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_22_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_box3x3_validation_fixture.xhtml" target="_self">Box3x3ValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_23_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_channel_extract_validation_fixture.xhtml" target="_self">ChannelExtractValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_24_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1validation_1_1compare.xhtml" target="_self">compare</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_25_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1validation_1_1compare_3_01_absolute_tolerance_3_01_u_01_4_01_4.xhtml" target="_self">compare&lt; AbsoluteTolerance&lt; U &gt; &gt;</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_26_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1validation_1_1compare_3_01_relative_tolerance_3_01_u_01_4_01_4.xhtml" target="_self">compare&lt; RelativeTolerance&lt; U &gt; &gt;</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_27_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1validation_1_1compare__base.xhtml" target="_self">compare_base</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_28_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_convolution_rectangle_validation_fixture.xhtml" target="_self">ConvolutionRectangleValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_29_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_convolution_separable_validation_fixture.xhtml" target="_self">ConvolutionSeparableValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_30_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_convolution_square_validation_fixture.xhtml" target="_self">ConvolutionSquareValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_31_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_convolution_validation_fixed_point_fixture.xhtml" target="_self">ConvolutionValidationFixedPointFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_32_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_convolution_validation_fixture.xhtml" target="_self">ConvolutionValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_33_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_convolution_validation_generic_fixture.xhtml" target="_self">ConvolutionValidationGenericFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_34_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_convolution_validation_quantized_fixture.xhtml" target="_self">ConvolutionValidationQuantizedFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_35_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_deconvolution_layer_fixture_base.xhtml" target="_self">DeconvolutionLayerFixtureBase</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_36_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_deconvolution_validation_fixture.xhtml" target="_self">DeconvolutionValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_37_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_depth_concatenate_layer_validation_fixture.xhtml" target="_self">DepthConcatenateLayerValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_38_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_depth_convert_layer_validation_fixed_point_fixture.xhtml" target="_self">DepthConvertLayerValidationFixedPointFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_39_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_depth_convert_layer_validation_fixture.xhtml" target="_self">DepthConvertLayerValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_40_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_depth_convert_layer_validation_fractional_bits_fixture.xhtml" target="_self">DepthConvertLayerValidationFractionalBitsFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_41_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_depthwise_convolution_layer_validation_fixture.xhtml" target="_self">DepthwiseConvolutionLayerValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_42_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_depthwise_convolution_layer_validation_generic_fixture.xhtml" target="_self">DepthwiseConvolutionLayerValidationGenericFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_43_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_depthwise_convolution_layer_validation_quantized_fixture.xhtml" target="_self">DepthwiseConvolutionLayerValidationQuantizedFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_44_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_depthwise_separable_convolution_validation_fixture.xhtml" target="_self">DepthwiseSeparableConvolutionValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_45_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_dequantization_validation_fixed_point_fixture.xhtml" target="_self">DequantizationValidationFixedPointFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_46_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_dequantization_validation_fixture.xhtml" target="_self">DequantizationValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_47_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_derivative_validation_fixture.xhtml" target="_self">DerivativeValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_48_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_dilate_validation_fixture.xhtml" target="_self">DilateValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_49_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_direct_convolution_validation_fixed_point_fixture.xhtml" target="_self">DirectConvolutionValidationFixedPointFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_50_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_direct_convolution_validation_fixed_point_tensor_shift_fixture.xhtml" target="_self">DirectConvolutionValidationFixedPointTensorShiftFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_51_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_direct_convolution_validation_fixture.xhtml" target="_self">DirectConvolutionValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_52_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_direct_convolution_validation_generic_fixture.xhtml" target="_self">DirectConvolutionValidationGenericFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_53_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_direct_convolution_validation_generic_tensor_shift_fixture.xhtml" target="_self">DirectConvolutionValidationGenericTensorShiftFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_54_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_direct_convolution_validation_quantized_fixture.xhtml" target="_self">DirectConvolutionValidationQuantizedFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_55_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_direct_convolution_validation_quantized_tensor_shift_fixture.xhtml" target="_self">DirectConvolutionValidationQuantizedTensorShiftFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_56_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_direct_convolution_validation_tensor_shift_fixture.xhtml" target="_self">DirectConvolutionValidationTensorShiftFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_57_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_direct_convolution_validation_with_tensor_shapes_fixture.xhtml" target="_self">DirectConvolutionValidationWithTensorShapesFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_58_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_direct_convolution_validation_with_tensor_shapes_quantized_fixture.xhtml" target="_self">DirectConvolutionValidationWithTensorShapesQuantizedFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_59_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_direct_convolution_validation_with_tensor_shapes_quantized_tensor_shift_fixture.xhtml" target="_self">DirectConvolutionValidationWithTensorShapesQuantizedTensorShiftFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_60_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_direct_convolution_validation_with_tensor_shapes_tensor_shift_fixture.xhtml" target="_self">DirectConvolutionValidationWithTensorShapesTensorShiftFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_61_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_dropout_layer_validation_fixture.xhtml" target="_self">DropoutLayerValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_62_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_equalize_histogram_validation_fixture.xhtml" target="_self">EqualizeHistogramValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_63_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_erode_validation_fixture.xhtml" target="_self">ErodeValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_64_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_fast_corners_validation_fixture.xhtml" target="_self">FastCornersValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_65_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_fixed_point_pixel_wise_multiplication_validation_fixture.xhtml" target="_self">FixedPointPixelWiseMultiplicationValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_66_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_fixed_point_validation_fixture.xhtml" target="_self">FixedPointValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_67_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_flatten_layer_validation_fixture.xhtml" target="_self">FlattenLayerValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_68_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_floor_validation_fixture.xhtml" target="_self">FloorValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_69_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_fully_connected_layer_validation_fixed_point_fixture.xhtml" target="_self">FullyConnectedLayerValidationFixedPointFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_70_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_fully_connected_layer_validation_fixture.xhtml" target="_self">FullyConnectedLayerValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_71_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_fully_connected_layer_validation_generic_fixture.xhtml" target="_self">FullyConnectedLayerValidationGenericFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_72_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_fully_connected_layer_validation_quantized_fixture.xhtml" target="_self">FullyConnectedLayerValidationQuantizedFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_73_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_gaussian3x3_validation_fixture.xhtml" target="_self">Gaussian3x3ValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_74_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_gaussian5x5_validation_fixture.xhtml" target="_self">Gaussian5x5ValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_75_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_gaussian_pyramid_half_validation_fixture.xhtml" target="_self">GaussianPyramidHalfValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_76_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_g_e_m_m_interleave4x4_validation_fixed_point_fixture.xhtml" target="_self">GEMMInterleave4x4ValidationFixedPointFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_77_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_g_e_m_m_interleave4x4_validation_fixture.xhtml" target="_self">GEMMInterleave4x4ValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_78_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_g_e_m_m_interleave_blocked_validation_fixture.xhtml" target="_self">GEMMInterleaveBlockedValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_79_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_g_e_m_m_lowp_assembly_fixture.xhtml" target="_self">GEMMLowpAssemblyFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_80_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_g_e_m_m_lowp_matrix_multiply_core_validation_fixture.xhtml" target="_self">GEMMLowpMatrixMultiplyCoreValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_81_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_g_e_m_m_lowp_quantize_down_int32_to_uint8_scale_by_fixed_point_validation_fixture.xhtml" target="_self">GEMMLowpQuantizeDownInt32ToUint8ScaleByFixedPointValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_82_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_g_e_m_m_lowp_quantize_down_int32_to_uint8_scale_validation_fixture.xhtml" target="_self">GEMMLowpQuantizeDownInt32ToUint8ScaleValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_83_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_g_e_m_m_transpose1x_w_validation_fixed_point_fixture.xhtml" target="_self">GEMMTranspose1xWValidationFixedPointFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_84_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_g_e_m_m_transpose1x_w_validation_fixture.xhtml" target="_self">GEMMTranspose1xWValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_85_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_g_e_m_m_validation_fixed_point_fixture.xhtml" target="_self">GEMMValidationFixedPointFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_86_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_g_e_m_m_validation_fixture.xhtml" target="_self">GEMMValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_87_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_global_pooling_layer_validation_fixture.xhtml" target="_self">GlobalPoolingLayerValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_88_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1validation_1_1_harris_corners_parameters.xhtml" target="_self">HarrisCornersParameters</a></td><td class="desc">Parameters of Harris Corners algorithm </td></tr>
<tr id="row_0_8_7_89_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_harris_corners_validation_fixture.xhtml" target="_self">HarrisCornersValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_90_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_histogram_validation_fixture.xhtml" target="_self">HistogramValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_91_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_h_o_g_descriptor_validation_fixture.xhtml" target="_self">HOGDescriptorValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_92_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_integral_image_validation_fixture.xhtml" target="_self">IntegralImageValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_93_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1validation_1_1is__floating__point.xhtml" target="_self">is_floating_point</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_94_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1validation_1_1is__floating__point_3_01half_01_4.xhtml" target="_self">is_floating_point&lt; half &gt;</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_95_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_l2_normalize_layer_validation_fixture.xhtml" target="_self">L2NormalizeLayerValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_96_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_magnitude_validation_fixture.xhtml" target="_self">MagnitudeValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_97_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_mean_std_dev_validation_fixture.xhtml" target="_self">MeanStdDevValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_98_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_median3x3_validation_fixture.xhtml" target="_self">Median3x3ValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_99_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_min_max_location_validation_fixture.xhtml" target="_self">MinMaxLocationValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_100_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_non_linear_filter_validation_fixture.xhtml" target="_self">NonLinearFilterValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_101_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_normalization_validation_fixed_point_fixture.xhtml" target="_self">NormalizationValidationFixedPointFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_102_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_normalization_validation_fixture.xhtml" target="_self">NormalizationValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_103_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_normalize_planar_y_u_v_layer_validation_fixed_point_fixture.xhtml" target="_self">NormalizePlanarYUVLayerValidationFixedPointFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_104_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_normalize_planar_y_u_v_layer_validation_fixture.xhtml" target="_self">NormalizePlanarYUVLayerValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_105_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_permute_validation_fixture.xhtml" target="_self">PermuteValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_106_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_phase_validation_fixture.xhtml" target="_self">PhaseValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_107_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_pixel_wise_multiplication_broadcast_validation_fixture.xhtml" target="_self">PixelWiseMultiplicationBroadcastValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_108_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_pixel_wise_multiplication_validation_fixture.xhtml" target="_self">PixelWiseMultiplicationValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_109_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_pooling_layer_validation_fixed_point_fixture.xhtml" target="_self">PoolingLayerValidationFixedPointFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_110_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_pooling_layer_validation_fixture.xhtml" target="_self">PoolingLayerValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_111_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_pooling_layer_validation_generic_fixture.xhtml" target="_self">PoolingLayerValidationGenericFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_112_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_pooling_layer_validation_quantized_fixture.xhtml" target="_self">PoolingLayerValidationQuantizedFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_113_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_quantization_validation_fixed_point_fixture.xhtml" target="_self">QuantizationValidationFixedPointFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_114_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_quantization_validation_fixture.xhtml" target="_self">QuantizationValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_115_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_reduction_operation_validation_fixture.xhtml" target="_self">ReductionOperationValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_116_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_relative_tolerance.xhtml" target="_self">RelativeTolerance</a></td><td class="desc">Class reprensenting a relative tolerance value </td></tr>
<tr id="row_0_8_7_117_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_remap_validation_fixture.xhtml" target="_self">RemapValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_118_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_reshape_layer_validation_fixture.xhtml" target="_self">ReshapeLayerValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_119_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_scale_validation_fixture.xhtml" target="_self">ScaleValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_120_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_scharr_validation_fixture.xhtml" target="_self">ScharrValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_121_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_sobel_validation_fixture.xhtml" target="_self">SobelValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_122_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_softmax_validation_fixed_point_fixture.xhtml" target="_self">SoftmaxValidationFixedPointFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_123_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_softmax_validation_fixture.xhtml" target="_self">SoftmaxValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_124_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_softmax_validation_generic_fixture.xhtml" target="_self">SoftmaxValidationGenericFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_125_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_softmax_validation_quantized_fixture.xhtml" target="_self">SoftmaxValidationQuantizedFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_126_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_special_pooling_layer_validation_fixture.xhtml" target="_self">SpecialPoolingLayerValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_127_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_table_lookup_validation_fixture.xhtml" target="_self">TableLookupValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_128_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_threshold_validation_fixture.xhtml" target="_self">ThresholdValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_129_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_transpose_validation_fixture.xhtml" target="_self">TransposeValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_130_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_warp_affine_validation_fixture.xhtml" target="_self">WarpAffineValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_131_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_warp_perspective_validation_fixture.xhtml" target="_self">WarpPerspectiveValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_7_132_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_winograd_layer_validation_fixture.xhtml" target="_self">WinogradLayerValidationFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_8_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_accessor.xhtml" target="_self">Accessor</a></td><td class="desc"><a class="el" href="classarm__compute_1_1test_1_1_accessor.xhtml" title="Accessor implementation for Tensor objects. ">Accessor</a> implementation for <a class="el" href="classarm__compute_1_1_tensor.xhtml">Tensor</a> objects </td></tr>
<tr id="row_0_8_9_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_activation_layer_fixture.xhtml" target="_self">ActivationLayerFixture</a></td><td class="desc">Fixture that can be used for NEON and CL </td></tr>
<tr id="row_0_8_10_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_alex_net_fixture.xhtml" target="_self">AlexNetFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_11_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_array_accessor.xhtml" target="_self">ArrayAccessor</a></td><td class="desc"><a class="el" href="classarm__compute_1_1test_1_1_array_accessor.xhtml" title="ArrayAccessor implementation for Array objects. ">ArrayAccessor</a> implementation for <a class="el" href="classarm__compute_1_1_array.xhtml">Array</a> objects </td></tr>
<tr id="row_0_8_12_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_assets_library.xhtml" target="_self">AssetsLibrary</a></td><td class="desc">Factory class to create and fill tensors </td></tr>
<tr id="row_0_8_13_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_batch_normalization_layer_fixture.xhtml" target="_self">BatchNormalizationLayerFixture</a></td><td class="desc">Fixture that can be used for NEON and CL </td></tr>
<tr id="row_0_8_14_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_c_l_accessor.xhtml" target="_self">CLAccessor</a></td><td class="desc"><a class="el" href="classarm__compute_1_1test_1_1_accessor.xhtml" title="Accessor implementation for Tensor objects. ">Accessor</a> implementation for <a class="el" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a> objects </td></tr>
<tr id="row_0_8_15_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_c_l_array_accessor.xhtml" target="_self">CLArrayAccessor</a></td><td class="desc"><a class="el" href="classarm__compute_1_1test_1_1_accessor.xhtml" title="Accessor implementation for Tensor objects. ">Accessor</a> implementation for <a class="el" href="classarm__compute_1_1_c_l_array.xhtml">CLArray</a> objects </td></tr>
<tr id="row_0_8_16_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_c_l_lut_accessor.xhtml" target="_self">CLLutAccessor</a></td><td class="desc"><a class="el" href="classarm__compute_1_1test_1_1_accessor.xhtml" title="Accessor implementation for Tensor objects. ">Accessor</a> implementation for <a class="el" href="classarm__compute_1_1_c_l_lut.xhtml">CLLut</a> objects </td></tr>
<tr id="row_0_8_17_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_c_l_synthetize_function.xhtml" target="_self">CLSynthetizeFunction</a></td><td class="desc"></td></tr>
<tr id="row_0_8_18_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_c_l_synthetize_function_with_zero_constant_border.xhtml" target="_self">CLSynthetizeFunctionWithZeroConstantBorder</a></td><td class="desc"></td></tr>
<tr id="row_0_8_19_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1common__promoted__signed__type.xhtml" target="_self">common_promoted_signed_type</a></td><td class="desc">Find the signed promoted common type </td></tr>
<tr id="row_0_8_20_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1test_1_1common__promoted__unsigned__type.xhtml" target="_self">common_promoted_unsigned_type</a></td><td class="desc">Find the unsigned promoted common type </td></tr>
<tr id="row_0_8_21_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_convolution_layer_fixture.xhtml" target="_self">ConvolutionLayerFixture</a></td><td class="desc">Fixture that can be used for NEON and CL </td></tr>
<tr id="row_0_8_22_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_depthwise_convolution_layer_fixture.xhtml" target="_self">DepthwiseConvolutionLayerFixture</a></td><td class="desc">Fixture that can be used for NEON and CL </td></tr>
<tr id="row_0_8_23_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_depthwise_separable_convolution_layer_fixture.xhtml" target="_self">DepthwiseSeparableConvolutionLayerFixture</a></td><td class="desc">Fixture that can be used for NEON and CL </td></tr>
<tr id="row_0_8_24_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_floor_fixture.xhtml" target="_self">FloorFixture</a></td><td class="desc">Fixture that can be used for NEON and CL </td></tr>
<tr id="row_0_8_25_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_fully_connected_layer_fixture.xhtml" target="_self">FullyConnectedLayerFixture</a></td><td class="desc">Fixture that can be used for NEON and CL </td></tr>
<tr id="row_0_8_26_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_g_c_accessor.xhtml" target="_self">GCAccessor</a></td><td class="desc"><a class="el" href="classarm__compute_1_1test_1_1_accessor.xhtml" title="Accessor implementation for Tensor objects. ">Accessor</a> implementation for <a class="el" href="classarm__compute_1_1_g_c_tensor.xhtml">GCTensor</a> objects </td></tr>
<tr id="row_0_8_27_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_g_e_m_m_fixture.xhtml" target="_self">GEMMFixture</a></td><td class="desc">Fixture that can be used for NEON and CL </td></tr>
<tr id="row_0_8_28_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_g_e_m_m_lowp_matrix_multiply_core_fixture.xhtml" target="_self">GEMMLowpMatrixMultiplyCoreFixture</a></td><td class="desc">Fixture that can be used for NEON and CL </td></tr>
<tr id="row_0_8_29_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_i_accessor.xhtml" target="_self">IAccessor</a></td><td class="desc">Common interface to provide information and access to tensor like structures </td></tr>
<tr id="row_0_8_30_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_i_array_accessor.xhtml" target="_self">IArrayAccessor</a></td><td class="desc">Common interface to provide information and access to array like structures </td></tr>
<tr id="row_0_8_31_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_i_lut_accessor.xhtml" target="_self">ILutAccessor</a></td><td class="desc">Common interface to provide information and access to <a class="el" href="classarm__compute_1_1_lut.xhtml" title="Basic implementation of the LUT interface. ">Lut</a> like structures </td></tr>
<tr id="row_0_8_32_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_le_net5_fixture.xhtml" target="_self">LeNet5Fixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_33_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_lut_accessor.xhtml" target="_self">LutAccessor</a></td><td class="desc"><a class="el" href="classarm__compute_1_1test_1_1_accessor.xhtml" title="Accessor implementation for Tensor objects. ">Accessor</a> implementation for <a class="el" href="classarm__compute_1_1_lut.xhtml">Lut</a> objects </td></tr>
<tr id="row_0_8_34_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_mobile_net_fixture.xhtml" target="_self">MobileNetFixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_35_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_mobile_net_v1_fixture.xhtml" target="_self">MobileNetV1Fixture</a></td><td class="desc"></td></tr>
<tr id="row_0_8_36_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_n_e_synthetize_function.xhtml" target="_self">NESynthetizeFunction</a></td><td class="desc"></td></tr>
<tr id="row_0_8_37_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_n_e_synthetize_function_with_zero_constant_border.xhtml" target="_self">NESynthetizeFunctionWithZeroConstantBorder</a></td><td class="desc"></td></tr>
<tr id="row_0_8_38_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_normalization_layer_fixture.xhtml" target="_self">NormalizationLayerFixture</a></td><td class="desc">Fixture that can be used for NEON and CL </td></tr>
<tr id="row_0_8_39_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_normalize_planar_y_u_v_layer_fixture.xhtml" target="_self">NormalizePlanarYUVLayerFixture</a></td><td class="desc">Fixture that can be used for NEON and CL </td></tr>
<tr id="row_0_8_40_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_padding_calculator.xhtml" target="_self">PaddingCalculator</a></td><td class="desc">Calculate required padding </td></tr>
<tr id="row_0_8_41_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_pooling_layer_fixture.xhtml" target="_self">PoolingLayerFixture</a></td><td class="desc">Fixture that can be used for NEON and CL </td></tr>
<tr id="row_0_8_42_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_raw_lut_accessor.xhtml" target="_self">RawLutAccessor</a></td><td class="desc"><a class="el" href="classarm__compute_1_1test_1_1_accessor.xhtml" title="Accessor implementation for Tensor objects. ">Accessor</a> implementation for std::map-lut objects </td></tr>
<tr id="row_0_8_43_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_raw_tensor.xhtml" target="_self">RawTensor</a></td><td class="desc">Subclass of <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml" title="Simple tensor object that stores elements in a consecutive chunk of memory. ">SimpleTensor</a> using uint8_t as value type </td></tr>
<tr id="row_0_8_44_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_r_o_i_pooling_layer_fixture.xhtml" target="_self">ROIPoolingLayerFixture</a></td><td class="desc">Fixture that can be used for NEON and CL </td></tr>
<tr id="row_0_8_45_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_scale_layer_fixture.xhtml" target="_self">ScaleLayerFixture</a></td><td class="desc">Fixture that can be used for NEON, CL and OpenGL ES </td></tr>
<tr id="row_0_8_46_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml" target="_self">SimpleTensor</a></td><td class="desc">Simple tensor object that stores elements in a consecutive chunk of memory </td></tr>
<tr id="row_0_8_47_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_softmax_layer_fixture.xhtml" target="_self">SoftmaxLayerFixture</a></td><td class="desc">Fixture that can be used for NEON, CL and OpenGL ES </td></tr>
<tr id="row_0_8_48_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1test_1_1_tensor_cache.xhtml" target="_self">TensorCache</a></td><td class="desc">Stores <a class="el" href="classarm__compute_1_1test_1_1_raw_tensor.xhtml">RawTensor</a> categorised by the image they are created from including name, format and channel </td></tr>
<tr id="row_0_9_" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_0_9_" class="arrow" onclick="toggleFolder('0_9_')">&#9658;</span><span class="icona"><span class="icon">N</span></span><a class="el" href="namespacearm__compute_1_1traits.xhtml" target="_self">traits</a></td><td class="desc"></td></tr>
<tr id="row_0_9_0_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1traits_1_1is__contained.xhtml" target="_self">is_contained</a></td><td class="desc">Check if a type T is contained in a tuple Tuple of types </td></tr>
<tr id="row_0_9_1_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1traits_1_1is__contained_3_01_t_00_01std_1_1tuple_3_01_t_00_01_ts_8_8_8_01_4_01_4.xhtml" target="_self">is_contained&lt; T, std::tuple&lt; T, Ts... &gt; &gt;</a></td><td class="desc"></td></tr>
<tr id="row_0_9_2_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1traits_1_1is__contained_3_01_t_00_01std_1_1tuple_3_01_u_00_01_ts_8_8_8_01_4_01_4.xhtml" target="_self">is_contained&lt; T, std::tuple&lt; U, Ts... &gt; &gt;</a></td><td class="desc"></td></tr>
<tr id="row_0_9_3_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1traits_1_1is__contained_3_01_t_00_01std_1_1tuple_3_4_01_4.xhtml" target="_self">is_contained&lt; T, std::tuple&lt;&gt; &gt;</a></td><td class="desc"></td></tr>
<tr id="row_0_10_" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_0_10_" class="arrow" onclick="toggleFolder('0_10_')">&#9658;</span><span class="icona"><span class="icon">N</span></span><a class="el" href="namespacearm__compute_1_1utility.xhtml" target="_self">utility</a></td><td class="desc"></td></tr>
<tr id="row_0_11_" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_0_11_" class="arrow" onclick="toggleFolder('0_11_')">&#9658;</span><span class="icona"><span class="icon">N</span></span><a class="el" href="namespacearm__compute_1_1utils.xhtml" target="_self">utils</a></td><td class="desc"></td></tr>
<tr id="row_0_11_0_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1utils_1_1_example.xhtml" target="_self">Example</a></td><td class="desc">Abstract <a class="el" href="classarm__compute_1_1utils_1_1_example.xhtml" title="Abstract Example class. ">Example</a> class </td></tr>
<tr id="row_0_11_1_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1utils_1_1_n_p_y_loader.xhtml" target="_self">NPYLoader</a></td><td class="desc"></td></tr>
<tr id="row_0_11_2_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1utils_1_1_p_p_m_loader.xhtml" target="_self">PPMLoader</a></td><td class="desc">Class to load the content of a PPM file into an <a class="el" href="struct_image.xhtml" title="Structure to hold Image information. ">Image</a> </td></tr>
<tr id="row_0_12_" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_0_12_" class="arrow" onclick="toggleFolder('0_12_')">&#9658;</span><span class="icona"><span class="icon">N</span></span><a class="el" href="namespacearm__compute_1_1wrapper.xhtml" target="_self">wrapper</a></td><td class="desc"></td></tr>
<tr id="row_0_12_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_0_12_0_" class="arrow" onclick="toggleFolder('0_12_0_')">&#9658;</span><span class="icona"><span class="icon">N</span></span><a class="el" href="namespacearm__compute_1_1wrapper_1_1traits.xhtml" target="_self">traits</a></td><td class="desc"></td></tr>
<tr id="row_0_12_0_0_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1neon__vector.xhtml" target="_self">neon_vector</a></td><td class="desc">Create the appropriate NEON vector given its type and size </td></tr>
<tr id="row_0_12_0_1_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1neon__vector_3_01float__t_00_012_01_4.xhtml" target="_self">neon_vector&lt; float_t, 2 &gt;</a></td><td class="desc"></td></tr>
<tr id="row_0_12_0_2_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1neon__vector_3_01float__t_00_014_01_4.xhtml" target="_self">neon_vector&lt; float_t, 4 &gt;</a></td><td class="desc"></td></tr>
<tr id="row_0_12_0_3_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1neon__vector_3_01int16__t_00_014_01_4.xhtml" target="_self">neon_vector&lt; int16_t, 4 &gt;</a></td><td class="desc"></td></tr>
<tr id="row_0_12_0_4_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1neon__vector_3_01int16__t_00_018_01_4.xhtml" target="_self">neon_vector&lt; int16_t, 8 &gt;</a></td><td class="desc"></td></tr>
<tr id="row_0_12_0_5_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1neon__vector_3_01int32__t_00_012_01_4.xhtml" target="_self">neon_vector&lt; int32_t, 2 &gt;</a></td><td class="desc"></td></tr>
<tr id="row_0_12_0_6_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1neon__vector_3_01int32__t_00_014_01_4.xhtml" target="_self">neon_vector&lt; int32_t, 4 &gt;</a></td><td class="desc"></td></tr>
<tr id="row_0_12_0_7_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1neon__vector_3_01int64__t_00_011_01_4.xhtml" target="_self">neon_vector&lt; int64_t, 1 &gt;</a></td><td class="desc"></td></tr>
<tr id="row_0_12_0_8_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1neon__vector_3_01int64__t_00_012_01_4.xhtml" target="_self">neon_vector&lt; int64_t, 2 &gt;</a></td><td class="desc"></td></tr>
<tr id="row_0_12_0_9_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1neon__vector_3_01int8__t_00_0116_01_4.xhtml" target="_self">neon_vector&lt; int8_t, 16 &gt;</a></td><td class="desc"></td></tr>
<tr id="row_0_12_0_10_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1neon__vector_3_01int8__t_00_018_01_4.xhtml" target="_self">neon_vector&lt; int8_t, 8 &gt;</a></td><td class="desc"></td></tr>
<tr id="row_0_12_0_11_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1neon__vector_3_01uint16__t_00_014_01_4.xhtml" target="_self">neon_vector&lt; uint16_t, 4 &gt;</a></td><td class="desc"></td></tr>
<tr id="row_0_12_0_12_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1neon__vector_3_01uint16__t_00_018_01_4.xhtml" target="_self">neon_vector&lt; uint16_t, 8 &gt;</a></td><td class="desc"></td></tr>
<tr id="row_0_12_0_13_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1neon__vector_3_01uint32__t_00_012_01_4.xhtml" target="_self">neon_vector&lt; uint32_t, 2 &gt;</a></td><td class="desc"></td></tr>
<tr id="row_0_12_0_14_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1neon__vector_3_01uint32__t_00_014_01_4.xhtml" target="_self">neon_vector&lt; uint32_t, 4 &gt;</a></td><td class="desc"></td></tr>
<tr id="row_0_12_0_15_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1neon__vector_3_01uint64__t_00_011_01_4.xhtml" target="_self">neon_vector&lt; uint64_t, 1 &gt;</a></td><td class="desc"></td></tr>
<tr id="row_0_12_0_16_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1neon__vector_3_01uint64__t_00_012_01_4.xhtml" target="_self">neon_vector&lt; uint64_t, 2 &gt;</a></td><td class="desc"></td></tr>
<tr id="row_0_12_0_17_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1neon__vector_3_01uint8__t_00_0116_01_4.xhtml" target="_self">neon_vector&lt; uint8_t, 16 &gt;</a></td><td class="desc"></td></tr>
<tr id="row_0_12_0_18_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1neon__vector_3_01uint8__t_00_018_01_4.xhtml" target="_self">neon_vector&lt; uint8_t, 8 &gt;</a></td><td class="desc">Specializations </td></tr>
<tr id="row_0_12_0_19_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1vector__128__tag.xhtml" target="_self">vector_128_tag</a></td><td class="desc">128-bit vector tag </td></tr>
<tr id="row_0_12_0_20_" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1vector__64__tag.xhtml" target="_self">vector_64_tag</a></td><td class="desc">64-bit vector tag </td></tr>
<tr id="row_0_13_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_access_window_auto_padding.xhtml" target="_self">AccessWindowAutoPadding</a></td><td class="desc">Dummy access window </td></tr>
<tr id="row_0_14_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_access_window_horizontal.xhtml" target="_self">AccessWindowHorizontal</a></td><td class="desc">Implementation of a row access pattern </td></tr>
<tr id="row_0_15_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_access_window_rectangle.xhtml" target="_self">AccessWindowRectangle</a></td><td class="desc">Implementation of a rectangular access pattern </td></tr>
<tr id="row_0_16_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_access_window_static.xhtml" target="_self">AccessWindowStatic</a></td><td class="desc">Implementation of a static rectangular access pattern </td></tr>
<tr id="row_0_17_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_access_window_transpose.xhtml" target="_self">AccessWindowTranspose</a></td><td class="desc">Implementation of a XY-transpose access pattern </td></tr>
<tr id="row_0_18_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_access_window_vertical.xhtml" target="_self">AccessWindowVertical</a></td><td class="desc">Implementation of a column access pattern </td></tr>
<tr id="row_0_19_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_activation_layer_info.xhtml" target="_self">ActivationLayerInfo</a></td><td class="desc">Activation Layer Information class </td></tr>
<tr id="row_0_20_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_allocator.xhtml" target="_self">Allocator</a></td><td class="desc">Default malloc allocator implementation </td></tr>
<tr id="row_0_21_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_array.xhtml" target="_self">Array</a></td><td class="desc">Basic implementation of the <a class="el" href="classarm__compute_1_1_i_array.xhtml" title="Array of type T. ">IArray</a> interface which allocates a static number of T values </td></tr>
<tr id="row_0_22_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_blob_lifetime_manager.xhtml" target="_self">BlobLifetimeManager</a></td><td class="desc">Concrete class that tracks the lifetime of registered tensors and calculates the systems memory requirements in terms of blobs </td></tr>
<tr id="row_0_23_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_blob_memory_pool.xhtml" target="_self">BlobMemoryPool</a></td><td class="desc">Blob memory pool </td></tr>
<tr id="row_0_24_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_border_size.xhtml" target="_self">BorderSize</a></td><td class="desc">Container for 2D border size </td></tr>
<tr id="row_0_25_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_absolute_difference.xhtml" target="_self">CLAbsoluteDifference</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_absolute_difference_kernel.xhtml">CLAbsoluteDifferenceKernel</a> </td></tr>
<tr id="row_0_26_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_absolute_difference_kernel.xhtml" target="_self">CLAbsoluteDifferenceKernel</a></td><td class="desc">Interface for the absolute difference kernel </td></tr>
<tr id="row_0_27_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_accumulate.xhtml" target="_self">CLAccumulate</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_accumulate_kernel.xhtml">CLAccumulateKernel</a> </td></tr>
<tr id="row_0_28_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_accumulate_kernel.xhtml" target="_self">CLAccumulateKernel</a></td><td class="desc">Interface for the accumulate kernel </td></tr>
<tr id="row_0_29_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_accumulate_squared.xhtml" target="_self">CLAccumulateSquared</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_accumulate_squared_kernel.xhtml">CLAccumulateSquaredKernel</a> </td></tr>
<tr id="row_0_30_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_accumulate_squared_kernel.xhtml" target="_self">CLAccumulateSquaredKernel</a></td><td class="desc">Interface for the accumulate squared kernel </td></tr>
<tr id="row_0_31_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_accumulate_weighted.xhtml" target="_self">CLAccumulateWeighted</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_accumulate_weighted_kernel.xhtml">CLAccumulateWeightedKernel</a> </td></tr>
<tr id="row_0_32_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_accumulate_weighted_kernel.xhtml" target="_self">CLAccumulateWeightedKernel</a></td><td class="desc">Interface for the accumulate weighted kernel </td></tr>
<tr id="row_0_33_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_activation_layer.xhtml" target="_self">CLActivationLayer</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_activation_layer_kernel.xhtml">CLActivationLayerKernel</a> </td></tr>
<tr id="row_0_34_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_activation_layer_kernel.xhtml" target="_self">CLActivationLayerKernel</a></td><td class="desc">Interface for the activation layer kernel </td></tr>
<tr id="row_0_35_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_arithmetic_addition.xhtml" target="_self">CLArithmeticAddition</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_arithmetic_addition_kernel.xhtml">CLArithmeticAdditionKernel</a> </td></tr>
<tr id="row_0_36_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_arithmetic_addition_kernel.xhtml" target="_self">CLArithmeticAdditionKernel</a></td><td class="desc">Interface for the arithmetic addition kernel </td></tr>
<tr id="row_0_37_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_arithmetic_subtraction.xhtml" target="_self">CLArithmeticSubtraction</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_arithmetic_subtraction_kernel.xhtml">CLArithmeticSubtractionKernel</a> </td></tr>
<tr id="row_0_38_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_arithmetic_subtraction_kernel.xhtml" target="_self">CLArithmeticSubtractionKernel</a></td><td class="desc">Interface for the arithmetic subtraction kernel </td></tr>
<tr id="row_0_39_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_array.xhtml" target="_self">CLArray</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_c_l_array.xhtml" title="CLArray implementation. ">CLArray</a> implementation </td></tr>
<tr id="row_0_40_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_batch_normalization_layer.xhtml" target="_self">CLBatchNormalizationLayer</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_normalization_layer_kernel.xhtml">CLNormalizationLayerKernel</a> and simulate a batch normalization layer </td></tr>
<tr id="row_0_41_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_batch_normalization_layer_kernel.xhtml" target="_self">CLBatchNormalizationLayerKernel</a></td><td class="desc">Interface for the BatchNormalization layer kernel </td></tr>
<tr id="row_0_42_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_bitwise_and.xhtml" target="_self">CLBitwiseAnd</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_bitwise_and_kernel.xhtml">CLBitwiseAndKernel</a> </td></tr>
<tr id="row_0_43_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_bitwise_and_kernel.xhtml" target="_self">CLBitwiseAndKernel</a></td><td class="desc">Interface for the bitwise AND operation kernel </td></tr>
<tr id="row_0_44_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_bitwise_not.xhtml" target="_self">CLBitwiseNot</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_bitwise_not_kernel.xhtml">CLBitwiseNotKernel</a> </td></tr>
<tr id="row_0_45_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_bitwise_not_kernel.xhtml" target="_self">CLBitwiseNotKernel</a></td><td class="desc">Interface for the bitwise NOT operation kernel </td></tr>
<tr id="row_0_46_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_bitwise_or.xhtml" target="_self">CLBitwiseOr</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_bitwise_or_kernel.xhtml">CLBitwiseOrKernel</a> </td></tr>
<tr id="row_0_47_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_bitwise_or_kernel.xhtml" target="_self">CLBitwiseOrKernel</a></td><td class="desc">Interface for the bitwise OR operation kernel </td></tr>
<tr id="row_0_48_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_bitwise_xor.xhtml" target="_self">CLBitwiseXor</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_bitwise_xor_kernel.xhtml">CLBitwiseXorKernel</a> </td></tr>
<tr id="row_0_49_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_bitwise_xor_kernel.xhtml" target="_self">CLBitwiseXorKernel</a></td><td class="desc">Interface for the bitwise XOR operation kernel </td></tr>
<tr id="row_0_50_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_box3x3.xhtml" target="_self">CLBox3x3</a></td><td class="desc">Basic function to execute box filter 3x3 </td></tr>
<tr id="row_0_51_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_box3x3_kernel.xhtml" target="_self">CLBox3x3Kernel</a></td><td class="desc">Interface for the box 3x3 filter kernel </td></tr>
<tr id="row_0_52_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_buffer_allocator.xhtml" target="_self">CLBufferAllocator</a></td><td class="desc">Default OpenCL cl buffer allocator implementation </td></tr>
<tr id="row_0_53_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_build_options.xhtml" target="_self">CLBuildOptions</a></td><td class="desc">Build options </td></tr>
<tr id="row_0_54_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_canny_edge.xhtml" target="_self">CLCannyEdge</a></td><td class="desc">Basic function to execute canny edge on OpenCL </td></tr>
<tr id="row_0_55_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_channel_combine.xhtml" target="_self">CLChannelCombine</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_channel_combine_kernel.xhtml">CLChannelCombineKernel</a> to perform channel combination </td></tr>
<tr id="row_0_56_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_channel_combine_kernel.xhtml" target="_self">CLChannelCombineKernel</a></td><td class="desc">Interface for the channel combine kernel </td></tr>
<tr id="row_0_57_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_channel_extract.xhtml" target="_self">CLChannelExtract</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_channel_extract_kernel.xhtml">CLChannelExtractKernel</a> to perform channel extraction </td></tr>
<tr id="row_0_58_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_channel_extract_kernel.xhtml" target="_self">CLChannelExtractKernel</a></td><td class="desc">Interface for the channel extract kernel </td></tr>
<tr id="row_0_59_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_c_l_coefficient_table.xhtml" target="_self">CLCoefficientTable</a></td><td class="desc">Structure for storing Spatial Gradient Matrix and the minimum eigenvalue for each keypoint </td></tr>
<tr id="row_0_60_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_col2_im_kernel.xhtml" target="_self">CLCol2ImKernel</a></td><td class="desc">Interface for the col2im reshaping kernel </td></tr>
<tr id="row_0_61_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_color_convert.xhtml" target="_self">CLColorConvert</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_color_convert_kernel.xhtml">CLColorConvertKernel</a> </td></tr>
<tr id="row_0_62_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_color_convert_kernel.xhtml" target="_self">CLColorConvertKernel</a></td><td class="desc">Interface for the color convert kernel </td></tr>
<tr id="row_0_63_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_convolution3x3.xhtml" target="_self">CLConvolution3x3</a></td><td class="desc">Basic function to execute convolution of size 3x3 </td></tr>
<tr id="row_0_64_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_convolution_kernel.xhtml" target="_self">CLConvolutionKernel</a></td><td class="desc">Interface for the kernel to run an arbitrary size convolution on a tensor </td></tr>
<tr id="row_0_65_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_convolution_layer.xhtml" target="_self">CLConvolutionLayer</a></td><td class="desc">Basic function to compute the convolution layer </td></tr>
<tr id="row_0_66_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_convolution_layer_reshape_weights.xhtml" target="_self">CLConvolutionLayerReshapeWeights</a></td><td class="desc">Function to reshape and transpose the weights </td></tr>
<tr id="row_0_67_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_convolution_rectangle.xhtml" target="_self">CLConvolutionRectangle</a></td><td class="desc">Basic function to execute non-square convolution </td></tr>
<tr id="row_0_68_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_convolution_rectangle_kernel.xhtml" target="_self">CLConvolutionRectangleKernel</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_kernel.xhtml" title="Kernel class. ">Kernel</a> for the running convolution on a rectangle matrix </td></tr>
<tr id="row_0_69_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_convolution_square.xhtml" target="_self">CLConvolutionSquare</a></td><td class="desc">Basic function to execute square convolution.Currently it supports 5x5, 7x7, 9x9 </td></tr>
<tr id="row_0_70_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_copy_to_array_kernel.xhtml" target="_self">CLCopyToArrayKernel</a></td><td class="desc">CL kernel to copy keypoints information to ICLKeyPointArray and counts the number of key points </td></tr>
<tr id="row_0_71_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_deconvolution_layer.xhtml" target="_self">CLDeconvolutionLayer</a></td><td class="desc">Function to run the deconvolution layer </td></tr>
<tr id="row_0_72_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_deconvolution_layer_upsample.xhtml" target="_self">CLDeconvolutionLayerUpsample</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_deconvolution_layer_upsample_kernel.xhtml">CLDeconvolutionLayerUpsampleKernel</a> </td></tr>
<tr id="row_0_73_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_deconvolution_layer_upsample_kernel.xhtml" target="_self">CLDeconvolutionLayerUpsampleKernel</a></td><td class="desc">Interface for the Deconvolution layer kernel on OpenCL </td></tr>
<tr id="row_0_74_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_depth_concatenate_layer.xhtml" target="_self">CLDepthConcatenateLayer</a></td><td class="desc">Basic function to execute concatenate tensors along z axis </td></tr>
<tr id="row_0_75_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_depth_concatenate_layer_kernel.xhtml" target="_self">CLDepthConcatenateLayerKernel</a></td><td class="desc">Interface for the depth concatenate kernel </td></tr>
<tr id="row_0_76_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_depth_convert_layer.xhtml" target="_self">CLDepthConvertLayer</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_depth_convert_layer_kernel.xhtml">CLDepthConvertLayerKernel</a> </td></tr>
<tr id="row_0_77_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_depth_convert_layer_kernel.xhtml" target="_self">CLDepthConvertLayerKernel</a></td><td class="desc">Interface for the depth conversion kernel </td></tr>
<tr id="row_0_78_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_depthwise_convolution_layer.xhtml" target="_self">CLDepthwiseConvolutionLayer</a></td><td class="desc">Basic function to execute a generic depthwise convolution </td></tr>
<tr id="row_0_79_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_depthwise_convolution_layer3x3.xhtml" target="_self">CLDepthwiseConvolutionLayer3x3</a></td><td class="desc">Basic function to execute a depthwise convolution for kernel size 3x3xC </td></tr>
<tr id="row_0_80_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_depthwise_convolution_layer3x3_kernel.xhtml" target="_self">CLDepthwiseConvolutionLayer3x3Kernel</a></td><td class="desc">Interface for the kernel to run a 3x3 depthwise convolution on a tensor </td></tr>
<tr id="row_0_81_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_depthwise_im2_col_kernel.xhtml" target="_self">CLDepthwiseIm2ColKernel</a></td><td class="desc">Interface for the depthwise im2col reshape kernel </td></tr>
<tr id="row_0_82_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_depthwise_separable_convolution_layer.xhtml" target="_self">CLDepthwiseSeparableConvolutionLayer</a></td><td class="desc">Basic function to execute depthwise convolution </td></tr>
<tr id="row_0_83_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_depthwise_vector_to_tensor_kernel.xhtml" target="_self">CLDepthwiseVectorToTensorKernel</a></td><td class="desc">Interface for the depthwise vector to tensor kernel </td></tr>
<tr id="row_0_84_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_depthwise_weights_reshape_kernel.xhtml" target="_self">CLDepthwiseWeightsReshapeKernel</a></td><td class="desc">Interface for the depthwise weights reshape kernel </td></tr>
<tr id="row_0_85_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_dequantization_layer.xhtml" target="_self">CLDequantizationLayer</a></td><td class="desc">Basic function to simulate a dequantization layer </td></tr>
<tr id="row_0_86_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_dequantization_layer_kernel.xhtml" target="_self">CLDequantizationLayerKernel</a></td><td class="desc">Interface for the dequantization layer kernel </td></tr>
<tr id="row_0_87_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_derivative.xhtml" target="_self">CLDerivative</a></td><td class="desc">Basic function to execute first order derivative operator </td></tr>
<tr id="row_0_88_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_derivative_kernel.xhtml" target="_self">CLDerivativeKernel</a></td><td class="desc">Interface for the derivative kernel </td></tr>
<tr id="row_0_89_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_dilate.xhtml" target="_self">CLDilate</a></td><td class="desc">Basic function to execute dilate </td></tr>
<tr id="row_0_90_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_dilate_kernel.xhtml" target="_self">CLDilateKernel</a></td><td class="desc">Interface for the dilate kernel </td></tr>
<tr id="row_0_91_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_direct_convolution_layer.xhtml" target="_self">CLDirectConvolutionLayer</a></td><td class="desc">Basic function to execute direct convolution function: </td></tr>
<tr id="row_0_92_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_direct_convolution_layer_kernel.xhtml" target="_self">CLDirectConvolutionLayerKernel</a></td><td class="desc">Interface for the direct convolution kernel </td></tr>
<tr id="row_0_93_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_direct_convolution_layer_output_stage_kernel.xhtml" target="_self">CLDirectConvolutionLayerOutputStageKernel</a></td><td class="desc">OpenCL kernel to accumulate the biases, if provided, or downscale in case of quantized input </td></tr>
<tr id="row_0_94_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_distribution1_d.xhtml" target="_self">CLDistribution1D</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_c_l_distribution1_d.xhtml" title="CLDistribution1D object class. ">CLDistribution1D</a> object class </td></tr>
<tr id="row_0_95_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_edge_non_max_suppression_kernel.xhtml" target="_self">CLEdgeNonMaxSuppressionKernel</a></td><td class="desc">OpenCL kernel to perform Non-Maxima suppression for Canny Edge </td></tr>
<tr id="row_0_96_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_edge_trace_kernel.xhtml" target="_self">CLEdgeTraceKernel</a></td><td class="desc">OpenCL kernel to perform Edge tracing </td></tr>
<tr id="row_0_97_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_equalize_histogram.xhtml" target="_self">CLEqualizeHistogram</a></td><td class="desc">Basic function to execute histogram equalization </td></tr>
<tr id="row_0_98_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_erode.xhtml" target="_self">CLErode</a></td><td class="desc">Basic function to execute erode </td></tr>
<tr id="row_0_99_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_erode_kernel.xhtml" target="_self">CLErodeKernel</a></td><td class="desc">Interface for the erode kernel </td></tr>
<tr id="row_0_100_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_fast_corners.xhtml" target="_self">CLFastCorners</a></td><td class="desc">Basic function to execute fast corners </td></tr>
<tr id="row_0_101_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_fast_corners_kernel.xhtml" target="_self">CLFastCornersKernel</a></td><td class="desc">CL kernel to perform fast corners </td></tr>
<tr id="row_0_102_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_fill_border.xhtml" target="_self">CLFillBorder</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_fill_border_kernel.xhtml">CLFillBorderKernel</a> </td></tr>
<tr id="row_0_103_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_fill_border_kernel.xhtml" target="_self">CLFillBorderKernel</a></td><td class="desc">Interface for filling the border of a kernel </td></tr>
<tr id="row_0_104_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_flatten_layer.xhtml" target="_self">CLFlattenLayer</a></td><td class="desc">Basic function to execute flatten </td></tr>
<tr id="row_0_105_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_floor.xhtml" target="_self">CLFloor</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_floor_kernel.xhtml">CLFloorKernel</a> </td></tr>
<tr id="row_0_106_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_floor_kernel.xhtml" target="_self">CLFloorKernel</a></td><td class="desc">OpenCL kernel to perform a floor operation </td></tr>
<tr id="row_0_107_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_fully_connected_layer.xhtml" target="_self">CLFullyConnectedLayer</a></td><td class="desc">Basic function to compute a Fully Connected layer on OpenCL </td></tr>
<tr id="row_0_108_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_fully_connected_layer_reshape_weights.xhtml" target="_self">CLFullyConnectedLayerReshapeWeights</a></td><td class="desc">Basic function to reshape the weights of Fully Connected layer with OpenCL </td></tr>
<tr id="row_0_109_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_gaussian3x3.xhtml" target="_self">CLGaussian3x3</a></td><td class="desc">Basic function to execute gaussian filter 3x3 </td></tr>
<tr id="row_0_110_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_gaussian3x3_kernel.xhtml" target="_self">CLGaussian3x3Kernel</a></td><td class="desc">Interface for the Gaussian 3x3 filter kernel </td></tr>
<tr id="row_0_111_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_gaussian5x5.xhtml" target="_self">CLGaussian5x5</a></td><td class="desc">Basic function to execute gaussian filter 5x5 </td></tr>
<tr id="row_0_112_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_gaussian5x5_hor_kernel.xhtml" target="_self">CLGaussian5x5HorKernel</a></td><td class="desc">Interface for the kernel to run the horizontal pass of 5x5 Gaussian filter on a tensor </td></tr>
<tr id="row_0_113_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_gaussian5x5_vert_kernel.xhtml" target="_self">CLGaussian5x5VertKernel</a></td><td class="desc">Interface for the kernel to run the vertical pass of 5x5 Gaussian filter on a tensor </td></tr>
<tr id="row_0_114_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_gaussian_pyramid.xhtml" target="_self">CLGaussianPyramid</a></td><td class="desc">Common interface for all Gaussian pyramid functions </td></tr>
<tr id="row_0_115_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_gaussian_pyramid_half.xhtml" target="_self">CLGaussianPyramidHalf</a></td><td class="desc">Basic function to execute gaussian pyramid with HALF scale factor </td></tr>
<tr id="row_0_116_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_gaussian_pyramid_hor_kernel.xhtml" target="_self">CLGaussianPyramidHorKernel</a></td><td class="desc">OpenCL kernel to perform a Gaussian filter and half scaling across width (horizontal pass) </td></tr>
<tr id="row_0_117_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_gaussian_pyramid_orb.xhtml" target="_self">CLGaussianPyramidOrb</a></td><td class="desc">Basic function to execute gaussian pyramid with ORB scale factor </td></tr>
<tr id="row_0_118_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_gaussian_pyramid_vert_kernel.xhtml" target="_self">CLGaussianPyramidVertKernel</a></td><td class="desc">OpenCL kernel to perform a Gaussian filter and half scaling across height (vertical pass) </td></tr>
<tr id="row_0_119_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m.xhtml" target="_self">CLGEMM</a></td><td class="desc">Basic function to execute GEMM on OpenCL </td></tr>
<tr id="row_0_120_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_convolution_layer.xhtml" target="_self">CLGEMMConvolutionLayer</a></td><td class="desc">Basic function to compute the convolution layer </td></tr>
<tr id="row_0_121_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_interleave4x4.xhtml" target="_self">CLGEMMInterleave4x4</a></td><td class="desc">Basic function to execute <a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_interleave4x4_kernel.xhtml" title="OpenCL kernel which interleaves the elements of a matrix A in chunk of 4x4. ">CLGEMMInterleave4x4Kernel</a> </td></tr>
<tr id="row_0_122_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_interleave4x4_kernel.xhtml" target="_self">CLGEMMInterleave4x4Kernel</a></td><td class="desc">OpenCL kernel which interleaves the elements of a matrix A in chunk of 4x4 </td></tr>
<tr id="row_0_123_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_a_reduction_kernel.xhtml" target="_self">CLGEMMLowpMatrixAReductionKernel</a></td><td class="desc">OpenCL kernel used to compute the row-vectors of sums of all the entries in each row of Matrix A </td></tr>
<tr id="row_0_124_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_b_reduction_kernel.xhtml" target="_self">CLGEMMLowpMatrixBReductionKernel</a></td><td class="desc">OpenCL kernel used to compute the row-vectors of sums of all the entries in each column of Matrix B </td></tr>
<tr id="row_0_125_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_multiply_core.xhtml" target="_self">CLGEMMLowpMatrixMultiplyCore</a></td><td class="desc">Basic function to execute GEMMLowpMatrixMultiplyCore on OpenCL </td></tr>
<tr id="row_0_126_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_multiply_kernel.xhtml" target="_self">CLGEMMLowpMatrixMultiplyKernel</a></td><td class="desc">OpenCL kernel to multiply matrices </td></tr>
<tr id="row_0_127_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_lowp_offset_contribution_kernel.xhtml" target="_self">CLGEMMLowpOffsetContributionKernel</a></td><td class="desc">OpenCL kernel used to add the offset contribution after <a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_multiply_kernel.xhtml">CLGEMMLowpMatrixMultiplyKernel</a> </td></tr>
<tr id="row_0_128_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_lowp_quantize_down_int32_to_uint8_scale.xhtml" target="_self">CLGEMMLowpQuantizeDownInt32ToUint8Scale</a></td><td class="desc">Basic function to execute <a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_lowp_quantize_down_int32_to_uint8_scale.xhtml" title="Basic function to execute CLGEMMLowpQuantizeDownInt32ToUint8Scale on OpenCL. ">CLGEMMLowpQuantizeDownInt32ToUint8Scale</a> on OpenCL </td></tr>
<tr id="row_0_129_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_lowp_quantize_down_int32_to_uint8_scale_by_fixed_point.xhtml" target="_self">CLGEMMLowpQuantizeDownInt32ToUint8ScaleByFixedPoint</a></td><td class="desc">Basic function to execute <a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_lowp_quantize_down_int32_to_uint8_scale_by_fixed_point.xhtml" title="Basic function to execute CLGEMMLowpQuantizeDownInt32ToUint8ScaleByFixedPoint on OpenCL. ">CLGEMMLowpQuantizeDownInt32ToUint8ScaleByFixedPoint</a> on OpenCL </td></tr>
<tr id="row_0_130_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_lowp_quantize_down_int32_to_uint8_scale_by_fixed_point_kernel.xhtml" target="_self">CLGEMMLowpQuantizeDownInt32ToUint8ScaleByFixedPointKernel</a></td><td class="desc">OpenCL kernel used to quantize down the int32 accumulator values of GEMMLowp to QASYMM8 </td></tr>
<tr id="row_0_131_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_lowp_quantize_down_int32_to_uint8_scale_kernel.xhtml" target="_self">CLGEMMLowpQuantizeDownInt32ToUint8ScaleKernel</a></td><td class="desc">OpenCL kernel used to quantize down the int32 accumulator values of GEMMLowp to QASYMM8 </td></tr>
<tr id="row_0_132_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_accumulate_biases_kernel.xhtml" target="_self">CLGEMMMatrixAccumulateBiasesKernel</a></td><td class="desc">Interface to add a bias to each row of the input tensor </td></tr>
<tr id="row_0_133_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_addition_kernel.xhtml" target="_self">CLGEMMMatrixAdditionKernel</a></td><td class="desc">OpenCL kernel to perform the in-place matrix addition between 2 matrices, taking into account that the second matrix might be weighted by a scalar value beta </td></tr>
<tr id="row_0_134_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml" target="_self">CLGEMMMatrixMultiplyKernel</a></td><td class="desc">OpenCL kernel to multiply two input matrices "A" and "B" </td></tr>
<tr id="row_0_135_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_vector_multiply_kernel.xhtml" target="_self">CLGEMMMatrixVectorMultiplyKernel</a></td><td class="desc">Interface for the GEMM matrix vector multiply kernel </td></tr>
<tr id="row_0_136_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_transpose1x_w.xhtml" target="_self">CLGEMMTranspose1xW</a></td><td class="desc">Basic function to execute <a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_transpose1x_w_kernel.xhtml" title="OpenCL kernel which transposes the elements of a matrix in chunks of 1xW, where W is equal to (16 / e...">CLGEMMTranspose1xWKernel</a> </td></tr>
<tr id="row_0_137_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_transpose1x_w_kernel.xhtml" target="_self">CLGEMMTranspose1xWKernel</a></td><td class="desc">OpenCL kernel which transposes the elements of a matrix in chunks of 1xW, where W is equal to (16 / element size of the tensor) </td></tr>
<tr id="row_0_138_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_gradient_kernel.xhtml" target="_self">CLGradientKernel</a></td><td class="desc">OpenCL kernel to perform Gradient computation </td></tr>
<tr id="row_0_139_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_harris_corners.xhtml" target="_self">CLHarrisCorners</a></td><td class="desc">Basic function to execute harris corners detection </td></tr>
<tr id="row_0_140_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_harris_score_kernel.xhtml" target="_self">CLHarrisScoreKernel</a></td><td class="desc">Interface for the harris score kernel </td></tr>
<tr id="row_0_141_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_histogram.xhtml" target="_self">CLHistogram</a></td><td class="desc">Basic function to execute histogram </td></tr>
<tr id="row_0_142_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_histogram_border_kernel.xhtml" target="_self">CLHistogramBorderKernel</a></td><td class="desc">Interface to run the histogram kernel to handle the leftover part of image </td></tr>
<tr id="row_0_143_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_histogram_kernel.xhtml" target="_self">CLHistogramKernel</a></td><td class="desc">Interface to run the histogram kernel </td></tr>
<tr id="row_0_144_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_h_o_g.xhtml" target="_self">CLHOG</a></td><td class="desc">OpenCL implementation of <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object. ">HOG</a> data-object </td></tr>
<tr id="row_0_145_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_h_o_g_block_normalization_kernel.xhtml" target="_self">CLHOGBlockNormalizationKernel</a></td><td class="desc">OpenCL kernel to perform <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object. ">HOG</a> block normalization </td></tr>
<tr id="row_0_146_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_h_o_g_descriptor.xhtml" target="_self">CLHOGDescriptor</a></td><td class="desc">Basic function to calculate <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object. ">HOG</a> descriptor </td></tr>
<tr id="row_0_147_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_h_o_g_detector.xhtml" target="_self">CLHOGDetector</a></td><td class="desc">Basic function to execute <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object. ">HOG</a> detector based on linear SVM </td></tr>
<tr id="row_0_148_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_h_o_g_detector_kernel.xhtml" target="_self">CLHOGDetectorKernel</a></td><td class="desc">OpenCL kernel to perform <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object. ">HOG</a> detector kernel using linear SVM </td></tr>
<tr id="row_0_149_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_h_o_g_gradient.xhtml" target="_self">CLHOGGradient</a></td><td class="desc">Basic function to calculate the gradient for <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object. ">HOG</a> </td></tr>
<tr id="row_0_150_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_h_o_g_multi_detection.xhtml" target="_self">CLHOGMultiDetection</a></td><td class="desc">Basic function to detect multiple objects (or the same object at different scales) on the same input image using <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object. ">HOG</a> </td></tr>
<tr id="row_0_151_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_h_o_g_orientation_binning_kernel.xhtml" target="_self">CLHOGOrientationBinningKernel</a></td><td class="desc">OpenCL kernel to perform <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object. ">HOG</a> Orientation Binning </td></tr>
<tr id="row_0_152_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_im2_col_kernel.xhtml" target="_self">CLIm2ColKernel</a></td><td class="desc">Interface for the im2col reshape kernel </td></tr>
<tr id="row_0_153_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_integral_image.xhtml" target="_self">CLIntegralImage</a></td><td class="desc">Basic function to execute integral image </td></tr>
<tr id="row_0_154_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_integral_image_hor_kernel.xhtml" target="_self">CLIntegralImageHorKernel</a></td><td class="desc">Interface to run the horizontal pass of the integral image kernel </td></tr>
<tr id="row_0_155_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_integral_image_vert_kernel.xhtml" target="_self">CLIntegralImageVertKernel</a></td><td class="desc">Interface to run the vertical pass of the integral image kernel </td></tr>
<tr id="row_0_156_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_kernel_library.xhtml" target="_self">CLKernelLibrary</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_c_l_kernel_library.xhtml" title="CLKernelLibrary class. ">CLKernelLibrary</a> class </td></tr>
<tr id="row_0_157_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_l2_normalize_layer.xhtml" target="_self">CLL2NormalizeLayer</a></td><td class="desc">Perform reduction operation </td></tr>
<tr id="row_0_158_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_l2_normalize_layer_kernel.xhtml" target="_self">CLL2NormalizeLayerKernel</a></td><td class="desc">Interface for the reduction operation kernel </td></tr>
<tr id="row_0_159_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_laplacian_pyramid.xhtml" target="_self">CLLaplacianPyramid</a></td><td class="desc">Basic function to execute laplacian pyramid </td></tr>
<tr id="row_0_160_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_laplacian_reconstruct.xhtml" target="_self">CLLaplacianReconstruct</a></td><td class="desc">Basic function to execute laplacian reconstruction </td></tr>
<tr id="row_0_161_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_c_l_l_k_internal_keypoint.xhtml" target="_self">CLLKInternalKeypoint</a></td><td class="desc">Internal keypoint structure for Lucas-Kanade Optical Flow </td></tr>
<tr id="row_0_162_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_l_k_tracker_finalize_kernel.xhtml" target="_self">CLLKTrackerFinalizeKernel</a></td><td class="desc">Interface to run the finalize step of LKTracker, where it truncates the coordinates stored in new_points array </td></tr>
<tr id="row_0_163_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_l_k_tracker_init_kernel.xhtml" target="_self">CLLKTrackerInitKernel</a></td><td class="desc">Interface to run the initialization step of LKTracker </td></tr>
<tr id="row_0_164_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_l_k_tracker_stage0_kernel.xhtml" target="_self">CLLKTrackerStage0Kernel</a></td><td class="desc">Interface to run the first stage of LKTracker, where A11, A12, A22, min_eig, ival, ixval and iyval are computed </td></tr>
<tr id="row_0_165_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_l_k_tracker_stage1_kernel.xhtml" target="_self">CLLKTrackerStage1Kernel</a></td><td class="desc">Interface to run the second stage of LKTracker, where the motion vectors of the given points are computed </td></tr>
<tr id="row_0_166_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_locally_connected_layer.xhtml" target="_self">CLLocallyConnectedLayer</a></td><td class="desc">Basic function to compute the locally connected layer </td></tr>
<tr id="row_0_167_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_locally_connected_matrix_multiply_kernel.xhtml" target="_self">CLLocallyConnectedMatrixMultiplyKernel</a></td><td class="desc">OpenCL kernel to multiply each row of first tensor with low 2 dimensions of second tensor </td></tr>
<tr id="row_0_168_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_logits1_d_max_kernel.xhtml" target="_self">CLLogits1DMaxKernel</a></td><td class="desc">Interface for the identifying the max value of 1D Logits </td></tr>
<tr id="row_0_169_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_logits1_d_max_shift_exp_sum_kernel.xhtml" target="_self">CLLogits1DMaxShiftExpSumKernel</a></td><td class="desc">Interface for max, shifting, exponentiating and summing the logits </td></tr>
<tr id="row_0_170_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_logits1_d_norm_kernel.xhtml" target="_self">CLLogits1DNormKernel</a></td><td class="desc">Interface for calculating the final step of the Softmax Layer where each logit value is multiplied by the inverse of the sum of the logits </td></tr>
<tr id="row_0_171_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_logits1_d_shift_exp_sum_kernel.xhtml" target="_self">CLLogits1DShiftExpSumKernel</a></td><td class="desc">Interface for shifting, exponentiating and summing the logits </td></tr>
<tr id="row_0_172_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_lut.xhtml" target="_self">CLLut</a></td><td class="desc">Basic implementation of the OpenCL lut interface </td></tr>
<tr id="row_0_173_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_lut_allocator.xhtml" target="_self">CLLutAllocator</a></td><td class="desc">Basic implementation of a CL memory LUT allocator </td></tr>
<tr id="row_0_174_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_magnitude.xhtml" target="_self">CLMagnitude</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_magnitude_phase_kernel.xhtml">CLMagnitudePhaseKernel</a> </td></tr>
<tr id="row_0_175_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_magnitude_phase_kernel.xhtml" target="_self">CLMagnitudePhaseKernel</a></td><td class="desc">Template interface for the kernel to compute magnitude and phase </td></tr>
<tr id="row_0_176_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_mean_std_dev.xhtml" target="_self">CLMeanStdDev</a></td><td class="desc">Basic function to execute mean and standard deviation by calling <a class="el" href="classarm__compute_1_1_c_l_mean_std_dev_kernel.xhtml">CLMeanStdDevKernel</a> </td></tr>
<tr id="row_0_177_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_mean_std_dev_kernel.xhtml" target="_self">CLMeanStdDevKernel</a></td><td class="desc">Interface for the kernel to calculate mean and standard deviation of input image pixels </td></tr>
<tr id="row_0_178_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_median3x3.xhtml" target="_self">CLMedian3x3</a></td><td class="desc">Basic function to execute median filter </td></tr>
<tr id="row_0_179_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_median3x3_kernel.xhtml" target="_self">CLMedian3x3Kernel</a></td><td class="desc">Interface for the median 3x3 filter kernel </td></tr>
<tr id="row_0_180_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_min_max_kernel.xhtml" target="_self">CLMinMaxKernel</a></td><td class="desc">Interface for the kernel to perform min max search on an image </td></tr>
<tr id="row_0_181_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_min_max_layer_kernel.xhtml" target="_self">CLMinMaxLayerKernel</a></td><td class="desc">Interface for the kernel to perform min max search on a 3D tensor </td></tr>
<tr id="row_0_182_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_min_max_location.xhtml" target="_self">CLMinMaxLocation</a></td><td class="desc">Basic function to execute min and max location </td></tr>
<tr id="row_0_183_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_min_max_location_kernel.xhtml" target="_self">CLMinMaxLocationKernel</a></td><td class="desc">Interface for the kernel to find min max locations of an image </td></tr>
<tr id="row_0_184_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_multi_h_o_g.xhtml" target="_self">CLMultiHOG</a></td><td class="desc">Basic implementation of the CL multi <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object. ">HOG</a> data-objects </td></tr>
<tr id="row_0_185_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_multi_image.xhtml" target="_self">CLMultiImage</a></td><td class="desc">Basic implementation of the CL multi-planar image interface </td></tr>
<tr id="row_0_186_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_non_linear_filter.xhtml" target="_self">CLNonLinearFilter</a></td><td class="desc">Basic function to execute non linear filter </td></tr>
<tr id="row_0_187_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_non_linear_filter_kernel.xhtml" target="_self">CLNonLinearFilterKernel</a></td><td class="desc">Interface for the kernel to apply a non-linear filter </td></tr>
<tr id="row_0_188_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_non_maxima_suppression3x3.xhtml" target="_self">CLNonMaximaSuppression3x3</a></td><td class="desc">Basic function to execute non-maxima suppression over a 3x3 window </td></tr>
<tr id="row_0_189_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_non_maxima_suppression3x3_kernel.xhtml" target="_self">CLNonMaximaSuppression3x3Kernel</a></td><td class="desc">Interface to perform Non-Maxima suppression over a 3x3 window using OpenCL </td></tr>
<tr id="row_0_190_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_normalization_layer.xhtml" target="_self">CLNormalizationLayer</a></td><td class="desc">Basic function to compute a normalization layer </td></tr>
<tr id="row_0_191_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_normalization_layer_kernel.xhtml" target="_self">CLNormalizationLayerKernel</a></td><td class="desc">Interface for the normalization layer kernel </td></tr>
<tr id="row_0_192_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_c_l_old_value.xhtml" target="_self">CLOldValue</a></td><td class="desc">Structure for storing ival, ixval and iyval for each point inside the window </td></tr>
<tr id="row_0_193_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_optical_flow.xhtml" target="_self">CLOpticalFlow</a></td><td class="desc">Basic function to execute optical flow </td></tr>
<tr id="row_0_194_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_permute.xhtml" target="_self">CLPermute</a></td><td class="desc">Basic function to execute an <a class="el" href="classarm__compute_1_1_c_l_permute_kernel.xhtml">CLPermuteKernel</a> </td></tr>
<tr id="row_0_195_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_permute_kernel.xhtml" target="_self">CLPermuteKernel</a></td><td class="desc">OpenCL kernel to perform tensor permutation </td></tr>
<tr id="row_0_196_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_phase.xhtml" target="_self">CLPhase</a></td><td class="desc">Basic function to execute an <a class="el" href="classarm__compute_1_1_c_l_magnitude_phase_kernel.xhtml">CLMagnitudePhaseKernel</a> </td></tr>
<tr id="row_0_197_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_pixel_wise_multiplication.xhtml" target="_self">CLPixelWiseMultiplication</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_pixel_wise_multiplication_kernel.xhtml">CLPixelWiseMultiplicationKernel</a> </td></tr>
<tr id="row_0_198_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_pixel_wise_multiplication_kernel.xhtml" target="_self">CLPixelWiseMultiplicationKernel</a></td><td class="desc">Interface for the pixelwise multiplication kernel </td></tr>
<tr id="row_0_199_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_pooling_layer.xhtml" target="_self">CLPoolingLayer</a></td><td class="desc">Basic function to simulate a pooling layer with the specified pooling operation </td></tr>
<tr id="row_0_200_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_pooling_layer_kernel.xhtml" target="_self">CLPoolingLayerKernel</a></td><td class="desc">Interface for the pooling layer kernel </td></tr>
<tr id="row_0_201_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_pyramid.xhtml" target="_self">CLPyramid</a></td><td class="desc">Basic implementation of the OpenCL pyramid interface </td></tr>
<tr id="row_0_202_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_quantization_layer.xhtml" target="_self">CLQuantizationLayer</a></td><td class="desc">Basic function to simulate a quantization layer </td></tr>
<tr id="row_0_203_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_quantization_layer_kernel.xhtml" target="_self">CLQuantizationLayerKernel</a></td><td class="desc">Interface for the quantization layer kernel </td></tr>
<tr id="row_0_204_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_reduction_operation.xhtml" target="_self">CLReductionOperation</a></td><td class="desc">Perform reduction operation </td></tr>
<tr id="row_0_205_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_reduction_operation_kernel.xhtml" target="_self">CLReductionOperationKernel</a></td><td class="desc">Interface for the reduction operation kernel </td></tr>
<tr id="row_0_206_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_remap.xhtml" target="_self">CLRemap</a></td><td class="desc">Basic function to execute remap </td></tr>
<tr id="row_0_207_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_remap_kernel.xhtml" target="_self">CLRemapKernel</a></td><td class="desc">OpenCL kernel to perform a remap on a tensor </td></tr>
<tr id="row_0_208_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_reshape_layer.xhtml" target="_self">CLReshapeLayer</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_reshape_layer_kernel.xhtml">CLReshapeLayerKernel</a> </td></tr>
<tr id="row_0_209_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_reshape_layer_kernel.xhtml" target="_self">CLReshapeLayerKernel</a></td><td class="desc">Interface for the kernel to perform tensor reshaping </td></tr>
<tr id="row_0_210_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_r_o_i_pooling_layer.xhtml" target="_self">CLROIPoolingLayer</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_r_o_i_pooling_layer_kernel.xhtml">CLROIPoolingLayerKernel</a> </td></tr>
<tr id="row_0_211_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_r_o_i_pooling_layer_kernel.xhtml" target="_self">CLROIPoolingLayerKernel</a></td><td class="desc">Interface for the <a class="el" href="structarm__compute_1_1_r_o_i.xhtml" title="Region of interest. ">ROI</a> pooling layer kernel </td></tr>
<tr id="row_0_212_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_scale.xhtml" target="_self">CLScale</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_scale_kernel.xhtml">CLScaleKernel</a> </td></tr>
<tr id="row_0_213_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_scale_kernel.xhtml" target="_self">CLScaleKernel</a></td><td class="desc">Interface for the scale kernel </td></tr>
<tr id="row_0_214_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_scharr3x3.xhtml" target="_self">CLScharr3x3</a></td><td class="desc">Basic function to execute scharr 3x3 filter </td></tr>
<tr id="row_0_215_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_scharr3x3_kernel.xhtml" target="_self">CLScharr3x3Kernel</a></td><td class="desc">Interface for the kernel to run a 3x3 Scharr filter on a tensor </td></tr>
<tr id="row_0_216_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_scheduler.xhtml" target="_self">CLScheduler</a></td><td class="desc">Provides global access to a CL context and command queue </td></tr>
<tr id="row_0_217_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_separable_convolution_hor_kernel.xhtml" target="_self">CLSeparableConvolutionHorKernel</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_kernel.xhtml" title="Kernel class. ">Kernel</a> for the Horizontal pass of a Separable Convolution </td></tr>
<tr id="row_0_218_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_separable_convolution_vert_kernel.xhtml" target="_self">CLSeparableConvolutionVertKernel</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_kernel.xhtml" title="Kernel class. ">Kernel</a> for the Vertical pass of a Separable Convolution </td></tr>
<tr id="row_0_219_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_sobel3x3.xhtml" target="_self">CLSobel3x3</a></td><td class="desc">Basic function to execute sobel 3x3 filter </td></tr>
<tr id="row_0_220_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_sobel3x3_kernel.xhtml" target="_self">CLSobel3x3Kernel</a></td><td class="desc">Interface for the kernel to run a 3x3 Sobel filter on a tensor </td></tr>
<tr id="row_0_221_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_sobel5x5.xhtml" target="_self">CLSobel5x5</a></td><td class="desc">Basic function to execute sobel 5x5 filter </td></tr>
<tr id="row_0_222_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_sobel5x5_hor_kernel.xhtml" target="_self">CLSobel5x5HorKernel</a></td><td class="desc">Interface for the kernel to run the horizontal pass of 5x5 Sobel filter on a tensor </td></tr>
<tr id="row_0_223_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_sobel5x5_vert_kernel.xhtml" target="_self">CLSobel5x5VertKernel</a></td><td class="desc">Interface for the kernel to run the vertical pass of 5x5 Sobel filter on a tensor </td></tr>
<tr id="row_0_224_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_sobel7x7.xhtml" target="_self">CLSobel7x7</a></td><td class="desc">Basic function to execute sobel 7x7 filter </td></tr>
<tr id="row_0_225_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_sobel7x7_hor_kernel.xhtml" target="_self">CLSobel7x7HorKernel</a></td><td class="desc">Interface for the kernel to run the horizontal pass of 7x7 Sobel filter on a tensor </td></tr>
<tr id="row_0_226_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_sobel7x7_vert_kernel.xhtml" target="_self">CLSobel7x7VertKernel</a></td><td class="desc">Interface for the kernel to run the vertical pass of 7x7 Sobel filter on a tensor </td></tr>
<tr id="row_0_227_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_softmax_layer.xhtml" target="_self">CLSoftmaxLayer</a></td><td class="desc">Basic function to compute a SoftmaxLayer </td></tr>
<tr id="row_0_228_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_sub_tensor.xhtml" target="_self">CLSubTensor</a></td><td class="desc">Basic implementation of the OpenCL sub-tensor interface </td></tr>
<tr id="row_0_229_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_symbols.xhtml" target="_self">CLSymbols</a></td><td class="desc"></td></tr>
<tr id="row_0_230_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_table_lookup.xhtml" target="_self">CLTableLookup</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_table_lookup_kernel.xhtml">CLTableLookupKernel</a> </td></tr>
<tr id="row_0_231_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_table_lookup_kernel.xhtml" target="_self">CLTableLookupKernel</a></td><td class="desc">Interface for the kernel to perform table lookup calculations </td></tr>
<tr id="row_0_232_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_tensor.xhtml" target="_self">CLTensor</a></td><td class="desc">Basic implementation of the OpenCL tensor interface </td></tr>
<tr id="row_0_233_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_tensor_allocator.xhtml" target="_self">CLTensorAllocator</a></td><td class="desc">Basic implementation of a CL memory tensor allocator </td></tr>
<tr id="row_0_234_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_threshold.xhtml" target="_self">CLThreshold</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_threshold_kernel.xhtml">CLThresholdKernel</a> </td></tr>
<tr id="row_0_235_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_threshold_kernel.xhtml" target="_self">CLThresholdKernel</a></td><td class="desc">Interface for the thresholding kernel </td></tr>
<tr id="row_0_236_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_transpose.xhtml" target="_self">CLTranspose</a></td><td class="desc">Basic function to transpose a matrix on OpenCL </td></tr>
<tr id="row_0_237_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_transpose_kernel.xhtml" target="_self">CLTransposeKernel</a></td><td class="desc">OpenCL kernel which transposes the elements of a matrix </td></tr>
<tr id="row_0_238_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_tuner.xhtml" target="_self">CLTuner</a></td><td class="desc">Basic implementation of the OpenCL tuner interface </td></tr>
<tr id="row_0_239_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_warp_affine.xhtml" target="_self">CLWarpAffine</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_warp_affine_kernel.xhtml">CLWarpAffineKernel</a> for AFFINE transformation </td></tr>
<tr id="row_0_240_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_warp_affine_kernel.xhtml" target="_self">CLWarpAffineKernel</a></td><td class="desc">Interface for the warp affine kernel </td></tr>
<tr id="row_0_241_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_warp_perspective.xhtml" target="_self">CLWarpPerspective</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_l_warp_perspective_kernel.xhtml">CLWarpPerspectiveKernel</a> for PERSPECTIVE transformation </td></tr>
<tr id="row_0_242_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_warp_perspective_kernel.xhtml" target="_self">CLWarpPerspectiveKernel</a></td><td class="desc">Interface for the warp perspective kernel </td></tr>
<tr id="row_0_243_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_l_weights_reshape_kernel.xhtml" target="_self">CLWeightsReshapeKernel</a></td><td class="desc"></td></tr>
<tr id="row_0_244_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_coordinates.xhtml" target="_self">Coordinates</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_coordinates.xhtml" title="Coordinates of an item. ">Coordinates</a> of an item </td></tr>
<tr id="row_0_245_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_coordinates2_d.xhtml" target="_self">Coordinates2D</a></td><td class="desc">Coordinate type </td></tr>
<tr id="row_0_246_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_coordinates3_d.xhtml" target="_self">Coordinates3D</a></td><td class="desc">Coordinate type </td></tr>
<tr id="row_0_247_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_p_p_corner_candidates_kernel.xhtml" target="_self">CPPCornerCandidatesKernel</a></td><td class="desc">CPP kernel to perform corner candidates </td></tr>
<tr id="row_0_248_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_p_p_detection_window_non_maxima_suppression_kernel.xhtml" target="_self">CPPDetectionWindowNonMaximaSuppressionKernel</a></td><td class="desc">CPP kernel to perform in-place computation of euclidean distance on IDetectionWindowArray </td></tr>
<tr id="row_0_249_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_p_p_permute.xhtml" target="_self">CPPPermute</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_c_p_p_permute_kernel.xhtml">CPPPermuteKernel</a> </td></tr>
<tr id="row_0_250_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_p_p_permute_kernel.xhtml" target="_self">CPPPermuteKernel</a></td><td class="desc">CPP kernel to perform tensor permutation </td></tr>
<tr id="row_0_251_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_p_p_scheduler.xhtml" target="_self">CPPScheduler</a></td><td class="desc">C++11 implementation of a pool of threads to automatically split a kernel's execution among several threads </td></tr>
<tr id="row_0_252_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_c_p_p_sort_euclidean_distance_kernel.xhtml" target="_self">CPPSortEuclideanDistanceKernel</a></td><td class="desc">CPP kernel to perform sorting and euclidean distance </td></tr>
<tr id="row_0_253_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_c_p_u_info.xhtml" target="_self">CPUInfo</a></td><td class="desc"></td></tr>
<tr id="row_0_254_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_detection_window.xhtml" target="_self">DetectionWindow</a></td><td class="desc">Detection window used for the object detection </td></tr>
<tr id="row_0_255_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_dimensions.xhtml" target="_self">Dimensions</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_dimensions.xhtml" title="Dimensions with dimensionality. ">Dimensions</a> with dimensionality </td></tr>
<tr id="row_0_256_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_distribution1_d.xhtml" target="_self">Distribution1D</a></td><td class="desc">Basic implementation of the 1D distribution interface </td></tr>
<tr id="row_0_257_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1enable__bitwise__ops.xhtml" target="_self">enable_bitwise_ops</a></td><td class="desc"></td></tr>
<tr id="row_0_258_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1enable__bitwise__ops_3_01arm__compute_1_1_g_p_u_target_01_4.xhtml" target="_self">enable_bitwise_ops&lt; arm_compute::GPUTarget &gt;</a></td><td class="desc">Enable operation operations on GPUTarget enumerations </td></tr>
<tr id="row_0_259_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_absolute_difference.xhtml" target="_self">GCAbsoluteDifference</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_g_c_absolute_difference_kernel.xhtml">GCAbsoluteDifferenceKernel</a> </td></tr>
<tr id="row_0_260_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_absolute_difference_kernel.xhtml" target="_self">GCAbsoluteDifferenceKernel</a></td><td class="desc">Interface for the absolute difference kernel </td></tr>
<tr id="row_0_261_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_activation_layer.xhtml" target="_self">GCActivationLayer</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_g_c_activation_layer_kernel.xhtml">GCActivationLayerKernel</a> </td></tr>
<tr id="row_0_262_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_activation_layer_kernel.xhtml" target="_self">GCActivationLayerKernel</a></td><td class="desc">Interface for the activation layer kernel </td></tr>
<tr id="row_0_263_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_arithmetic_addition.xhtml" target="_self">GCArithmeticAddition</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_g_c_arithmetic_addition_kernel.xhtml">GCArithmeticAdditionKernel</a> </td></tr>
<tr id="row_0_264_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_arithmetic_addition_kernel.xhtml" target="_self">GCArithmeticAdditionKernel</a></td><td class="desc">Interface for the arithmetic addition kernel </td></tr>
<tr id="row_0_265_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_batch_normalization_layer.xhtml" target="_self">GCBatchNormalizationLayer</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_g_c_batch_normalization_layer_kernel.xhtml">GCBatchNormalizationLayerKernel</a> and simulate a batch normalization layer </td></tr>
<tr id="row_0_266_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_batch_normalization_layer_kernel.xhtml" target="_self">GCBatchNormalizationLayerKernel</a></td><td class="desc">Interface for the BatchNormalization layer kernel </td></tr>
<tr id="row_0_267_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_col2_im_kernel.xhtml" target="_self">GCCol2ImKernel</a></td><td class="desc">Interface for the col2im reshaping kernel </td></tr>
<tr id="row_0_268_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_convolution_layer.xhtml" target="_self">GCConvolutionLayer</a></td><td class="desc">Basic function to compute the convolution layer </td></tr>
<tr id="row_0_269_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_convolution_layer_reshape_weights.xhtml" target="_self">GCConvolutionLayerReshapeWeights</a></td><td class="desc">Function to reshape and transpose the weights </td></tr>
<tr id="row_0_270_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_depth_concatenate_layer.xhtml" target="_self">GCDepthConcatenateLayer</a></td><td class="desc">Basic function to execute concatenate tensors along z axis </td></tr>
<tr id="row_0_271_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_depth_concatenate_layer_kernel.xhtml" target="_self">GCDepthConcatenateLayerKernel</a></td><td class="desc">Interface for the depth concatenate kernel </td></tr>
<tr id="row_0_272_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_depthwise_convolution_layer3x3.xhtml" target="_self">GCDepthwiseConvolutionLayer3x3</a></td><td class="desc">Basic function to execute a depthwise convolution for kernel size 3x3xC </td></tr>
<tr id="row_0_273_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_depthwise_convolution_layer3x3_kernel.xhtml" target="_self">GCDepthwiseConvolutionLayer3x3Kernel</a></td><td class="desc">Interface for the kernel to run a 3x3 depthwise convolution on a tensor </td></tr>
<tr id="row_0_274_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_direct_convolution_layer.xhtml" target="_self">GCDirectConvolutionLayer</a></td><td class="desc">Basic function to execute direct convolution function </td></tr>
<tr id="row_0_275_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_direct_convolution_layer_kernel.xhtml" target="_self">GCDirectConvolutionLayerKernel</a></td><td class="desc">Interface for the direct convolution kernel </td></tr>
<tr id="row_0_276_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_dropout_layer.xhtml" target="_self">GCDropoutLayer</a></td><td class="desc">Basic function to do dropout op </td></tr>
<tr id="row_0_277_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_dropout_layer_kernel.xhtml" target="_self">GCDropoutLayerKernel</a></td><td class="desc">Interface for the dropout layer kernel </td></tr>
<tr id="row_0_278_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_fill_border.xhtml" target="_self">GCFillBorder</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_g_c_fill_border_kernel.xhtml">GCFillBorderKernel</a> </td></tr>
<tr id="row_0_279_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_fill_border_kernel.xhtml" target="_self">GCFillBorderKernel</a></td><td class="desc">Interface for filling the border of a kernel </td></tr>
<tr id="row_0_280_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_fully_connected_layer.xhtml" target="_self">GCFullyConnectedLayer</a></td><td class="desc">Basic function to compute a Fully Connected layer on OpenGL ES </td></tr>
<tr id="row_0_281_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_fully_connected_layer_reshape_weights.xhtml" target="_self">GCFullyConnectedLayerReshapeWeights</a></td><td class="desc">Basic function to reshape the weights of Fully Connected layer with OpenGL ES </td></tr>
<tr id="row_0_282_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_g_e_m_m.xhtml" target="_self">GCGEMM</a></td><td class="desc">Basic function to execute GEMM on OpenGLES Compute </td></tr>
<tr id="row_0_283_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_g_e_m_m_interleave4x4.xhtml" target="_self">GCGEMMInterleave4x4</a></td><td class="desc">Basic function to execute <a class="el" href="classarm__compute_1_1_g_c_g_e_m_m_interleave4x4_kernel.xhtml" title="OpenGL ES kernel which interleaves the elements of a matrix A in chunk of 4x4. ">GCGEMMInterleave4x4Kernel</a> </td></tr>
<tr id="row_0_284_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_g_e_m_m_interleave4x4_kernel.xhtml" target="_self">GCGEMMInterleave4x4Kernel</a></td><td class="desc">OpenGL ES kernel which interleaves the elements of a matrix A in chunk of 4x4 </td></tr>
<tr id="row_0_285_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_g_e_m_m_matrix_accumulate_biases_kernel.xhtml" target="_self">GCGEMMMatrixAccumulateBiasesKernel</a></td><td class="desc">Interface to add a bias to each row of the input tensor </td></tr>
<tr id="row_0_286_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_g_e_m_m_matrix_addition_kernel.xhtml" target="_self">GCGEMMMatrixAdditionKernel</a></td><td class="desc">OpenGL ES kernel to perform the in-place matrix addition between 2 matrices, taking into account that the second matrix might be weighted by a scalar value beta </td></tr>
<tr id="row_0_287_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_g_e_m_m_matrix_multiply_kernel.xhtml" target="_self">GCGEMMMatrixMultiplyKernel</a></td><td class="desc">GLES Compute kernel to multiply two input matrices "A" and "B" or to multiply a vector "A" by a matrix "B" </td></tr>
<tr id="row_0_288_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_g_e_m_m_transpose1x_w.xhtml" target="_self">GCGEMMTranspose1xW</a></td><td class="desc">Basic function to execute <a class="el" href="classarm__compute_1_1_g_c_g_e_m_m_transpose1x_w_kernel.xhtml" title="OpenGLES kernel which transposes the elements of a matrix in chunks of 1xW, where W is equal to (16 /...">GCGEMMTranspose1xWKernel</a> </td></tr>
<tr id="row_0_289_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_g_e_m_m_transpose1x_w_kernel.xhtml" target="_self">GCGEMMTranspose1xWKernel</a></td><td class="desc">OpenGLES kernel which transposes the elements of a matrix in chunks of 1xW, where W is equal to (16 / element size of the tensor) </td></tr>
<tr id="row_0_290_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_im2_col_kernel.xhtml" target="_self">GCIm2ColKernel</a></td><td class="desc">Interface for the im2col reshape kernel </td></tr>
<tr id="row_0_291_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_kernel.xhtml" target="_self">GCKernel</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_g_c_kernel.xhtml" title="GCKernel class. ">GCKernel</a> class </td></tr>
<tr id="row_0_292_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_kernel_library.xhtml" target="_self">GCKernelLibrary</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_g_c_kernel_library.xhtml" title="GCKernelLibrary class. ">GCKernelLibrary</a> class </td></tr>
<tr id="row_0_293_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_logits1_d_max_kernel.xhtml" target="_self">GCLogits1DMaxKernel</a></td><td class="desc">Interface for the identifying the max value of 1D Logits </td></tr>
<tr id="row_0_294_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_logits1_d_norm_kernel.xhtml" target="_self">GCLogits1DNormKernel</a></td><td class="desc">Interface for calculating the final step of the Softmax Layer where each logit value is multiplied by the inverse of the sum of the logits </td></tr>
<tr id="row_0_295_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_logits1_d_shift_exp_sum_kernel.xhtml" target="_self">GCLogits1DShiftExpSumKernel</a></td><td class="desc">Interface for shifting the logits values around the max value and exponentiating the result </td></tr>
<tr id="row_0_296_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_normalization_layer.xhtml" target="_self">GCNormalizationLayer</a></td><td class="desc">Basic function to compute a normalization layer </td></tr>
<tr id="row_0_297_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_normalization_layer_kernel.xhtml" target="_self">GCNormalizationLayerKernel</a></td><td class="desc">Interface for the normalization layer kernel </td></tr>
<tr id="row_0_298_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_normalize_planar_y_u_v_layer.xhtml" target="_self">GCNormalizePlanarYUVLayer</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_g_c_normalize_planar_y_u_v_layer_kernel.xhtml">GCNormalizePlanarYUVLayerKernel</a> </td></tr>
<tr id="row_0_299_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_normalize_planar_y_u_v_layer_kernel.xhtml" target="_self">GCNormalizePlanarYUVLayerKernel</a></td><td class="desc">Interface for the NormalizePlanarYUV layer kernel </td></tr>
<tr id="row_0_300_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_pixel_wise_multiplication.xhtml" target="_self">GCPixelWiseMultiplication</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_g_c_pixel_wise_multiplication_kernel.xhtml">GCPixelWiseMultiplicationKernel</a> </td></tr>
<tr id="row_0_301_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_pixel_wise_multiplication_kernel.xhtml" target="_self">GCPixelWiseMultiplicationKernel</a></td><td class="desc">Interface for the pixelwise multiplication kernel </td></tr>
<tr id="row_0_302_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_pooling_layer.xhtml" target="_self">GCPoolingLayer</a></td><td class="desc">Basic function to simulate a pooling layer with the specified pooling operation </td></tr>
<tr id="row_0_303_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_pooling_layer_kernel.xhtml" target="_self">GCPoolingLayerKernel</a></td><td class="desc">Interface for the pooling layer kernel </td></tr>
<tr id="row_0_304_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_program.xhtml" target="_self">GCProgram</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_g_c_program.xhtml" title="GCProgram class. ">GCProgram</a> class </td></tr>
<tr id="row_0_305_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_scale.xhtml" target="_self">GCScale</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_g_c_scale_kernel.xhtml">GCScaleKernel</a> </td></tr>
<tr id="row_0_306_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_scale_kernel.xhtml" target="_self">GCScaleKernel</a></td><td class="desc">Interface for the scale kernel </td></tr>
<tr id="row_0_307_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_scheduler.xhtml" target="_self">GCScheduler</a></td><td class="desc">Provides global access to a OpenGL ES context and command queue </td></tr>
<tr id="row_0_308_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_softmax_layer.xhtml" target="_self">GCSoftmaxLayer</a></td><td class="desc">Basic function to compute a SoftmaxLayer </td></tr>
<tr id="row_0_309_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_tensor.xhtml" target="_self">GCTensor</a></td><td class="desc">Interface for OpenGL ES tensor </td></tr>
<tr id="row_0_310_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_tensor_allocator.xhtml" target="_self">GCTensorAllocator</a></td><td class="desc">Basic implementation of a GLES memory tensor allocator </td></tr>
<tr id="row_0_311_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_tensor_shift.xhtml" target="_self">GCTensorShift</a></td><td class="desc">Basic function to execute shift function for tensor </td></tr>
<tr id="row_0_312_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_tensor_shift_kernel.xhtml" target="_self">GCTensorShiftKernel</a></td><td class="desc">Interface for the kernel to shift valid data on a tensor </td></tr>
<tr id="row_0_313_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_transpose.xhtml" target="_self">GCTranspose</a></td><td class="desc">Basic function to transpose a matrix on OpenGL ES </td></tr>
<tr id="row_0_314_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_transpose_kernel.xhtml" target="_self">GCTransposeKernel</a></td><td class="desc">OpenGL ES kernel which transposes the elements of a matrix </td></tr>
<tr id="row_0_315_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_c_weights_reshape_kernel.xhtml" target="_self">GCWeightsReshapeKernel</a></td><td class="desc"></td></tr>
<tr id="row_0_316_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml" target="_self">GEMMInfo</a></td><td class="desc">GEMM information class </td></tr>
<tr id="row_0_317_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_g_e_m_m_reshape_info.xhtml" target="_self">GEMMReshapeInfo</a></td><td class="desc">GEMM reshape information class </td></tr>
<tr id="row_0_318_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_h_o_g.xhtml" target="_self">HOG</a></td><td class="desc">CPU implementation of <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object. ">HOG</a> data-object </td></tr>
<tr id="row_0_319_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml" target="_self">HOGInfo</a></td><td class="desc">Store the <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object. ">HOG</a>'s metadata </td></tr>
<tr id="row_0_320_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_access_window.xhtml" target="_self">IAccessWindow</a></td><td class="desc">Interface describing methods to update access window and padding based on kernel parameters </td></tr>
<tr id="row_0_321_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_allocator.xhtml" target="_self">IAllocator</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_allocator.xhtml" title="Default malloc allocator implementation. ">Allocator</a> interface </td></tr>
<tr id="row_0_322_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_array.xhtml" target="_self">IArray</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_array.xhtml" title="Basic implementation of the IArray interface which allocates a static number of T values...">Array</a> of type T </td></tr>
<tr id="row_0_323_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_c_l_array.xhtml" target="_self">ICLArray</a></td><td class="desc">Interface for OpenCL <a class="el" href="classarm__compute_1_1_array.xhtml" title="Basic implementation of the IArray interface which allocates a static number of T values...">Array</a> </td></tr>
<tr id="row_0_324_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_c_l_distribution1_d.xhtml" target="_self">ICLDistribution1D</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_i_c_l_distribution1_d.xhtml" title="ICLDistribution1D interface class. ">ICLDistribution1D</a> interface class </td></tr>
<tr id="row_0_325_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_c_l_g_e_m_m_lowp_reduction_kernel.xhtml" target="_self">ICLGEMMLowpReductionKernel</a></td><td class="desc">Common interface for all OpenCL reduction kernels </td></tr>
<tr id="row_0_326_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_c_l_h_o_g.xhtml" target="_self">ICLHOG</a></td><td class="desc">Interface for OpenCL <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object. ">HOG</a> data-object </td></tr>
<tr id="row_0_327_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_c_l_kernel.xhtml" target="_self">ICLKernel</a></td><td class="desc">Common interface for all the OpenCL kernels </td></tr>
<tr id="row_0_328_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_c_l_lut.xhtml" target="_self">ICLLut</a></td><td class="desc">Interface for OpenCL LUT </td></tr>
<tr id="row_0_329_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_c_l_multi_h_o_g.xhtml" target="_self">ICLMultiHOG</a></td><td class="desc">Interface for storing multiple <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object. ">HOG</a> data-objects </td></tr>
<tr id="row_0_330_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_c_l_multi_image.xhtml" target="_self">ICLMultiImage</a></td><td class="desc">Interface for OpenCL multi-planar images </td></tr>
<tr id="row_0_331_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_c_l_simple2_d_kernel.xhtml" target="_self">ICLSimple2DKernel</a></td><td class="desc">Interface for simple OpenCL kernels having 1 tensor input and 1 tensor output </td></tr>
<tr id="row_0_332_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_c_l_simple3_d_kernel.xhtml" target="_self">ICLSimple3DKernel</a></td><td class="desc">Interface for simple OpenCL kernels having 1 tensor input and 1 tensor output </td></tr>
<tr id="row_0_333_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_c_l_simple_function.xhtml" target="_self">ICLSimpleFunction</a></td><td class="desc">Basic interface for functions which have a single OpenCL kernel </td></tr>
<tr id="row_0_334_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_c_l_simple_kernel.xhtml" target="_self">ICLSimpleKernel</a></td><td class="desc">Interface for simple OpenCL kernels having 1 tensor input and 1 tensor output </td></tr>
<tr id="row_0_335_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml" target="_self">ICLTensor</a></td><td class="desc">Interface for OpenCL tensor </td></tr>
<tr id="row_0_336_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_c_l_tuner.xhtml" target="_self">ICLTuner</a></td><td class="desc">Basic interface for tuning the OpenCL kernels </td></tr>
<tr id="row_0_337_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_c_p_p_kernel.xhtml" target="_self">ICPPKernel</a></td><td class="desc">Common interface for all kernels implemented in C++ </td></tr>
<tr id="row_0_338_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_c_p_p_simple_function.xhtml" target="_self">ICPPSimpleFunction</a></td><td class="desc">Basic interface for functions which have a single CPP kernel </td></tr>
<tr id="row_0_339_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_c_p_p_simple_kernel.xhtml" target="_self">ICPPSimpleKernel</a></td><td class="desc">Interface for simple NEON kernels having 1 tensor input and 1 tensor output </td></tr>
<tr id="row_0_340_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_distribution.xhtml" target="_self">IDistribution</a></td><td class="desc">Interface for distribution objects </td></tr>
<tr id="row_0_341_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_distribution1_d.xhtml" target="_self">IDistribution1D</a></td><td class="desc">1D Distribution interface </td></tr>
<tr id="row_0_342_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_function.xhtml" target="_self">IFunction</a></td><td class="desc">Base class for all functions </td></tr>
<tr id="row_0_343_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_g_c_kernel.xhtml" target="_self">IGCKernel</a></td><td class="desc">Common interface for all the GLES kernels </td></tr>
<tr id="row_0_344_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_g_c_simple2_d_kernel.xhtml" target="_self">IGCSimple2DKernel</a></td><td class="desc">Interface for simple OpenGL ES kernels having 1 tensor input and 1 tensor output </td></tr>
<tr id="row_0_345_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_g_c_simple3_d_kernel.xhtml" target="_self">IGCSimple3DKernel</a></td><td class="desc">Interface for simple GLES kernels having 1 tensor input and 1 tensor output </td></tr>
<tr id="row_0_346_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_g_c_simple_function.xhtml" target="_self">IGCSimpleFunction</a></td><td class="desc">Basic interface for functions which have a single OpenGL ES kernel </td></tr>
<tr id="row_0_347_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_g_c_simple_kernel.xhtml" target="_self">IGCSimpleKernel</a></td><td class="desc">Interface for simple OpenGL ES kernels having 1 tensor input and 1 tensor output </td></tr>
<tr id="row_0_348_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_g_c_tensor.xhtml" target="_self">IGCTensor</a></td><td class="desc">Interface for GLES Compute tensor </td></tr>
<tr id="row_0_349_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_h_o_g.xhtml" target="_self">IHOG</a></td><td class="desc">Interface for <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object. ">HOG</a> data-object </td></tr>
<tr id="row_0_350_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_kernel.xhtml" target="_self">IKernel</a></td><td class="desc">Common information for all the kernels </td></tr>
<tr id="row_0_351_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_lifetime_manager.xhtml" target="_self">ILifetimeManager</a></td><td class="desc">Interface for managing the lifetime of objects </td></tr>
<tr id="row_0_352_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_lut.xhtml" target="_self">ILut</a></td><td class="desc">Lookup Table object interface </td></tr>
<tr id="row_0_353_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_lut_allocator.xhtml" target="_self">ILutAllocator</a></td><td class="desc">Basic interface to allocate LUTs' </td></tr>
<tr id="row_0_354_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_memory_group.xhtml" target="_self">IMemoryGroup</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_memory.xhtml" title="CPU implementation of memory object. ">Memory</a> group interface </td></tr>
<tr id="row_0_355_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_memory_manager.xhtml" target="_self">IMemoryManager</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_memory.xhtml" title="CPU implementation of memory object. ">Memory</a> manager interface to handle allocations of backing memory </td></tr>
<tr id="row_0_356_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_memory_pool.xhtml" target="_self">IMemoryPool</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_memory.xhtml" title="CPU implementation of memory object. ">Memory</a> Pool Inteface </td></tr>
<tr id="row_0_357_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_multi_h_o_g.xhtml" target="_self">IMultiHOG</a></td><td class="desc">Interface for storing multiple <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object. ">HOG</a> data-objects </td></tr>
<tr id="row_0_358_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_multi_image.xhtml" target="_self">IMultiImage</a></td><td class="desc">Interface for multi-planar images </td></tr>
<tr id="row_0_359_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_n_e_g_e_m_m_lowp_reduction_kernel.xhtml" target="_self">INEGEMMLowpReductionKernel</a></td><td class="desc">Common interface for all NEON reduction kernels </td></tr>
<tr id="row_0_360_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_n_e_harris_score_kernel.xhtml" target="_self">INEHarrisScoreKernel</a></td><td class="desc">Common interface for all Harris Score kernels </td></tr>
<tr id="row_0_361_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_n_e_simple_function.xhtml" target="_self">INESimpleFunction</a></td><td class="desc">Basic interface for functions which have a single NEON kernel </td></tr>
<tr id="row_0_362_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_n_e_warp_kernel.xhtml" target="_self">INEWarpKernel</a></td><td class="desc">Common interface for warp affine and warp perspective </td></tr>
<tr id="row_0_363_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_n_e_winograd_layer_batched_g_e_m_m_kernel.xhtml" target="_self">INEWinogradLayerBatchedGEMMKernel</a></td><td class="desc"></td></tr>
<tr id="row_0_364_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_n_e_winograd_layer_transform_input_kernel.xhtml" target="_self">INEWinogradLayerTransformInputKernel</a></td><td class="desc"></td></tr>
<tr id="row_0_365_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_n_e_winograd_layer_transform_output_kernel.xhtml" target="_self">INEWinogradLayerTransformOutputKernel</a></td><td class="desc"></td></tr>
<tr id="row_0_366_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_n_e_winograd_layer_transform_weights_kernel.xhtml" target="_self">INEWinogradLayerTransformWeightsKernel</a></td><td class="desc"></td></tr>
<tr id="row_0_367_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_i_o_format_info.xhtml" target="_self">IOFormatInfo</a></td><td class="desc">IO formatting information class </td></tr>
<tr id="row_0_368_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_pool_manager.xhtml" target="_self">IPoolManager</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_memory.xhtml" title="CPU implementation of memory object. ">Memory</a> pool manager interface </td></tr>
<tr id="row_0_369_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_pyramid.xhtml" target="_self">IPyramid</a></td><td class="desc">Interface for pyramid data-object </td></tr>
<tr id="row_0_370_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_scheduler.xhtml" target="_self">IScheduler</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_scheduler.xhtml" title="Configurable scheduler which supports multiple multithreading APIs and choosing between different sch...">Scheduler</a> interface to run kernels </td></tr>
<tr id="row_0_371_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_simple_lifetime_manager.xhtml" target="_self">ISimpleLifetimeManager</a></td><td class="desc">Abstract class of the simple lifetime manager interface </td></tr>
<tr id="row_0_372_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_tensor.xhtml" target="_self">ITensor</a></td><td class="desc">Interface for NEON tensor </td></tr>
<tr id="row_0_373_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_tensor_allocator.xhtml" target="_self">ITensorAllocator</a></td><td class="desc">Interface to allocate tensors </td></tr>
<tr id="row_0_374_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml" target="_self">ITensorInfo</a></td><td class="desc">Store the tensor's metadata </td></tr>
<tr id="row_0_375_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_iterator.xhtml" target="_self">Iterator</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_iterator.xhtml" title="Iterator updated by execute_window_loop for each window element. ">Iterator</a> updated by <a class="el" href="namespacearm__compute.xhtml#a6c0dcc38187027dcb89cd9724bc5a823">execute_window_loop</a> for each window element </td></tr>
<tr id="row_0_376_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_kernel.xhtml" target="_self">Kernel</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_kernel.xhtml" title="Kernel class. ">Kernel</a> class </td></tr>
<tr id="row_0_377_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_key_point.xhtml" target="_self">KeyPoint</a></td><td class="desc"><a class="el" href="struct_keypoint.xhtml">Keypoint</a> type </td></tr>
<tr id="row_0_378_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_lut.xhtml" target="_self">Lut</a></td><td class="desc">Basic implementation of the LUT interface </td></tr>
<tr id="row_0_379_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_lut_allocator.xhtml" target="_self">LutAllocator</a></td><td class="desc">Basic implementation of a CPU memory LUT allocator </td></tr>
<tr id="row_0_380_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_memory.xhtml" target="_self">Memory</a></td><td class="desc">CPU implementation of memory object </td></tr>
<tr id="row_0_381_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_memory_group_base.xhtml" target="_self">MemoryGroupBase</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_memory.xhtml" title="CPU implementation of memory object. ">Memory</a> group </td></tr>
<tr id="row_0_382_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_memory_manager_on_demand.xhtml" target="_self">MemoryManagerOnDemand</a></td><td class="desc">On-demand memory manager </td></tr>
<tr id="row_0_383_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_min_max_location_values.xhtml" target="_self">MinMaxLocationValues</a></td><td class="desc"></td></tr>
<tr id="row_0_384_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_multi_h_o_g.xhtml" target="_self">MultiHOG</a></td><td class="desc">CPU implementation of multi <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object. ">HOG</a> data-object </td></tr>
<tr id="row_0_385_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_multi_image.xhtml" target="_self">MultiImage</a></td><td class="desc">Basic implementation of the multi-planar image interface </td></tr>
<tr id="row_0_386_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_multi_image_info.xhtml" target="_self">MultiImageInfo</a></td><td class="desc">Store the multi-planar image's metadata </td></tr>
<tr id="row_0_387_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_absolute_difference.xhtml" target="_self">NEAbsoluteDifference</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_absolute_difference_kernel.xhtml">NEAbsoluteDifferenceKernel</a> </td></tr>
<tr id="row_0_388_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_absolute_difference_kernel.xhtml" target="_self">NEAbsoluteDifferenceKernel</a></td><td class="desc">Interface for the absolute difference kernel </td></tr>
<tr id="row_0_389_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_accumulate.xhtml" target="_self">NEAccumulate</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_accumulate_kernel.xhtml">NEAccumulateKernel</a> </td></tr>
<tr id="row_0_390_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_accumulate_kernel.xhtml" target="_self">NEAccumulateKernel</a></td><td class="desc">Interface for the accumulate kernel </td></tr>
<tr id="row_0_391_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_accumulate_squared.xhtml" target="_self">NEAccumulateSquared</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_accumulate_squared_kernel.xhtml">NEAccumulateSquaredKernel</a> </td></tr>
<tr id="row_0_392_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_accumulate_squared_kernel.xhtml" target="_self">NEAccumulateSquaredKernel</a></td><td class="desc">Interface for the accumulate squared kernel </td></tr>
<tr id="row_0_393_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_accumulate_weighted.xhtml" target="_self">NEAccumulateWeighted</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_accumulate_weighted_kernel.xhtml">NEAccumulateWeightedKernel</a> </td></tr>
<tr id="row_0_394_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_accumulate_weighted_kernel.xhtml" target="_self">NEAccumulateWeightedKernel</a></td><td class="desc">Interface for the accumulate weighted kernel </td></tr>
<tr id="row_0_395_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_activation_layer.xhtml" target="_self">NEActivationLayer</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_activation_layer_kernel.xhtml">NEActivationLayerKernel</a> </td></tr>
<tr id="row_0_396_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_activation_layer_kernel.xhtml" target="_self">NEActivationLayerKernel</a></td><td class="desc">Interface for the activation layer kernel </td></tr>
<tr id="row_0_397_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_arithmetic_addition.xhtml" target="_self">NEArithmeticAddition</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_arithmetic_addition_kernel.xhtml">NEArithmeticAdditionKernel</a> </td></tr>
<tr id="row_0_398_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_arithmetic_addition_kernel.xhtml" target="_self">NEArithmeticAdditionKernel</a></td><td class="desc">Interface for the kernel to perform addition between two tensors </td></tr>
<tr id="row_0_399_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_arithmetic_subtraction.xhtml" target="_self">NEArithmeticSubtraction</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_arithmetic_subtraction_kernel.xhtml">NEArithmeticSubtractionKernel</a> </td></tr>
<tr id="row_0_400_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_arithmetic_subtraction_kernel.xhtml" target="_self">NEArithmeticSubtractionKernel</a></td><td class="desc">Interface for the kernel to perform subtraction between two tensors </td></tr>
<tr id="row_0_401_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_batch_normalization_layer.xhtml" target="_self">NEBatchNormalizationLayer</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_normalization_layer_kernel.xhtml">NENormalizationLayerKernel</a> and simulate a batch normalization layer </td></tr>
<tr id="row_0_402_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_batch_normalization_layer_kernel.xhtml" target="_self">NEBatchNormalizationLayerKernel</a></td><td class="desc">Interface for the batch normalization layer kernel </td></tr>
<tr id="row_0_403_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_bitwise_and.xhtml" target="_self">NEBitwiseAnd</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_bitwise_and_kernel.xhtml">NEBitwiseAndKernel</a> </td></tr>
<tr id="row_0_404_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_bitwise_and_kernel.xhtml" target="_self">NEBitwiseAndKernel</a></td><td class="desc">Interface for the kernel to perform bitwise AND between XY-planes of two tensors </td></tr>
<tr id="row_0_405_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_bitwise_not.xhtml" target="_self">NEBitwiseNot</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_bitwise_not_kernel.xhtml">NEBitwiseNotKernel</a> </td></tr>
<tr id="row_0_406_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_bitwise_not_kernel.xhtml" target="_self">NEBitwiseNotKernel</a></td><td class="desc">Interface for the kernel to perform bitwise NOT operation </td></tr>
<tr id="row_0_407_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_bitwise_or.xhtml" target="_self">NEBitwiseOr</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_bitwise_or_kernel.xhtml">NEBitwiseOrKernel</a> </td></tr>
<tr id="row_0_408_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_bitwise_or_kernel.xhtml" target="_self">NEBitwiseOrKernel</a></td><td class="desc">Interface for the kernel to perform bitwise inclusive OR between two tensors </td></tr>
<tr id="row_0_409_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_bitwise_xor.xhtml" target="_self">NEBitwiseXor</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_bitwise_xor_kernel.xhtml">NEBitwiseXorKernel</a> </td></tr>
<tr id="row_0_410_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_bitwise_xor_kernel.xhtml" target="_self">NEBitwiseXorKernel</a></td><td class="desc">Interface for the kernel to perform bitwise exclusive OR (XOR) between two tensors </td></tr>
<tr id="row_0_411_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_box3x3.xhtml" target="_self">NEBox3x3</a></td><td class="desc">Basic function to execute box filter 3x3 </td></tr>
<tr id="row_0_412_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_box3x3_kernel.xhtml" target="_self">NEBox3x3Kernel</a></td><td class="desc">NEON kernel to perform a Box 3x3 filter </td></tr>
<tr id="row_0_413_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_canny_edge.xhtml" target="_self">NECannyEdge</a></td><td class="desc">Basic function to execute canny edge on NEON </td></tr>
<tr id="row_0_414_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_channel_combine.xhtml" target="_self">NEChannelCombine</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_channel_combine_kernel.xhtml">NEChannelCombineKernel</a> to perform channel combination </td></tr>
<tr id="row_0_415_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_channel_combine_kernel.xhtml" target="_self">NEChannelCombineKernel</a></td><td class="desc">Interface for the channel combine kernel </td></tr>
<tr id="row_0_416_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_channel_extract.xhtml" target="_self">NEChannelExtract</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_channel_extract_kernel.xhtml">NEChannelExtractKernel</a> to perform channel extraction </td></tr>
<tr id="row_0_417_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_channel_extract_kernel.xhtml" target="_self">NEChannelExtractKernel</a></td><td class="desc">Interface for the channel extract kernel </td></tr>
<tr id="row_0_418_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_col2_im.xhtml" target="_self">NECol2Im</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_col2_im.xhtml">NECol2Im</a> </td></tr>
<tr id="row_0_419_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_col2_im_kernel.xhtml" target="_self">NECol2ImKernel</a></td><td class="desc">NEON kernel to perform col2im reshaping </td></tr>
<tr id="row_0_420_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_color_convert.xhtml" target="_self">NEColorConvert</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_color_convert_kernel.xhtml">NEColorConvertKernel</a> to perform color conversion </td></tr>
<tr id="row_0_421_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_color_convert_kernel.xhtml" target="_self">NEColorConvertKernel</a></td><td class="desc">Interface for the color convert kernel </td></tr>
<tr id="row_0_422_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_convolution3x3.xhtml" target="_self">NEConvolution3x3</a></td><td class="desc">Basic function to execute convolution of size 3x3 </td></tr>
<tr id="row_0_423_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_convolution_kernel.xhtml" target="_self">NEConvolutionKernel</a></td><td class="desc">Interface for the kernel to run an arbitrary size convolution on a tensor </td></tr>
<tr id="row_0_424_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_convolution_layer.xhtml" target="_self">NEConvolutionLayer</a></td><td class="desc">Basic function to simulate a convolution layer </td></tr>
<tr id="row_0_425_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_convolution_layer_reshape_weights.xhtml" target="_self">NEConvolutionLayerReshapeWeights</a></td><td class="desc">Function to reshape and perform 1xW transposition on the weights </td></tr>
<tr id="row_0_426_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_convolution_rectangle.xhtml" target="_self">NEConvolutionRectangle</a></td><td class="desc">Basic function to execute non-square convolution </td></tr>
<tr id="row_0_427_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_convolution_rectangle_kernel.xhtml" target="_self">NEConvolutionRectangleKernel</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_kernel.xhtml" title="Kernel class. ">Kernel</a> for the running convolution on a rectangle matrix </td></tr>
<tr id="row_0_428_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_convolution_square.xhtml" target="_self">NEConvolutionSquare</a></td><td class="desc">Basic function to execute convolution of size 5x5, 7x7, 9x9 </td></tr>
<tr id="row_0_429_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_cumulative_distribution_kernel.xhtml" target="_self">NECumulativeDistributionKernel</a></td><td class="desc">Interface for the cumulative distribution (cummulative summmation) calculation kernel </td></tr>
<tr id="row_0_430_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_deconvolution_layer.xhtml" target="_self">NEDeconvolutionLayer</a></td><td class="desc">Function to run the deconvolution layer </td></tr>
<tr id="row_0_431_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_depth_concatenate_layer.xhtml" target="_self">NEDepthConcatenateLayer</a></td><td class="desc">Basic function to execute concatenate tensors along z axis </td></tr>
<tr id="row_0_432_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_depth_concatenate_layer_kernel.xhtml" target="_self">NEDepthConcatenateLayerKernel</a></td><td class="desc">Interface for the depth concatenate kernel </td></tr>
<tr id="row_0_433_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_depth_convert_layer.xhtml" target="_self">NEDepthConvertLayer</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_depth_convert_layer_kernel.xhtml">NEDepthConvertLayerKernel</a> </td></tr>
<tr id="row_0_434_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_depth_convert_layer_kernel.xhtml" target="_self">NEDepthConvertLayerKernel</a></td><td class="desc">Depth conversion kernel </td></tr>
<tr id="row_0_435_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_depthwise_convolution_layer.xhtml" target="_self">NEDepthwiseConvolutionLayer</a></td><td class="desc">Basic function to execute a generic depthwise convolution </td></tr>
<tr id="row_0_436_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_depthwise_convolution_layer3x3.xhtml" target="_self">NEDepthwiseConvolutionLayer3x3</a></td><td class="desc">Basic function to execute a depthwise convolution for kernel size 3x3xC </td></tr>
<tr id="row_0_437_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_depthwise_convolution_layer3x3_kernel.xhtml" target="_self">NEDepthwiseConvolutionLayer3x3Kernel</a></td><td class="desc">Interface for the kernel to run a 3x3 depthwise convolution on a tensor </td></tr>
<tr id="row_0_438_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_depthwise_im2_col_kernel.xhtml" target="_self">NEDepthwiseIm2ColKernel</a></td><td class="desc">Interface for the depthwise im2col reshape kernel </td></tr>
<tr id="row_0_439_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_depthwise_separable_convolution_layer.xhtml" target="_self">NEDepthwiseSeparableConvolutionLayer</a></td><td class="desc">Basic function to execute depthwise convolution </td></tr>
<tr id="row_0_440_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_depthwise_vector_to_tensor_kernel.xhtml" target="_self">NEDepthwiseVectorToTensorKernel</a></td><td class="desc">Interface for the depthwise vector to tensor kernel </td></tr>
<tr id="row_0_441_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_depthwise_weights_reshape_kernel.xhtml" target="_self">NEDepthwiseWeightsReshapeKernel</a></td><td class="desc">Interface for the depthwise weights reshape kernel </td></tr>
<tr id="row_0_442_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_dequantization_layer.xhtml" target="_self">NEDequantizationLayer</a></td><td class="desc">Basic function to simulate a dequantization layer </td></tr>
<tr id="row_0_443_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_dequantization_layer_kernel.xhtml" target="_self">NEDequantizationLayerKernel</a></td><td class="desc">Interface for the dequantization layer kernel </td></tr>
<tr id="row_0_444_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_derivative.xhtml" target="_self">NEDerivative</a></td><td class="desc">Basic function to execute first order derivative operator </td></tr>
<tr id="row_0_445_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_derivative_kernel.xhtml" target="_self">NEDerivativeKernel</a></td><td class="desc">Interface for the kernel to run the derivative along the X/Y directions on a tensor </td></tr>
<tr id="row_0_446_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_dilate.xhtml" target="_self">NEDilate</a></td><td class="desc">Basic function to execute dilate </td></tr>
<tr id="row_0_447_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_dilate_kernel.xhtml" target="_self">NEDilateKernel</a></td><td class="desc">Interface for the kernel to perform boolean image dilatation </td></tr>
<tr id="row_0_448_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_direct_convolution_layer.xhtml" target="_self">NEDirectConvolutionLayer</a></td><td class="desc">Function to run the direct convolution </td></tr>
<tr id="row_0_449_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_direct_convolution_layer_kernel.xhtml" target="_self">NEDirectConvolutionLayerKernel</a></td><td class="desc">NEON interface for Direct Convolution Layer kernel </td></tr>
<tr id="row_0_450_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_direct_convolution_layer_output_stage_kernel.xhtml" target="_self">NEDirectConvolutionLayerOutputStageKernel</a></td><td class="desc">NEON kernel to accumulate the biases, if provided, or downscale in case of quantized input </td></tr>
<tr id="row_0_451_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_edge_non_max_suppression_kernel.xhtml" target="_self">NEEdgeNonMaxSuppressionKernel</a></td><td class="desc">NEON kernel to perform Non-Maxima suppression for Canny Edge </td></tr>
<tr id="row_0_452_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_edge_trace_kernel.xhtml" target="_self">NEEdgeTraceKernel</a></td><td class="desc">NEON kernel to perform Edge tracing </td></tr>
<tr id="row_0_453_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_equalize_histogram.xhtml" target="_self">NEEqualizeHistogram</a></td><td class="desc">Basic function to execute histogram equalization </td></tr>
<tr id="row_0_454_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_erode.xhtml" target="_self">NEErode</a></td><td class="desc">Basic function to execute erode </td></tr>
<tr id="row_0_455_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_erode_kernel.xhtml" target="_self">NEErodeKernel</a></td><td class="desc">Interface for the kernel to perform boolean image erosion </td></tr>
<tr id="row_0_456_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_fast_corners.xhtml" target="_self">NEFastCorners</a></td><td class="desc">Basic function to execute fast corners </td></tr>
<tr id="row_0_457_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_fast_corners_kernel.xhtml" target="_self">NEFastCornersKernel</a></td><td class="desc">NEON kernel to perform fast corners </td></tr>
<tr id="row_0_458_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_fill_array_kernel.xhtml" target="_self">NEFillArrayKernel</a></td><td class="desc">This kernel adds all texels greater than or equal to the threshold value to the keypoint array </td></tr>
<tr id="row_0_459_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_fill_border.xhtml" target="_self">NEFillBorder</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_fill_border_kernel.xhtml">NEFillBorderKernel</a> </td></tr>
<tr id="row_0_460_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_fill_border_kernel.xhtml" target="_self">NEFillBorderKernel</a></td><td class="desc">Interface for the kernel to fill borders </td></tr>
<tr id="row_0_461_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_fill_inner_border_kernel.xhtml" target="_self">NEFillInnerBorderKernel</a></td><td class="desc">Interface for the kernel to fill the interior borders </td></tr>
<tr id="row_0_462_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_flatten_layer.xhtml" target="_self">NEFlattenLayer</a></td><td class="desc">Basic function to execute flatten </td></tr>
<tr id="row_0_463_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_floor.xhtml" target="_self">NEFloor</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_floor_kernel.xhtml">NEFloorKernel</a> </td></tr>
<tr id="row_0_464_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_floor_kernel.xhtml" target="_self">NEFloorKernel</a></td><td class="desc">NEON kernel to perform a floor operation </td></tr>
<tr id="row_0_465_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_fully_connected_layer.xhtml" target="_self">NEFullyConnectedLayer</a></td><td class="desc">Basic function to compute a Fully Connected layer on NEON </td></tr>
<tr id="row_0_466_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_fully_connected_layer_reshape_weights.xhtml" target="_self">NEFullyConnectedLayerReshapeWeights</a></td><td class="desc">Basic function to reshape the weights of Fully Connected layer with NEON </td></tr>
<tr id="row_0_467_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_gaussian3x3.xhtml" target="_self">NEGaussian3x3</a></td><td class="desc">Basic function to execute gaussian filter 3x3 </td></tr>
<tr id="row_0_468_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_gaussian3x3_kernel.xhtml" target="_self">NEGaussian3x3Kernel</a></td><td class="desc">NEON kernel to perform a Gaussian 3x3 filter </td></tr>
<tr id="row_0_469_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_gaussian5x5.xhtml" target="_self">NEGaussian5x5</a></td><td class="desc">Basic function to execute gaussian filter 5x5 </td></tr>
<tr id="row_0_470_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_gaussian5x5_hor_kernel.xhtml" target="_self">NEGaussian5x5HorKernel</a></td><td class="desc">NEON kernel to perform a Gaussian 5x5 filter (horizontal pass) </td></tr>
<tr id="row_0_471_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_gaussian5x5_vert_kernel.xhtml" target="_self">NEGaussian5x5VertKernel</a></td><td class="desc">NEON kernel to perform a Gaussian 5x5 filter (vertical pass) </td></tr>
<tr id="row_0_472_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_gaussian_pyramid.xhtml" target="_self">NEGaussianPyramid</a></td><td class="desc">Common interface for all Gaussian pyramid functions </td></tr>
<tr id="row_0_473_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_gaussian_pyramid_half.xhtml" target="_self">NEGaussianPyramidHalf</a></td><td class="desc">Basic function to execute gaussian pyramid with HALF scale factor </td></tr>
<tr id="row_0_474_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_gaussian_pyramid_hor_kernel.xhtml" target="_self">NEGaussianPyramidHorKernel</a></td><td class="desc">NEON kernel to perform a GaussianPyramid (horizontal pass) </td></tr>
<tr id="row_0_475_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_gaussian_pyramid_orb.xhtml" target="_self">NEGaussianPyramidOrb</a></td><td class="desc">Basic function to execute gaussian pyramid with ORB scale factor </td></tr>
<tr id="row_0_476_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_gaussian_pyramid_vert_kernel.xhtml" target="_self">NEGaussianPyramidVertKernel</a></td><td class="desc">NEON kernel to perform a GaussianPyramid (vertical pass) </td></tr>
<tr id="row_0_477_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_g_e_m_m.xhtml" target="_self">NEGEMM</a></td><td class="desc">Basic function to execute GEMM on NEON </td></tr>
<tr id="row_0_478_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_a_arch32_kernel.xhtml" target="_self">NEGEMMAArch32Kernel</a></td><td class="desc">AArch32/armv7a NEON kernel to multiply two input matrices "A" and "B" </td></tr>
<tr id="row_0_479_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_a_arch64_kernel.xhtml" target="_self">NEGEMMAArch64Kernel</a></td><td class="desc">AArch64 NEON kernel to multiply two input matrices "A" and "B" </td></tr>
<tr id="row_0_480_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_a_arch64_native_kernel.xhtml" target="_self">NEGEMMAArch64NativeKernel</a></td><td class="desc">Native AArch64 NEON kernel to multiply two input matrices "A" and "B" </td></tr>
<tr id="row_0_481_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_assembly_base_kernel.xhtml" target="_self">NEGEMMAssemblyBaseKernel</a></td><td class="desc">Base class for GEMM NEON kernels implemented in Assembly </td></tr>
<tr id="row_0_482_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_convolution_layer.xhtml" target="_self">NEGEMMConvolutionLayer</a></td><td class="desc">Basic function to simulate a convolution layer </td></tr>
<tr id="row_0_483_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_interleave4x4.xhtml" target="_self">NEGEMMInterleave4x4</a></td><td class="desc">Basic function to execute <a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_interleave4x4_kernel.xhtml" title="NEON kernel to interleave the elements of a matrix. ">NEGEMMInterleave4x4Kernel</a> </td></tr>
<tr id="row_0_484_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_interleave4x4_kernel.xhtml" target="_self">NEGEMMInterleave4x4Kernel</a></td><td class="desc">NEON kernel to interleave the elements of a matrix </td></tr>
<tr id="row_0_485_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_interleave_blocked_kernel.xhtml" target="_self">NEGEMMInterleaveBlockedKernel</a></td><td class="desc">NEON kernel to interleave the elements of a matrix </td></tr>
<tr id="row_0_486_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_a_arch64_a53_kernel.xhtml" target="_self">NEGEMMLowpAArch64A53Kernel</a></td><td class="desc">AArch64 NEON kernel to multiply two input matrices "A" and "B" </td></tr>
<tr id="row_0_487_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_a_arch64_kernel.xhtml" target="_self">NEGEMMLowpAArch64Kernel</a></td><td class="desc">AArch64 NEON kernel to multiply two input matrices "A" and "B" </td></tr>
<tr id="row_0_488_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_a_arch64_v8_p4_kernel.xhtml" target="_self">NEGEMMLowpAArch64V8P4Kernel</a></td><td class="desc">AArch64 NEON kernel to multiply two input matrices "A" and "B" </td></tr>
<tr id="row_0_489_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_assembly_matrix_multiply_core.xhtml" target="_self">NEGEMMLowpAssemblyMatrixMultiplyCore</a></td><td class="desc">Basic function to execute matrix multiply assembly kernels </td></tr>
<tr id="row_0_490_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_matrix_a_reduction_kernel.xhtml" target="_self">NEGEMMLowpMatrixAReductionKernel</a></td><td class="desc">NEON kernel used to compute the row-vectors of sums of all the entries in each row of Matrix A </td></tr>
<tr id="row_0_491_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_matrix_b_reduction_kernel.xhtml" target="_self">NEGEMMLowpMatrixBReductionKernel</a></td><td class="desc">NEON kernel used to compute the row-vectors of sums of all the entries in each column of Matrix B </td></tr>
<tr id="row_0_492_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_matrix_multiply_core.xhtml" target="_self">NEGEMMLowpMatrixMultiplyCore</a></td><td class="desc">Basic function to execute GEMMLowpMatrixMultiplyCore on NEON </td></tr>
<tr id="row_0_493_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_matrix_multiply_kernel.xhtml" target="_self">NEGEMMLowpMatrixMultiplyKernel</a></td><td class="desc">NEON kernel to multiply matrices </td></tr>
<tr id="row_0_494_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_offset_contribution_kernel.xhtml" target="_self">NEGEMMLowpOffsetContributionKernel</a></td><td class="desc">NEON kernel used to add the offset contribution after <a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_matrix_multiply_kernel.xhtml">NEGEMMLowpMatrixMultiplyKernel</a> </td></tr>
<tr id="row_0_495_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_quantize_down_int32_to_uint8_scale.xhtml" target="_self">NEGEMMLowpQuantizeDownInt32ToUint8Scale</a></td><td class="desc">Basic function to execute <a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_quantize_down_int32_to_uint8_scale.xhtml" title="Basic function to execute NEGEMMLowpQuantizeDownInt32ToUint8Scale on NEON. ">NEGEMMLowpQuantizeDownInt32ToUint8Scale</a> on NEON </td></tr>
<tr id="row_0_496_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_quantize_down_int32_to_uint8_scale_by_fixed_point.xhtml" target="_self">NEGEMMLowpQuantizeDownInt32ToUint8ScaleByFixedPoint</a></td><td class="desc">Basic function to execute <a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_quantize_down_int32_to_uint8_scale_by_fixed_point.xhtml" title="Basic function to execute NEGEMMLowpQuantizeDownInt32ToUint8ScaleByFixedPoint on NEON. ">NEGEMMLowpQuantizeDownInt32ToUint8ScaleByFixedPoint</a> on NEON </td></tr>
<tr id="row_0_497_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_quantize_down_int32_to_uint8_scale_by_fixed_point_kernel.xhtml" target="_self">NEGEMMLowpQuantizeDownInt32ToUint8ScaleByFixedPointKernel</a></td><td class="desc">NEON kernel used to quantize down the int32 accumulator values of GEMMLowp to QASYMM8 </td></tr>
<tr id="row_0_498_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_quantize_down_int32_to_uint8_scale_kernel.xhtml" target="_self">NEGEMMLowpQuantizeDownInt32ToUint8ScaleKernel</a></td><td class="desc">NEON kernel used to quantize down the int32 accumulator values of GEMMLowp to QASYMM8 </td></tr>
<tr id="row_0_499_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_matrix_accumulate_biases_kernel.xhtml" target="_self">NEGEMMMatrixAccumulateBiasesKernel</a></td><td class="desc">NEON kernel to add a bias to each row of the input tensor </td></tr>
<tr id="row_0_500_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_matrix_addition_kernel.xhtml" target="_self">NEGEMMMatrixAdditionKernel</a></td><td class="desc">NEON kernel to perform the in-place matrix addition between 2 matrices taking into account that the second matrix might be weighted by a scalar value beta: </td></tr>
<tr id="row_0_501_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_matrix_multiply_kernel.xhtml" target="_self">NEGEMMMatrixMultiplyKernel</a></td><td class="desc">NEON kernel to multiply two input matrices "A" and "B" </td></tr>
<tr id="row_0_502_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_matrix_vector_multiply_kernel.xhtml" target="_self">NEGEMMMatrixVectorMultiplyKernel</a></td><td class="desc"></td></tr>
<tr id="row_0_503_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_transpose1x_w.xhtml" target="_self">NEGEMMTranspose1xW</a></td><td class="desc">Basic function to execute <a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_transpose1x_w_kernel.xhtml" title="NEON kernel which transposes the elements of a matrix in chunks of 1xW, where W is equal to (16 / ele...">NEGEMMTranspose1xWKernel</a> </td></tr>
<tr id="row_0_504_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_transpose1x_w_kernel.xhtml" target="_self">NEGEMMTranspose1xWKernel</a></td><td class="desc">NEON kernel which transposes the elements of a matrix in chunks of 1xW, where W is equal to (16 / element size of the tensor) </td></tr>
<tr id="row_0_505_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_g_e_m_v_a_arch64_kernel.xhtml" target="_self">NEGEMVAArch64Kernel</a></td><td class="desc">AArch64 NEON kernel to multiply an input vector "A" and a matrix "B" </td></tr>
<tr id="row_0_506_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_gradient_kernel.xhtml" target="_self">NEGradientKernel</a></td><td class="desc">Computes magnitude and quantised phase from inputs gradients </td></tr>
<tr id="row_0_507_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_harris_corners.xhtml" target="_self">NEHarrisCorners</a></td><td class="desc">Basic function to execute harris corners detection </td></tr>
<tr id="row_0_508_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_harris_score_kernel.xhtml" target="_self">NEHarrisScoreKernel</a></td><td class="desc">Template NEON kernel to perform Harris Score </td></tr>
<tr id="row_0_509_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_h_g_e_m_m_a_arch64_f_p16_kernel.xhtml" target="_self">NEHGEMMAArch64FP16Kernel</a></td><td class="desc">AArch64 NEON kernel to multiply two input matrices "A" and "B" </td></tr>
<tr id="row_0_510_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_histogram.xhtml" target="_self">NEHistogram</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_histogram_kernel.xhtml">NEHistogramKernel</a> </td></tr>
<tr id="row_0_511_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_histogram_kernel.xhtml" target="_self">NEHistogramKernel</a></td><td class="desc">Interface for the histogram kernel </td></tr>
<tr id="row_0_512_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_h_o_g_block_normalization_kernel.xhtml" target="_self">NEHOGBlockNormalizationKernel</a></td><td class="desc">NEON kernel to perform <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object. ">HOG</a> block normalization </td></tr>
<tr id="row_0_513_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_h_o_g_descriptor.xhtml" target="_self">NEHOGDescriptor</a></td><td class="desc">Basic function to calculate <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object. ">HOG</a> descriptor </td></tr>
<tr id="row_0_514_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_h_o_g_detector.xhtml" target="_self">NEHOGDetector</a></td><td class="desc">Basic function to execute <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object. ">HOG</a> detector based on linear SVM </td></tr>
<tr id="row_0_515_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_h_o_g_detector_kernel.xhtml" target="_self">NEHOGDetectorKernel</a></td><td class="desc">NEON kernel to perform <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object. ">HOG</a> detector kernel using linear SVM </td></tr>
<tr id="row_0_516_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_h_o_g_gradient.xhtml" target="_self">NEHOGGradient</a></td><td class="desc">Basic function to calculate the gradient for <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object. ">HOG</a> </td></tr>
<tr id="row_0_517_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_h_o_g_multi_detection.xhtml" target="_self">NEHOGMultiDetection</a></td><td class="desc">Basic function to detect multiple objects (or the same object at different scales) on the same input image using <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object. ">HOG</a> </td></tr>
<tr id="row_0_518_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_h_o_g_orientation_binning_kernel.xhtml" target="_self">NEHOGOrientationBinningKernel</a></td><td class="desc">NEON kernel to perform <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object. ">HOG</a> Orientation Binning </td></tr>
<tr id="row_0_519_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_im2_col.xhtml" target="_self">NEIm2Col</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_im2_col_kernel.xhtml">NEIm2ColKernel</a> </td></tr>
<tr id="row_0_520_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_im2_col_kernel.xhtml" target="_self">NEIm2ColKernel</a></td><td class="desc">Interface for the im2col reshape kernel </td></tr>
<tr id="row_0_521_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_integral_image.xhtml" target="_self">NEIntegralImage</a></td><td class="desc">Basic function to run a <a class="el" href="classarm__compute_1_1_n_e_integral_image_kernel.xhtml">NEIntegralImageKernel</a> </td></tr>
<tr id="row_0_522_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_integral_image_kernel.xhtml" target="_self">NEIntegralImageKernel</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_kernel.xhtml" title="Kernel class. ">Kernel</a> to perform an image integral on an image </td></tr>
<tr id="row_0_523_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_l2_normalize_layer.xhtml" target="_self">NEL2NormalizeLayer</a></td><td class="desc">Basic function to perform a L2 normalization on a given axis </td></tr>
<tr id="row_0_524_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_l2_normalize_layer_kernel.xhtml" target="_self">NEL2NormalizeLayerKernel</a></td><td class="desc">Interface for performing a L2 normalize on a given axis given the square sum of it in this axis </td></tr>
<tr id="row_0_525_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_laplacian_pyramid.xhtml" target="_self">NELaplacianPyramid</a></td><td class="desc">Basic function to execute laplacian pyramid </td></tr>
<tr id="row_0_526_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_laplacian_reconstruct.xhtml" target="_self">NELaplacianReconstruct</a></td><td class="desc">Basic function to execute laplacian reconstruction </td></tr>
<tr id="row_0_527_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_n_e_l_k_internal_keypoint.xhtml" target="_self">NELKInternalKeypoint</a></td><td class="desc">Internal keypoint class for Lucas-Kanade Optical Flow </td></tr>
<tr id="row_0_528_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_l_k_tracker_kernel.xhtml" target="_self">NELKTrackerKernel</a></td><td class="desc">Interface for the Lucas-Kanade tracker kernel </td></tr>
<tr id="row_0_529_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_locally_connected_layer.xhtml" target="_self">NELocallyConnectedLayer</a></td><td class="desc">Basic function to compute the locally connected layer </td></tr>
<tr id="row_0_530_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_locally_connected_matrix_multiply_kernel.xhtml" target="_self">NELocallyConnectedMatrixMultiplyKernel</a></td><td class="desc">NEON kernel to multiply each row of first tensor with low 2 dimensions of second tensor </td></tr>
<tr id="row_0_531_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_logits1_d_max_kernel.xhtml" target="_self">NELogits1DMaxKernel</a></td><td class="desc">Interface for the identifying the max value of 1D Logits </td></tr>
<tr id="row_0_532_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_logits1_d_softmax_kernel.xhtml" target="_self">NELogits1DSoftmaxKernel</a></td><td class="desc">Interface for softmax computation for QASYMM8 with pre-computed max </td></tr>
<tr id="row_0_533_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_magnitude.xhtml" target="_self">NEMagnitude</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_magnitude_phase_kernel.xhtml" title="Template interface for the kernel to compute magnitude and phase. ">NEMagnitudePhaseKernel</a> </td></tr>
<tr id="row_0_534_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_magnitude_phase_kernel.xhtml" target="_self">NEMagnitudePhaseKernel</a></td><td class="desc">Template interface for the kernel to compute magnitude and phase </td></tr>
<tr id="row_0_535_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_mean_std_dev.xhtml" target="_self">NEMeanStdDev</a></td><td class="desc">Basic function to execute mean and std deviation </td></tr>
<tr id="row_0_536_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_mean_std_dev_kernel.xhtml" target="_self">NEMeanStdDevKernel</a></td><td class="desc">Interface for the kernel to calculate mean and standard deviation of input image pixels </td></tr>
<tr id="row_0_537_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_median3x3.xhtml" target="_self">NEMedian3x3</a></td><td class="desc">Basic function to execute median filter </td></tr>
<tr id="row_0_538_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_median3x3_kernel.xhtml" target="_self">NEMedian3x3Kernel</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_kernel.xhtml" title="Kernel class. ">Kernel</a> to perform a median filter on a tensor </td></tr>
<tr id="row_0_539_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_min_max_kernel.xhtml" target="_self">NEMinMaxKernel</a></td><td class="desc">Interface for the kernel to perform min max search on an image </td></tr>
<tr id="row_0_540_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_min_max_layer_kernel.xhtml" target="_self">NEMinMaxLayerKernel</a></td><td class="desc">Interface for the kernel to perform min max search on a 3D tensor </td></tr>
<tr id="row_0_541_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_min_max_location.xhtml" target="_self">NEMinMaxLocation</a></td><td class="desc">Basic function to execute min and max location </td></tr>
<tr id="row_0_542_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_min_max_location_kernel.xhtml" target="_self">NEMinMaxLocationKernel</a></td><td class="desc">Interface for the kernel to find min max locations of an image </td></tr>
<tr id="row_0_543_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_non_linear_filter.xhtml" target="_self">NENonLinearFilter</a></td><td class="desc">Basic function to execute non linear filter </td></tr>
<tr id="row_0_544_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_non_linear_filter_kernel.xhtml" target="_self">NENonLinearFilterKernel</a></td><td class="desc">Interface for the kernel to apply a non-linear filter </td></tr>
<tr id="row_0_545_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_non_maxima_suppression3x3.xhtml" target="_self">NENonMaximaSuppression3x3</a></td><td class="desc">Basic function to execute non-maxima suppression over a 3x3 window </td></tr>
<tr id="row_0_546_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_non_maxima_suppression3x3_kernel.xhtml" target="_self">NENonMaximaSuppression3x3Kernel</a></td><td class="desc">Interface to perform Non-Maxima suppression over a 3x3 window using NEON </td></tr>
<tr id="row_0_547_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_normalization_layer.xhtml" target="_self">NENormalizationLayer</a></td><td class="desc">Basic function to compute a normalization layer </td></tr>
<tr id="row_0_548_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_normalization_layer_kernel.xhtml" target="_self">NENormalizationLayerKernel</a></td><td class="desc">Interface for the normalization layer kernel </td></tr>
<tr id="row_0_549_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_optical_flow.xhtml" target="_self">NEOpticalFlow</a></td><td class="desc">Basic function to execute optical flow </td></tr>
<tr id="row_0_550_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_permute.xhtml" target="_self">NEPermute</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_permute_kernel.xhtml">NEPermuteKernel</a> </td></tr>
<tr id="row_0_551_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_permute_kernel.xhtml" target="_self">NEPermuteKernel</a></td><td class="desc">NEON kernel to perform tensor permutation </td></tr>
<tr id="row_0_552_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_phase.xhtml" target="_self">NEPhase</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_magnitude_phase_kernel.xhtml" title="Template interface for the kernel to compute magnitude and phase. ">NEMagnitudePhaseKernel</a> </td></tr>
<tr id="row_0_553_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_pixel_wise_multiplication.xhtml" target="_self">NEPixelWiseMultiplication</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_pixel_wise_multiplication_kernel.xhtml">NEPixelWiseMultiplicationKernel</a> </td></tr>
<tr id="row_0_554_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_pixel_wise_multiplication_kernel.xhtml" target="_self">NEPixelWiseMultiplicationKernel</a></td><td class="desc">Interface for the kernel to perform addition between two tensors </td></tr>
<tr id="row_0_555_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_pooling_layer.xhtml" target="_self">NEPoolingLayer</a></td><td class="desc">Basic function to simulate a pooling layer with the specified pooling operation </td></tr>
<tr id="row_0_556_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_pooling_layer_kernel.xhtml" target="_self">NEPoolingLayerKernel</a></td><td class="desc">Interface for the pooling layer kernel </td></tr>
<tr id="row_0_557_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_quantization_layer.xhtml" target="_self">NEQuantizationLayer</a></td><td class="desc">Basic function to simulate a quantization layer </td></tr>
<tr id="row_0_558_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_quantization_layer_kernel.xhtml" target="_self">NEQuantizationLayerKernel</a></td><td class="desc">Interface for the quantization layer kernel </td></tr>
<tr id="row_0_559_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_reduction_operation.xhtml" target="_self">NEReductionOperation</a></td><td class="desc">Basic function to simulate a reduction operation </td></tr>
<tr id="row_0_560_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_reduction_operation_kernel.xhtml" target="_self">NEReductionOperationKernel</a></td><td class="desc">NEON kernel to perform a reduction operation </td></tr>
<tr id="row_0_561_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_remap.xhtml" target="_self">NERemap</a></td><td class="desc">Basic function to execute remap </td></tr>
<tr id="row_0_562_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_remap_kernel.xhtml" target="_self">NERemapKernel</a></td><td class="desc">NEON kernel to perform a remap on a tensor </td></tr>
<tr id="row_0_563_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_reshape_layer.xhtml" target="_self">NEReshapeLayer</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_reshape_layer_kernel.xhtml">NEReshapeLayerKernel</a> </td></tr>
<tr id="row_0_564_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_reshape_layer_kernel.xhtml" target="_self">NEReshapeLayerKernel</a></td><td class="desc">Interface for the kernel to perform tensor reshaping </td></tr>
<tr id="row_0_565_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_r_o_i_pooling_layer.xhtml" target="_self">NEROIPoolingLayer</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_r_o_i_pooling_layer_kernel.xhtml">NEROIPoolingLayerKernel</a> </td></tr>
<tr id="row_0_566_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_r_o_i_pooling_layer_kernel.xhtml" target="_self">NEROIPoolingLayerKernel</a></td><td class="desc">Interface for the <a class="el" href="structarm__compute_1_1_r_o_i.xhtml" title="Region of interest. ">ROI</a> pooling layer kernel </td></tr>
<tr id="row_0_567_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_scale.xhtml" target="_self">NEScale</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_scale_kernel.xhtml">NEScaleKernel</a> </td></tr>
<tr id="row_0_568_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_scale_kernel.xhtml" target="_self">NEScaleKernel</a></td><td class="desc">NEON kernel to perform scaling on a tensor </td></tr>
<tr id="row_0_569_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_scharr3x3.xhtml" target="_self">NEScharr3x3</a></td><td class="desc">Basic function to execute scharr 3x3 filter </td></tr>
<tr id="row_0_570_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_scharr3x3_kernel.xhtml" target="_self">NEScharr3x3Kernel</a></td><td class="desc">Interface for the kernel to run a 3x3 Scharr filter on a tensor </td></tr>
<tr id="row_0_571_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_separable_convolution_hor_kernel.xhtml" target="_self">NESeparableConvolutionHorKernel</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_kernel.xhtml" title="Kernel class. ">Kernel</a> for the Horizontal pass of a Separable Convolution </td></tr>
<tr id="row_0_572_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_separable_convolution_vert_kernel.xhtml" target="_self">NESeparableConvolutionVertKernel</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_kernel.xhtml" title="Kernel class. ">Kernel</a> for the Vertical pass of a Separable Convolution </td></tr>
<tr id="row_0_573_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_sobel3x3.xhtml" target="_self">NESobel3x3</a></td><td class="desc">Basic function to execute sobel 3x3 filter </td></tr>
<tr id="row_0_574_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_sobel3x3_kernel.xhtml" target="_self">NESobel3x3Kernel</a></td><td class="desc">Interface for the kernel to run a 3x3 Sobel X filter on a tensor </td></tr>
<tr id="row_0_575_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_sobel5x5.xhtml" target="_self">NESobel5x5</a></td><td class="desc">Basic function to execute sobel 5x5 filter </td></tr>
<tr id="row_0_576_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_sobel5x5_hor_kernel.xhtml" target="_self">NESobel5x5HorKernel</a></td><td class="desc">Interface for the kernel to run the horizontal pass of 5x5 Sobel filter on a tensor </td></tr>
<tr id="row_0_577_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_sobel5x5_vert_kernel.xhtml" target="_self">NESobel5x5VertKernel</a></td><td class="desc">Interface for the kernel to run the vertical pass of 5x5 Sobel Y filter on a tensor </td></tr>
<tr id="row_0_578_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_sobel7x7.xhtml" target="_self">NESobel7x7</a></td><td class="desc">Basic function to execute sobel 7x7 filter </td></tr>
<tr id="row_0_579_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_sobel7x7_hor_kernel.xhtml" target="_self">NESobel7x7HorKernel</a></td><td class="desc">Interface for the kernel to run the horizontal pass of 7x7 Sobel filter on a tensor </td></tr>
<tr id="row_0_580_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_sobel7x7_vert_kernel.xhtml" target="_self">NESobel7x7VertKernel</a></td><td class="desc">Interface for the kernel to run the vertical pass of 7x7 Sobel Y filter on a tensor </td></tr>
<tr id="row_0_581_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_softmax_layer.xhtml" target="_self">NESoftmaxLayer</a></td><td class="desc">Basic function to compute a SoftmaxLayer </td></tr>
<tr id="row_0_582_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_table_lookup.xhtml" target="_self">NETableLookup</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_table_lookup_kernel.xhtml">NETableLookupKernel</a> </td></tr>
<tr id="row_0_583_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_table_lookup_kernel.xhtml" target="_self">NETableLookupKernel</a></td><td class="desc">Interface for the kernel to perform table lookup calculations </td></tr>
<tr id="row_0_584_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_threshold.xhtml" target="_self">NEThreshold</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_threshold_kernel.xhtml">NEThresholdKernel</a> </td></tr>
<tr id="row_0_585_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_threshold_kernel.xhtml" target="_self">NEThresholdKernel</a></td><td class="desc">Interface for the thresholding kernel </td></tr>
<tr id="row_0_586_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_transpose.xhtml" target="_self">NETranspose</a></td><td class="desc">Basic function to transpose a matrix on NEON </td></tr>
<tr id="row_0_587_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_transpose_kernel.xhtml" target="_self">NETransposeKernel</a></td><td class="desc">NEON kernel which transposes the elements of a matrix </td></tr>
<tr id="row_0_588_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_warp_affine.xhtml" target="_self">NEWarpAffine</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_warp_affine_kernel.xhtml">NEWarpAffineKernel</a> </td></tr>
<tr id="row_0_589_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_warp_affine_kernel.xhtml" target="_self">NEWarpAffineKernel</a></td><td class="desc">Template interface for the kernel to compute warp affine </td></tr>
<tr id="row_0_590_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_warp_perspective.xhtml" target="_self">NEWarpPerspective</a></td><td class="desc">Basic function to run <a class="el" href="classarm__compute_1_1_n_e_warp_perspective_kernel.xhtml">NEWarpPerspectiveKernel</a> </td></tr>
<tr id="row_0_591_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_warp_perspective_kernel.xhtml" target="_self">NEWarpPerspectiveKernel</a></td><td class="desc">Template interface for the kernel to compute warp perspective </td></tr>
<tr id="row_0_592_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_weights_reshape_kernel.xhtml" target="_self">NEWeightsReshapeKernel</a></td><td class="desc">NEON kernel to perform reshaping on the weights used by convolution and locally connected layer </td></tr>
<tr id="row_0_593_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_winograd_layer.xhtml" target="_self">NEWinogradLayer</a></td><td class="desc">Basic function to simulate a convolution layer </td></tr>
<tr id="row_0_594_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_winograd_layer_batched_g_e_m_m_kernel.xhtml" target="_self">NEWinogradLayerBatchedGEMMKernel</a></td><td class="desc"></td></tr>
<tr id="row_0_595_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml" target="_self">NEWinogradLayerTransformInputKernel</a></td><td class="desc"></td></tr>
<tr id="row_0_596_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_winograd_layer_transform_output_kernel.xhtml" target="_self">NEWinogradLayerTransformOutputKernel</a></td><td class="desc"></td></tr>
<tr id="row_0_597_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_n_e_winograd_layer_transform_weights_kernel.xhtml" target="_self">NEWinogradLayerTransformWeightsKernel</a></td><td class="desc"></td></tr>
<tr id="row_0_598_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_normalization_layer_info.xhtml" target="_self">NormalizationLayerInfo</a></td><td class="desc">Normalization Layer Information class </td></tr>
<tr id="row_0_599_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_offset_lifetime_manager.xhtml" target="_self">OffsetLifetimeManager</a></td><td class="desc">Concrete class that tracks the lifetime of registered tensors and calculates the systems memory requirements in terms of a single blob and a list of offsets </td></tr>
<tr id="row_0_600_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_offset_memory_pool.xhtml" target="_self">OffsetMemoryPool</a></td><td class="desc">Offset based memory pool </td></tr>
<tr id="row_0_601_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_o_m_p_scheduler.xhtml" target="_self">OMPScheduler</a></td><td class="desc">Pool of threads to automatically split a kernel's execution among several threads </td></tr>
<tr id="row_0_602_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_pad_stride_info.xhtml" target="_self">PadStrideInfo</a></td><td class="desc">Padding and stride information class </td></tr>
<tr id="row_0_603_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_pixel_value.xhtml" target="_self">PixelValue</a></td><td class="desc">Class describing the value of a pixel for any image format </td></tr>
<tr id="row_0_604_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_pooling_layer_info.xhtml" target="_self">PoolingLayerInfo</a></td><td class="desc">Pooling Layer Information class </td></tr>
<tr id="row_0_605_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_pool_manager.xhtml" target="_self">PoolManager</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_memory.xhtml" title="CPU implementation of memory object. ">Memory</a> pool manager </td></tr>
<tr id="row_0_606_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_program.xhtml" target="_self">Program</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_program.xhtml" title="Program class. ">Program</a> class </td></tr>
<tr id="row_0_607_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_pyramid.xhtml" target="_self">Pyramid</a></td><td class="desc">Basic implementation of the pyramid interface </td></tr>
<tr id="row_0_608_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_pyramid_info.xhtml" target="_self">PyramidInfo</a></td><td class="desc">Store the <a class="el" href="classarm__compute_1_1_pyramid.xhtml" title="Basic implementation of the pyramid interface. ">Pyramid</a>'s metadata </td></tr>
<tr id="row_0_609_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_quantization_info.xhtml" target="_self">QuantizationInfo</a></td><td class="desc">Quantization settings (used for QASYMM8 data type) </td></tr>
<tr id="row_0_610_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_rectangle.xhtml" target="_self">Rectangle</a></td><td class="desc"><a class="el" href="structarm__compute_1_1_rectangle.xhtml" title="Rectangle type. ">Rectangle</a> type </td></tr>
<tr id="row_0_611_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_r_o_i.xhtml" target="_self">ROI</a></td><td class="desc">Region of interest </td></tr>
<tr id="row_0_612_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_r_o_i_pooling_layer_info.xhtml" target="_self">ROIPoolingLayerInfo</a></td><td class="desc"><a class="el" href="structarm__compute_1_1_r_o_i.xhtml" title="Region of interest. ">ROI</a> Pooling Layer Information class </td></tr>
<tr id="row_0_613_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_scheduler.xhtml" target="_self">Scheduler</a></td><td class="desc">Configurable scheduler which supports multiple multithreading APIs and choosing between different schedulers at runtime </td></tr>
<tr id="row_0_614_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_semaphore.xhtml" target="_self">Semaphore</a></td><td class="desc">Semamphore class </td></tr>
<tr id="row_0_615_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_single_thread_scheduler.xhtml" target="_self">SingleThreadScheduler</a></td><td class="desc">Pool of threads to automatically split a kernel's execution among several threads </td></tr>
<tr id="row_0_616_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_size2_d.xhtml" target="_self">Size2D</a></td><td class="desc">Class for specifying the size of an image or rectangle </td></tr>
<tr id="row_0_617_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_status.xhtml" target="_self">Status</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_status.xhtml" title="Status class. ">Status</a> class </td></tr>
<tr id="row_0_618_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_steps.xhtml" target="_self">Steps</a></td><td class="desc">Class to describe a number of elements in each dimension </td></tr>
<tr id="row_0_619_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_strides.xhtml" target="_self">Strides</a></td><td class="desc"><a class="el" href="classarm__compute_1_1_strides.xhtml" title="Strides of an item in bytes. ">Strides</a> of an item in bytes </td></tr>
<tr id="row_0_620_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_sub_tensor.xhtml" target="_self">SubTensor</a></td><td class="desc">Basic implementation of the sub-tensor interface </td></tr>
<tr id="row_0_621_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_sub_tensor_info.xhtml" target="_self">SubTensorInfo</a></td><td class="desc">Store the sub tensor's metadata </td></tr>
<tr id="row_0_622_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_tensor.xhtml" target="_self">Tensor</a></td><td class="desc">Basic implementation of the tensor interface </td></tr>
<tr id="row_0_623_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_tensor_allocator.xhtml" target="_self">TensorAllocator</a></td><td class="desc">Basic implementation of a CPU memory tensor allocator </td></tr>
<tr id="row_0_624_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_tensor_info.xhtml" target="_self">TensorInfo</a></td><td class="desc">Store the tensor's metadata </td></tr>
<tr id="row_0_625_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_tensor_shape.xhtml" target="_self">TensorShape</a></td><td class="desc">Shape of a tensor </td></tr>
<tr id="row_0_626_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_thread_info.xhtml" target="_self">ThreadInfo</a></td><td class="desc"></td></tr>
<tr id="row_0_627_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structarm__compute_1_1_valid_region.xhtml" target="_self">ValidRegion</a></td><td class="desc"></td></tr>
<tr id="row_0_628_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_weights_info.xhtml" target="_self">WeightsInfo</a></td><td class="desc">Convolution Layer Weights Information class </td></tr>
<tr id="row_0_629_" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_0_629_" class="arrow" onclick="toggleFolder('0_629_')">&#9658;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_window.xhtml" target="_self">Window</a></td><td class="desc">Describe a multidimensional execution window </td></tr>
<tr id="row_0_629_0_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="classarm__compute_1_1_window_1_1_dimension.xhtml" target="_self">Dimension</a></td><td class="desc">Describe one of the image's dimensions with a start, end and step </td></tr>
<tr id="row_1_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_1_" class="arrow" onclick="toggleFolder('1_')">&#9658;</span><span class="icona"><span class="icon">N</span></span><a class="el" href="namespacemali__userspace.xhtml" target="_self">mali_userspace</a></td><td class="desc"></td></tr>
<tr id="row_1_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structmali__userspace_1_1_counter_mapping.xhtml" target="_self">CounterMapping</a></td><td class="desc"></td></tr>
<tr id="row_1_1_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structmali__userspace_1_1gpu__props.xhtml" target="_self">gpu_props</a></td><td class="desc"></td></tr>
<tr id="row_1_2_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structmali__userspace_1_1gpu__raw__gpu__props.xhtml" target="_self">gpu_raw_gpu_props</a></td><td class="desc"></td></tr>
<tr id="row_1_3_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structmali__userspace_1_1kbase__hwcnt__reader__metadata.xhtml" target="_self">kbase_hwcnt_reader_metadata</a></td><td class="desc"></td></tr>
<tr id="row_1_4_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structmali__userspace_1_1kbase__uk__gpuprops.xhtml" target="_self">kbase_uk_gpuprops</a></td><td class="desc"></td></tr>
<tr id="row_1_5_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structmali__userspace_1_1mali__base__gpu__coherent__group.xhtml" target="_self">mali_base_gpu_coherent_group</a></td><td class="desc"></td></tr>
<tr id="row_1_6_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structmali__userspace_1_1mali__base__gpu__coherent__group__info.xhtml" target="_self">mali_base_gpu_coherent_group_info</a></td><td class="desc"></td></tr>
<tr id="row_1_7_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structmali__userspace_1_1mali__base__gpu__core__props.xhtml" target="_self">mali_base_gpu_core_props</a></td><td class="desc"></td></tr>
<tr id="row_1_8_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structmali__userspace_1_1mali__base__gpu__l2__cache__props.xhtml" target="_self">mali_base_gpu_l2_cache_props</a></td><td class="desc"></td></tr>
<tr id="row_1_9_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structmali__userspace_1_1mali__base__gpu__props.xhtml" target="_self">mali_base_gpu_props</a></td><td class="desc"></td></tr>
<tr id="row_1_10_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structmali__userspace_1_1mali__base__gpu__thread__props.xhtml" target="_self">mali_base_gpu_thread_props</a></td><td class="desc"></td></tr>
<tr id="row_1_11_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="structmali__userspace_1_1mali__base__gpu__tiler__props.xhtml" target="_self">mali_base_gpu_tiler_props</a></td><td class="desc"></td></tr>
<tr id="row_1_12_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="unionmali__userspace_1_1uk__header.xhtml" target="_self">uk_header</a></td><td class="desc"></td></tr>
<tr id="row_2_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="struct_coordinates2_d.xhtml" target="_self">Coordinates2D</a></td><td class="desc">2D Coordinates structure </td></tr>
<tr id="row_3_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="struct_detection_window.xhtml" target="_self">DetectionWindow</a></td><td class="desc">Detection window struct </td></tr>
<tr id="row_4_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="struct_image.xhtml" target="_self">Image</a></td><td class="desc">Structure to hold <a class="el" href="struct_image.xhtml" title="Structure to hold Image information. ">Image</a> information </td></tr>
<tr id="row_5_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="struct_internal_keypoint.xhtml" target="_self">InternalKeypoint</a></td><td class="desc"></td></tr>
<tr id="row_6_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="struct_keypoint.xhtml" target="_self">Keypoint</a></td><td class="desc"></td></tr>
<tr id="row_7_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="struct_tensor3_d.xhtml" target="_self">Tensor3D</a></td><td class="desc">Structure to hold 3D tensor information </td></tr>
<tr id="row_8_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="struct_tensor4_d.xhtml" target="_self">Tensor4D</a></td><td class="desc">Structure to hold 4D tensor information </td></tr>
<tr id="row_9_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="struct_vector.xhtml" target="_self">Vector</a></td><td class="desc">Structure to hold <a class="el" href="struct_vector.xhtml" title="Structure to hold Vector information. ">Vector</a> information </td></tr>
</table>
</div><!-- directory -->
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="footer">Generated on Fri Mar 2 2018 12:38:01 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
  </ul>
</div>
</body>
</html>
