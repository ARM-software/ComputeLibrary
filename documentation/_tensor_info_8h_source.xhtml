<!-- HTML header for doxygen 1.8.9.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: arm_compute/core/TensorInfo.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Compute Library
   &#160;<span id="projectnumber">17.12</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>Globals</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_tensor_info_8h_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">TensorInfo.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_tensor_info_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2016, 2017 ARM Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifndef __ARM_COMPUTE_TENSORINFO_H__</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#define __ARM_COMPUTE_TENSORINFO_H__</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_tensor_info_8h.xhtml">arm_compute/core/ITensorInfo.h</a>&quot;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_tensor_info_8h.xhtml">ITensorInfo.h</a>&quot;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_coordinates_8h.xhtml">arm_compute/core/Coordinates.h</a>&quot;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_strides_8h.xhtml">arm_compute/core/Strides.h</a>&quot;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_tensor_shape_8h.xhtml">arm_compute/core/TensorShape.h</a>&quot;</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2core_2_types_8h.xhtml">arm_compute/core/Types.h</a>&quot;</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2core_2_utils_8h.xhtml">arm_compute/core/Utils.h</a>&quot;</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor">#include &lt;cstddef&gt;</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="preprocessor">#include &lt;memory&gt;</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;{</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="keyword">class </span>HOGInfo;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00044"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_tensor_info.xhtml">   44</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> final : <span class="keyword">public</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;{</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a21c2ae9fa438faf42669dadda628080c">TensorInfo</a>();</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a4eb5913c3ce5fe2bcbaafd8c9224d384">~TensorInfo</a>() = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a21c2ae9fa438faf42669dadda628080c">TensorInfo</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a096668313a9a819d54a2e65ec21ff0cc">info</a>);</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a21c2ae9fa438faf42669dadda628080c">TensorInfo</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> &amp;) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#adcf156ba30ff118c28690671e83ea06b">operator=</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> &amp;) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a21c2ae9fa438faf42669dadda628080c">TensorInfo</a>(<a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&amp;) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#adcf156ba30ff118c28690671e83ea06b">operator=</a>(<a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&amp;) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a21c2ae9fa438faf42669dadda628080c">TensorInfo</a>(<a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58">Format</a> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#ac4b36cc1e56b0b7e579bb4b7196490db">format</a>);</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a21c2ae9fa438faf42669dadda628080c">TensorInfo</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> width, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> height, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58">Format</a> format);</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a21c2ae9fa438faf42669dadda628080c">TensorInfo</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> &amp;<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a269b19ce3f357ac65f41f9951906e38e">tensor_shape</a>, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58">Format</a> format);</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a21c2ae9fa438faf42669dadda628080c">TensorInfo</a>(<span class="keywordtype">size_t</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a6f13b974eeb528acde66de8d9b3fd95c">num_channels</a>, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a9a3e72153aeb3ed212e9c3698774e881">data_type</a>, <span class="keywordtype">size_t</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a35ccf2eb0c18a15feab2db98b307b78b">fixed_point_position</a> = 0);</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a21c2ae9fa438faf42669dadda628080c">TensorInfo</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> &amp;tensor_shape, <span class="keywordtype">size_t</span> num_channels, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a> data_type, <span class="keywordtype">int</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a35ccf2eb0c18a15feab2db98b307b78b">fixed_point_position</a> = 0);</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a21c2ae9fa438faf42669dadda628080c">TensorInfo</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> &amp;tensor_shape, <span class="keywordtype">size_t</span> num_channels, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a> data_type, <a class="code" href="structarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#ac74736e3863207232a23b7181c1d0f44">quantization_info</a>);</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a21c2ae9fa438faf42669dadda628080c">TensorInfo</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml">HOGInfo</a> &amp;hog_info, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> width, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> height);</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#ad6b64f33be1e66dcf7612483ffb8fd63">init</a>(<a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58">Format</a> format);</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#ad6b64f33be1e66dcf7612483ffb8fd63">init</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> &amp;tensor_shape, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58">Format</a> format);</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#ad6b64f33be1e66dcf7612483ffb8fd63">init</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> &amp;tensor_shape, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58">Format</a> format, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_strides.xhtml">Strides</a> &amp;<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a5f1ca9d674346287cae57a6c5b5c24ec">strides_in_bytes</a>, <span class="keywordtype">size_t</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#ab54246abe670b06f5624add7e7022904">offset_first_element_in_bytes</a>, <span class="keywordtype">size_t</span> total_size_in_bytes);</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#ad6b64f33be1e66dcf7612483ffb8fd63">init</a>(<span class="keywordtype">size_t</span> num_channels, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a> data_type, <span class="keywordtype">size_t</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a35ccf2eb0c18a15feab2db98b307b78b">fixed_point_position</a> = 0);</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#ad6b64f33be1e66dcf7612483ffb8fd63">init</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> &amp;tensor_shape, <span class="keywordtype">size_t</span> num_channels, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a> data_type, <span class="keywordtype">int</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a35ccf2eb0c18a15feab2db98b307b78b">fixed_point_position</a> = 0);</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#ad6b64f33be1e66dcf7612483ffb8fd63">init</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> &amp;tensor_shape, <span class="keywordtype">size_t</span> num_channels, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a> data_type, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_strides.xhtml">Strides</a> &amp;strides_in_bytes, <span class="keywordtype">size_t</span> offset_first_element_in_bytes,</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;              <span class="keywordtype">size_t</span> total_size_in_bytes, <span class="keywordtype">int</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a35ccf2eb0c18a15feab2db98b307b78b">fixed_point_position</a> = 0);</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#ad6b64f33be1e66dcf7612483ffb8fd63">init</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml">HOGInfo</a> &amp;hog_info, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> width, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> height);</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    <span class="keywordtype">size_t</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a4b7391b7025befbe44b743723feb4a9b">init_auto_padding</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> &amp;tensor_shape, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58">Format</a> format);</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    <span class="keywordtype">size_t</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a4b7391b7025befbe44b743723feb4a9b">init_auto_padding</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> &amp;tensor_shape, <span class="keywordtype">size_t</span> num_channels, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a> data_type, <span class="keywordtype">int</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a35ccf2eb0c18a15feab2db98b307b78b">fixed_point_position</a> = 0);</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    <span class="keywordtype">size_t</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a4b7391b7025befbe44b743723feb4a9b">init_auto_padding</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml">HOGInfo</a> &amp;hog_info, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> width, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> height);</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    <span class="comment">// Inherited methods overridden:</span></div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    std::unique_ptr&lt;ITensorInfo&gt; <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a4c066d42d665fafb8cfe80b99411e4fb">clone</a>() <span class="keyword">const override</span>;</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> &amp;<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a613528bd0feb15ee8d6df06cbdb629f8">set_data_type</a>(<a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a> data_type) <span class="keyword">override</span>;</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> &amp;<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a5b0a9fd674f8748506b6944c030bc47e">set_num_channels</a>(<span class="keywordtype">int</span> num_channels) <span class="keyword">override</span>;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> &amp;<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#af501bc12f51874e786b0f28016a99ff7">set_format</a>(<a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58">Format</a> format) <span class="keyword">override</span>;</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> &amp;<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a73e8ce43ba86fece3400cf79d0978811">set_tensor_shape</a>(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">shape</a>) <span class="keyword">override</span>;</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> &amp;<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a2732b9eab657cad69807adb815b97c9f">set_fixed_point_position</a>(<span class="keywordtype">int</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a35ccf2eb0c18a15feab2db98b307b78b">fixed_point_position</a>) <span class="keyword">override</span>;</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> &amp;<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#ae3099a4be4777389b60712f43e065403">set_quantization_info</a>(<a class="code" href="structarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a> quantization_info) <span class="keyword">override</span>;</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;    <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> &amp;<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#ad29c039b6f3c4534928ed99aa9f53027">reset_padding</a>() <span class="keyword">override</span>;</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    <span class="keywordtype">bool</span>         <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a907f837b924945ad1981c8fe8eca61e4">auto_padding</a>() <span class="keyword">override</span>;</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#af53d8203ecc37896ca4579d1ee3fdffc">extend_padding</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_border_size.xhtml">PaddingSize</a> &amp;<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a79e20eacb1e963e24a21ebd7369effd7">padding</a>) <span class="keyword">override</span>;</div><div class="line"><a name="l00226"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_tensor_info.xhtml#a8813441b655b97c00139c6a5a6390e97">  226</a></span>&#160;    <span class="keywordtype">size_t</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a8813441b655b97c00139c6a5a6390e97">dimension</a>(<span class="keywordtype">size_t</span> index)<span class="keyword"> const override</span></div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;        <span class="keywordflow">return</span> _tensor_shape[index];</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    }</div><div class="line"><a name="l00230"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_tensor_info.xhtml#a5f1ca9d674346287cae57a6c5b5c24ec">  230</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_strides.xhtml">Strides</a> &amp;<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a5f1ca9d674346287cae57a6c5b5c24ec">strides_in_bytes</a>()<span class="keyword"> const override</span></div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;        <span class="keywordflow">return</span> _strides_in_bytes;</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    }</div><div class="line"><a name="l00234"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_tensor_info.xhtml#ab54246abe670b06f5624add7e7022904">  234</a></span>&#160;    <span class="keywordtype">size_t</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#ab54246abe670b06f5624add7e7022904">offset_first_element_in_bytes</a>()<span class="keyword"> const override</span></div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;        <span class="keywordflow">return</span> _offset_first_element_in_bytes;</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    }</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;    <span class="keywordtype">size_t</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a147790358ccd40f61dcd618cd4edd688">offset_element_in_bytes</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a> &amp;pos) <span class="keyword">const override</span>;</div><div class="line"><a name="l00239"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_tensor_info.xhtml#a35ccf2eb0c18a15feab2db98b307b78b">  239</a></span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a35ccf2eb0c18a15feab2db98b307b78b">fixed_point_position</a>()<span class="keyword"> const override</span></div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;        <span class="keywordflow">return</span> _fixed_point_position;</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    }</div><div class="line"><a name="l00243"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_tensor_info.xhtml#a62b67b578f684c4d516843c9dea86a23">  243</a></span>&#160;    <span class="keywordtype">size_t</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a62b67b578f684c4d516843c9dea86a23">element_size</a>()<span class="keyword"> const override</span></div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute.xhtml#abb7e0f23a4f2e63f39433f158dad47ab">data_size_from_type</a>(_data_type) * _num_channels;</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    }</div><div class="line"><a name="l00247"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_tensor_info.xhtml#a13622133d9b41900a6a3e8f89e59a78b">  247</a></span>&#160;    <span class="keywordtype">size_t</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a13622133d9b41900a6a3e8f89e59a78b">num_dimensions</a>()<span class="keyword"> const override</span></div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;        <span class="keywordflow">return</span> _tensor_shape.<a class="code" href="classarm__compute_1_1_dimensions.xhtml#a0f59f175e7682c7ed5f4ea30ef687834">num_dimensions</a>();</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    }</div><div class="line"><a name="l00251"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_tensor_info.xhtml#a6f13b974eeb528acde66de8d9b3fd95c">  251</a></span>&#160;    <span class="keywordtype">size_t</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a6f13b974eeb528acde66de8d9b3fd95c">num_channels</a>()<span class="keyword"> const override</span></div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;        <span class="keywordflow">return</span> _num_channels;</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;    }</div><div class="line"><a name="l00255"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_tensor_info.xhtml#a269b19ce3f357ac65f41f9951906e38e">  255</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> &amp;<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a269b19ce3f357ac65f41f9951906e38e">tensor_shape</a>()<span class="keyword"> const override</span></div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;        <span class="keywordflow">return</span> _tensor_shape;</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    }</div><div class="line"><a name="l00259"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_tensor_info.xhtml#a9a3e72153aeb3ed212e9c3698774e881">  259</a></span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a9a3e72153aeb3ed212e9c3698774e881">data_type</a>()<span class="keyword"> const override</span></div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;        <span class="keywordflow">return</span> _data_type;</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    }</div><div class="line"><a name="l00263"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_tensor_info.xhtml#ac4b36cc1e56b0b7e579bb4b7196490db">  263</a></span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58">Format</a> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#ac4b36cc1e56b0b7e579bb4b7196490db">format</a>()<span class="keyword"> const override</span></div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;        <span class="keywordflow">return</span> _format;</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    }</div><div class="line"><a name="l00267"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_tensor_info.xhtml#af398466b602a02b42d8df19fb66a6c60">  267</a></span>&#160;    <span class="keywordtype">size_t</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#af398466b602a02b42d8df19fb66a6c60">total_size</a>()<span class="keyword"> const override</span></div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;        <span class="keywordflow">return</span> _total_size;</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;    }</div><div class="line"><a name="l00271"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_tensor_info.xhtml#a79e20eacb1e963e24a21ebd7369effd7">  271</a></span>&#160;    <a class="code" href="structarm__compute_1_1_border_size.xhtml">PaddingSize</a> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a79e20eacb1e963e24a21ebd7369effd7">padding</a>()<span class="keyword"> const override</span></div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;        <span class="keywordflow">return</span> _padding;</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;    }</div><div class="line"><a name="l00275"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_tensor_info.xhtml#aa2ca251f99c56767719e991a26371603">  275</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#aa2ca251f99c56767719e991a26371603">has_padding</a>()<span class="keyword"> const override</span></div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;        <span class="keywordflow">return</span> !_padding.<a class="code" href="structarm__compute_1_1_border_size.xhtml#adffbf97e7b8b64e7cf32f0254cddf3c4">empty</a>();</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;    }</div><div class="line"><a name="l00279"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_tensor_info.xhtml#aaee6555ace43b03173844b1a228a3fc3">  279</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#aaee6555ace43b03173844b1a228a3fc3">is_resizable</a>()<span class="keyword"> const override</span></div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;        <span class="keywordflow">return</span> _is_resizable;</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;    }</div><div class="line"><a name="l00283"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_tensor_info.xhtml#a78bf77b2d9b959259f77a32b9a412184">  283</a></span>&#160;    <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> &amp;<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a78bf77b2d9b959259f77a32b9a412184">set_is_resizable</a>(<span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#aaee6555ace43b03173844b1a228a3fc3">is_resizable</a>)<span class="keyword"> override</span></div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;        _is_resizable = <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#aaee6555ace43b03173844b1a228a3fc3">is_resizable</a>;</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;        <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;    }</div><div class="line"><a name="l00288"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_tensor_info.xhtml#a3c20d908342087484d883574d55dd482">  288</a></span>&#160;    <a class="code" href="structarm__compute_1_1_valid_region.xhtml">ValidRegion</a> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a3c20d908342087484d883574d55dd482">valid_region</a>()<span class="keyword"> const override</span></div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;        <span class="keywordflow">return</span> _valid_region;</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;    }</div><div class="line"><a name="l00292"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_tensor_info.xhtml#a0cbba4e45a4a1e389606493af3814415">  292</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a0cbba4e45a4a1e389606493af3814415">set_valid_region</a>(<a class="code" href="structarm__compute_1_1_valid_region.xhtml">ValidRegion</a> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a3c20d908342087484d883574d55dd482">valid_region</a>)<span class="keyword"> override</span></div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;        _valid_region = std::move(valid_region);</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;    }</div><div class="line"><a name="l00296"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_tensor_info.xhtml#ac74736e3863207232a23b7181c1d0f44">  296</a></span>&#160;    <a class="code" href="structarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#ac74736e3863207232a23b7181c1d0f44">quantization_info</a>()<span class="keyword"> const override</span></div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;        <span class="keywordflow">return</span> _quantization_info;</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;    }</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;    std::tuple&lt;Strides, size_t, size_t&gt; calculate_padding_requirements(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_border_size.xhtml">PaddingSize</a> &amp;padding);</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;    <span class="keywordtype">size_t</span>           _total_size;</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;    <span class="keywordtype">int</span>              _fixed_point_position;</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;    <span class="keywordtype">size_t</span>           _offset_first_element_in_bytes;</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;    <a class="code" href="classarm__compute_1_1_strides.xhtml">Strides</a>          _strides_in_bytes;</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;    <span class="keywordtype">size_t</span>           _num_channels;</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>      _tensor_shape;</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a>         _data_type;</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58">Format</a>           _format;</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;    <span class="keywordtype">bool</span>             _is_resizable;</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;    <a class="code" href="structarm__compute_1_1_valid_region.xhtml">ValidRegion</a>      _valid_region;</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;    <a class="code" href="structarm__compute_1_1_border_size.xhtml">PaddingSize</a>      _padding;</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;    <a class="code" href="structarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a> _quantization_info;</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;};</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;}</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/*__ARM_COMPUTE_TENSORINFO_H__ */</span><span class="preprocessor"></span></div><div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_a2732b9eab657cad69807adb815b97c9f"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#a2732b9eab657cad69807adb815b97c9f">arm_compute::TensorInfo::set_fixed_point_position</a></div><div class="ttdeci">ITensorInfo &amp; set_fixed_point_position(int fixed_point_position) override</div><div class="ttdoc">Set the fixed point position to the specified value. </div></div>
<div class="ttc" id="structarm__compute_1_1_border_size_xhtml_adffbf97e7b8b64e7cf32f0254cddf3c4"><div class="ttname"><a href="structarm__compute_1_1_border_size.xhtml#adffbf97e7b8b64e7cf32f0254cddf3c4">arm_compute::BorderSize::empty</a></div><div class="ttdeci">constexpr bool empty() const </div><div class="ttdoc">Check if the entire border is zero. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00225">Types.h:225</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a45cde9abb508c62d67c3bb2b9bf566a5"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">arm_compute::test::validation::shape</a></div><div class="ttdeci">shape</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_min_max_location_8cpp_source.xhtml#l00089">MinMaxLocation.cpp:89</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_shape_xhtml"><div class="ttname"><a href="classarm__compute_1_1_tensor_shape.xhtml">arm_compute::TensorShape</a></div><div class="ttdoc">Shape of a tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_shape_8h_source.xhtml#l00038">TensorShape.h:38</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_a4b7391b7025befbe44b743723feb4a9b"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#a4b7391b7025befbe44b743723feb4a9b">arm_compute::TensorInfo::init_auto_padding</a></div><div class="ttdeci">size_t init_auto_padding(const TensorShape &amp;tensor_shape, Format format)</div><div class="ttdoc">Initialize the metadata structure for the given tensor shape and single-plane format, (Padding is automatically calculated) </div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_aa2ca251f99c56767719e991a26371603"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#aa2ca251f99c56767719e991a26371603">arm_compute::TensorInfo::has_padding</a></div><div class="ttdeci">bool has_padding() const override</div><div class="ttdoc">Checks if the tensor has been allocated with padding or not. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00275">TensorInfo.h:275</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_a35ccf2eb0c18a15feab2db98b307b78b"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#a35ccf2eb0c18a15feab2db98b307b78b">arm_compute::TensorInfo::fixed_point_position</a></div><div class="ttdeci">int fixed_point_position() const override</div><div class="ttdoc">Fixed point position used when the tensor data type is QS8 or QS16. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00239">TensorInfo.h:239</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_aaee6555ace43b03173844b1a228a3fc3"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#aaee6555ace43b03173844b1a228a3fc3">arm_compute::TensorInfo::is_resizable</a></div><div class="ttdeci">bool is_resizable() const override</div><div class="ttdoc">Flag indicating whether the size of the tensor can be changed. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00279">TensorInfo.h:279</a></div></div>
<div class="ttc" id="structarm__compute_1_1_border_size_xhtml"><div class="ttname"><a href="structarm__compute_1_1_border_size.xhtml">arm_compute::BorderSize</a></div><div class="ttdoc">Container for 2D border size. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00198">Types.h:198</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_a3c20d908342087484d883574d55dd482"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#a3c20d908342087484d883574d55dd482">arm_compute::TensorInfo::valid_region</a></div><div class="ttdeci">ValidRegion valid_region() const override</div><div class="ttdoc">Valid region of the tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00288">TensorInfo.h:288</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_a6f13b974eeb528acde66de8d9b3fd95c"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#a6f13b974eeb528acde66de8d9b3fd95c">arm_compute::TensorInfo::num_channels</a></div><div class="ttdeci">size_t num_channels() const override</div><div class="ttdoc">The number of channels for each tensor element. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00251">TensorInfo.h:251</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_a613528bd0feb15ee8d6df06cbdb629f8"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#a613528bd0feb15ee8d6df06cbdb629f8">arm_compute::TensorInfo::set_data_type</a></div><div class="ttdeci">ITensorInfo &amp; set_data_type(DataType data_type) override</div><div class="ttdoc">Set the data type to the specified value. </div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_a8813441b655b97c00139c6a5a6390e97"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#a8813441b655b97c00139c6a5a6390e97">arm_compute::TensorInfo::dimension</a></div><div class="ttdeci">size_t dimension(size_t index) const override</div><div class="ttdoc">Return the size of the requested dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00226">TensorInfo.h:226</a></div></div>
<div class="ttc" id="classarm__compute_1_1_h_o_g_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_h_o_g_info.xhtml">arm_compute::HOGInfo</a></div><div class="ttdoc">Store the HOG&amp;#39;s metadata. </div><div class="ttdef"><b>Definition:</b> <a href="_h_o_g_info_8h_source.xhtml#l00035">HOGInfo.h:35</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_ac74736e3863207232a23b7181c1d0f44"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#ac74736e3863207232a23b7181c1d0f44">arm_compute::TensorInfo::quantization_info</a></div><div class="ttdeci">QuantizationInfo quantization_info() const override</div><div class="ttdoc">Get the quantization settings (scale and offset) of the tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00296">TensorInfo.h:296</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_af53d8203ecc37896ca4579d1ee3fdffc"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#af53d8203ecc37896ca4579d1ee3fdffc">arm_compute::TensorInfo::extend_padding</a></div><div class="ttdeci">bool extend_padding(const PaddingSize &amp;padding) override</div><div class="ttdoc">Update the offset to the first element, the strides and the total size. </div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml">arm_compute::ITensorInfo</a></div><div class="ttdoc">Store the tensor&amp;#39;s metadata. </div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_info_8h_source.xhtml#l00039">ITensorInfo.h:39</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_a79e20eacb1e963e24a21ebd7369effd7"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#a79e20eacb1e963e24a21ebd7369effd7">arm_compute::TensorInfo::padding</a></div><div class="ttdeci">PaddingSize padding() const override</div><div class="ttdoc">Padding of tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00271">TensorInfo.h:271</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_a5f1ca9d674346287cae57a6c5b5c24ec"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#a5f1ca9d674346287cae57a6c5b5c24ec">arm_compute::TensorInfo::strides_in_bytes</a></div><div class="ttdeci">const Strides &amp; strides_in_bytes() const override</div><div class="ttdoc">The strides in bytes for accessing each dimension of the tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00230">TensorInfo.h:230</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_a907f837b924945ad1981c8fe8eca61e4"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#a907f837b924945ad1981c8fe8eca61e4">arm_compute::TensorInfo::auto_padding</a></div><div class="ttdeci">bool auto_padding() override</div><div class="ttdoc">Update the offset to the first element and the strides to automatically computed values. </div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a096668313a9a819d54a2e65ec21ff0cc"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a096668313a9a819d54a2e65ec21ff0cc">arm_compute::test::validation::info</a></div><div class="ttdeci">src info() -&gt; set_format(Format::S16)</div></div>
<div class="ttc" id="namespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">This file contains all available output stages for GEMMLowp on OpenCL. </div><div class="ttdef"><b>Definition:</b> <a href="01__library_8dox_source.xhtml#l00001">01_library.dox:1</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_ac4b36cc1e56b0b7e579bb4b7196490db"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#ac4b36cc1e56b0b7e579bb4b7196490db">arm_compute::TensorInfo::format</a></div><div class="ttdeci">Format format() const override</div><div class="ttdoc">Colour format of the image. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00263">TensorInfo.h:263</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_a9a3e72153aeb3ed212e9c3698774e881"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#a9a3e72153aeb3ed212e9c3698774e881">arm_compute::TensorInfo::data_type</a></div><div class="ttdeci">DataType data_type() const override</div><div class="ttdoc">Data type used for each element of the tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00259">TensorInfo.h:259</a></div></div>
<div class="ttc" id="arm__compute_2core_2_utils_8h_xhtml"><div class="ttname"><a href="arm__compute_2core_2_utils_8h.xhtml">Utils.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_a147790358ccd40f61dcd618cd4edd688"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#a147790358ccd40f61dcd618cd4edd688">arm_compute::TensorInfo::offset_element_in_bytes</a></div><div class="ttdeci">size_t offset_element_in_bytes(const Coordinates &amp;pos) const override</div><div class="ttdoc">The offset in bytes from the beginning of the memory allocation to access the element at position (x...</div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_a5b0a9fd674f8748506b6944c030bc47e"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#a5b0a9fd674f8748506b6944c030bc47e">arm_compute::TensorInfo::set_num_channels</a></div><div class="ttdeci">ITensorInfo &amp; set_num_channels(int num_channels) override</div><div class="ttdoc">Set the number of channels to the specified value. </div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_a13622133d9b41900a6a3e8f89e59a78b"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#a13622133d9b41900a6a3e8f89e59a78b">arm_compute::TensorInfo::num_dimensions</a></div><div class="ttdeci">size_t num_dimensions() const override</div><div class="ttdoc">The number of dimensions of the tensor (rank) </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00247">TensorInfo.h:247</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_af501bc12f51874e786b0f28016a99ff7"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#af501bc12f51874e786b0f28016a99ff7">arm_compute::TensorInfo::set_format</a></div><div class="ttdeci">ITensorInfo &amp; set_format(Format format) override</div><div class="ttdoc">Set the format of an already initialized tensor. </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58">arm_compute::Format</a></div><div class="ttdeci">Format</div><div class="ttdoc">Image colour formats. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00049">Types.h:49</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_a73e8ce43ba86fece3400cf79d0978811"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#a73e8ce43ba86fece3400cf79d0978811">arm_compute::TensorInfo::set_tensor_shape</a></div><div class="ttdeci">ITensorInfo &amp; set_tensor_shape(TensorShape shape) override</div><div class="ttdoc">Set the shape of an already initialized tensor. </div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_af398466b602a02b42d8df19fb66a6c60"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#af398466b602a02b42d8df19fb66a6c60">arm_compute::TensorInfo::total_size</a></div><div class="ttdeci">size_t total_size() const override</div><div class="ttdoc">Returns the total size of the tensor in bytes. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00267">TensorInfo.h:267</a></div></div>
<div class="ttc" id="classarm__compute_1_1_coordinates_xhtml"><div class="ttname"><a href="classarm__compute_1_1_coordinates.xhtml">arm_compute::Coordinates</a></div><div class="ttdoc">Coordinates of an item. </div><div class="ttdef"><b>Definition:</b> <a href="_coordinates_8h_source.xhtml#l00037">Coordinates.h:37</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_abb7e0f23a4f2e63f39433f158dad47ab"><div class="ttname"><a href="namespacearm__compute.xhtml#abb7e0f23a4f2e63f39433f158dad47ab">arm_compute::data_size_from_type</a></div><div class="ttdeci">size_t data_size_from_type(DataType data_type)</div><div class="ttdoc">The size in bytes of the data type. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_utils_8h_source.xhtml#l00089">Utils.h:89</a></div></div>
<div class="ttc" id="_i_tensor_info_8h_xhtml"><div class="ttname"><a href="_i_tensor_info_8h.xhtml">ITensorInfo.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_a0cbba4e45a4a1e389606493af3814415"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#a0cbba4e45a4a1e389606493af3814415">arm_compute::TensorInfo::set_valid_region</a></div><div class="ttdeci">void set_valid_region(ValidRegion valid_region) override</div><div class="ttdoc">Set the valid region of the tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00292">TensorInfo.h:292</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_a78bf77b2d9b959259f77a32b9a412184"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#a78bf77b2d9b959259f77a32b9a412184">arm_compute::TensorInfo::set_is_resizable</a></div><div class="ttdeci">ITensorInfo &amp; set_is_resizable(bool is_resizable) override</div><div class="ttdoc">Set the flag whether the tensor size can be changed. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00283">TensorInfo.h:283</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_ae3099a4be4777389b60712f43e065403"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#ae3099a4be4777389b60712f43e065403">arm_compute::TensorInfo::set_quantization_info</a></div><div class="ttdeci">ITensorInfo &amp; set_quantization_info(QuantizationInfo quantization_info) override</div><div class="ttdoc">Set the quantization settings (scale and offset) of the tensor. </div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_ad6b64f33be1e66dcf7612483ffb8fd63"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#ad6b64f33be1e66dcf7612483ffb8fd63">arm_compute::TensorInfo::init</a></div><div class="ttdeci">void init(Format format)</div><div class="ttdoc">Initialize the tensor info with just a format. </div></div>
<div class="ttc" id="classarm__compute_1_1_strides_xhtml"><div class="ttname"><a href="classarm__compute_1_1_strides.xhtml">arm_compute::Strides</a></div><div class="ttdoc">Strides of an item in bytes. </div><div class="ttdef"><b>Definition:</b> <a href="_strides_8h_source.xhtml#l00037">Strides.h:37</a></div></div>
<div class="ttc" id="_strides_8h_xhtml"><div class="ttname"><a href="_strides_8h.xhtml">Strides.h</a></div></div>
<div class="ttc" id="_coordinates_8h_xhtml"><div class="ttname"><a href="_coordinates_8h.xhtml">Coordinates.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_dimensions_xhtml_a0f59f175e7682c7ed5f4ea30ef687834"><div class="ttname"><a href="classarm__compute_1_1_dimensions.xhtml#a0f59f175e7682c7ed5f4ea30ef687834">arm_compute::Dimensions::num_dimensions</a></div><div class="ttdeci">unsigned int num_dimensions() const </div><div class="ttdoc">Returns the effective dimensionality of the tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_dimensions_8h_source.xhtml#l00122">Dimensions.h:122</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_a4c066d42d665fafb8cfe80b99411e4fb"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#a4c066d42d665fafb8cfe80b99411e4fb">arm_compute::TensorInfo::clone</a></div><div class="ttdeci">std::unique_ptr&lt; ITensorInfo &gt; clone() const override</div><div class="ttdoc">Provide a clone of the current object of class T. </div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_ab54246abe670b06f5624add7e7022904"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#ab54246abe670b06f5624add7e7022904">arm_compute::TensorInfo::offset_first_element_in_bytes</a></div><div class="ttdeci">size_t offset_first_element_in_bytes() const override</div><div class="ttdoc">The offset from the beginning of the memory allocation to the first element of the tensor...</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00234">TensorInfo.h:234</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml">arm_compute::TensorInfo</a></div><div class="ttdoc">Store the tensor&amp;#39;s metadata. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00044">TensorInfo.h:44</a></div></div>
<div class="ttc" id="structarm__compute_1_1_quantization_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1_quantization_info.xhtml">arm_compute::QuantizationInfo</a></div><div class="ttdoc">Quantization settings (used for QASYMM8 data type) </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00109">Types.h:109</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_a21c2ae9fa438faf42669dadda628080c"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#a21c2ae9fa438faf42669dadda628080c">arm_compute::TensorInfo::TensorInfo</a></div><div class="ttdeci">TensorInfo()</div><div class="ttdoc">Default constructor. </div></div>
<div class="ttc" id="structarm__compute_1_1_valid_region_xhtml"><div class="ttname"><a href="structarm__compute_1_1_valid_region.xhtml">arm_compute::ValidRegion</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00155">Types.h:155</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_adcf156ba30ff118c28690671e83ea06b"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#adcf156ba30ff118c28690671e83ea06b">arm_compute::TensorInfo::operator=</a></div><div class="ttdeci">TensorInfo &amp; operator=(const TensorInfo &amp;)=default</div><div class="ttdoc">Allow instances of this class to be copied. </div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_a269b19ce3f357ac65f41f9951906e38e"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#a269b19ce3f357ac65f41f9951906e38e">arm_compute::TensorInfo::tensor_shape</a></div><div class="ttdeci">const TensorShape &amp; tensor_shape() const override</div><div class="ttdoc">Size for each dimension of the tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00255">TensorInfo.h:255</a></div></div>
<div class="ttc" id="arm__compute_2core_2_types_8h_xhtml"><div class="ttname"><a href="arm__compute_2core_2_types_8h.xhtml">Types.h</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">arm_compute::DataType</a></div><div class="ttdeci">DataType</div><div class="ttdoc">Available data types. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00071">Types.h:71</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_a62b67b578f684c4d516843c9dea86a23"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#a62b67b578f684c4d516843c9dea86a23">arm_compute::TensorInfo::element_size</a></div><div class="ttdeci">size_t element_size() const override</div><div class="ttdoc">Element size in bytes calculated as data_size() * num_channels() </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00243">TensorInfo.h:243</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_ad29c039b6f3c4534928ed99aa9f53027"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#ad29c039b6f3c4534928ed99aa9f53027">arm_compute::TensorInfo::reset_padding</a></div><div class="ttdeci">ITensorInfo &amp; reset_padding() override</div><div class="ttdoc">Resets the padding settings of the tensor. </div></div>
<div class="ttc" id="_tensor_shape_8h_xhtml"><div class="ttname"><a href="_tensor_shape_8h.xhtml">TensorShape.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_a4eb5913c3ce5fe2bcbaafd8c9224d384"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#a4eb5913c3ce5fe2bcbaafd8c9224d384">arm_compute::TensorInfo::~TensorInfo</a></div><div class="ttdeci">~TensorInfo()=default</div><div class="ttdoc">Default destructor. </div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_214608ef36d61442cb2b0c1c4e9a7def.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="dir_1fb090f0c6070330bfaccc4236d3ca0d.xhtml">core</a></li><li class="navelem"><a class="el" href="_tensor_info_8h.xhtml">TensorInfo.h</a></li>
    <li class="footer">Generated on Thu Dec 14 2017 23:48:31 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
  </ul>
</div>
</body>
</html>
