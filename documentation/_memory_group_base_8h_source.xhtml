<!-- HTML header for doxygen 1.8.9.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: arm_compute/runtime/MemoryGroupBase.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Compute Library
   &#160;<span id="projectnumber">17.12</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>Globals</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_memory_group_base_8h_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">MemoryGroupBase.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_memory_group_base_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2017 ARM Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifndef __ARM_COMPUTE_MEMORYGROUPBASE_H__</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#define __ARM_COMPUTE_MEMORYGROUPBASE_H__</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_memory_group_8h.xhtml">arm_compute/runtime/IMemoryGroup.h</a>&quot;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="core_2_error_8h.xhtml">arm_compute/core/Error.h</a>&quot;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_memory_manager_8h.xhtml">arm_compute/runtime/IMemoryManager.h</a>&quot;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_memory_pool_8h.xhtml">arm_compute/runtime/IMemoryPool.h</a>&quot;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &lt;cstddef&gt;</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &lt;memory&gt;</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;{</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> TensorType&gt;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">class </span>MemoryGroupBase : <span class="keyword">public</span> IMemoryGroup</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;{</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <a class="code" href="classarm__compute_1_1_memory_group_base.xhtml#a65925c6cf4ee7a89e05557dfb2138c47">MemoryGroupBase</a>(std::shared_ptr&lt;IMemoryManager&gt; memory_manager = <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <a class="code" href="classarm__compute_1_1_memory_group_base.xhtml#afa4d42fbf7f8e750b0b06994bcdf138c">~MemoryGroupBase</a>() = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <a class="code" href="classarm__compute_1_1_memory_group_base.xhtml#a65925c6cf4ee7a89e05557dfb2138c47">MemoryGroupBase</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_memory_group_base.xhtml#a65925c6cf4ee7a89e05557dfb2138c47">MemoryGroupBase</a> &amp;) = <span class="keyword">delete</span>;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <a class="code" href="classarm__compute_1_1_memory_group_base.xhtml#a65925c6cf4ee7a89e05557dfb2138c47">MemoryGroupBase</a> &amp;<a class="code" href="classarm__compute_1_1_memory_group_base.xhtml#a597892bd64122315e3329751f634c20e">operator=</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_memory_group_base.xhtml#a65925c6cf4ee7a89e05557dfb2138c47">MemoryGroupBase</a> &amp;) = <span class="keyword">delete</span>;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <a class="code" href="classarm__compute_1_1_memory_group_base.xhtml#a65925c6cf4ee7a89e05557dfb2138c47">MemoryGroupBase</a>(<a class="code" href="classarm__compute_1_1_memory_group_base.xhtml#a65925c6cf4ee7a89e05557dfb2138c47">MemoryGroupBase</a> &amp;&amp;) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <a class="code" href="classarm__compute_1_1_memory_group_base.xhtml#a65925c6cf4ee7a89e05557dfb2138c47">MemoryGroupBase</a> &amp;<a class="code" href="classarm__compute_1_1_memory_group_base.xhtml#a597892bd64122315e3329751f634c20e">operator=</a>(<a class="code" href="classarm__compute_1_1_memory_group_base.xhtml#a65925c6cf4ee7a89e05557dfb2138c47">MemoryGroupBase</a> &amp;&amp;) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_memory_group_base.xhtml#ac1f67376afb7822f262a0174ef4a3104">manage</a>(TensorType *obj);</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_memory_group_base.xhtml#acea32c3a891a609580e97b9056b3cdf5">finalize_memory</a>(TensorType *obj, <span class="keywordtype">void</span> **handle, <span class="keywordtype">size_t</span> <a class="code" href="hwc_8hpp.xhtml#ab2c6b258f02add8fdf4cfc7c371dd772">size</a>);</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="comment">// Inherited methods overridden:</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <span class="keywordtype">void</span>            <a class="code" href="classarm__compute_1_1_memory_group_base.xhtml#a8d16047fa6fdcf5f5453056cc0e1daba">acquire</a>() <span class="keyword">override</span>;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="keywordtype">void</span>            <a class="code" href="classarm__compute_1_1_memory_group_base.xhtml#ad7ed3842c3160ae4b9f51acbf4564438">release</a>() <span class="keyword">override</span>;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a762c7da7319adcc433b3ac7a67e18ed5">MemoryMappings</a> &amp;<a class="code" href="classarm__compute_1_1_memory_group_base.xhtml#a0a9171fb9c729a0a08b1d0ff3a5e3309">mappings</a>() <span class="keyword">override</span>;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="keywordtype">void</span> associate_memory_group(TensorType *obj);</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    std::shared_ptr&lt;IMemoryManager&gt; _memory_manager; </div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    IMemoryPool                    *_pool;           </div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a762c7da7319adcc433b3ac7a67e18ed5">MemoryMappings</a>                  _mappings;       </div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;};</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> TensorType&gt;</div><div class="line"><a name="l00087"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_memory_group_base.xhtml#a65925c6cf4ee7a89e05557dfb2138c47">   87</a></span>&#160;<span class="keyword">inline</span> <a class="code" href="classarm__compute_1_1_memory_group_base.xhtml#a65925c6cf4ee7a89e05557dfb2138c47">MemoryGroupBase&lt;TensorType&gt;::MemoryGroupBase</a>(std::shared_ptr&lt;IMemoryManager&gt; memory_manager)</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    : _memory_manager(std::move(memory_manager)), _pool(nullptr), _mappings()</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;{</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="keywordflow">if</span>(_memory_manager)</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    {</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        <a class="code" href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(!_memory_manager-&gt;lifetime_manager());</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    }</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;}</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> TensorType&gt;</div><div class="line"><a name="l00097"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_memory_group_base.xhtml#ac1f67376afb7822f262a0174ef4a3104">   97</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_memory_group_base.xhtml#ac1f67376afb7822f262a0174ef4a3104">MemoryGroupBase&lt;TensorType&gt;::manage</a>(TensorType *obj)</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;{</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <span class="keywordflow">if</span>(_memory_manager)</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    {</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        <a class="code" href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(!_memory_manager-&gt;lifetime_manager());</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        <span class="comment">// Defer registration to the first managed object</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        _memory_manager-&gt;lifetime_manager()-&gt;register_group(<span class="keyword">this</span>);</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        <span class="comment">// Associate this memory group with the tensor</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        associate_memory_group(obj);</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        <span class="comment">// Start object lifetime</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        _memory_manager-&gt;lifetime_manager()-&gt;start_lifetime(obj);</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    }</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;}</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> TensorType&gt;</div><div class="line"><a name="l00115"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_memory_group_base.xhtml#acea32c3a891a609580e97b9056b3cdf5">  115</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_memory_group_base.xhtml#acea32c3a891a609580e97b9056b3cdf5">MemoryGroupBase&lt;TensorType&gt;::finalize_memory</a>(TensorType *obj, <span class="keywordtype">void</span> **handle, <span class="keywordtype">size_t</span> <a class="code" href="hwc_8hpp.xhtml#ab2c6b258f02add8fdf4cfc7c371dd772">size</a>)</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;{</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <span class="keywordflow">if</span>(_memory_manager)</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    {</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        <a class="code" href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(!_memory_manager-&gt;lifetime_manager());</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        _memory_manager-&gt;lifetime_manager()-&gt;end_lifetime(obj, handle, size);</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    }</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;}</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> TensorType&gt;</div><div class="line"><a name="l00125"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_memory_group_base.xhtml#a8d16047fa6fdcf5f5453056cc0e1daba">  125</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_memory_group_base.xhtml#a8d16047fa6fdcf5f5453056cc0e1daba">MemoryGroupBase&lt;TensorType&gt;::acquire</a>()</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;{</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    <span class="keywordflow">if</span>(!_mappings.empty())</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    {</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        <a class="code" href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(!_memory_manager-&gt;pool_manager());</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;        _pool = _memory_manager-&gt;pool_manager()-&gt;lock_pool();</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        _pool-&gt;acquire(_mappings);</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    }</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;}</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> TensorType&gt;</div><div class="line"><a name="l00136"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_memory_group_base.xhtml#ad7ed3842c3160ae4b9f51acbf4564438">  136</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_memory_group_base.xhtml#ad7ed3842c3160ae4b9f51acbf4564438">MemoryGroupBase&lt;TensorType&gt;::release</a>()</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;{</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <span class="keywordflow">if</span>(_pool != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    {</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        <a class="code" href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(!_memory_manager-&gt;pool_manager());</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        <a class="code" href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(_mappings.empty());</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        _pool-&gt;<a class="code" href="classarm__compute_1_1_i_memory_pool.xhtml#ab9d340d42cc3ec933f5da369f1f808bb">release</a>(_mappings);</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;        _memory_manager-&gt;pool_manager()-&gt;unlock_pool(_pool);</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        _pool = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    }</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;}</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> TensorType&gt;</div><div class="line"><a name="l00149"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_memory_group_base.xhtml#a0a9171fb9c729a0a08b1d0ff3a5e3309">  149</a></span>&#160;<span class="keyword">inline</span> <a class="code" href="namespacearm__compute.xhtml#a762c7da7319adcc433b3ac7a67e18ed5">MemoryMappings</a> &amp;<a class="code" href="classarm__compute_1_1_memory_group_base.xhtml#a0a9171fb9c729a0a08b1d0ff3a5e3309">MemoryGroupBase&lt;TensorType&gt;::mappings</a>()</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;{</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    <span class="keywordflow">return</span> _mappings;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;}</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> TensorType&gt;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_memory_group_base.xhtml">MemoryGroupBase&lt;TensorType&gt;::associate_memory_group</a>(TensorType *)</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;{</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <a class="code" href="core_2_error_8h.xhtml#a05b19c75afe9c24200a62b9724734bbd">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;Must be implemented by child class&quot;</span>);</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;}</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;} <span class="comment">// arm_compute</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/*__ARM_COMPUTE_MEMORYGROUPBASE_H__ */</span><span class="preprocessor"></span></div><div class="ttc" id="core_2_error_8h_xhtml"><div class="ttname"><a href="core_2_error_8h.xhtml">Error.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_memory_group_base_xhtml_afa4d42fbf7f8e750b0b06994bcdf138c"><div class="ttname"><a href="classarm__compute_1_1_memory_group_base.xhtml#afa4d42fbf7f8e750b0b06994bcdf138c">arm_compute::MemoryGroupBase::~MemoryGroupBase</a></div><div class="ttdeci">~MemoryGroupBase()=default</div><div class="ttdoc">Default destructor. </div></div>
<div class="ttc" id="classarm__compute_1_1_memory_group_base_xhtml_a8d16047fa6fdcf5f5453056cc0e1daba"><div class="ttname"><a href="classarm__compute_1_1_memory_group_base.xhtml#a8d16047fa6fdcf5f5453056cc0e1daba">arm_compute::MemoryGroupBase::acquire</a></div><div class="ttdeci">void acquire() override</div><div class="ttdoc">Acquires backing memory for the whole group. </div><div class="ttdef"><b>Definition:</b> <a href="_memory_group_base_8h_source.xhtml#l00125">MemoryGroupBase.h:125</a></div></div>
<div class="ttc" id="core_2_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="core_2_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown. </div><div class="ttdef"><b>Definition:</b> <a href="core_2_error_8h_source.xhtml#l00306">Error.h:306</a></div></div>
<div class="ttc" id="_i_memory_manager_8h_xhtml"><div class="ttname"><a href="_i_memory_manager_8h.xhtml">IMemoryManager.h</a></div></div>
<div class="ttc" id="core_2_error_8h_xhtml_a05b19c75afe9c24200a62b9724734bbd"><div class="ttname"><a href="core_2_error_8h.xhtml#a05b19c75afe9c24200a62b9724734bbd">ARM_COMPUTE_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR(...)</div><div class="ttdoc">Print the given message then throw an std::runtime_error. </div><div class="ttdef"><b>Definition:</b> <a href="core_2_error_8h_source.xhtml#l00238">Error.h:238</a></div></div>
<div class="ttc" id="_i_memory_pool_8h_xhtml"><div class="ttname"><a href="_i_memory_pool_8h.xhtml">IMemoryPool.h</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">This file contains all available output stages for GEMMLowp on OpenCL. </div><div class="ttdef"><b>Definition:</b> <a href="01__library_8dox_source.xhtml#l00001">01_library.dox:1</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_memory_pool_xhtml_ab9d340d42cc3ec933f5da369f1f808bb"><div class="ttname"><a href="classarm__compute_1_1_i_memory_pool.xhtml#ab9d340d42cc3ec933f5da369f1f808bb">arm_compute::IMemoryPool::release</a></div><div class="ttdeci">virtual void release(MemoryMappings &amp;handles)=0</div><div class="ttdoc">Releases a memory block. </div></div>
<div class="ttc" id="classarm__compute_1_1_memory_group_base_xhtml_acea32c3a891a609580e97b9056b3cdf5"><div class="ttname"><a href="classarm__compute_1_1_memory_group_base.xhtml#acea32c3a891a609580e97b9056b3cdf5">arm_compute::MemoryGroupBase::finalize_memory</a></div><div class="ttdeci">void finalize_memory(TensorType *obj, void **handle, size_t size)</div><div class="ttdoc">Finalizes memory for a given object. </div><div class="ttdef"><b>Definition:</b> <a href="_memory_group_base_8h_source.xhtml#l00115">MemoryGroupBase.h:115</a></div></div>
<div class="ttc" id="_i_memory_group_8h_xhtml"><div class="ttname"><a href="_i_memory_group_8h.xhtml">IMemoryGroup.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_memory_group_base_xhtml_ac1f67376afb7822f262a0174ef4a3104"><div class="ttname"><a href="classarm__compute_1_1_memory_group_base.xhtml#ac1f67376afb7822f262a0174ef4a3104">arm_compute::MemoryGroupBase::manage</a></div><div class="ttdeci">void manage(TensorType *obj)</div><div class="ttdoc">Sets a object to be managed by the given memory group. </div><div class="ttdef"><b>Definition:</b> <a href="_memory_group_base_8h_source.xhtml#l00097">MemoryGroupBase.h:97</a></div></div>
<div class="ttc" id="hwc_8hpp_xhtml_ab2c6b258f02add8fdf4cfc7c371dd772"><div class="ttname"><a href="hwc_8hpp.xhtml#ab2c6b258f02add8fdf4cfc7c371dd772">size</a></div><div class="ttdeci">uint32_t size</div><div class="ttdef"><b>Definition:</b> <a href="hwc_8hpp_source.xhtml#l00276">hwc.hpp:276</a></div></div>
<div class="ttc" id="classarm__compute_1_1_memory_group_base_xhtml_a0a9171fb9c729a0a08b1d0ff3a5e3309"><div class="ttname"><a href="classarm__compute_1_1_memory_group_base.xhtml#a0a9171fb9c729a0a08b1d0ff3a5e3309">arm_compute::MemoryGroupBase::mappings</a></div><div class="ttdeci">MemoryMappings &amp; mappings() override</div><div class="ttdoc">Gets the memory mapping of the group. </div><div class="ttdef"><b>Definition:</b> <a href="_memory_group_base_8h_source.xhtml#l00149">MemoryGroupBase.h:149</a></div></div>
<div class="ttc" id="classarm__compute_1_1_memory_group_base_xhtml_a597892bd64122315e3329751f634c20e"><div class="ttname"><a href="classarm__compute_1_1_memory_group_base.xhtml#a597892bd64122315e3329751f634c20e">arm_compute::MemoryGroupBase::operator=</a></div><div class="ttdeci">MemoryGroupBase &amp; operator=(const MemoryGroupBase &amp;)=delete</div><div class="ttdoc">Prevent instances of this class from being copy assigned (As this class contains pointers). </div></div>
<div class="ttc" id="classarm__compute_1_1_memory_group_base_xhtml"><div class="ttname"><a href="classarm__compute_1_1_memory_group_base.xhtml">arm_compute::MemoryGroupBase</a></div><div class="ttdoc">Memory group. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_tensor_allocator_8h_source.xhtml#l00037">CLTensorAllocator.h:37</a></div></div>
<div class="ttc" id="classarm__compute_1_1_memory_group_base_xhtml_a65925c6cf4ee7a89e05557dfb2138c47"><div class="ttname"><a href="classarm__compute_1_1_memory_group_base.xhtml#a65925c6cf4ee7a89e05557dfb2138c47">arm_compute::MemoryGroupBase::MemoryGroupBase</a></div><div class="ttdeci">MemoryGroupBase(std::shared_ptr&lt; IMemoryManager &gt; memory_manager=nullptr)</div><div class="ttdoc">Default Constructor. </div><div class="ttdef"><b>Definition:</b> <a href="_memory_group_base_8h_source.xhtml#l00087">MemoryGroupBase.h:87</a></div></div>
<div class="ttc" id="classarm__compute_1_1_memory_group_base_xhtml_ad7ed3842c3160ae4b9f51acbf4564438"><div class="ttname"><a href="classarm__compute_1_1_memory_group_base.xhtml#ad7ed3842c3160ae4b9f51acbf4564438">arm_compute::MemoryGroupBase::release</a></div><div class="ttdeci">void release() override</div><div class="ttdoc">Releases backing memory of the whole group. </div><div class="ttdef"><b>Definition:</b> <a href="_memory_group_base_8h_source.xhtml#l00136">MemoryGroupBase.h:136</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a762c7da7319adcc433b3ac7a67e18ed5"><div class="ttname"><a href="namespacearm__compute.xhtml#a762c7da7319adcc433b3ac7a67e18ed5">arm_compute::MemoryMappings</a></div><div class="ttdeci">std::map&lt; void **, size_t &gt; MemoryMappings</div><div class="ttdoc">A map of (handle, index/offset), where handle is the memory handle of the object to provide the memor...</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2runtime_2_types_8h_source.xhtml#l00043">Types.h:43</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_214608ef36d61442cb2b0c1c4e9a7def.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="dir_8bc26130589aa16388b5a02f17abf2c2.xhtml">runtime</a></li><li class="navelem"><a class="el" href="_memory_group_base_8h.xhtml">MemoryGroupBase.h</a></li>
    <li class="footer">Generated on Thu Dec 14 2017 23:48:31 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
  </ul>
</div>
</body>
</html>
