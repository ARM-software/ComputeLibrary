<!-- HTML header for doxygen 1.8.9.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/core/CL/cl_kernels/optical_flow_pyramid_lk.cl Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Compute Library
   &#160;<span id="projectnumber">17.12</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>Globals</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('optical__flow__pyramid__lk_8cl_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">optical_flow_pyramid_lk.cl</div>  </div>
</div><!--header-->
<div class="contents">
<a href="optical__flow__pyramid__lk_8cl.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2017 ARM Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="helpers_8h.xhtml">helpers.h</a>&quot;</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="types_8h.xhtml">types.h</a>&quot;</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="comment"> *The criteria for lost tracking is that the spatial gradient matrix has:</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="comment"> * - Determinant less than DETERMINANT_THR</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="comment"> * - or minimum eigenvalue is smaller then EIGENVALUE_THR</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="comment"> * Note: Also lost tracking happens when the point tracked coordinate is outside</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="comment"> * the image coordinates</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="comment"> * https://www.khronos.org/registry/vx/specs/1.0/html/d0/d0c/group__group__vision__function__opticalflowpyrlk.html</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="comment">/* Internal Lucas-Kanade Keypoint struct */</span></div><div class="line"><a name="l00039"></a><span class="lineno"><a class="line" href="struct_internal_keypoint.xhtml">   39</a></span>&#160;<span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="struct_internal_keypoint.xhtml">InternalKeypoint</a></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;{</div><div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="struct_internal_keypoint.xhtml#ad0da36b2558901e21e7a30f6c227a45e">   41</a></span>&#160;    <span class="keywordtype">float</span> <a class="code" href="struct_internal_keypoint.xhtml#ad0da36b2558901e21e7a30f6c227a45e">x</a>;               </div><div class="line"><a name="l00042"></a><span class="lineno"><a class="line" href="struct_internal_keypoint.xhtml#aa4f0d3eebc3c443f9be81bf48561a217">   42</a></span>&#160;    <span class="keywordtype">float</span> <a class="code" href="struct_internal_keypoint.xhtml#aa4f0d3eebc3c443f9be81bf48561a217">y</a>;               </div><div class="line"><a name="l00043"></a><span class="lineno"><a class="line" href="struct_internal_keypoint.xhtml#a08361efa212a9ab04a5965766ea942d5">   43</a></span>&#160;    <span class="keywordtype">float</span> <a class="code" href="struct_internal_keypoint.xhtml#a08361efa212a9ab04a5965766ea942d5">tracking_status</a>; </div><div class="line"><a name="l00044"></a><span class="lineno"><a class="line" href="struct_internal_keypoint.xhtml#aaf67d90c5e431e85ea2b7681537beab9">   44</a></span>&#160;    <span class="keywordtype">float</span> <a class="code" href="struct_internal_keypoint.xhtml#aaf67d90c5e431e85ea2b7681537beab9">dummy</a>;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;} <a class="code" href="optical__flow__pyramid__lk_8cl.xhtml#ad3a2575d8a9005ddf8ce79dda76918f8">InternalKeypoint</a>;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div><div class="line"><a name="l00048"></a><span class="lineno"><a class="line" href="optical__flow__pyramid__lk_8cl.xhtml#a0f3927d942874a04e6464bdb946de046">   48</a></span>&#160;<span class="preprocessor">#define DETERMINANT_THR 1.0e-07f</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div><div class="line"><a name="l00051"></a><span class="lineno"><a class="line" href="optical__flow__pyramid__lk_8cl.xhtml#a3955a0fbedb5b3eae9a38801fb01bac5">   51</a></span>&#160;<span class="preprocessor">#define EIGENVALUE_THR 1.0e-04f</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00054"></a><span class="lineno"><a class="line" href="optical__flow__pyramid__lk_8cl.xhtml#aab6bf9cc4b300f72d07a2ebe9939f376">   54</a></span>&#160;<span class="preprocessor">#define W_BITS (14)</span></div><div class="line"><a name="l00055"></a><span class="lineno"><a class="line" href="optical__flow__pyramid__lk_8cl.xhtml#a1852457538f524c42f96b66882bd9b35">   55</a></span>&#160;<span class="preprocessor">#define FLT_SCALE (1.0f / (float)(1 &lt;&lt; 20))</span></div><div class="line"><a name="l00056"></a><span class="lineno"><a class="line" href="optical__flow__pyramid__lk_8cl.xhtml#ae0b2360d4b8e961bf2709b0663fd9f2a">   56</a></span>&#160;<span class="preprocessor">#define D0 ((float)(1 &lt;&lt; W_BITS))</span></div><div class="line"><a name="l00057"></a><span class="lineno"><a class="line" href="optical__flow__pyramid__lk_8cl.xhtml#a52deba56234661c77d4b9573d5175ae2">   57</a></span>&#160;<span class="preprocessor">#define D1 (1.0f / (float)(1 &lt;&lt; (W_BITS - 5)))</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div><div class="line"><a name="l00065"></a><span class="lineno"><a class="line" href="optical__flow__pyramid__lk_8cl.xhtml#a73bd536f33d9707d1165a0fce16db833">   65</a></span>&#160;__kernel <span class="keywordtype">void</span> <a class="code" href="optical__flow__pyramid__lk_8cl.xhtml#a73bd536f33d9707d1165a0fce16db833">init_level</a>(</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    __global float4 *old_points_internal,</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    __global float4 *new_points_internal,</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">float</span>      <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acec6d8ad52a28972fa74e071c1a63b6a">scale</a>)</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;{</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <span class="keywordtype">int</span> idx = get_global_id(0);</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="comment">// Get old and new keypoints</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    float4 old_point = old_points_internal[idx];</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    float4 new_point = new_points_internal[idx];</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <span class="comment">// Scale accordingly with the pyramid_scale</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    old_point.xy *= (float2)(2.0f);</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    new_point.xy *= (float2)(2.0f);</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    old_points_internal[idx] = old_point;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    new_points_internal[idx] = new_point;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;}</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div><div class="line"><a name="l00091"></a><span class="lineno"><a class="line" href="optical__flow__pyramid__lk_8cl.xhtml#a324194275a47768c0460d19b16b477db">   91</a></span>&#160;__kernel <span class="keywordtype">void</span> <a class="code" href="optical__flow__pyramid__lk_8cl.xhtml#a324194275a47768c0460d19b16b477db">init_level_max</a>(</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    __global <a class="code" href="struct_keypoint.xhtml">Keypoint</a> *old_points,</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    __global <a class="code" href="struct_internal_keypoint.xhtml">InternalKeypoint</a> *old_points_internal,</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    __global <a class="code" href="struct_internal_keypoint.xhtml">InternalKeypoint</a> *new_points_internal,</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">float</span>                <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acec6d8ad52a28972fa74e071c1a63b6a">scale</a>)</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;{</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <span class="keywordtype">int</span> idx = get_global_id(0);</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <a class="code" href="struct_keypoint.xhtml">Keypoint</a> old_point = old_points[idx];</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <span class="comment">// Get old keypoint to track</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <a class="code" href="struct_internal_keypoint.xhtml">InternalKeypoint</a> old_point_internal;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    old_point_internal.<a class="code" href="struct_internal_keypoint.xhtml#ad0da36b2558901e21e7a30f6c227a45e">x</a>               = old_point.<a class="code" href="struct_keypoint.xhtml#a6150e0515f7202e2fb518f7206ed97dc">x</a> * <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acec6d8ad52a28972fa74e071c1a63b6a">scale</a>;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    old_point_internal.<a class="code" href="struct_internal_keypoint.xhtml#aa4f0d3eebc3c443f9be81bf48561a217">y</a>               = old_point.<a class="code" href="struct_keypoint.xhtml#a0a2f84ed7838f07779ae24c5a9086d33">y</a> * <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acec6d8ad52a28972fa74e071c1a63b6a">scale</a>;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    old_point_internal.<a class="code" href="struct_internal_keypoint.xhtml#a08361efa212a9ab04a5965766ea942d5">tracking_status</a> = 1.f;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <span class="comment">// Store internal keypoints</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    old_points_internal[idx] = old_point_internal;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    new_points_internal[idx] = old_point_internal;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;}</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div><div class="line"><a name="l00120"></a><span class="lineno"><a class="line" href="optical__flow__pyramid__lk_8cl.xhtml#a4b777fd3d432419912e4dbc94fe9d3f5">  120</a></span>&#160;__kernel <span class="keywordtype">void</span> <a class="code" href="optical__flow__pyramid__lk_8cl.xhtml#a4b777fd3d432419912e4dbc94fe9d3f5">init_level_max_initial_estimate</a>(</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    __global <a class="code" href="struct_keypoint.xhtml">Keypoint</a> *old_points,</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    __global <a class="code" href="struct_keypoint.xhtml">Keypoint</a> *new_points_estimates,</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    __global <a class="code" href="struct_internal_keypoint.xhtml">InternalKeypoint</a> *old_points_internal,</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    __global <a class="code" href="struct_internal_keypoint.xhtml">InternalKeypoint</a> *new_points_internal,</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">float</span>                <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acec6d8ad52a28972fa74e071c1a63b6a">scale</a>)</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;{</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    <span class="keywordtype">int</span> idx = get_global_id(0);</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    <a class="code" href="struct_keypoint.xhtml">Keypoint</a>         old_point          = old_points[idx];</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <a class="code" href="struct_keypoint.xhtml">Keypoint</a>         new_point_estimate = new_points_estimates[idx];</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    <a class="code" href="struct_internal_keypoint.xhtml">InternalKeypoint</a> old_point_internal;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <a class="code" href="struct_internal_keypoint.xhtml">InternalKeypoint</a> new_point_internal;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <span class="comment">// Get old keypoint to track</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    old_point_internal.<a class="code" href="struct_internal_keypoint.xhtml#ad0da36b2558901e21e7a30f6c227a45e">x</a>               = old_point.<a class="code" href="struct_keypoint.xhtml#a6150e0515f7202e2fb518f7206ed97dc">x</a> * <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acec6d8ad52a28972fa74e071c1a63b6a">scale</a>;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    old_point_internal.<a class="code" href="struct_internal_keypoint.xhtml#aa4f0d3eebc3c443f9be81bf48561a217">y</a>               = old_point.<a class="code" href="struct_keypoint.xhtml#a0a2f84ed7838f07779ae24c5a9086d33">y</a> * <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acec6d8ad52a28972fa74e071c1a63b6a">scale</a>;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    old_point_internal.<a class="code" href="struct_internal_keypoint.xhtml#a08361efa212a9ab04a5965766ea942d5">tracking_status</a> = 1.f;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    <span class="comment">// Get new keypoint to track</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    new_point_internal.<a class="code" href="struct_internal_keypoint.xhtml#ad0da36b2558901e21e7a30f6c227a45e">x</a>               = new_point_estimate.<a class="code" href="struct_keypoint.xhtml#a6150e0515f7202e2fb518f7206ed97dc">x</a> * <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acec6d8ad52a28972fa74e071c1a63b6a">scale</a>;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    new_point_internal.<a class="code" href="struct_internal_keypoint.xhtml#aa4f0d3eebc3c443f9be81bf48561a217">y</a>               = new_point_estimate.<a class="code" href="struct_keypoint.xhtml#a0a2f84ed7838f07779ae24c5a9086d33">y</a> * <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acec6d8ad52a28972fa74e071c1a63b6a">scale</a>;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    new_point_internal.<a class="code" href="struct_internal_keypoint.xhtml#a08361efa212a9ab04a5965766ea942d5">tracking_status</a> = new_point_estimate.<a class="code" href="struct_keypoint.xhtml#a7edfed755585d6095522904dbe0ec4d8">tracking_status</a>;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    <span class="comment">// Store internal keypoints</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    old_points_internal[idx] = old_point_internal;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    new_points_internal[idx] = new_point_internal;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;}</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div><div class="line"><a name="l00154"></a><span class="lineno"><a class="line" href="optical__flow__pyramid__lk_8cl.xhtml#a0beafe52e6ef0247d036f06bd6da622a">  154</a></span>&#160;__kernel <span class="keywordtype">void</span> <a class="code" href="optical__flow__pyramid__lk_8cl.xhtml#a0beafe52e6ef0247d036f06bd6da622a">finalize</a>(</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    __global <a class="code" href="struct_internal_keypoint.xhtml">InternalKeypoint</a> *new_points_internal,</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    __global <a class="code" href="struct_keypoint.xhtml">Keypoint</a> *new_points)</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;{</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    <span class="keywordtype">int</span> idx = get_global_id(0);</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    <span class="comment">// Load internal keypoint</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    <a class="code" href="struct_internal_keypoint.xhtml">InternalKeypoint</a> new_point_internal = new_points_internal[idx];</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    <span class="comment">// Calculate output point</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    <a class="code" href="struct_keypoint.xhtml">Keypoint</a> new_point;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    new_point.<a class="code" href="struct_keypoint.xhtml#a6150e0515f7202e2fb518f7206ed97dc">x</a>               = <a class="code" href="namespacearm__compute.xhtml#a6452ac376d4adb94d93a93d678bb6757">round</a>(new_point_internal.<a class="code" href="struct_internal_keypoint.xhtml#ad0da36b2558901e21e7a30f6c227a45e">x</a>);</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    new_point.<a class="code" href="struct_keypoint.xhtml#a0a2f84ed7838f07779ae24c5a9086d33">y</a>               = <a class="code" href="namespacearm__compute.xhtml#a6452ac376d4adb94d93a93d678bb6757">round</a>(new_point_internal.<a class="code" href="struct_internal_keypoint.xhtml#aa4f0d3eebc3c443f9be81bf48561a217">y</a>);</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    new_point.<a class="code" href="struct_keypoint.xhtml#a7edfed755585d6095522904dbe0ec4d8">tracking_status</a> = new_point_internal.<a class="code" href="struct_internal_keypoint.xhtml#a08361efa212a9ab04a5965766ea942d5">tracking_status</a>;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    <span class="comment">// Store new point</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    new_points[idx] = new_point;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;}</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;</div><div class="line"><a name="l00204"></a><span class="lineno"><a class="line" href="optical__flow__pyramid__lk_8cl.xhtml#ae1961d0f636da631c35ffaf096187840">  204</a></span>&#160;<span class="keywordtype">void</span> __kernel <a class="code" href="optical__flow__pyramid__lk_8cl.xhtml#ae1961d0f636da631c35ffaf096187840">lktracker_stage0</a>(</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    <a class="code" href="helpers_8h.xhtml#a22f42fcf2077d951271df83b55c1a71a">IMAGE_DECLARATION</a>(old_image),</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    <a class="code" href="helpers_8h.xhtml#a22f42fcf2077d951271df83b55c1a71a">IMAGE_DECLARATION</a>(old_scharr_gx),</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    <a class="code" href="helpers_8h.xhtml#a22f42fcf2077d951271df83b55c1a71a">IMAGE_DECLARATION</a>(old_scharr_gy),</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    __global float4 *old_points,</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    __global float4 *new_points,</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    __global float4 *coeff,</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    __global short4 *iold_val,</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span>        window_dimension,</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span>        window_dimension_pow2,</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span>        half_window,</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    <span class="keyword">const</span> float3     border_limits,</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">float</span>      eig_const,</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span>        level0)</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;{</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    <span class="keywordtype">int</span> idx = get_global_id(0);</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    <a class="code" href="struct_image.xhtml">Image</a> old_image     = <a class="code" href="helpers_8h.xhtml#a4334a4a76f8e9628c0fb9e1acf616e2a">CONVERT_TO_IMAGE_STRUCT_NO_STEP</a>(old_image);</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    <a class="code" href="struct_image.xhtml">Image</a> old_scharr_gx = <a class="code" href="helpers_8h.xhtml#a4334a4a76f8e9628c0fb9e1acf616e2a">CONVERT_TO_IMAGE_STRUCT_NO_STEP</a>(old_scharr_gx);</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;    <a class="code" href="struct_image.xhtml">Image</a> old_scharr_gy = <a class="code" href="helpers_8h.xhtml#a4334a4a76f8e9628c0fb9e1acf616e2a">CONVERT_TO_IMAGE_STRUCT_NO_STEP</a>(old_scharr_gy);</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;    <span class="comment">// Get old keypoint</span></div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    float2 old_keypoint = old_points[idx].xy - (float2)half_window;</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    <span class="comment">// Get the floor value</span></div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    float2 iold_keypoint = floor(old_keypoint);</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    <span class="comment">// Check if using the window dimension we can go out of boundary in the following for loops. If so, invalidate the tracked point</span></div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;    <span class="keywordflow">if</span>(any(iold_keypoint &lt; border_limits.zz) || any(iold_keypoint &gt;= border_limits.xy))</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    {</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;        <span class="keywordflow">if</span>(level0 == 1)</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;        {</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;            <span class="comment">// Invalidate tracked point as we are at level 0</span></div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;            new_points[idx].s2 = 0.0f;</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;        }</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;        <span class="comment">// Not valid coordinate. It sets min_eig to 0.0f</span></div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;        coeff[idx].s3 = 0.0f;</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;    }</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    <span class="comment">// Compute weight for the bilinear interpolation</span></div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    float2 ab = old_keypoint - iold_keypoint;</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;    <span class="comment">// Weight used for Bilinear-Interpolation on Scharr images</span></div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    <span class="comment">// w_scharr.s0 = (1.0f - ab.x) * (1.0f - ab.y)</span></div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    <span class="comment">// w_scharr.s1 = ab.x * (1.0f - ab.y)</span></div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    <span class="comment">// w_scharr.s2 = (1.0f - ab.x) * ab.y</span></div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    <span class="comment">// w_scharr.s3 = ab.x * ab.y</span></div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    float4 w_scharr;</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    w_scharr.s3  = ab.x * ab.y;</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    w_scharr.s0  = w_scharr.s3 + 1.0f - ab.x - ab.y;</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    w_scharr.s12 = ab - (float2)w_scharr.s3;</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;    <span class="comment">// Weight used for Bilinear-Interpolation on Old and New images</span></div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    <span class="comment">// w.s0 = round(w_scharr.s0 * D0)</span></div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    <span class="comment">// w.s1 = round(w_scharr.s1 * D0)</span></div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;    <span class="comment">// w.s2 = round(w_scharr.s2 * D0)</span></div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    <span class="comment">// w.s3 = w.s3 = D0 - w.s0 - w.s1 - w.s2</span></div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    float4 w;</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;    w    = <a class="code" href="namespacearm__compute.xhtml#a6452ac376d4adb94d93a93d678bb6757">round</a>(w_scharr * (float4)<a class="code" href="optical__flow__pyramid__lk_8cl.xhtml#ae0b2360d4b8e961bf2709b0663fd9f2a">D0</a>);</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;    w.s3 = <a class="code" href="optical__flow__pyramid__lk_8cl.xhtml#ae0b2360d4b8e961bf2709b0663fd9f2a">D0</a> - w.s0 - w.s1 - w.s2;</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;    <span class="comment">// G.s0 = A11, G.s1 = A12, G.s2 = A22, G.s3 = min_eig</span></div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;    int4 iG = (int4)0;</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;    <span class="comment">// Window offset</span></div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;    <span class="keywordtype">int</span> window_offset = idx * window_dimension_pow2;</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;    <span class="comment">// Compute Spatial Gradient Matrix G</span></div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;    <span class="keywordflow">for</span>(ushort ky = 0; ky &lt; window_dimension; ++ky)</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;    {</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;        <span class="keywordtype">int</span> offset_y = iold_keypoint.y + ky;</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;        <span class="keywordflow">for</span>(ushort kx = 0; kx &lt; window_dimension; ++kx)</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;        {</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;            <span class="keywordtype">int</span>    offset_x = iold_keypoint.x + kx;</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;            float4 px;</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;            <span class="comment">// Load values from old_image for computing the bilinear interpolation</span></div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;            px = convert_float4((uchar4)(vload2(0, <a class="code" href="helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>(&amp;old_image, offset_x, offset_y)),</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;                                         vload2(0, <a class="code" href="helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>(&amp;old_image, offset_x, offset_y + 1))));</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;            <span class="comment">// old_i.s0 = ival, old_i.s1 = ixval, old_i.s2 = iyval, old_i.s3 = dummy</span></div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;            float4 old_i;</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;            <span class="comment">// Compute bilinear interpolation (with D1 scale factor) for ival</span></div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;            old_i.s0 = dot(px, w) * <a class="code" href="optical__flow__pyramid__lk_8cl.xhtml#a52deba56234661c77d4b9573d5175ae2">D1</a>;</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;            <span class="comment">// Load values from old_scharr_gx for computing the bilinear interpolation</span></div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;            px = convert_float4((short4)(vload2(0, (__global <span class="keywordtype">short</span> *)<a class="code" href="helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>(&amp;old_scharr_gx, offset_x, offset_y)),</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;                                         vload2(0, (__global <span class="keywordtype">short</span> *)<a class="code" href="helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>(&amp;old_scharr_gx, offset_x, offset_y + 1))));</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;            <span class="comment">// Compute bilinear interpolation for ixval</span></div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;            old_i.s1 = dot(px, w_scharr);</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;            <span class="comment">// Load values from old_scharr_gy for computing the bilinear interpolation</span></div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;            px = convert_float4((short4)(vload2(0, (__global <span class="keywordtype">short</span> *)<a class="code" href="helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>(&amp;old_scharr_gy, offset_x, offset_y)),</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;                                         vload2(0, (__global <span class="keywordtype">short</span> *)<a class="code" href="helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>(&amp;old_scharr_gy, offset_x, offset_y + 1))));</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;            <span class="comment">// Compute bilinear interpolation for iyval</span></div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;            old_i.s2 = dot(px, w_scharr);</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;            <span class="comment">// Rounding (it could be omitted)</span></div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;            int4 iold = convert_int4(<a class="code" href="namespacearm__compute.xhtml#a6452ac376d4adb94d93a93d678bb6757">round</a>(old_i));</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;            <span class="comment">// Accumulate values in the Spatial Gradient Matrix</span></div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;            iG.s0 += (int)(iold.s1 * iold.s1);</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;            iG.s1 += (int)(iold.s1 * iold.s2);</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;            iG.s2 += (int)(iold.s2 * iold.s2);</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;            <span class="comment">// Store ival, ixval and iyval</span></div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;            iold_val[window_offset + kx] = convert_short4(iold);</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;        }</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;        window_offset += window_dimension;</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;    }</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;    <span class="comment">// Scale iA11, iA12 and iA22</span></div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;    float4 G = convert_float4(iG) * (float4)<a class="code" href="optical__flow__pyramid__lk_8cl.xhtml#a1852457538f524c42f96b66882bd9b35">FLT_SCALE</a>;</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;    <span class="comment">// Compute minimum eigen value</span></div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;    G.s3 = (float)(G.s2 + G.s0 - sqrt(pown(G.s0 - G.s2, 2) + 4.0f * G.s1 * G.s1)) * eig_const;</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;    <span class="comment">// Store A11. A11, A22 and min_eig</span></div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;    coeff[idx] = G;</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;}</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;</div><div class="line"><a name="l00355"></a><span class="lineno"><a class="line" href="optical__flow__pyramid__lk_8cl.xhtml#a97401877f0071dbe2443c697b29d80e0">  355</a></span>&#160;<span class="keywordtype">void</span> __kernel <a class="code" href="optical__flow__pyramid__lk_8cl.xhtml#a97401877f0071dbe2443c697b29d80e0">lktracker_stage1</a>(</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;    <a class="code" href="helpers_8h.xhtml#a22f42fcf2077d951271df83b55c1a71a">IMAGE_DECLARATION</a>(new_image),</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;    __global float4 *new_points,</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;    __global float4 *coeff,</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;    __global short4 *iold_val,</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span>        window_dimension,</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span>        window_dimension_pow2,</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span>        half_window,</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span>        num_iterations,</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">float</span>      epsilon,</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;    <span class="keyword">const</span> float3     border_limits,</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">float</span>      eig_const,</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span>        level0,</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span>        term_iteration,</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span>        term_epsilon)</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;{</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;    <span class="keywordtype">int</span>   idx       = get_global_id(0);</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;    <a class="code" href="struct_image.xhtml">Image</a> new_image = <a class="code" href="helpers_8h.xhtml#a4334a4a76f8e9628c0fb9e1acf616e2a">CONVERT_TO_IMAGE_STRUCT_NO_STEP</a>(new_image);</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;    <span class="comment">// G.s0 = A11, G.s1 = A12, G.s2 = A22, G.s3 = min_eig</span></div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;    float4 G = coeff[idx];</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;    <span class="comment">// Determinant</span></div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;    <span class="keywordtype">float</span> D = G.s0 * G.s2 - G.s1 * G.s1;</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;    <span class="comment">// Check if it is a good point to track</span></div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;    <span class="keywordflow">if</span>(G.s3 &lt; <a class="code" href="optical__flow__pyramid__lk_8cl.xhtml#a3955a0fbedb5b3eae9a38801fb01bac5">EIGENVALUE_THR</a> || D &lt; <a class="code" href="optical__flow__pyramid__lk_8cl.xhtml#a0f3927d942874a04e6464bdb946de046">DETERMINANT_THR</a>)</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;    {</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;        <span class="keywordflow">if</span>(level0 == 1)</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;        {</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;            <span class="comment">// Invalidate tracked point as we are at level 0</span></div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;            new_points[idx].s2 = 0;</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;        }</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;    }</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;    <span class="comment">// Compute inverse</span></div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;    <span class="comment">//D = native_recip(D);</span></div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;    D = 1.0 / D;</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;    <span class="comment">// Get new keypoint</span></div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;    float2 new_keypoint = new_points[idx].xy - (float)half_window;</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;    <span class="comment">// Get new point</span></div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;    float2 out_new_point = new_points[idx].xy;</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;    <span class="comment">// Keep delta obtained in the previous iteration</span></div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;    float2 prev_delta = (float2)0.0f;</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;    <span class="keywordtype">int</span> j = 0;</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;    <span class="keywordflow">while</span>(j &lt; num_iterations)</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;    {</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;        <span class="comment">// Get the floor value</span></div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;        float2 inew_keypoint = floor(new_keypoint);</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;        <span class="comment">// Check if using the window dimension we can go out of boundary in the following for loops. If so, invalidate the tracked point</span></div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;        <span class="keywordflow">if</span>(any(inew_keypoint &lt; border_limits.zz) || any(inew_keypoint &gt;= border_limits.xy))</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;        {</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;            <span class="keywordflow">if</span>(level0 == 1)</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;            {</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;                <span class="comment">// Invalidate tracked point as we are at level 0</span></div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;                new_points[idx].s2 = 0.0f;</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;            }</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;            <span class="keywordflow">else</span></div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;            {</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;                new_points[idx].xy = out_new_point;</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;            }</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;            <span class="keywordflow">return</span>;</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;        }</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;        <span class="comment">// Compute weight for the bilinear interpolation</span></div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;        float2 ab = new_keypoint - inew_keypoint;</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;        <span class="comment">// Weight used for Bilinear-Interpolation on Old and New images</span></div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;        <span class="comment">// w.s0 = round((1.0f - ab.x) * (1.0f - ab.y) * D0)</span></div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;        <span class="comment">// w.s1 = round(ab.x * (1.0f - ab.y) * D0)</span></div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;        <span class="comment">// w.s2 = round((1.0f - ab.x) * ab.y * D0)</span></div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;        <span class="comment">// w.s3 = D0 - w.s0 - w.s1 - w.s2</span></div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;        float4 w;</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;        w.s3  = ab.x * ab.y;</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;        w.s0  = w.s3 + 1.0f - ab.x - ab.y;</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;        w.s12 = ab - (float2)w.s3;</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;        w     = <a class="code" href="namespacearm__compute.xhtml#a6452ac376d4adb94d93a93d678bb6757">round</a>(w * (float4)<a class="code" href="optical__flow__pyramid__lk_8cl.xhtml#ae0b2360d4b8e961bf2709b0663fd9f2a">D0</a>);</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;        w.s3  = <a class="code" href="optical__flow__pyramid__lk_8cl.xhtml#ae0b2360d4b8e961bf2709b0663fd9f2a">D0</a> - w.s0 - w.s1 - w.s2;</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;        <span class="comment">// Mismatch vector</span></div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;        int2 ib = 0;</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;        <span class="comment">// Old val offset</span></div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;        <span class="keywordtype">int</span> old_val_offset = idx * window_dimension_pow2;</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;        <span class="keywordflow">for</span>(<span class="keywordtype">int</span> ky = 0; ky &lt; window_dimension; ++ky)</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;        {</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;            <span class="keywordflow">for</span>(<span class="keywordtype">int</span> kx = 0; kx &lt; window_dimension; ++kx)</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;            {</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;                <span class="comment">// ival, ixval and iyval have been computed in the previous stage</span></div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;                int4 old_ival = convert_int4(iold_val[old_val_offset]);</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;                <span class="comment">// Load values from old_image for computing the bilinear interpolation</span></div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;                float4 px = convert_float4((uchar4)(vload2(0, <a class="code" href="helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>(&amp;new_image, inew_keypoint.x + kx, inew_keypoint.y + ky)),</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;                                                    vload2(0, <a class="code" href="helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>(&amp;new_image, inew_keypoint.x + kx, inew_keypoint.y + ky + 1))));</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;                <span class="comment">// Compute bilinear interpolation on new image</span></div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;                <span class="keywordtype">int</span> jval = (int)<a class="code" href="namespacearm__compute.xhtml#a6452ac376d4adb94d93a93d678bb6757">round</a>(dot(px, w) * <a class="code" href="optical__flow__pyramid__lk_8cl.xhtml#a52deba56234661c77d4b9573d5175ae2">D1</a>);</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;                <span class="comment">// Compute luminance difference</span></div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;                <span class="keywordtype">int</span> diff = (int)(jval - old_ival.s0);</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;                <span class="comment">// Accumulate values in mismatch vector</span></div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;                ib += (diff * old_ival.s12);</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;                <span class="comment">// Update old val offset</span></div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;                old_val_offset++;</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;            }</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;        }</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;        float2 <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7b8004eef325a40dd43eb80755610fff">b</a> = convert_float2(ib) * (float2)<a class="code" href="optical__flow__pyramid__lk_8cl.xhtml#a1852457538f524c42f96b66882bd9b35">FLT_SCALE</a>;</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;        <span class="comment">// Optical Flow</span></div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;        float2 delta;</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;        delta.x = (float)((G.s1 * b.y - G.s2 * b.x) * D);</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;        delta.y = (float)((G.s1 * b.x - G.s0 * b.y) * D);</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;        <span class="comment">// Update new point coordinate</span></div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;        new_keypoint += delta;</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;        out_new_point = new_keypoint + (float2)half_window;</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;        <span class="keywordflow">if</span>(term_epsilon == 1)</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;        {</div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;            <span class="keywordtype">float</span> mag2 = dot(delta, delta);</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;            <span class="keywordflow">if</span>(mag2 &lt;= epsilon)</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;            {</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;                new_points[idx].xy = out_new_point;</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;                <span class="keywordflow">return</span>;</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;            }</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;        }</div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;</div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;        <span class="comment">// Check convergence analyzing the previous delta</span></div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;        <span class="keywordflow">if</span>(j &gt; 0 &amp;&amp; all(fabs(delta + prev_delta) &lt; (float2)0.01f))</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;        {</div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;            out_new_point -= delta * (float2)0.5f;</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;            new_points[idx].xy = out_new_point;</div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;</div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;            <span class="keywordflow">return</span>;</div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;        }</div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;</div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;        <span class="comment">// Update previous delta</span></div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;        prev_delta = delta;</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;</div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;        <span class="keywordflow">if</span>(term_iteration == 1)</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;        {</div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;            j++;</div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;        }</div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;    }</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;</div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;    new_points[idx].xy = out_new_point;</div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;}</div><div class="ttc" id="optical__flow__pyramid__lk_8cl_xhtml_ae0b2360d4b8e961bf2709b0663fd9f2a"><div class="ttname"><a href="optical__flow__pyramid__lk_8cl.xhtml#ae0b2360d4b8e961bf2709b0663fd9f2a">D0</a></div><div class="ttdeci">#define D0</div><div class="ttdef"><b>Definition:</b> <a href="optical__flow__pyramid__lk_8cl_source.xhtml#l00056">optical_flow_pyramid_lk.cl:56</a></div></div>
<div class="ttc" id="optical__flow__pyramid__lk_8cl_xhtml_a324194275a47768c0460d19b16b477db"><div class="ttname"><a href="optical__flow__pyramid__lk_8cl.xhtml#a324194275a47768c0460d19b16b477db">init_level_max</a></div><div class="ttdeci">__kernel void init_level_max(__global Keypoint *old_points, __global InternalKeypoint *old_points_internal, __global InternalKeypoint *new_points_internal, const float scale)</div><div class="ttdoc">Initializes the internal new points array when the level of pyramid is equal to max. </div><div class="ttdef"><b>Definition:</b> <a href="optical__flow__pyramid__lk_8cl_source.xhtml#l00091">optical_flow_pyramid_lk.cl:91</a></div></div>
<div class="ttc" id="struct_internal_keypoint_xhtml_aaf67d90c5e431e85ea2b7681537beab9"><div class="ttname"><a href="struct_internal_keypoint.xhtml#aaf67d90c5e431e85ea2b7681537beab9">InternalKeypoint::dummy</a></div><div class="ttdeci">float dummy</div><div class="ttdef"><b>Definition:</b> <a href="optical__flow__pyramid__lk_8cl_source.xhtml#l00044">optical_flow_pyramid_lk.cl:44</a></div></div>
<div class="ttc" id="optical__flow__pyramid__lk_8cl_xhtml_a0beafe52e6ef0247d036f06bd6da622a"><div class="ttname"><a href="optical__flow__pyramid__lk_8cl.xhtml#a0beafe52e6ef0247d036f06bd6da622a">finalize</a></div><div class="ttdeci">__kernel void finalize(__global InternalKeypoint *new_points_internal, __global Keypoint *new_points)</div><div class="ttdoc">Truncates the coordinates stored in new_points array. </div><div class="ttdef"><b>Definition:</b> <a href="optical__flow__pyramid__lk_8cl_source.xhtml#l00154">optical_flow_pyramid_lk.cl:154</a></div></div>
<div class="ttc" id="optical__flow__pyramid__lk_8cl_xhtml_a73bd536f33d9707d1165a0fce16db833"><div class="ttname"><a href="optical__flow__pyramid__lk_8cl.xhtml#a73bd536f33d9707d1165a0fce16db833">init_level</a></div><div class="ttdeci">__kernel void init_level(__global float4 *old_points_internal, __global float4 *new_points_internal, const float scale)</div><div class="ttdoc">Initializes the internal new points array when the level of pyramid is NOT equal to max...</div><div class="ttdef"><b>Definition:</b> <a href="optical__flow__pyramid__lk_8cl_source.xhtml#l00065">optical_flow_pyramid_lk.cl:65</a></div></div>
<div class="ttc" id="struct_internal_keypoint_xhtml_ad0da36b2558901e21e7a30f6c227a45e"><div class="ttname"><a href="struct_internal_keypoint.xhtml#ad0da36b2558901e21e7a30f6c227a45e">InternalKeypoint::x</a></div><div class="ttdeci">float x</div><div class="ttdoc">The x coordinate. </div><div class="ttdef"><b>Definition:</b> <a href="optical__flow__pyramid__lk_8cl_source.xhtml#l00041">optical_flow_pyramid_lk.cl:41</a></div></div>
<div class="ttc" id="helpers_8h_xhtml_a4334a4a76f8e9628c0fb9e1acf616e2a"><div class="ttname"><a href="helpers_8h.xhtml#a4334a4a76f8e9628c0fb9e1acf616e2a">CONVERT_TO_IMAGE_STRUCT_NO_STEP</a></div><div class="ttdeci">#define CONVERT_TO_IMAGE_STRUCT_NO_STEP(name)</div><div class="ttdef"><b>Definition:</b> <a href="helpers_8h_source.xhtml#l00105">helpers.h:105</a></div></div>
<div class="ttc" id="optical__flow__pyramid__lk_8cl_xhtml_a3955a0fbedb5b3eae9a38801fb01bac5"><div class="ttname"><a href="optical__flow__pyramid__lk_8cl.xhtml#a3955a0fbedb5b3eae9a38801fb01bac5">EIGENVALUE_THR</a></div><div class="ttdeci">#define EIGENVALUE_THR</div><div class="ttdoc">Thresholds for minimum eigenvalue. </div><div class="ttdef"><b>Definition:</b> <a href="optical__flow__pyramid__lk_8cl_source.xhtml#l00051">optical_flow_pyramid_lk.cl:51</a></div></div>
<div class="ttc" id="struct_internal_keypoint_xhtml_a08361efa212a9ab04a5965766ea942d5"><div class="ttname"><a href="struct_internal_keypoint.xhtml#a08361efa212a9ab04a5965766ea942d5">InternalKeypoint::tracking_status</a></div><div class="ttdeci">float tracking_status</div><div class="ttdoc">A zero indicates a lost point. </div><div class="ttdef"><b>Definition:</b> <a href="optical__flow__pyramid__lk_8cl_source.xhtml#l00043">optical_flow_pyramid_lk.cl:43</a></div></div>
<div class="ttc" id="struct_keypoint_xhtml"><div class="ttname"><a href="struct_keypoint.xhtml">Keypoint</a></div><div class="ttdef"><b>Definition:</b> <a href="types_8h_source.xhtml#l00035">types.h:35</a></div></div>
<div class="ttc" id="helpers_8h_xhtml_a22f42fcf2077d951271df83b55c1a71a"><div class="ttname"><a href="helpers_8h.xhtml#a22f42fcf2077d951271df83b55c1a71a">IMAGE_DECLARATION</a></div><div class="ttdeci">#define IMAGE_DECLARATION(name)</div><div class="ttdef"><b>Definition:</b> <a href="helpers_8h_source.xhtml#l00066">helpers.h:66</a></div></div>
<div class="ttc" id="optical__flow__pyramid__lk_8cl_xhtml_a0f3927d942874a04e6464bdb946de046"><div class="ttname"><a href="optical__flow__pyramid__lk_8cl.xhtml#a0f3927d942874a04e6464bdb946de046">DETERMINANT_THR</a></div><div class="ttdeci">#define DETERMINANT_THR</div><div class="ttdoc">Threshold for the determinant. </div><div class="ttdef"><b>Definition:</b> <a href="optical__flow__pyramid__lk_8cl_source.xhtml#l00048">optical_flow_pyramid_lk.cl:48</a></div></div>
<div class="ttc" id="optical__flow__pyramid__lk_8cl_xhtml_ad3a2575d8a9005ddf8ce79dda76918f8"><div class="ttname"><a href="optical__flow__pyramid__lk_8cl.xhtml#ad3a2575d8a9005ddf8ce79dda76918f8">InternalKeypoint</a></div><div class="ttdeci">struct InternalKeypoint InternalKeypoint</div></div>
<div class="ttc" id="helpers_8h_xhtml_a009469e4d9b8fce3b6d5e97d2077827d"><div class="ttname"><a href="helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a></div><div class="ttdeci">__global uchar * offset(const Image *img, int x, int y)</div><div class="ttdoc">Get the pointer position of a Image. </div><div class="ttdef"><b>Definition:</b> <a href="helpers_8h_source.xhtml#l00301">helpers.h:301</a></div></div>
<div class="ttc" id="optical__flow__pyramid__lk_8cl_xhtml_ae1961d0f636da631c35ffaf096187840"><div class="ttname"><a href="optical__flow__pyramid__lk_8cl.xhtml#ae1961d0f636da631c35ffaf096187840">lktracker_stage0</a></div><div class="ttdeci">void __kernel lktracker_stage0(__global uchar *old_image_ptr, uint old_image_stride_x, uint old_image_step_x, uint old_image_stride_y, uint old_image_step_y, uint old_image_offset_first_element_in_bytes, __global uchar *old_scharr_gx_ptr, uint old_scharr_gx_stride_x, uint old_scharr_gx_step_x, uint old_scharr_gx_stride_y, uint old_scharr_gx_step_y, uint old_scharr_gx_offset_first_element_in_bytes, __global uchar *old_scharr_gy_ptr, uint old_scharr_gy_stride_x, uint old_scharr_gy_step_x, uint old_scharr_gy_stride_y, uint old_scharr_gy_step_y, uint old_scharr_gy_offset_first_element_in_bytes, __global float4 *old_points, __global float4 *new_points, __global float4 *coeff, __global short4 *iold_val, const int window_dimension, const int window_dimension_pow2, const int half_window, const float3 border_limits, const float eig_const, const int level0)</div><div class="ttdoc">Computes A11, A12, A22, min_eig, ival, ixval and iyval at level 0th of the pyramid. </div><div class="ttdef"><b>Definition:</b> <a href="optical__flow__pyramid__lk_8cl_source.xhtml#l00204">optical_flow_pyramid_lk.cl:204</a></div></div>
<div class="ttc" id="optical__flow__pyramid__lk_8cl_xhtml_a4b777fd3d432419912e4dbc94fe9d3f5"><div class="ttname"><a href="optical__flow__pyramid__lk_8cl.xhtml#a4b777fd3d432419912e4dbc94fe9d3f5">init_level_max_initial_estimate</a></div><div class="ttdeci">__kernel void init_level_max_initial_estimate(__global Keypoint *old_points, __global Keypoint *new_points_estimates, __global InternalKeypoint *old_points_internal, __global InternalKeypoint *new_points_internal, const float scale)</div><div class="ttdoc">Initializes the new_points array when the level of pyramid is equal to max and if use_initial_estimat...</div><div class="ttdef"><b>Definition:</b> <a href="optical__flow__pyramid__lk_8cl_source.xhtml#l00120">optical_flow_pyramid_lk.cl:120</a></div></div>
<div class="ttc" id="helpers_8h_xhtml"><div class="ttname"><a href="helpers_8h.xhtml">helpers.h</a></div></div>
<div class="ttc" id="struct_keypoint_xhtml_a0a2f84ed7838f07779ae24c5a9086d33"><div class="ttname"><a href="struct_keypoint.xhtml#a0a2f84ed7838f07779ae24c5a9086d33">Keypoint::y</a></div><div class="ttdeci">int y</div><div class="ttdoc">The y coordinate. </div><div class="ttdef"><b>Definition:</b> <a href="types_8h_source.xhtml#l00038">types.h:38</a></div></div>
<div class="ttc" id="struct_internal_keypoint_xhtml"><div class="ttname"><a href="struct_internal_keypoint.xhtml">InternalKeypoint</a></div><div class="ttdef"><b>Definition:</b> <a href="optical__flow__pyramid__lk_8cl_source.xhtml#l00039">optical_flow_pyramid_lk.cl:39</a></div></div>
<div class="ttc" id="optical__flow__pyramid__lk_8cl_xhtml_a52deba56234661c77d4b9573d5175ae2"><div class="ttname"><a href="optical__flow__pyramid__lk_8cl.xhtml#a52deba56234661c77d4b9573d5175ae2">D1</a></div><div class="ttdeci">#define D1</div><div class="ttdef"><b>Definition:</b> <a href="optical__flow__pyramid__lk_8cl_source.xhtml#l00057">optical_flow_pyramid_lk.cl:57</a></div></div>
<div class="ttc" id="struct_image_xhtml"><div class="ttname"><a href="struct_image.xhtml">Image</a></div><div class="ttdoc">Structure to hold Image information. </div><div class="ttdef"><b>Definition:</b> <a href="helpers_8h_source.xhtml#l00140">helpers.h:140</a></div></div>
<div class="ttc" id="types_8h_xhtml"><div class="ttname"><a href="types_8h.xhtml">types.h</a></div></div>
<div class="ttc" id="optical__flow__pyramid__lk_8cl_xhtml_a1852457538f524c42f96b66882bd9b35"><div class="ttname"><a href="optical__flow__pyramid__lk_8cl.xhtml#a1852457538f524c42f96b66882bd9b35">FLT_SCALE</a></div><div class="ttdeci">#define FLT_SCALE</div><div class="ttdef"><b>Definition:</b> <a href="optical__flow__pyramid__lk_8cl_source.xhtml#l00055">optical_flow_pyramid_lk.cl:55</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_acec6d8ad52a28972fa74e071c1a63b6a"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#acec6d8ad52a28972fa74e071c1a63b6a">arm_compute::test::validation::scale</a></div><div class="ttdeci">scale</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_o_n_2_pixel_wise_multiplication_8cpp_source.xhtml#l00176">PixelWiseMultiplication.cpp:176</a></div></div>
<div class="ttc" id="optical__flow__pyramid__lk_8cl_xhtml_a97401877f0071dbe2443c697b29d80e0"><div class="ttname"><a href="optical__flow__pyramid__lk_8cl.xhtml#a97401877f0071dbe2443c697b29d80e0">lktracker_stage1</a></div><div class="ttdeci">void __kernel lktracker_stage1(__global uchar *new_image_ptr, uint new_image_stride_x, uint new_image_step_x, uint new_image_stride_y, uint new_image_step_y, uint new_image_offset_first_element_in_bytes, __global float4 *new_points, __global float4 *coeff, __global short4 *iold_val, const int window_dimension, const int window_dimension_pow2, const int half_window, const int num_iterations, const float epsilon, const float3 border_limits, const float eig_const, const int level0, const int term_iteration, const int term_epsilon)</div><div class="ttdoc">Computes the motion vector for a given keypoint. </div><div class="ttdef"><b>Definition:</b> <a href="optical__flow__pyramid__lk_8cl_source.xhtml#l00355">optical_flow_pyramid_lk.cl:355</a></div></div>
<div class="ttc" id="struct_keypoint_xhtml_a7edfed755585d6095522904dbe0ec4d8"><div class="ttname"><a href="struct_keypoint.xhtml#a7edfed755585d6095522904dbe0ec4d8">Keypoint::tracking_status</a></div><div class="ttdeci">int tracking_status</div><div class="ttdoc">A zero indicates a lost point. </div><div class="ttdef"><b>Definition:</b> <a href="types_8h_source.xhtml#l00042">types.h:42</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a6452ac376d4adb94d93a93d678bb6757"><div class="ttname"><a href="namespacearm__compute.xhtml#a6452ac376d4adb94d93a93d678bb6757">arm_compute::round</a></div><div class="ttdeci">int round(float x, RoundingPolicy rounding_policy)</div><div class="ttdoc">Return a rounded value of x. </div></div>
<div class="ttc" id="struct_keypoint_xhtml_a6150e0515f7202e2fb518f7206ed97dc"><div class="ttname"><a href="struct_keypoint.xhtml#a6150e0515f7202e2fb518f7206ed97dc">Keypoint::x</a></div><div class="ttdeci">int x</div><div class="ttdoc">The x coordinate. </div><div class="ttdef"><b>Definition:</b> <a href="types_8h_source.xhtml#l00037">types.h:37</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a7b8004eef325a40dd43eb80755610fff"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a7b8004eef325a40dd43eb80755610fff">arm_compute::test::validation::b</a></div><div class="ttdeci">Tensor b</div><div class="ttdef"><b>Definition:</b> <a href="validation_2_n_e_o_n_2_g_e_m_m_8cpp_source.xhtml#l00116">GEMM.cpp:116</a></div></div>
<div class="ttc" id="struct_internal_keypoint_xhtml_aa4f0d3eebc3c443f9be81bf48561a217"><div class="ttname"><a href="struct_internal_keypoint.xhtml#aa4f0d3eebc3c443f9be81bf48561a217">InternalKeypoint::y</a></div><div class="ttdeci">float y</div><div class="ttdoc">The y coordinate. </div><div class="ttdef"><b>Definition:</b> <a href="optical__flow__pyramid__lk_8cl_source.xhtml#l00042">optical_flow_pyramid_lk.cl:42</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_aebb8dcc11953d78e620bbef0b9e2183.xhtml">core</a></li><li class="navelem"><a class="el" href="dir_8c278f79c760e5c5fbd911f9870614c1.xhtml">CL</a></li><li class="navelem"><a class="el" href="dir_25885286e9dad4fa105b7b25a8031bbf.xhtml">cl_kernels</a></li><li class="navelem"><a class="el" href="optical__flow__pyramid__lk_8cl.xhtml">optical_flow_pyramid_lk.cl</a></li>
    <li class="footer">Generated on Thu Dec 14 2017 23:48:31 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
  </ul>
</div>
</body>
</html>
