<!-- HTML header for doxygen 1.8.9.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: examples/graph_mobilenet.cpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Compute Library
   &#160;<span id="projectnumber">17.12</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>Globals</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('graph__mobilenet_8cpp.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">graph_mobilenet.cpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="_graph_8h_source.xhtml">arm_compute/graph/Graph.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_nodes_8h_source.xhtml">arm_compute/graph/Nodes.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_toolchain_support_8h_source.xhtml">support/ToolchainSupport.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_graph_utils_8h_source.xhtml">utils/GraphUtils.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="utils_2_utils_8h_source.xhtml">utils/Utils.h</a>&quot;</code><br />
<code>#include &lt;cstdlib&gt;</code><br />
</div>
<p><a href="graph__mobilenet_8cpp_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a02784d6e3531ccb466f918d0ce75e409"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="graph__mobilenet_8cpp.xhtml#a02784d6e3531ccb466f918d0ce75e409">main_graph_mobilenet</a> (int argc, const char **argv)</td></tr>
<tr class="memdesc:a02784d6e3531ccb466f918d0ce75e409"><td class="mdescLeft">&#160;</td><td class="mdescRight">Example demonstrating how to implement MobileNet's network using the Compute Library's graph API.  <a href="#a02784d6e3531ccb466f918d0ce75e409">More...</a><br /></td></tr>
<tr class="separator:a02784d6e3531ccb466f918d0ce75e409"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a217dbf8b442f20279ea00b898af96f52"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="graph__mobilenet_8cpp.xhtml#a217dbf8b442f20279ea00b898af96f52">main</a> (int argc, const char **argv)</td></tr>
<tr class="memdesc:a217dbf8b442f20279ea00b898af96f52"><td class="mdescLeft">&#160;</td><td class="mdescRight">Main program for MobileNetV1.  <a href="#a217dbf8b442f20279ea00b898af96f52">More...</a><br /></td></tr>
<tr class="separator:a217dbf8b442f20279ea00b898af96f52"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="a217dbf8b442f20279ea00b898af96f52"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int main </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>argc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char **&#160;</td>
          <td class="paramname"><em>argv</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Main program for MobileNetV1. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">argc</td><td>Number of arguments </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">argv</td><td>Arguments ( [optional] Target (0 = NEON, 1 = OpenCL), [optional] Path to the weights folder, [optional] image, [optional] labels ) </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="graph__mobilenet_8cpp_source.xhtml#l00172">172</a> of file <a class="el" href="graph__mobilenet_8cpp_source.xhtml">graph_mobilenet.cpp</a>.</p>

<p>References <a class="el" href="graph__mobilenet_8cpp_source.xhtml#l00078">main_graph_mobilenet()</a>, and <a class="el" href="utils_2_utils_8cpp_source.xhtml#l00069">arm_compute::utils::run_example()</a>.</p>
<div class="fragment"><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;{</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1utils.xhtml#a4c9395db2c8b8d0c336656a7b58fca3e">arm_compute::utils::run_example</a>(argc, argv, <a class="code" href="graph__mobilenet_8cpp.xhtml#a02784d6e3531ccb466f918d0ce75e409">main_graph_mobilenet</a>);</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;}</div><div class="ttc" id="namespacearm__compute_1_1utils_xhtml_a4c9395db2c8b8d0c336656a7b58fca3e"><div class="ttname"><a href="namespacearm__compute_1_1utils.xhtml#a4c9395db2c8b8d0c336656a7b58fca3e">arm_compute::utils::run_example</a></div><div class="ttdeci">int run_example(int argc, const char **argv, example &amp;func)</div><div class="ttdoc">Run an example and handle the potential exceptions it throws. </div><div class="ttdef"><b>Definition:</b> <a href="utils_2_utils_8cpp_source.xhtml#l00069">Utils.cpp:69</a></div></div>
<div class="ttc" id="graph__mobilenet_8cpp_xhtml_a02784d6e3531ccb466f918d0ce75e409"><div class="ttname"><a href="graph__mobilenet_8cpp.xhtml#a02784d6e3531ccb466f918d0ce75e409">main_graph_mobilenet</a></div><div class="ttdeci">void main_graph_mobilenet(int argc, const char **argv)</div><div class="ttdoc">Example demonstrating how to implement MobileNet&amp;#39;s network using the Compute Library&amp;#39;s graph API...</div><div class="ttdef"><b>Definition:</b> <a href="graph__mobilenet_8cpp_source.xhtml#l00078">graph_mobilenet.cpp:78</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a02784d6e3531ccb466f918d0ce75e409"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void main_graph_mobilenet </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>argc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char **&#160;</td>
          <td class="paramname"><em>argv</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Example demonstrating how to implement MobileNet's network using the Compute Library's graph API. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">argc</td><td>Number of arguments </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">argv</td><td>Arguments ( [optional] Target (0 = NEON, 1 = OpenCL), [optional] Path to the weights folder, [optional] image, [optional] labels ) </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="graph__mobilenet_8cpp_source.xhtml#l00078">78</a> of file <a class="el" href="graph__mobilenet_8cpp_source.xhtml">graph_mobilenet.cpp</a>.</p>

<p>References <a class="el" href="namespacearm__compute_1_1graph.xhtml#a9a2c9c31d675b34f6ec35cc1ca89e047a041485a3394541feee82a34d40249d70">arm_compute::graph::ActivationLayer</a>, <a class="el" href="namespacearm__compute.xhtml#a9172da722f0a434e5cc07c0a3c115d93afcefd647d6a866603c627b11347c707a">arm_compute::AVG</a>, <a class="el" href="namespacearm__compute_1_1graph.xhtml#a9a2c9c31d675b34f6ec35cc1ca89e047ad0146d2051fad860923cf31f7e00a732">arm_compute::graph::BatchNormalizationLayer</a>, <a class="el" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaacc516ab03b98f1c908ddf6ed4a7c45e9">ActivationLayerInfo::BOUNDED_RELU</a>, <a class="el" href="namespacearm__compute_1_1graph.xhtml#a9a2c9c31d675b34f6ec35cc1ca89e047aa252659b59a03bc61e5ec827ab4448b7">arm_compute::graph::ConvolutionLayer</a>, <a class="el" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">arm_compute::F32</a>, <a class="el" href="namespacearm__compute.xhtml#a1fece1bd804e64f39f602d1c3969849aa56c1e354d36beb85b0d881c5b2e24cbe">arm_compute::FLOOR</a>, <a class="el" href="_graph_utils_8h_source.xhtml#l00212">arm_compute::graph_utils::get_input_accessor()</a>, <a class="el" href="_graph_utils_8h_source.xhtml#l00254">arm_compute::graph_utils::get_output_accessor()</a>, <a class="el" href="_graph_utils_8h_source.xhtml#l00189">arm_compute::graph_utils::get_weights_accessor()</a>, <a class="el" href="namespacearm__compute_1_1graph.xhtml#a9a2c9c31d675b34f6ec35cc1ca89e047aea068ae5aae640d018c4300bc7619575">arm_compute::graph::PoolingLayer</a>, <a class="el" href="namespacearm__compute_1_1graph.xhtml#a9a2c9c31d675b34f6ec35cc1ca89e047a1ee0d44744be1e17e38ad5a4e9dcf5dd">arm_compute::graph::ReshapeLayer</a>, <a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml#a13a43e6d814de94978c515cb084873b1">Graph::run()</a>, <a class="el" href="_graph_utils_8h_source.xhtml#l00230">arm_compute::graph_utils::set_target_hint()</a>, and <a class="el" href="namespacearm__compute_1_1graph.xhtml#a9a2c9c31d675b34f6ec35cc1ca89e047a4a9567bc4a6c28a527c973010eaf9a25">arm_compute::graph::SoftmaxLayer</a>.</p>

<p>Referenced by <a class="el" href="graph__mobilenet_8cpp_source.xhtml#l00172">main()</a>.</p>
<div class="fragment"><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;{</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    std::string data_path; <span class="comment">/* Path to the trainable data */</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    std::string image;     <span class="comment">/* Image data */</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    std::string label;     <span class="comment">/* Label data */</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    constexpr <span class="keywordtype">float</span> mean_r = 122.68f; <span class="comment">/* Mean value to subtract from red channel */</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    constexpr <span class="keywordtype">float</span> mean_g = 116.67f; <span class="comment">/* Mean value to subtract from green channel */</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    constexpr <span class="keywordtype">float</span> mean_b = 104.01f; <span class="comment">/* Mean value to subtract from blue channel */</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <span class="comment">// Set target. 0 (NEON), 1 (OpenCL). By default it is NEON</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#a8d5e69e9a697c2007e241eb413c9833b">TargetHint</a> target_hint = <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a9216738b309b6b230b7ba8bca5ba7477">set_target_hint</a>(argc &gt; 1 ? std::strtol(argv[1], <span class="keyword">nullptr</span>, 10) : 0);</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <span class="comment">// Parse arguments</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <span class="keywordflow">if</span>(argc &lt; 2)</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    {</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        <span class="comment">// Print help</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        std::cout &lt;&lt; <span class="stringliteral">&quot;Usage: &quot;</span> &lt;&lt; argv[0] &lt;&lt; <span class="stringliteral">&quot; [target] [path_to_data] [image] [labels]\n\n&quot;</span>;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        std::cout &lt;&lt; <span class="stringliteral">&quot;No data folder provided: using random values\n\n&quot;</span>;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    }</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span>(argc == 2)</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    {</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        std::cout &lt;&lt; <span class="stringliteral">&quot;Usage: &quot;</span> &lt;&lt; argv[0] &lt;&lt; <span class="stringliteral">&quot; &quot;</span> &lt;&lt; argv[1] &lt;&lt; <span class="stringliteral">&quot; [path_to_data] [image] [labels]\n\n&quot;</span>;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        std::cout &lt;&lt; <span class="stringliteral">&quot;No data folder provided: using random values\n\n&quot;</span>;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    }</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span>(argc == 3)</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    {</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        data_path = argv[2];</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        std::cout &lt;&lt; <span class="stringliteral">&quot;Usage: &quot;</span> &lt;&lt; argv[0] &lt;&lt; <span class="stringliteral">&quot; &quot;</span> &lt;&lt; argv[1] &lt;&lt; <span class="stringliteral">&quot; &quot;</span> &lt;&lt; argv[2] &lt;&lt; <span class="stringliteral">&quot; [image] [labels]\n\n&quot;</span>;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        std::cout &lt;&lt; <span class="stringliteral">&quot;No image provided: using random values\n\n&quot;</span>;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    }</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span>(argc == 4)</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    {</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        data_path = argv[2];</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        image     = argv[3];</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        std::cout &lt;&lt; <span class="stringliteral">&quot;Usage: &quot;</span> &lt;&lt; argv[0] &lt;&lt; <span class="stringliteral">&quot; &quot;</span> &lt;&lt; argv[1] &lt;&lt; <span class="stringliteral">&quot; &quot;</span> &lt;&lt; argv[2] &lt;&lt; <span class="stringliteral">&quot; &quot;</span> &lt;&lt; argv[3] &lt;&lt; <span class="stringliteral">&quot; [labels]\n\n&quot;</span>;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        std::cout &lt;&lt; <span class="stringliteral">&quot;No text file with labels provided: skipping output accessor\n\n&quot;</span>;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    }</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    {</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        data_path = argv[2];</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        image     = argv[3];</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        label     = argv[4];</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    }</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <a class="code" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> graph;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    graph &lt;&lt; target_hint</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;          &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1_tensor.xhtml">Tensor</a>(<a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(224U, 224U, 3U, 1U), 1, DataType::F32),</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;                    <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#aedce0421da328fb2aaae190aede068e1">get_input_accessor</a>(image, mean_r, mean_g, mean_b))</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;          &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1_convolution_layer.xhtml">ConvolutionLayer</a>(</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;              3U, 3U, 32U,</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;              <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a73a37a4970294106ed22e8f916ef3810">get_weights_accessor</a>(data_path, <span class="stringliteral">&quot;/cnn_data/mobilenet_v1_model/Conv2d_0_weights.npy&quot;</span>),</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;              std::unique_ptr&lt;arm_compute::graph::ITensorAccessor&gt;(<span class="keyword">nullptr</span>),</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;              <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(2, 2, 0, 1, 0, 1, DimensionRoundingType::FLOOR))</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;          &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1_batch_normalization_layer.xhtml">BatchNormalizationLayer</a>(</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;              <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a73a37a4970294106ed22e8f916ef3810">get_weights_accessor</a>(data_path, <span class="stringliteral">&quot;/cnn_data/mobilenet_v1_model/Conv2d_0_BatchNorm_moving_mean.npy&quot;</span>),</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;              <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a73a37a4970294106ed22e8f916ef3810">get_weights_accessor</a>(data_path, <span class="stringliteral">&quot;/cnn_data/mobilenet_v1_model/Conv2d_0_BatchNorm_moving_variance.npy&quot;</span>),</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;              <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a73a37a4970294106ed22e8f916ef3810">get_weights_accessor</a>(data_path, <span class="stringliteral">&quot;/cnn_data/mobilenet_v1_model/Conv2d_0_BatchNorm_beta.npy&quot;</span>),</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;              <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a73a37a4970294106ed22e8f916ef3810">get_weights_accessor</a>(data_path, <span class="stringliteral">&quot;/cnn_data/mobilenet_v1_model/Conv2d_0_BatchNorm_gamma.npy&quot;</span>),</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;              0.001f)</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;          &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1_activation_layer.xhtml">ActivationLayer</a>(<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>(ActivationLayerInfo::ActivationFunction::BOUNDED_RELU, 6.f))</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;          &lt;&lt; get_dwsc_node(data_path, <span class="stringliteral">&quot;Conv2d_1&quot;</span>, 64, <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(1, 1, 1, 1), <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(1, 1, 0, 0))</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;          &lt;&lt; get_dwsc_node(data_path, <span class="stringliteral">&quot;Conv2d_2&quot;</span>, 128, <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(2, 2, 0, 1, 0, 1, DimensionRoundingType::FLOOR), <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(1, 1, 0, 0))</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;          &lt;&lt; get_dwsc_node(data_path, <span class="stringliteral">&quot;Conv2d_3&quot;</span>, 128, <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(1, 1, 1, 1, 1, 1, DimensionRoundingType::FLOOR), <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(1, 1, 0, 0))</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;          &lt;&lt; get_dwsc_node(data_path, <span class="stringliteral">&quot;Conv2d_4&quot;</span>, 256, <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(2, 2, 0, 1, 0, 1, DimensionRoundingType::FLOOR), <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(1, 1, 0, 0))</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;          &lt;&lt; get_dwsc_node(data_path, <span class="stringliteral">&quot;Conv2d_5&quot;</span>, 256, <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(1, 1, 1, 1, 1, 1, DimensionRoundingType::FLOOR), <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(1, 1, 0, 0))</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;          &lt;&lt; get_dwsc_node(data_path, <span class="stringliteral">&quot;Conv2d_6&quot;</span>, 512, <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(2, 2, 0, 1, 0, 1, DimensionRoundingType::FLOOR), <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(1, 1, 0, 0))</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;          &lt;&lt; get_dwsc_node(data_path, <span class="stringliteral">&quot;Conv2d_7&quot;</span>, 512, <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(1, 1, 1, 1, 1, 1, DimensionRoundingType::FLOOR), <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(1, 1, 0, 0))</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;          &lt;&lt; get_dwsc_node(data_path, <span class="stringliteral">&quot;Conv2d_8&quot;</span>, 512, <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(1, 1, 1, 1, 1, 1, DimensionRoundingType::FLOOR), <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(1, 1, 0, 0))</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;          &lt;&lt; get_dwsc_node(data_path, <span class="stringliteral">&quot;Conv2d_9&quot;</span>, 512, <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(1, 1, 1, 1, 1, 1, DimensionRoundingType::FLOOR), <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(1, 1, 0, 0))</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;          &lt;&lt; get_dwsc_node(data_path, <span class="stringliteral">&quot;Conv2d_10&quot;</span>, 512, <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(1, 1, 1, 1, 1, 1, DimensionRoundingType::FLOOR), <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(1, 1, 0, 0))</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;          &lt;&lt; get_dwsc_node(data_path, <span class="stringliteral">&quot;Conv2d_11&quot;</span>, 512, <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(1, 1, 1, 1, 1, 1, DimensionRoundingType::FLOOR), <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(1, 1, 0, 0))</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;          &lt;&lt; get_dwsc_node(data_path, <span class="stringliteral">&quot;Conv2d_12&quot;</span>, 1024, <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(2, 2, 0, 1, 0, 1, DimensionRoundingType::FLOOR), <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(1, 1, 0, 0))</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;          &lt;&lt; get_dwsc_node(data_path, <span class="stringliteral">&quot;Conv2d_13&quot;</span>, 1024, <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(1, 1, 1, 1, 1, 1, DimensionRoundingType::FLOOR), <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(1, 1, 0, 0))</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;          &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1_pooling_layer.xhtml">PoolingLayer</a>(<a class="code" href="classarm__compute_1_1_pooling_layer_info.xhtml">PoolingLayerInfo</a>(PoolingType::AVG))</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;          &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1_convolution_layer.xhtml">ConvolutionLayer</a>(</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;              1U, 1U, 1001U,</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;              <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a73a37a4970294106ed22e8f916ef3810">get_weights_accessor</a>(data_path, <span class="stringliteral">&quot;/cnn_data/mobilenet_v1_model/Logits_Conv2d_1c_1x1_weights.npy&quot;</span>),</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;              <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a73a37a4970294106ed22e8f916ef3810">get_weights_accessor</a>(data_path, <span class="stringliteral">&quot;/cnn_data/mobilenet_v1_model/Logits_Conv2d_1c_1x1_biases.npy&quot;</span>),</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;              <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(1, 1, 0, 0))</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;          &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1_reshape_layer.xhtml">ReshapeLayer</a>(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(1001U))</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;          &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1_softmax_layer.xhtml">SoftmaxLayer</a>()</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;          &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1_tensor.xhtml">Tensor</a>(<a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#aaf0c8eff756108c8bb23aecf51d44f79">get_output_accessor</a>(label, 5));</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    graph.<a class="code" href="classarm__compute_1_1graph_1_1_graph.xhtml#a13a43e6d814de94978c515cb084873b1">run</a>();</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;}</div><div class="ttc" id="classarm__compute_1_1graph_1_1_reshape_layer_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_reshape_layer.xhtml">arm_compute::graph::ReshapeLayer</a></div><div class="ttdoc">Reshape layer node. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2nodes_2_reshape_layer_8h_source.xhtml#l00037">ReshapeLayer.h:37</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_shape_xhtml"><div class="ttname"><a href="classarm__compute_1_1_tensor_shape.xhtml">arm_compute::TensorShape</a></div><div class="ttdoc">Shape of a tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_shape_8h_source.xhtml#l00038">TensorShape.h:38</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_graph_xhtml_a13a43e6d814de94978c515cb084873b1"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph.xhtml#a13a43e6d814de94978c515cb084873b1">arm_compute::graph::Graph::run</a></div><div class="ttdeci">void run()</div><div class="ttdoc">Executes the graph. </div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_batch_normalization_layer_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_batch_normalization_layer.xhtml">arm_compute::graph::BatchNormalizationLayer</a></div><div class="ttdoc">BatchNormalization layer node. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2nodes_2_batch_normalization_layer_8h_source.xhtml#l00038">BatchNormalizationLayer.h:38</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph__utils_xhtml_aaf0c8eff756108c8bb23aecf51d44f79"><div class="ttname"><a href="namespacearm__compute_1_1graph__utils.xhtml#aaf0c8eff756108c8bb23aecf51d44f79">arm_compute::graph_utils::get_output_accessor</a></div><div class="ttdeci">std::unique_ptr&lt; graph::ITensorAccessor &gt; get_output_accessor(const std::string &amp;labels_path, size_t top_n=5, std::ostream &amp;output_stream=std::cout)</div><div class="ttdoc">Generates appropriate output accessor according to the specified labels_path. </div><div class="ttdef"><b>Definition:</b> <a href="_graph_utils_8h_source.xhtml#l00254">GraphUtils.h:254</a></div></div>
<div class="ttc" id="classarm__compute_1_1_activation_layer_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml">arm_compute::ActivationLayerInfo</a></div><div class="ttdoc">Activation Layer Information class. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00650">Types.h:650</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph__utils_xhtml_aedce0421da328fb2aaae190aede068e1"><div class="ttname"><a href="namespacearm__compute_1_1graph__utils.xhtml#aedce0421da328fb2aaae190aede068e1">arm_compute::graph_utils::get_input_accessor</a></div><div class="ttdeci">std::unique_ptr&lt; graph::ITensorAccessor &gt; get_input_accessor(const std::string &amp;ppm_path, float mean_r, float mean_g, float mean_b)</div><div class="ttdoc">Generates appropriate input accessor according to the specified ppm_path. </div><div class="ttdef"><b>Definition:</b> <a href="_graph_utils_8h_source.xhtml#l00212">GraphUtils.h:212</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph__utils_xhtml_a9216738b309b6b230b7ba8bca5ba7477"><div class="ttname"><a href="namespacearm__compute_1_1graph__utils.xhtml#a9216738b309b6b230b7ba8bca5ba7477">arm_compute::graph_utils::set_target_hint</a></div><div class="ttdeci">graph::TargetHint set_target_hint(int target)</div><div class="ttdoc">Utility function to return the TargetHint. </div><div class="ttdef"><b>Definition:</b> <a href="_graph_utils_8h_source.xhtml#l00230">GraphUtils.h:230</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph__utils_xhtml_a73a37a4970294106ed22e8f916ef3810"><div class="ttname"><a href="namespacearm__compute_1_1graph__utils.xhtml#a73a37a4970294106ed22e8f916ef3810">arm_compute::graph_utils::get_weights_accessor</a></div><div class="ttdeci">std::unique_ptr&lt; graph::ITensorAccessor &gt; get_weights_accessor(const std::string &amp;path, const std::string &amp;data_file)</div><div class="ttdoc">Generates appropriate weights accessor according to the specified path. </div><div class="ttdef"><b>Definition:</b> <a href="_graph_utils_8h_source.xhtml#l00189">GraphUtils.h:189</a></div></div>
<div class="ttc" id="classarm__compute_1_1_pad_stride_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_pad_stride_info.xhtml">arm_compute::PadStrideInfo</a></div><div class="ttdoc">Padding and stride information class. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00460">Types.h:460</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_softmax_layer_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_softmax_layer.xhtml">arm_compute::graph::SoftmaxLayer</a></div><div class="ttdoc">Softmax layer node. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2nodes_2_softmax_layer_8h_source.xhtml#l00036">SoftmaxLayer.h:36</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_graph_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph.xhtml">arm_compute::graph::Graph</a></div><div class="ttdoc">Graph class. </div><div class="ttdef"><b>Definition:</b> <a href="_graph_8h_source.xhtml#l00043">Graph.h:43</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_pooling_layer_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_pooling_layer.xhtml">arm_compute::graph::PoolingLayer</a></div><div class="ttdoc">Pooling layer node. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2nodes_2_pooling_layer_8h_source.xhtml#l00037">PoolingLayer.h:37</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml_a8d5e69e9a697c2007e241eb413c9833b"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#a8d5e69e9a697c2007e241eb413c9833b">arm_compute::graph::TargetHint</a></div><div class="ttdeci">TargetHint</div><div class="ttdoc">&lt; Execution hint to the graph executor </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2_types_8h_source.xhtml#l00076">Types.h:76</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml">arm_compute::TensorInfo</a></div><div class="ttdoc">Store the tensor&amp;#39;s metadata. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00044">TensorInfo.h:44</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_activation_layer_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_activation_layer.xhtml">arm_compute::graph::ActivationLayer</a></div><div class="ttdoc">Activation Layer node. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2nodes_2_activation_layer_8h_source.xhtml#l00037">ActivationLayer.h:37</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_convolution_layer_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_convolution_layer.xhtml">arm_compute::graph::ConvolutionLayer</a></div><div class="ttdoc">Convolution layer node. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2nodes_2_convolution_layer_8h_source.xhtml#l00042">ConvolutionLayer.h:42</a></div></div>
<div class="ttc" id="classarm__compute_1_1_pooling_layer_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_pooling_layer_info.xhtml">arm_compute::PoolingLayerInfo</a></div><div class="ttdoc">Pooling Layer Information class. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00553">Types.h:553</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_tensor_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_tensor.xhtml">arm_compute::graph::Tensor</a></div><div class="ttdoc">Tensor class. </div><div class="ttdef"><b>Definition:</b> <a href="graph_2_tensor_8h_source.xhtml#l00039">Tensor.h:39</a></div></div>
</div><!-- fragment -->
</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_d28a4824dc47e487b107a5db32ef43c4.xhtml">examples</a></li><li class="navelem"><a class="el" href="graph__mobilenet_8cpp.xhtml">graph_mobilenet.cpp</a></li>
    <li class="footer">Generated on Thu Dec 14 2017 23:48:33 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
  </ul>
</div>
</body>
</html>
