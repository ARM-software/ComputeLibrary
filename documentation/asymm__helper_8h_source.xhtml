<!-- HTML header for doxygen 1.8.9.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/core/CL/cl_kernels/asymm_helper.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Compute Library
   &#160;<span id="projectnumber">17.12</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>Globals</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('asymm__helper_8h_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">asymm_helper.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="asymm__helper_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2017 ARM Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifndef ARM_COMPUTE_ASYMM_HELPER_H</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#define ARM_COMPUTE_ASYMM_HELPER_H</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="comment">// Algoriths for these functions were taken from</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="comment">// https://github.com/google/gemmlowp/blob/master/fixedpoint/fixedpoint.h</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="comment">// and adapted to operate on integer vectors.</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno"><a class="line" href="asymm__helper_8h.xhtml#abd8e1597ea493f693fc3d7976867da7f">   38</a></span>&#160;<span class="keyword">inline</span> int16 <a class="code" href="asymm__helper_8h.xhtml#abd8e1597ea493f693fc3d7976867da7f">asymm_mask_if_zero</a>(int16 <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aac40b7097f2bda9274ae07fa33d15a79">a</a>)</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;{</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    <span class="keyword">const</span> int16 all_zeros = 0;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    <span class="keyword">const</span> int16 all_ones  = ~0;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <span class="keywordflow">return</span> select(all_zeros, all_ones, a == 0);</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;}</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div><div class="line"><a name="l00052"></a><span class="lineno"><a class="line" href="asymm__helper_8h.xhtml#afa141a5531e3404ae64f5050319e8951">   52</a></span>&#160;<span class="keyword">inline</span> int16 <a class="code" href="asymm__helper_8h.xhtml#afa141a5531e3404ae64f5050319e8951">asymm_mask_if_non_zero</a>(int16 <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aac40b7097f2bda9274ae07fa33d15a79">a</a>)</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;{</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <span class="keyword">const</span> int16 all_zeros = 0;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <span class="keyword">const</span> int16 all_ones  = ~0;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <span class="keywordflow">return</span> select(all_zeros, all_ones, a != 0);</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;}</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div><div class="line"><a name="l00069"></a><span class="lineno"><a class="line" href="asymm__helper_8h.xhtml#a9a8d8e297892cae9a07b0ee57d8df8c6">   69</a></span>&#160;<span class="keyword">inline</span> int16 <a class="code" href="asymm__helper_8h.xhtml#a9a8d8e297892cae9a07b0ee57d8df8c6">asymm_select_using_mask</a>(int16 if_mask, int16 then_val, int16 else_val)</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;{</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <span class="keywordflow">return</span> (if_mask &amp; then_val) ^ (~if_mask &amp; else_val);</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;}</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00082"></a><span class="lineno"><a class="line" href="asymm__helper_8h.xhtml#a766e0a81889256cfa161f7c08951c0b8">   82</a></span>&#160;<span class="keyword">inline</span> int16 <a class="code" href="asymm__helper_8h.xhtml#a766e0a81889256cfa161f7c08951c0b8">asymm_rounding_divide_by_pow2</a>(int16 x, <span class="keywordtype">int</span> exponent)</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;{</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    int16       mask      = (1 &lt;&lt; exponent) - 1;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <span class="keyword">const</span> int16 zero      = 0;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <span class="keyword">const</span> int16 one       = 1;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    int16       <a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a6cae310822a46019ba25a00ddb0f7e62">threshold</a> = (mask &gt;&gt; 1) + select(zero, one, x &lt; 0);</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <span class="keywordflow">return</span> (x &gt;&gt; exponent) + select(zero, one, (x &amp; mask) &gt; threshold);</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;}</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div><div class="line"><a name="l00100"></a><span class="lineno"><a class="line" href="asymm__helper_8h.xhtml#a4115087230ae51534cdc11b9013b28ad">  100</a></span>&#160;<span class="keyword">inline</span> int16 <a class="code" href="asymm__helper_8h.xhtml#a4115087230ae51534cdc11b9013b28ad">asymm_saturating_rounding_mult_by_pow2</a>(int16 x, <span class="keywordtype">int</span> exponent)</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;{</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <span class="keywordflow">if</span>(exponent &lt; 0)</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    {</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="asymm__helper_8h.xhtml#a766e0a81889256cfa161f7c08951c0b8">asymm_rounding_divide_by_pow2</a>(x, -exponent);</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    }</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <span class="keyword">const</span> int16 <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aabcf39e3917f842dbc5fbb0d802f24d5">min</a>           = INT_MIN;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <span class="keyword">const</span> int16 <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#ad91bb73431b4de1f4946ed949d444849">max</a>           = INT_MAX;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <span class="keywordtype">int</span>         <a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a6cae310822a46019ba25a00ddb0f7e62">threshold</a>     = ((1 &lt;&lt; (31 - exponent)) - 1);</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    int16       positive_mask = <a class="code" href="asymm__helper_8h.xhtml#afa141a5531e3404ae64f5050319e8951">asymm_mask_if_non_zero</a>(x &gt; threshold);</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    int16       negative_mask = <a class="code" href="asymm__helper_8h.xhtml#afa141a5531e3404ae64f5050319e8951">asymm_mask_if_non_zero</a>(x &lt; -threshold);</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    int16       result        = x &lt;&lt; exponent;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    result                    = <a class="code" href="asymm__helper_8h.xhtml#a9a8d8e297892cae9a07b0ee57d8df8c6">asymm_select_using_mask</a>(positive_mask, max, result);</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    result                    = <a class="code" href="asymm__helper_8h.xhtml#a9a8d8e297892cae9a07b0ee57d8df8c6">asymm_select_using_mask</a>(negative_mask, min, result);</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="keywordflow">return</span> result;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;}</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div><div class="line"><a name="l00126"></a><span class="lineno"><a class="line" href="asymm__helper_8h.xhtml#ac78f99e69395c7e3a9e2e5c11d52e51e">  126</a></span>&#160;<span class="keyword">inline</span> int16 <a class="code" href="asymm__helper_8h.xhtml#ac78f99e69395c7e3a9e2e5c11d52e51e">asymm_rounding_half_sum</a>(int16 <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aac40b7097f2bda9274ae07fa33d15a79">a</a>, int16 <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7b8004eef325a40dd43eb80755610fff">b</a>)</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;{</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    long16       a64       = convert_long16(a);</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    long16       b64       = convert_long16(b);</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    long16       <a class="code" href="reduction__operation_8cl.xhtml#ab0df00f5333da51860deb93deb44a782">sum</a>       = a64 + b64;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    <span class="keyword">const</span> long16 one       = 1;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <span class="keyword">const</span> long16 minus_one = -1;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    long16       sign      = select(minus_one, one, sum &gt;= 0);</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <span class="keywordflow">return</span> convert_int16((sum + sign) / 2);</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;}</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;</div><div class="line"><a name="l00146"></a><span class="lineno"><a class="line" href="asymm__helper_8h.xhtml#a3fa7b0abbf252f5a274dcdee9aa6038b">  146</a></span>&#160;<span class="keyword">inline</span> int16 <a class="code" href="asymm__helper_8h.xhtml#a3fa7b0abbf252f5a274dcdee9aa6038b">asymm_saturating_rounding_doubling_high_mul</a>(int16 <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aac40b7097f2bda9274ae07fa33d15a79">a</a>, int16 <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7b8004eef325a40dd43eb80755610fff">b</a>)</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;{</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    int16  overflow     = (a == <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7b8004eef325a40dd43eb80755610fff">b</a>) &amp;&amp; (a == INT_MIN);</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    long16 a_64         = convert_long16(a);</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    long16 b_64         = convert_long16(b);</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    long16 ab_64        = a_64 * b_64;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    long16 mask1        = 1 &lt;&lt; 30;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    long16 mask2        = 1 - (1 &lt;&lt; 30);</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    long16 nudge        = select(mask2, mask1, ab_64 &gt;= 0);</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    long16 mask         = 1ll &lt;&lt; 31;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    int16  ab_x2_high32 = convert_int16((ab_64 + nudge) / mask);</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <span class="keywordflow">return</span> select(ab_x2_high32, INT_MAX, overflow);</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;}</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;</div><div class="line"><a name="l00167"></a><span class="lineno"><a class="line" href="asymm__helper_8h.xhtml#ab98c50e16a18dd439b2b7ecdd1ecd81c">  167</a></span>&#160;<span class="keyword">inline</span> int16 <a class="code" href="asymm__helper_8h.xhtml#ab98c50e16a18dd439b2b7ecdd1ecd81c">asymm_mult</a>(int16 <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aac40b7097f2bda9274ae07fa33d15a79">a</a>, int16 <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7b8004eef325a40dd43eb80755610fff">b</a>)</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;{</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="asymm__helper_8h.xhtml#a3fa7b0abbf252f5a274dcdee9aa6038b">asymm_saturating_rounding_doubling_high_mul</a>(a, b);</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;}</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;</div><div class="line"><a name="l00178"></a><span class="lineno"><a class="line" href="asymm__helper_8h.xhtml#a54f460d49b7d071839912c8f3489cc85">  178</a></span>&#160;<span class="keyword">inline</span> int16 <a class="code" href="asymm__helper_8h.xhtml#a54f460d49b7d071839912c8f3489cc85">asymm_exp_on_interval_between_negative_one_quarter_and_0_excl</a>(int16 <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aac40b7097f2bda9274ae07fa33d15a79">a</a>)</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;{</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    <span class="keyword">const</span> int16 constant_term                            = 1895147668;</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    <span class="keyword">const</span> int16 constant_1_over_3                        = 715827883;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span>   k_fractional_bits                        = 31;</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    int16       x                                        = a + (1 &lt;&lt; (k_fractional_bits - 3));</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    int16       x2                                       = <a class="code" href="asymm__helper_8h.xhtml#ab98c50e16a18dd439b2b7ecdd1ecd81c">asymm_mult</a>(x, x);</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    int16       x3                                       = <a class="code" href="asymm__helper_8h.xhtml#ab98c50e16a18dd439b2b7ecdd1ecd81c">asymm_mult</a>(x2, x);</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    int16       x4                                       = <a class="code" href="asymm__helper_8h.xhtml#ab98c50e16a18dd439b2b7ecdd1ecd81c">asymm_mult</a>(x2, x2);</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    int16       x4_over_4                                = <a class="code" href="asymm__helper_8h.xhtml#a766e0a81889256cfa161f7c08951c0b8">asymm_rounding_divide_by_pow2</a>(x4, 2);</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    int16       x4_over_24_plus_x3_over_6_plus_x2        = <a class="code" href="asymm__helper_8h.xhtml#ab98c50e16a18dd439b2b7ecdd1ecd81c">asymm_mult</a>((x4_over_4 + x3), constant_1_over_3) + x2;</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    int16       x4_over_24_plus_x3_over_6_plus_x2_over_2 = <a class="code" href="asymm__helper_8h.xhtml#a766e0a81889256cfa161f7c08951c0b8">asymm_rounding_divide_by_pow2</a>(x4_over_24_plus_x3_over_6_plus_x2, 1);</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    <span class="keywordflow">return</span> constant_term + <a class="code" href="asymm__helper_8h.xhtml#ab98c50e16a18dd439b2b7ecdd1ecd81c">asymm_mult</a>(constant_term, x + x4_over_24_plus_x3_over_6_plus_x2_over_2);</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;}</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;</div><div class="line"><a name="l00200"></a><span class="lineno"><a class="line" href="asymm__helper_8h.xhtml#ad1aa37a99125a65c4f4f3741011677e2">  200</a></span>&#160;<span class="keyword">inline</span> int16 <a class="code" href="asymm__helper_8h.xhtml#ad1aa37a99125a65c4f4f3741011677e2">asymm_exp_on_negative_values</a>(int16 <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aac40b7097f2bda9274ae07fa33d15a79">a</a>, <span class="keywordtype">int</span> k_integer_bits)</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;{</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> k_fractional_bits                      = 31 - k_integer_bits;</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    int16     k_one_quarter                          = 1 &lt;&lt; (k_fractional_bits - 2);</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    int16     mask                                   = k_one_quarter - 1;</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    int16     a_mod_quarter_minus_one_quarter        = (a &amp; mask) - k_one_quarter;</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    int16     a_mod_quarter_minus_one_quarter_scaled = a_mod_quarter_minus_one_quarter &lt;&lt; k_integer_bits;</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    int16     result                                 = <a class="code" href="asymm__helper_8h.xhtml#a54f460d49b7d071839912c8f3489cc85">asymm_exp_on_interval_between_negative_one_quarter_and_0_excl</a>(a_mod_quarter_minus_one_quarter_scaled);</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    int16     remainder                              = a_mod_quarter_minus_one_quarter - <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aac40b7097f2bda9274ae07fa33d15a79">a</a>;</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="preprocessor">#define EXP_BARREL_SHIFTER(Exponent, FixedPointMultiplier)                                       \</span></div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;<span class="preprocessor">    if(k_integer_bits &gt; Exponent)                                                                \</span></div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<span class="preprocessor">    {                                                                                            \</span></div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;<span class="preprocessor">        const int k_shift_amount = k_integer_bits &gt; Exponent ? k_fractional_bits + Exponent : 0; \</span></div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="preprocessor">        result                   = asymm_select_using_mask(                                      \</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;<span class="preprocessor">                                                                                                 asymm_mask_if_non_zero(remainder &amp; (1 &lt;&lt; k_shift_amount)),                           \</span></div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;<span class="preprocessor">                                                                                                 asymm_mult(result, FixedPointMultiplier), result);                                   \</span></div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;<span class="preprocessor">    }</span></div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    <a class="code" href="asymm__helper_8h.xhtml#af57b48e64984f51aa7608b41a575f2e8">EXP_BARREL_SHIFTER</a>(-2, 1672461947);</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    <a class="code" href="asymm__helper_8h.xhtml#af57b48e64984f51aa7608b41a575f2e8">EXP_BARREL_SHIFTER</a>(-1, 1302514674);</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    <a class="code" href="asymm__helper_8h.xhtml#af57b48e64984f51aa7608b41a575f2e8">EXP_BARREL_SHIFTER</a>(+0, 790015084);</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    <a class="code" href="asymm__helper_8h.xhtml#af57b48e64984f51aa7608b41a575f2e8">EXP_BARREL_SHIFTER</a>(+1, 290630308);</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    <a class="code" href="asymm__helper_8h.xhtml#af57b48e64984f51aa7608b41a575f2e8">EXP_BARREL_SHIFTER</a>(+2, 39332535);</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;    <a class="code" href="asymm__helper_8h.xhtml#af57b48e64984f51aa7608b41a575f2e8">EXP_BARREL_SHIFTER</a>(+3, 720401);</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    <a class="code" href="asymm__helper_8h.xhtml#af57b48e64984f51aa7608b41a575f2e8">EXP_BARREL_SHIFTER</a>(+4, 242);</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;<span class="preprocessor">#undef EXP_BARREL_SHIFTER</span></div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    <span class="keywordflow">if</span>(k_integer_bits &gt; 5)</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    {</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;        <span class="keyword">const</span> int16 <a class="code" href="namespacearm__compute.xhtml#a1c0b9414fe3a6ef6a7a23bd324ae9e67">clamp</a> = -(1 &lt;&lt; (k_fractional_bits + 5));</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;        result            = <a class="code" href="asymm__helper_8h.xhtml#a9a8d8e297892cae9a07b0ee57d8df8c6">asymm_select_using_mask</a>(<a class="code" href="asymm__helper_8h.xhtml#afa141a5531e3404ae64f5050319e8951">asymm_mask_if_non_zero</a>(a &lt; clamp), 0, result);</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    }</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    <span class="keyword">const</span> int16 Q0_one = INT_MAX;</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="asymm__helper_8h.xhtml#a9a8d8e297892cae9a07b0ee57d8df8c6">asymm_select_using_mask</a>(<a class="code" href="asymm__helper_8h.xhtml#abd8e1597ea493f693fc3d7976867da7f">asymm_mask_if_zero</a>(a), Q0_one, result);</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;}</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;</div><div class="line"><a name="l00243"></a><span class="lineno"><a class="line" href="asymm__helper_8h.xhtml#adae82358534f6f4a2bcbdd833413ccb8">  243</a></span>&#160;<span class="keyword">inline</span> int16 <a class="code" href="asymm__helper_8h.xhtml#adae82358534f6f4a2bcbdd833413ccb8">asymm_one_over_one_plus_x_for_x_in_0_1</a>(int16 <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aac40b7097f2bda9274ae07fa33d15a79">a</a>)</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;{</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;    <span class="keyword">const</span> int16 Q0_one            = INT_MAX;</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    <span class="keyword">const</span> int16 Q2_one            = 1 &lt;&lt; (31 - 2);</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    int16       half_denominator  = <a class="code" href="asymm__helper_8h.xhtml#ac78f99e69395c7e3a9e2e5c11d52e51e">asymm_rounding_half_sum</a>(a, Q0_one);</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;    <span class="keyword">const</span> int16 Q2_48_over_17     = 1515870810;</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;    <span class="keyword">const</span> int16 Q2_neg_32_over_17 = -1010580540;</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    int16       x                 = Q2_48_over_17 + <a class="code" href="asymm__helper_8h.xhtml#ab98c50e16a18dd439b2b7ecdd1ecd81c">asymm_mult</a>(half_denominator, Q2_neg_32_over_17);</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    <span class="keywordflow">for</span>(<span class="keywordtype">int</span> i = 0; i &lt; 3; i++)</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    {</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;        int16 half_denominator_times_x           = <a class="code" href="asymm__helper_8h.xhtml#ab98c50e16a18dd439b2b7ecdd1ecd81c">asymm_mult</a>(half_denominator, x);</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;        int16 one_minus_half_denominator_times_x = Q2_one - half_denominator_times_x;</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;        int16 tmp                                = <a class="code" href="asymm__helper_8h.xhtml#ab98c50e16a18dd439b2b7ecdd1ecd81c">asymm_mult</a>(x, one_minus_half_denominator_times_x);</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;        x                                        = x + <a class="code" href="asymm__helper_8h.xhtml#a4115087230ae51534cdc11b9013b28ad">asymm_saturating_rounding_mult_by_pow2</a>(tmp, 2);</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    }</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="asymm__helper_8h.xhtml#a4115087230ae51534cdc11b9013b28ad">asymm_saturating_rounding_mult_by_pow2</a>(x, 1);</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;}</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;</div><div class="line"><a name="l00269"></a><span class="lineno"><a class="line" href="asymm__helper_8h.xhtml#a4496e3d044dda78318d27aa7f9c0e810">  269</a></span>&#160;<span class="keyword">inline</span> int16 <a class="code" href="asymm__helper_8h.xhtml#a4496e3d044dda78318d27aa7f9c0e810">asymm_rescale</a>(int16 <a class="code" href="hwc_8hpp.xhtml#a0f61d63b009d0880a89c843bd50d8d76">value</a>, <span class="keywordtype">int</span> src_integer_bits, <span class="keywordtype">int</span> dst_integer_bits)</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;{</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;    <span class="keywordtype">int</span> exponent = src_integer_bits - dst_integer_bits;</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="asymm__helper_8h.xhtml#a4115087230ae51534cdc11b9013b28ad">asymm_saturating_rounding_mult_by_pow2</a>(value, exponent);</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;}</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;<span class="preprocessor">#endif // ARM_COMPUTE_ASYMM_HELPER_H</span></div><div class="ttc" id="asymm__helper_8h_xhtml_a4115087230ae51534cdc11b9013b28ad"><div class="ttname"><a href="asymm__helper_8h.xhtml#a4115087230ae51534cdc11b9013b28ad">asymm_saturating_rounding_mult_by_pow2</a></div><div class="ttdeci">int16 asymm_saturating_rounding_mult_by_pow2(int16 x, int exponent)</div><div class="ttdoc">Calculates the product of a integer value by a power of two, with either a positive exponent (equival...</div><div class="ttdef"><b>Definition:</b> <a href="asymm__helper_8h_source.xhtml#l00100">asymm_helper.h:100</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_xhtml_aabcf39e3917f842dbc5fbb0d802f24d5"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aabcf39e3917f842dbc5fbb0d802f24d5">arm_compute::test::fixed_point_arithmetic::detail::min</a></div><div class="ttdeci">fixed_point&lt; T &gt; min(fixed_point&lt; T &gt; x, fixed_point&lt; T &gt; y)</div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00884">FixedPoint.h:884</a></div></div>
<div class="ttc" id="asymm__helper_8h_xhtml_ad1aa37a99125a65c4f4f3741011677e2"><div class="ttname"><a href="asymm__helper_8h.xhtml#ad1aa37a99125a65c4f4f3741011677e2">asymm_exp_on_negative_values</a></div><div class="ttdeci">int16 asymm_exp_on_negative_values(int16 a, int k_integer_bits)</div><div class="ttdoc">Calculates  for x &lt; 0. </div><div class="ttdef"><b>Definition:</b> <a href="asymm__helper_8h_source.xhtml#l00200">asymm_helper.h:200</a></div></div>
<div class="ttc" id="asymm__helper_8h_xhtml_adae82358534f6f4a2bcbdd833413ccb8"><div class="ttname"><a href="asymm__helper_8h.xhtml#adae82358534f6f4a2bcbdd833413ccb8">asymm_one_over_one_plus_x_for_x_in_0_1</a></div><div class="ttdeci">int16 asymm_one_over_one_plus_x_for_x_in_0_1(int16 a)</div><div class="ttdoc">Calculates  for x in (0, 1). </div><div class="ttdef"><b>Definition:</b> <a href="asymm__helper_8h_source.xhtml#l00243">asymm_helper.h:243</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_aac40b7097f2bda9274ae07fa33d15a79"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#aac40b7097f2bda9274ae07fa33d15a79">arm_compute::test::validation::a</a></div><div class="ttdeci">Tensor a</div><div class="ttdef"><b>Definition:</b> <a href="validation_2_n_e_o_n_2_g_e_m_m_8cpp_source.xhtml#l00115">GEMM.cpp:115</a></div></div>
<div class="ttc" id="asymm__helper_8h_xhtml_ac78f99e69395c7e3a9e2e5c11d52e51e"><div class="ttname"><a href="asymm__helper_8h.xhtml#ac78f99e69395c7e3a9e2e5c11d52e51e">asymm_rounding_half_sum</a></div><div class="ttdeci">int16 asymm_rounding_half_sum(int16 a, int16 b)</div><div class="ttdoc">Calculates (a+b)/2, rounded to the nearest integer. </div><div class="ttdef"><b>Definition:</b> <a href="asymm__helper_8h_source.xhtml#l00126">asymm_helper.h:126</a></div></div>
<div class="ttc" id="reduction__operation_8cl_xhtml_ab0df00f5333da51860deb93deb44a782"><div class="ttname"><a href="reduction__operation_8cl.xhtml#ab0df00f5333da51860deb93deb44a782">sum</a></div><div class="ttdeci">DATA_TYPE sum(__global const DATA_TYPE *input)</div><div class="ttdoc">Calculate sum of a vector. </div><div class="ttdef"><b>Definition:</b> <a href="reduction__operation_8cl_source.xhtml#l00052">reduction_operation.cl:52</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a1c0b9414fe3a6ef6a7a23bd324ae9e67"><div class="ttname"><a href="namespacearm__compute.xhtml#a1c0b9414fe3a6ef6a7a23bd324ae9e67">arm_compute::clamp</a></div><div class="ttdeci">T clamp(const T &amp;n, const T &amp;lower, const T &amp;upper)</div><div class="ttdoc">Performs clamping among a lower and upper value. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_helpers_8h_source.xhtml#l00265">Helpers.h:265</a></div></div>
<div class="ttc" id="asymm__helper_8h_xhtml_a3fa7b0abbf252f5a274dcdee9aa6038b"><div class="ttname"><a href="asymm__helper_8h.xhtml#a3fa7b0abbf252f5a274dcdee9aa6038b">asymm_saturating_rounding_doubling_high_mul</a></div><div class="ttdeci">int16 asymm_saturating_rounding_doubling_high_mul(int16 a, int16 b)</div><div class="ttdoc">Product of two numbers, interpreting them as fixed-point values in the interval [-1, 1), rounding to the nearest value, and saturating -1 * -1 to the maximum value. </div><div class="ttdef"><b>Definition:</b> <a href="asymm__helper_8h_source.xhtml#l00146">asymm_helper.h:146</a></div></div>
<div class="ttc" id="asymm__helper_8h_xhtml_a54f460d49b7d071839912c8f3489cc85"><div class="ttname"><a href="asymm__helper_8h.xhtml#a54f460d49b7d071839912c8f3489cc85">asymm_exp_on_interval_between_negative_one_quarter_and_0_excl</a></div><div class="ttdeci">int16 asymm_exp_on_interval_between_negative_one_quarter_and_0_excl(int16 a)</div><div class="ttdoc">Calculates  for x in [-1/4, 0). </div><div class="ttdef"><b>Definition:</b> <a href="asymm__helper_8h_source.xhtml#l00178">asymm_helper.h:178</a></div></div>
<div class="ttc" id="asymm__helper_8h_xhtml_a4496e3d044dda78318d27aa7f9c0e810"><div class="ttname"><a href="asymm__helper_8h.xhtml#a4496e3d044dda78318d27aa7f9c0e810">asymm_rescale</a></div><div class="ttdeci">int16 asymm_rescale(int16 value, int src_integer_bits, int dst_integer_bits)</div><div class="ttdoc">Considering the integer value as fixed-point, change the number of integer bits and update value acco...</div><div class="ttdef"><b>Definition:</b> <a href="asymm__helper_8h_source.xhtml#l00269">asymm_helper.h:269</a></div></div>
<div class="ttc" id="asymm__helper_8h_xhtml_ab98c50e16a18dd439b2b7ecdd1ecd81c"><div class="ttname"><a href="asymm__helper_8h.xhtml#ab98c50e16a18dd439b2b7ecdd1ecd81c">asymm_mult</a></div><div class="ttdeci">int16 asymm_mult(int16 a, int16 b)</div><div class="ttdoc">Fixed-point multiplication. </div><div class="ttdef"><b>Definition:</b> <a href="asymm__helper_8h_source.xhtml#l00167">asymm_helper.h:167</a></div></div>
<div class="ttc" id="asymm__helper_8h_xhtml_af57b48e64984f51aa7608b41a575f2e8"><div class="ttname"><a href="asymm__helper_8h.xhtml#af57b48e64984f51aa7608b41a575f2e8">EXP_BARREL_SHIFTER</a></div><div class="ttdeci">#define EXP_BARREL_SHIFTER(Exponent, FixedPointMultiplier)</div></div>
<div class="ttc" id="asymm__helper_8h_xhtml_afa141a5531e3404ae64f5050319e8951"><div class="ttname"><a href="asymm__helper_8h.xhtml#afa141a5531e3404ae64f5050319e8951">asymm_mask_if_non_zero</a></div><div class="ttdeci">int16 asymm_mask_if_non_zero(int16 a)</div><div class="ttdoc">For each element of input vector, the corresponding bits of the result item are set if the input item...</div><div class="ttdef"><b>Definition:</b> <a href="asymm__helper_8h_source.xhtml#l00052">asymm_helper.h:52</a></div></div>
<div class="ttc" id="asymm__helper_8h_xhtml_a766e0a81889256cfa161f7c08951c0b8"><div class="ttname"><a href="asymm__helper_8h.xhtml#a766e0a81889256cfa161f7c08951c0b8">asymm_rounding_divide_by_pow2</a></div><div class="ttdeci">int16 asymm_rounding_divide_by_pow2(int16 x, int exponent)</div><div class="ttdoc">Correctly rounded to nearest division by a power of two. </div><div class="ttdef"><b>Definition:</b> <a href="asymm__helper_8h_source.xhtml#l00082">asymm_helper.h:82</a></div></div>
<div class="ttc" id="hwc_8hpp_xhtml_a0f61d63b009d0880a89c843bd50d8d76"><div class="ttname"><a href="hwc_8hpp.xhtml#a0f61d63b009d0880a89c843bd50d8d76">value</a></div><div class="ttdeci">void * value</div><div class="ttdef"><b>Definition:</b> <a href="hwc_8hpp_source.xhtml#l00269">hwc.hpp:269</a></div></div>
<div class="ttc" id="asymm__helper_8h_xhtml_a9a8d8e297892cae9a07b0ee57d8df8c6"><div class="ttname"><a href="asymm__helper_8h.xhtml#a9a8d8e297892cae9a07b0ee57d8df8c6">asymm_select_using_mask</a></div><div class="ttdeci">int16 asymm_select_using_mask(int16 if_mask, int16 then_val, int16 else_val)</div><div class="ttdoc">Each bit of the result is set to the corresponding bit of either then_val or else_val depending on wh...</div><div class="ttdef"><b>Definition:</b> <a href="asymm__helper_8h_source.xhtml#l00069">asymm_helper.h:69</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_xhtml_ad91bb73431b4de1f4946ed949d444849"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#ad91bb73431b4de1f4946ed949d444849">arm_compute::test::fixed_point_arithmetic::detail::max</a></div><div class="ttdeci">fixed_point&lt; T &gt; max(fixed_point&lt; T &gt; x, fixed_point&lt; T &gt; y)</div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00889">FixedPoint.h:889</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a7b8004eef325a40dd43eb80755610fff"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a7b8004eef325a40dd43eb80755610fff">arm_compute::test::validation::b</a></div><div class="ttdeci">Tensor b</div><div class="ttdef"><b>Definition:</b> <a href="validation_2_n_e_o_n_2_g_e_m_m_8cpp_source.xhtml#l00116">GEMM.cpp:116</a></div></div>
<div class="ttc" id="asymm__helper_8h_xhtml_abd8e1597ea493f693fc3d7976867da7f"><div class="ttname"><a href="asymm__helper_8h.xhtml#abd8e1597ea493f693fc3d7976867da7f">asymm_mask_if_zero</a></div><div class="ttdeci">int16 asymm_mask_if_zero(int16 a)</div><div class="ttdoc">For each element of input vector, the corresponding bits of the result item are set if the input item...</div><div class="ttdef"><b>Definition:</b> <a href="asymm__helper_8h_source.xhtml#l00038">asymm_helper.h:38</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_1_1reference_xhtml_a6cae310822a46019ba25a00ddb0f7e62"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a6cae310822a46019ba25a00ddb0f7e62">arm_compute::test::validation::reference::threshold</a></div><div class="ttdeci">SimpleTensor&lt; T &gt; threshold(const SimpleTensor&lt; T &gt; &amp;src, T threshold, T false_value, T true_value, ThresholdType type, T upper)</div><div class="ttdef"><b>Definition:</b> <a href="reference_2_threshold_8cpp_source.xhtml#l00035">Threshold.cpp:35</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_aebb8dcc11953d78e620bbef0b9e2183.xhtml">core</a></li><li class="navelem"><a class="el" href="dir_8c278f79c760e5c5fbd911f9870614c1.xhtml">CL</a></li><li class="navelem"><a class="el" href="dir_25885286e9dad4fa105b7b25a8031bbf.xhtml">cl_kernels</a></li><li class="navelem"><a class="el" href="asymm__helper_8h.xhtml">asymm_helper.h</a></li>
    <li class="footer">Generated on Thu Dec 14 2017 23:48:31 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
  </ul>
</div>
</body>
</html>
