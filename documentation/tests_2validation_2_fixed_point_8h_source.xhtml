<!-- HTML header for doxygen 1.8.9.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: tests/validation/FixedPoint.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Compute Library
   &#160;<span id="projectnumber">17.12</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>Globals</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('tests_2validation_2_fixed_point_8h_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">FixedPoint.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="tests_2validation_2_fixed_point_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2017 ARM Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifndef __ARM_COMPUTE_TEST_VALIDATION_FIXEDPOINT_H__</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#define __ARM_COMPUTE_TEST_VALIDATION_FIXEDPOINT_H__</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_toolchain_support_8h.xhtml">support/ToolchainSupport.h</a>&quot;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="tests_2_utils_8h.xhtml">tests/Utils.h</a>&quot;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &lt;cassert&gt;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &lt;cstdint&gt;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &lt;cstdlib&gt;</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &lt;limits&gt;</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">#include &lt;type_traits&gt;</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;{</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keyword">namespace </span>test</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;{</div><div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic.xhtml">   41</a></span>&#160;<span class="keyword">namespace </span>fixed_point_arithmetic</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;{</div><div class="line"><a name="l00043"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml">   43</a></span>&#160;<span class="keyword">namespace </span>detail</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;{</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="comment">// Forward declare structs</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml">functions</a>;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00048"></a><span class="lineno"><a class="line" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1constant__expr.xhtml">   48</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1constant__expr.xhtml">constant_expr</a>;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;}</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div><div class="line"><a name="l00052"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits.xhtml">   52</a></span>&#160;<span class="keyword">namespace </span>traits</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;{</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="comment">// Promote types</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="comment">// *INDENT-OFF*</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="comment">// clang-format off</span></div><div class="line"><a name="l00057"></a><span class="lineno"><a class="line" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits_1_1promote.xhtml">   57</a></span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt; <span class="keyword">struct </span><a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits_1_1promote.xhtml">promote</a> { };</div><div class="line"><a name="l00058"></a><span class="lineno"><a class="line" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits_1_1promote_3_01uint8__t_01_4.xhtml#a3085ed9ad7c9b1c88dcec24108730e54">   58</a></span>&#160;<span class="keyword">template</span> &lt;&gt; <span class="keyword">struct </span><a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits_1_1promote.xhtml">promote</a>&lt;uint8_t&gt; { <span class="keyword">using</span> <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits_1_1promote_3_01uint8__t_01_4.xhtml#a3085ed9ad7c9b1c88dcec24108730e54">type</a> = uint16_t; };</div><div class="line"><a name="l00059"></a><span class="lineno"><a class="line" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits_1_1promote_3_01int8__t_01_4.xhtml#a8812bf779dca54354aa6ad00cef14a73">   59</a></span>&#160;<span class="keyword">template</span> &lt;&gt; <span class="keyword">struct </span><a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits_1_1promote.xhtml">promote</a>&lt;int8_t&gt; { <span class="keyword">using</span> <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits_1_1promote_3_01int8__t_01_4.xhtml#a8812bf779dca54354aa6ad00cef14a73">type</a> = int16_t; };</div><div class="line"><a name="l00060"></a><span class="lineno"><a class="line" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits_1_1promote_3_01uint16__t_01_4.xhtml#a43022da9f622deba3284b748a6885e23">   60</a></span>&#160;<span class="keyword">template</span> &lt;&gt; <span class="keyword">struct </span><a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits_1_1promote.xhtml">promote</a>&lt;uint16_t&gt; { <span class="keyword">using</span> <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits_1_1promote_3_01uint16__t_01_4.xhtml#a43022da9f622deba3284b748a6885e23">type</a> = uint32_t; };</div><div class="line"><a name="l00061"></a><span class="lineno"><a class="line" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits_1_1promote_3_01int16__t_01_4.xhtml#a4f14ffc6d6f6ca92afb1baf996fc9305">   61</a></span>&#160;<span class="keyword">template</span> &lt;&gt; <span class="keyword">struct </span><a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits_1_1promote.xhtml">promote</a>&lt;int16_t&gt; { <span class="keyword">using</span> <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits_1_1promote_3_01int16__t_01_4.xhtml#a4f14ffc6d6f6ca92afb1baf996fc9305">type</a> = int32_t; };</div><div class="line"><a name="l00062"></a><span class="lineno"><a class="line" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits_1_1promote_3_01uint32__t_01_4.xhtml#a9659bbcc7fc016eda242219021c7980b">   62</a></span>&#160;<span class="keyword">template</span> &lt;&gt; <span class="keyword">struct </span><a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits_1_1promote.xhtml">promote</a>&lt;uint32_t&gt; { <span class="keyword">using</span> <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits_1_1promote_3_01uint32__t_01_4.xhtml#a9659bbcc7fc016eda242219021c7980b">type</a> = uint64_t; };</div><div class="line"><a name="l00063"></a><span class="lineno"><a class="line" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits_1_1promote_3_01int32__t_01_4.xhtml#a70ca3d636283d6713220cd8af5fc07b3">   63</a></span>&#160;<span class="keyword">template</span> &lt;&gt; <span class="keyword">struct </span><a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits_1_1promote.xhtml">promote</a>&lt;int32_t&gt; { <span class="keyword">using</span> <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits_1_1promote_3_01int32__t_01_4.xhtml#a70ca3d636283d6713220cd8af5fc07b3">type</a> = int64_t; };</div><div class="line"><a name="l00064"></a><span class="lineno"><a class="line" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits_1_1promote_3_01uint64__t_01_4.xhtml#a9659bbcc7fc016eda242219021c7980b">   64</a></span>&#160;<span class="keyword">template</span> &lt;&gt; <span class="keyword">struct </span><a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits_1_1promote.xhtml">promote</a>&lt;uint64_t&gt; { <span class="keyword">using</span> <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits_1_1promote_3_01uint64__t_01_4.xhtml#a9659bbcc7fc016eda242219021c7980b">type</a> = uint64_t; };</div><div class="line"><a name="l00065"></a><span class="lineno"><a class="line" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits_1_1promote_3_01int64__t_01_4.xhtml#a70ca3d636283d6713220cd8af5fc07b3">   65</a></span>&#160;<span class="keyword">template</span> &lt;&gt; <span class="keyword">struct </span><a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits_1_1promote.xhtml">promote</a>&lt;int64_t&gt; { <span class="keyword">using</span> <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits_1_1promote_3_01int64__t_01_4.xhtml#a70ca3d636283d6713220cd8af5fc07b3">type</a> = int64_t; };</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00067"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits.xhtml#ac20ca549fa27b2eed44367745055a233">   67</a></span>&#160;<span class="keyword">using</span> <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits.xhtml#ac20ca549fa27b2eed44367745055a233">promote_t</a> = <span class="keyword">typename</span> <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits_1_1promote.xhtml">promote&lt;T&gt;::type</a>;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="comment">// clang-format on</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="comment">// *INDENT-ON*</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;}</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div><div class="line"><a name="l00073"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic.xhtml#a0ada8f647402027261407be09bdf25ff">   73</a></span>&#160;<span class="keyword">enum class</span> <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic.xhtml#a0ada8f647402027261407be09bdf25ff">OverflowPolicy</a></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;{</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fae1c8555fcf0ea2bb648a6fd527d658c0">WRAP</a>,    </div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">SATURATE</a> </div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;};</div><div class="line"><a name="l00079"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic.xhtml#add6426cbf2e057a195846d4ba09a50be">   79</a></span>&#160;<span class="keyword">enum class</span> <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic.xhtml#add6426cbf2e057a195846d4ba09a50be">RoundingPolicy</a></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;{</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#add6426cbf2e057a195846d4ba09a50bea5631ad8e27788edfca7e13535d862c06">TO_ZERO</a>,        </div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#add6426cbf2e057a195846d4ba09a50bea02ff1fff1812f84c89547fcd6c176150">TO_NEAREST_EVEN</a> </div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;};</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00087"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">   87</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;{</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="comment">// Static Checks</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    static_assert(<a class="code" href="hwc_8hpp.xhtml#a0f61d63b009d0880a89c843bd50d8d76">std::is_integral&lt;T&gt;::value</a>, <span class="stringliteral">&quot;Type is not an integer&quot;</span>);</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> U&gt;</div><div class="line"><a name="l00099"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#ad9fb776e0556cf222c31feb9f372ea32">   99</a></span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#ad9fb776e0556cf222c31feb9f372ea32">fixed_point</a>(<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;U&gt;</a> val, uint8_t p)</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        : _value(0), _fixed_point_position(p)</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    {</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        assert(p &gt; 0 &amp;&amp; p &lt; std::numeric_limits&lt;T&gt;::digits);</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        T v = 0;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        <span class="keywordflow">if</span>(std::numeric_limits&lt;T&gt;::digits &lt; std::numeric_limits&lt;U&gt;::digits)</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        {</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;            val.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a80db15090eed5a0bb5e7977eabeae132">rescale</a>(p);</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;            v = <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1constant__expr.xhtml#a59cfd98dfc03fbc5540092aa196d7187">detail::constant_expr&lt;T&gt;::saturate_cast</a>(val.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a3fe723fdc332e453550710b2925002a0">raw</a>());</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        }</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        <span class="keywordflow">else</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        {</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;            <span class="keyword">auto</span> v_cast = <span class="keyword">static_cast&lt;</span><a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a><span class="keyword">&gt;</span>(val);</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;            v_cast.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a80db15090eed5a0bb5e7977eabeae132">rescale</a>(p);</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;            v = v_cast.raw();</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        }</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        _value = <span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(v);</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    }</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <a class="code" href="hwc_8hpp.xhtml#a0f61d63b009d0880a89c843bd50d8d76">template &lt;typename U, typename = typename std::enable_if&lt;std::is_integral&lt;U&gt;::value</a>&gt;<a class="code" href="namespacecaffe__data__extractor.xhtml#a7aead736a07eaf25623ad7bfa1f0ee2d">::type</a>&gt;</div><div class="line"><a name="l00125"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a2449f6f85fd30e253be0a03fa9c5baa4">  125</a></span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a2449f6f85fd30e253be0a03fa9c5baa4">fixed_point</a>(U val, uint8_t p, <span class="keywordtype">bool</span> is_raw = <span class="keyword">false</span>)</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        : _value(val &lt;&lt; p), _fixed_point_position(p)</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    {</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        <span class="keywordflow">if</span>(is_raw)</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        {</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;            _value = val;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        }</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    }</div><div class="line"><a name="l00138"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a5047b169040344c060aa685e9f63627c">  138</a></span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a5047b169040344c060aa685e9f63627c">fixed_point</a>(<span class="keywordtype">float</span> val, uint8_t p)</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        : _value(detail::constant_expr&lt;T&gt;::to_fixed(val, p)), _fixed_point_position(p)</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    {</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        assert(p &gt; 0 &amp;&amp; p &lt; std::numeric_limits&lt;T&gt;::digits);</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    }</div><div class="line"><a name="l00148"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a4c96f1365088f36447883d79469dc52b">  148</a></span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a4c96f1365088f36447883d79469dc52b">fixed_point</a>(std::string <a class="code" href="namespacecaffe__data__extractor.xhtml#a4b99ff73a8a869319570237b5c57ab03">str</a>, uint8_t p)</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        : _value(detail::constant_expr&lt;T&gt;::to_fixed(support::cpp11::<a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#aa4152693b62db2a43edcc0039de95e38">stof</a>(str), p)), _fixed_point_position(p)</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    {</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;        assert(p &gt; 0 &amp;&amp; p &lt; std::numeric_limits&lt;T&gt;::digits);</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    }</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a> &amp;operator=(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a> &amp;) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a> &amp;operator=(<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a> &amp;&amp;) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a> &amp;) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a>(<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point</a> &amp;&amp;) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;</div><div class="line"><a name="l00166"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#ae80f6077a5ac6ce1710cda5b30039890">  166</a></span>&#160;    <span class="keyword">operator</span> float()<span class="keyword"> const</span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1constant__expr.xhtml#a995c73a5ff995cc1b4c0c730892c792a">detail::constant_expr&lt;T&gt;::to_float</a>(_value, _fixed_point_position);</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    }</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    <a class="code" href="hwc_8hpp.xhtml#a0f61d63b009d0880a89c843bd50d8d76">template &lt;typename U, typename = typename std::enable_if&lt;std::is_integral&lt;T&gt;::value</a>&gt;<a class="code" href="namespacecaffe__data__extractor.xhtml#a7aead736a07eaf25623ad7bfa1f0ee2d">::type</a>&gt;</div><div class="line"><a name="l00175"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a2dc268e2f29a84e2a777befb77128c1a">  175</a></span>&#160;    <span class="keyword">operator</span> <a class="code" href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa4c614360da93c0a041b22e537de151eb">U</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1constant__expr.xhtml#a918ab57096fdfe5e2cbf70de5145b9fa">detail::constant_expr&lt;T&gt;::to_int</a>(_value, _fixed_point_position);</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    }</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> U&gt;</div><div class="line"><a name="l00184"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a7c0a35a6e4249b5d463ddb797dbe3ed8">  184</a></span>&#160;    <span class="keyword">operator</span> <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;U&gt;</a>()</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    {</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;        <a class="code" href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa4c614360da93c0a041b22e537de151eb">U</a> val = <span class="keyword">static_cast&lt;</span><a class="code" href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa4c614360da93c0a041b22e537de151eb">U</a><span class="keyword">&gt;</span>(_value);</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;        <span class="keywordflow">if</span>(std::numeric_limits&lt;U&gt;::digits &lt; std::numeric_limits&lt;T&gt;::digits)</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;        {</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;            val = <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1constant__expr.xhtml#a59cfd98dfc03fbc5540092aa196d7187">detail::constant_expr&lt;U&gt;::saturate_cast</a>(_value);</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;        }</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;U&gt;</a>(val, _fixed_point_position, <span class="keyword">true</span>);</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    }</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> U&gt;</div><div class="line"><a name="l00201"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a2654e1d67fbb9afb7fb00ee7ec521c11">  201</a></span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> &amp;<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a2654e1d67fbb9afb7fb00ee7ec521c11">operator+=</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;U&gt;</a> &amp;rhs)</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    {</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;        <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> val(rhs, _fixed_point_position);</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;        _value += val.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a3fe723fdc332e453550710b2925002a0">raw</a>();</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;        <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    }</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> U&gt;</div><div class="line"><a name="l00214"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#af180cc5812cd005d63a4ec8eea34ae2e">  214</a></span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> &amp;<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#af180cc5812cd005d63a4ec8eea34ae2e">operator-=</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;U&gt;</a> &amp;rhs)</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    {</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;        <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> val(rhs, _fixed_point_position);</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;        _value -= val.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a3fe723fdc332e453550710b2925002a0">raw</a>();</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;        <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    }</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;</div><div class="line"><a name="l00225"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a3fe723fdc332e453550710b2925002a0">  225</a></span>&#160;    T <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a3fe723fdc332e453550710b2925002a0">raw</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;        <span class="keywordflow">return</span> _value;</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    }</div><div class="line"><a name="l00233"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a89deb954a617641af987e59a483ca5e9">  233</a></span>&#160;    uint8_t <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a89deb954a617641af987e59a483ca5e9">precision</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;        <span class="keywordflow">return</span> _fixed_point_position;</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    }</div><div class="line"><a name="l00241"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a80db15090eed5a0bb5e7977eabeae132">  241</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a80db15090eed5a0bb5e7977eabeae132">rescale</a>(uint8_t p)</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    {</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;        assert(p &gt; 0 &amp;&amp; p &lt; std::numeric_limits&lt;T&gt;::digits);</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;        <span class="keyword">using</span> promoted_T = <span class="keyword">typename</span> <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits_1_1promote.xhtml">traits::promote&lt;T&gt;::type</a>;</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;        promoted_T val   = _value;</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;        <span class="keywordflow">if</span>(p &gt; _fixed_point_position)</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;        {</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;            val &lt;&lt;= (p - _fixed_point_position);</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;        }</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span>(p &lt; _fixed_point_position)</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;        {</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;            uint8_t pbar = _fixed_point_position - p;</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;            val += (pbar != 0) ? (1 &lt;&lt; (pbar - 1)) : 0;</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;            val &gt;&gt;= pbar;</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;        }</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;        _value                = <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1constant__expr.xhtml#a59cfd98dfc03fbc5540092aa196d7187">detail::constant_expr&lt;T&gt;::saturate_cast</a>(val);</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;        _fixed_point_position = p;</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;    }</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;    T       _value;                </div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    uint8_t _fixed_point_position; </div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;};</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;<span class="keyword">namespace </span>detail</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;{</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00276"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aa43c67a536c661ec28398d06bc8ba5af">  276</a></span>&#160;constexpr <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aa43c67a536c661ec28398d06bc8ba5af">clz</a>(T <a class="code" href="hwc_8hpp.xhtml#a0f61d63b009d0880a89c843bd50d8d76">value</a>)</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;{</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;    <span class="keyword">using</span> unsigned_T = <span class="keyword">typename</span> <a class="code" href="namespacecaffe__data__extractor.xhtml#a7aead736a07eaf25623ad7bfa1f0ee2d">std::make_unsigned&lt;T&gt;::type</a>;</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    <span class="comment">// __builtin_clz is available for int. Need to correct reported number to</span></div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;    <span class="comment">// match the original type.</span></div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;    <span class="keywordflow">return</span> __builtin_clz(value) - (32 - std::numeric_limits&lt;unsigned_T&gt;::digits);</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;}</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1constant__expr.xhtml">constant_expr</a></div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;{</div><div class="line"><a name="l00293"></a><span class="lineno"><a class="line" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1constant__expr.xhtml#a9c4b593f19fb9053fd52697eaa30c5d7">  293</a></span>&#160;    <span class="keyword">static</span> constexpr T <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1constant__expr.xhtml#a9c4b593f19fb9053fd52697eaa30c5d7">fixed_one</a>(uint8_t p)</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;    {</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;        <span class="keywordflow">return</span> (1 &lt;&lt; p);</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;    }</div><div class="line"><a name="l00303"></a><span class="lineno"><a class="line" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1constant__expr.xhtml#a125e978e1d6df0f6d9f738b0c580f980">  303</a></span>&#160;    <span class="keyword">static</span> constexpr <span class="keywordtype">float</span> <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1constant__expr.xhtml#a125e978e1d6df0f6d9f738b0c580f980">fixed_step</a>(uint8_t p)</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;    {</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;        <span class="keywordflow">return</span> (1.0f / static_cast&lt;float&gt;(1 &lt;&lt; p));</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;    }</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;</div><div class="line"><a name="l00315"></a><span class="lineno"><a class="line" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1constant__expr.xhtml#a995c73a5ff995cc1b4c0c730892c792a">  315</a></span>&#160;    <span class="keyword">static</span> constexpr <span class="keywordtype">float</span> <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1constant__expr.xhtml#a995c73a5ff995cc1b4c0c730892c792a">to_float</a>(T val, uint8_t p)</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;    {</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span><span class="keywordtype">float</span><span class="keyword">&gt;</span>(val * fixed_step(p));</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;    }</div><div class="line"><a name="l00326"></a><span class="lineno"><a class="line" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1constant__expr.xhtml#a918ab57096fdfe5e2cbf70de5145b9fa">  326</a></span>&#160;    <span class="keyword">static</span> constexpr T <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1constant__expr.xhtml#a918ab57096fdfe5e2cbf70de5145b9fa">to_int</a>(T val, uint8_t p)</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;    {</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;        <span class="keywordflow">return</span> val &gt;&gt; p;</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;    }</div><div class="line"><a name="l00337"></a><span class="lineno"><a class="line" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1constant__expr.xhtml#a682a2eb8869b48647719e194cbbcb4e1">  337</a></span>&#160;    <span class="keyword">static</span> constexpr T <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1constant__expr.xhtml#a682a2eb8869b48647719e194cbbcb4e1">to_fixed</a>(<span class="keywordtype">float</span> val, uint8_t p)</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;    {</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1test.xhtml#a4965b2f6821e0cf0afee738158bd8377">saturate_cast</a>&lt;<span class="keywordtype">float</span>&gt;(val * fixed_one(p) + ((val &gt;= 0) ? 0.5 : -0.5)));</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;    }</div><div class="line"><a name="l00349"></a><span class="lineno"><a class="line" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1constant__expr.xhtml#a996cf0a2779076326d094ef9d75ddd1f">  349</a></span>&#160;    <span class="keyword">static</span> constexpr T <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1constant__expr.xhtml#a996cf0a2779076326d094ef9d75ddd1f">clamp</a>(T val, T <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aabcf39e3917f842dbc5fbb0d802f24d5">min</a>, T <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#ad91bb73431b4de1f4946ed949d444849">max</a>)</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;    {</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aabcf39e3917f842dbc5fbb0d802f24d5">std::min</a>(<a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#ad91bb73431b4de1f4946ed949d444849">std::max</a>(val, min), max);</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;    }</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> U&gt;</div><div class="line"><a name="l00360"></a><span class="lineno"><a class="line" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1constant__expr.xhtml#a59cfd98dfc03fbc5540092aa196d7187">  360</a></span>&#160;    <span class="keyword">static</span> constexpr T <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1constant__expr.xhtml#a59cfd98dfc03fbc5540092aa196d7187">saturate_cast</a>(U val)</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;    {</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(std::min&lt;U&gt;(std::max&lt;U&gt;(val, <span class="keyword">static_cast&lt;</span><a class="code" href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa4c614360da93c0a041b22e537de151eb">U</a><span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aabcf39e3917f842dbc5fbb0d802f24d5">std::numeric_limits&lt;T&gt;::min</a>())), <span class="keyword">static_cast&lt;</span><a class="code" href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa4c614360da93c0a041b22e537de151eb">U</a><span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#ad91bb73431b4de1f4946ed949d444849">std::numeric_limits&lt;T&gt;::max</a>())));</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;    }</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;};</div><div class="line"><a name="l00365"></a><span class="lineno"><a class="line" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml">  365</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml">functions</a></div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;{</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> U, <span class="keyword">typename</span> traits&gt;</div><div class="line"><a name="l00375"></a><span class="lineno"><a class="line" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a69b97b34f32a6fc05665fc8605806326">  375</a></span>&#160;    <span class="keyword">static</span> std::basic_ostream&lt;T, traits&gt; &amp;<a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a69b97b34f32a6fc05665fc8605806326">write</a>(std::basic_ostream&lt;T, traits&gt; &amp;s, <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;U&gt;</a> &amp;x)</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;    {</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;        <span class="keywordflow">return</span> s &lt;&lt; static_cast&lt;float&gt;(x);</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;    }</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00386"></a><span class="lineno"><a class="line" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a9efa14731a55e3d96adb961214e91734">  386</a></span>&#160;    <span class="keyword">static</span> <span class="keywordtype">bool</span> <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a9efa14731a55e3d96adb961214e91734">signbit</a>(<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> x)</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;    {</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;        <span class="keywordflow">return</span> ((x.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a3fe723fdc332e453550710b2925002a0">raw</a>() &gt;&gt; std::numeric_limits&lt;T&gt;::digits) != 0);</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;    }</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00398"></a><span class="lineno"><a class="line" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a304fe6cc15deaffb14929e42a4ff1c1b">  398</a></span>&#160;    <span class="keyword">static</span> <span class="keywordtype">bool</span> <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a304fe6cc15deaffb14929e42a4ff1c1b">isequal</a>(<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> x, <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> y)</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;    {</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;        uint8_t p = <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aabcf39e3917f842dbc5fbb0d802f24d5">std::min</a>(x.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a89deb954a617641af987e59a483ca5e9">precision</a>(), y.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a89deb954a617641af987e59a483ca5e9">precision</a>());</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;        x.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a80db15090eed5a0bb5e7977eabeae132">rescale</a>(p);</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;        y.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a80db15090eed5a0bb5e7977eabeae132">rescale</a>(p);</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;        <span class="keywordflow">return</span> (x.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a3fe723fdc332e453550710b2925002a0">raw</a>() == y.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a3fe723fdc332e453550710b2925002a0">raw</a>());</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;    }</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00413"></a><span class="lineno"><a class="line" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a866dbf3e096ad4a487820a8945be3dfe">  413</a></span>&#160;    <span class="keyword">static</span> <span class="keywordtype">bool</span> <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a866dbf3e096ad4a487820a8945be3dfe">isnotequal</a>(<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> x, <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> y)</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;    {</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;        <span class="keywordflow">return</span> !isequal(x, y);</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;    }</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00425"></a><span class="lineno"><a class="line" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#abd7f7757b9edb7cdd017d439bc5ba8b0">  425</a></span>&#160;    <span class="keyword">static</span> <span class="keywordtype">bool</span> <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#abd7f7757b9edb7cdd017d439bc5ba8b0">isgreater</a>(<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> x, <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> y)</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;    {</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;        uint8_t p = <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aabcf39e3917f842dbc5fbb0d802f24d5">std::min</a>(x.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a89deb954a617641af987e59a483ca5e9">precision</a>(), y.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a89deb954a617641af987e59a483ca5e9">precision</a>());</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;        x.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a80db15090eed5a0bb5e7977eabeae132">rescale</a>(p);</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;        y.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a80db15090eed5a0bb5e7977eabeae132">rescale</a>(p);</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;        <span class="keywordflow">return</span> (x.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a3fe723fdc332e453550710b2925002a0">raw</a>() &gt; y.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a3fe723fdc332e453550710b2925002a0">raw</a>());</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;    }</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00440"></a><span class="lineno"><a class="line" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a49abe87ad33d2900c2255e4b79322207">  440</a></span>&#160;    <span class="keyword">static</span> <span class="keywordtype">bool</span> <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a49abe87ad33d2900c2255e4b79322207">isgreaterequal</a>(<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> x, <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> y)</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;    {</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;        uint8_t p = <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aabcf39e3917f842dbc5fbb0d802f24d5">std::min</a>(x.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a89deb954a617641af987e59a483ca5e9">precision</a>(), y.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a89deb954a617641af987e59a483ca5e9">precision</a>());</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;        x.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a80db15090eed5a0bb5e7977eabeae132">rescale</a>(p);</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;        y.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a80db15090eed5a0bb5e7977eabeae132">rescale</a>(p);</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;        <span class="keywordflow">return</span> (x.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a3fe723fdc332e453550710b2925002a0">raw</a>() &gt;= y.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a3fe723fdc332e453550710b2925002a0">raw</a>());</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;    }</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00455"></a><span class="lineno"><a class="line" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#ac4dcad0e940cf826063ba1f6ea659c07">  455</a></span>&#160;    <span class="keyword">static</span> <span class="keywordtype">bool</span> <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#ac4dcad0e940cf826063ba1f6ea659c07">isless</a>(<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> x, <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> y)</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;    {</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;        uint8_t p = <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aabcf39e3917f842dbc5fbb0d802f24d5">std::min</a>(x.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a89deb954a617641af987e59a483ca5e9">precision</a>(), y.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a89deb954a617641af987e59a483ca5e9">precision</a>());</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;        x.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a80db15090eed5a0bb5e7977eabeae132">rescale</a>(p);</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;        y.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a80db15090eed5a0bb5e7977eabeae132">rescale</a>(p);</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;        <span class="keywordflow">return</span> (x.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a3fe723fdc332e453550710b2925002a0">raw</a>() &lt; y.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a3fe723fdc332e453550710b2925002a0">raw</a>());</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;    }</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00470"></a><span class="lineno"><a class="line" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a47e151d622ee6e71a0e731585b4fa7d8">  470</a></span>&#160;    <span class="keyword">static</span> <span class="keywordtype">bool</span> <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a47e151d622ee6e71a0e731585b4fa7d8">islessequal</a>(<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> x, <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> y)</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;    {</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;        uint8_t p = <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aabcf39e3917f842dbc5fbb0d802f24d5">std::min</a>(x.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a89deb954a617641af987e59a483ca5e9">precision</a>(), y.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a89deb954a617641af987e59a483ca5e9">precision</a>());</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;        x.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a80db15090eed5a0bb5e7977eabeae132">rescale</a>(p);</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;        y.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a80db15090eed5a0bb5e7977eabeae132">rescale</a>(p);</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;        <span class="keywordflow">return</span> (x.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a3fe723fdc332e453550710b2925002a0">raw</a>() &lt;= y.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a3fe723fdc332e453550710b2925002a0">raw</a>());</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;    }</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00485"></a><span class="lineno"><a class="line" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a814cf7d89e7dad18b0625b4c914dc628">  485</a></span>&#160;    <span class="keyword">static</span> <span class="keywordtype">bool</span> <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a814cf7d89e7dad18b0625b4c914dc628">islessgreater</a>(<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> x, <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> y)</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;    {</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;        <span class="keywordflow">return</span> isnotequal(x, y);</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;    }</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00498"></a><span class="lineno"><a class="line" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a2d681ad37360fc4497f147af98951ba0">  498</a></span>&#160;    <span class="keyword">static</span> <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a2d681ad37360fc4497f147af98951ba0">clamp</a>(<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> x, T <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aabcf39e3917f842dbc5fbb0d802f24d5">min</a>, T <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#ad91bb73431b4de1f4946ed949d444849">max</a>)</div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;    {</div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a>(<a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1constant__expr.xhtml#a996cf0a2779076326d094ef9d75ddd1f">constant_expr&lt;T&gt;::clamp</a>(x.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a3fe723fdc332e453550710b2925002a0">raw</a>(), <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aabcf39e3917f842dbc5fbb0d802f24d5">min</a>, <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#ad91bb73431b4de1f4946ed949d444849">max</a>), x.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a89deb954a617641af987e59a483ca5e9">precision</a>(), <span class="keyword">true</span>);</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;    }</div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;    <span class="keyword">template</span> &lt;OverflowPolicy OP = OverflowPolicy::SATURATE, <span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00509"></a><span class="lineno"><a class="line" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#aa78731a2479da19c6604b3baa3ffe33d">  509</a></span>&#160;    <span class="keyword">static</span> <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#aa78731a2479da19c6604b3baa3ffe33d">negate</a>(<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> x)</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;    {</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;        <span class="keyword">using</span> promoted_T = <span class="keyword">typename</span> <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits_1_1promote.xhtml">traits::promote&lt;T&gt;::type</a>;</div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;        promoted_T val   = -x.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a3fe723fdc332e453550710b2925002a0">raw</a>();</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;        <span class="keywordflow">if</span>(OP == <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic.xhtml#a0ada8f647402027261407be09bdf25ffa4729d95f983955f0d93a30179deb2b86">OverflowPolicy::SATURATE</a>)</div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;        {</div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;            val = <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1constant__expr.xhtml#a59cfd98dfc03fbc5540092aa196d7187">constant_expr&lt;T&gt;::saturate_cast</a>(val);</div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;        }</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a>(<span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(val), x.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a89deb954a617641af987e59a483ca5e9">precision</a>(), <span class="keyword">true</span>);</div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;    }</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;    <span class="keyword">template</span> &lt;OverflowPolicy OP = OverflowPolicy::SATURATE, <span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00527"></a><span class="lineno"><a class="line" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a40956c61706d70b8978c2b87ac455d2a">  527</a></span>&#160;    <span class="keyword">static</span> <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a40956c61706d70b8978c2b87ac455d2a">add</a>(<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> x, <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> y)</div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;    {</div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;        uint8_t p = <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aabcf39e3917f842dbc5fbb0d802f24d5">std::min</a>(x.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a89deb954a617641af987e59a483ca5e9">precision</a>(), y.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a89deb954a617641af987e59a483ca5e9">precision</a>());</div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;        x.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a80db15090eed5a0bb5e7977eabeae132">rescale</a>(p);</div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;        y.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a80db15090eed5a0bb5e7977eabeae132">rescale</a>(p);</div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;        <span class="keywordflow">if</span>(OP == <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic.xhtml#a0ada8f647402027261407be09bdf25ffa4729d95f983955f0d93a30179deb2b86">OverflowPolicy::SATURATE</a>)</div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;        {</div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;            <span class="keyword">using</span> <a class="code" href="namespacecaffe__data__extractor.xhtml#a7aead736a07eaf25623ad7bfa1f0ee2d">type</a> = <span class="keyword">typename</span> <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits_1_1promote.xhtml">traits::promote&lt;T&gt;::type</a>;</div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;            <a class="code" href="namespacecaffe__data__extractor.xhtml#a7aead736a07eaf25623ad7bfa1f0ee2d">type</a> val   = <span class="keyword">static_cast&lt;</span><a class="code" href="namespacecaffe__data__extractor.xhtml#a7aead736a07eaf25623ad7bfa1f0ee2d">type</a><span class="keyword">&gt;</span>(x.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a3fe723fdc332e453550710b2925002a0">raw</a>()) + static_cast&lt;type&gt;(y.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a3fe723fdc332e453550710b2925002a0">raw</a>());</div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;            val        = <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1constant__expr.xhtml#a59cfd98dfc03fbc5540092aa196d7187">constant_expr&lt;T&gt;::saturate_cast</a>(val);</div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a>(<span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(val), p, <span class="keyword">true</span>);</div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;        }</div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;        <span class="keywordflow">else</span></div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;        {</div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a>(x.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a3fe723fdc332e453550710b2925002a0">raw</a>() + y.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a3fe723fdc332e453550710b2925002a0">raw</a>(), p, <span class="keyword">true</span>);</div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;        }</div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;    }</div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;    <span class="keyword">template</span> &lt;OverflowPolicy OP = OverflowPolicy::SATURATE, <span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00552"></a><span class="lineno"><a class="line" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a287e18f5dec27ac32bfd30039a57dddf">  552</a></span>&#160;    <span class="keyword">static</span> <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a287e18f5dec27ac32bfd30039a57dddf">sub</a>(<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> x, <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> y)</div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;    {</div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;        uint8_t p = <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aabcf39e3917f842dbc5fbb0d802f24d5">std::min</a>(x.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a89deb954a617641af987e59a483ca5e9">precision</a>(), y.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a89deb954a617641af987e59a483ca5e9">precision</a>());</div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;        x.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a80db15090eed5a0bb5e7977eabeae132">rescale</a>(p);</div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;        y.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a80db15090eed5a0bb5e7977eabeae132">rescale</a>(p);</div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;        <span class="keywordflow">if</span>(OP == <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic.xhtml#a0ada8f647402027261407be09bdf25ffa4729d95f983955f0d93a30179deb2b86">OverflowPolicy::SATURATE</a>)</div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;        {</div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;            <span class="keyword">using</span> <a class="code" href="namespacecaffe__data__extractor.xhtml#a7aead736a07eaf25623ad7bfa1f0ee2d">type</a> = <span class="keyword">typename</span> <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits_1_1promote.xhtml">traits::promote&lt;T&gt;::type</a>;</div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;            <a class="code" href="namespacecaffe__data__extractor.xhtml#a7aead736a07eaf25623ad7bfa1f0ee2d">type</a> val   = <span class="keyword">static_cast&lt;</span><a class="code" href="namespacecaffe__data__extractor.xhtml#a7aead736a07eaf25623ad7bfa1f0ee2d">type</a><span class="keyword">&gt;</span>(x.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a3fe723fdc332e453550710b2925002a0">raw</a>()) - static_cast&lt;type&gt;(y.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a3fe723fdc332e453550710b2925002a0">raw</a>());</div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;            val        = <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1constant__expr.xhtml#a59cfd98dfc03fbc5540092aa196d7187">constant_expr&lt;T&gt;::saturate_cast</a>(val);</div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a>(<span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(val), p, <span class="keyword">true</span>);</div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;        }</div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;        <span class="keywordflow">else</span></div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;        {</div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a>(x.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a3fe723fdc332e453550710b2925002a0">raw</a>() - y.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a3fe723fdc332e453550710b2925002a0">raw</a>(), p, <span class="keyword">true</span>);</div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;        }</div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;    }</div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;    <span class="keyword">template</span> &lt;OverflowPolicy OP = OverflowPolicy::SATURATE, <span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00577"></a><span class="lineno"><a class="line" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#ad02ce21c48a8f9e419a2ec5f762f3221">  577</a></span>&#160;    <span class="keyword">static</span> <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#ad02ce21c48a8f9e419a2ec5f762f3221">mul</a>(<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> x, <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> y)</div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;    {</div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;        <span class="keyword">using</span> promoted_T        = <span class="keyword">typename</span> <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits_1_1promote.xhtml">traits::promote&lt;T&gt;::type</a>;</div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;        uint8_t    p_min        = <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aabcf39e3917f842dbc5fbb0d802f24d5">std::min</a>(x.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a89deb954a617641af987e59a483ca5e9">precision</a>(), y.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a89deb954a617641af987e59a483ca5e9">precision</a>());</div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;        uint8_t    p_max        = <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#ad91bb73431b4de1f4946ed949d444849">std::max</a>(x.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a89deb954a617641af987e59a483ca5e9">precision</a>(), y.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a89deb954a617641af987e59a483ca5e9">precision</a>());</div><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;        promoted_T round_factor = (1 &lt;&lt; (p_max - 1));</div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;        promoted_T val          = ((<span class="keyword">static_cast&lt;</span>promoted_T<span class="keyword">&gt;</span>(x.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a3fe723fdc332e453550710b2925002a0">raw</a>()) * static_cast&lt;promoted_T&gt;(y.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a3fe723fdc332e453550710b2925002a0">raw</a>())) + round_factor) &gt;&gt; p_max;</div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;        <span class="keywordflow">if</span>(OP == <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic.xhtml#a0ada8f647402027261407be09bdf25ffa4729d95f983955f0d93a30179deb2b86">OverflowPolicy::SATURATE</a>)</div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;        {</div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;            val = <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1constant__expr.xhtml#a59cfd98dfc03fbc5540092aa196d7187">constant_expr&lt;T&gt;::saturate_cast</a>(val);</div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;        }</div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a>(<span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(val), p_min, <span class="keyword">true</span>);</div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;    }</div><div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;    <span class="keyword">template</span> &lt;OverflowPolicy OP = OverflowPolicy::SATURATE, <span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00598"></a><span class="lineno"><a class="line" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a72d043524e13bf27c605c2dee2e20a2a">  598</a></span>&#160;    <span class="keyword">static</span> <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a72d043524e13bf27c605c2dee2e20a2a">div</a>(<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> x, <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> y)</div><div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;    {</div><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;        <span class="keyword">using</span> promoted_T = <span class="keyword">typename</span> <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits_1_1promote.xhtml">traits::promote&lt;T&gt;::type</a>;</div><div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;        uint8_t    p     = <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aabcf39e3917f842dbc5fbb0d802f24d5">std::min</a>(x.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a89deb954a617641af987e59a483ca5e9">precision</a>(), y.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a89deb954a617641af987e59a483ca5e9">precision</a>());</div><div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;        promoted_T denom = <span class="keyword">static_cast&lt;</span>promoted_T<span class="keyword">&gt;</span>(y.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a3fe723fdc332e453550710b2925002a0">raw</a>());</div><div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;        <span class="keywordflow">if</span>(denom != 0)</div><div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;        {</div><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;            promoted_T val = (<span class="keyword">static_cast&lt;</span>promoted_T<span class="keyword">&gt;</span>(x.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a3fe723fdc332e453550710b2925002a0">raw</a>()) &lt;&lt; <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#ad91bb73431b4de1f4946ed949d444849">std::max</a>(x.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a89deb954a617641af987e59a483ca5e9">precision</a>(), y.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a89deb954a617641af987e59a483ca5e9">precision</a>())) / denom;</div><div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;            <span class="keywordflow">if</span>(OP == <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic.xhtml#a0ada8f647402027261407be09bdf25ffa4729d95f983955f0d93a30179deb2b86">OverflowPolicy::SATURATE</a>)</div><div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;            {</div><div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;                val = <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1constant__expr.xhtml#a59cfd98dfc03fbc5540092aa196d7187">constant_expr&lt;T&gt;::saturate_cast</a>(val);</div><div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;            }</div><div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a>(<span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(val), p, <span class="keyword">true</span>);</div><div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;        }</div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;        <span class="keywordflow">else</span></div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;        {</div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;            T val = (x.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a3fe723fdc332e453550710b2925002a0">raw</a>() &lt; 0) ? <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aabcf39e3917f842dbc5fbb0d802f24d5">std::numeric_limits&lt;T&gt;::min</a>() : <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#ad91bb73431b4de1f4946ed949d444849">std::numeric_limits&lt;T&gt;::max</a>();</div><div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a>(val, p, <span class="keyword">true</span>);</div><div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;        }</div><div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;    }</div><div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;    <span class="keyword">template</span> &lt;OverflowPolicy OP = OverflowPolicy::SATURATE, <span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00626"></a><span class="lineno"><a class="line" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a0e0473f8d30d0a8067f9903430ddcd85">  626</a></span>&#160;    <span class="keyword">static</span> <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a0e0473f8d30d0a8067f9903430ddcd85">shift_left</a>(<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> x, <span class="keywordtype">size_t</span> shift)</div><div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;    {</div><div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;        <span class="keyword">using</span> promoted_T = <span class="keyword">typename</span> <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits_1_1promote.xhtml">traits::promote&lt;T&gt;::type</a>;</div><div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;        promoted_T val   = <span class="keyword">static_cast&lt;</span>promoted_T<span class="keyword">&gt;</span>(x.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a3fe723fdc332e453550710b2925002a0">raw</a>()) &lt;&lt; shift;</div><div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;        <span class="keywordflow">if</span>(OP == <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic.xhtml#a0ada8f647402027261407be09bdf25ffa4729d95f983955f0d93a30179deb2b86">OverflowPolicy::SATURATE</a>)</div><div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;        {</div><div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;            val = <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1constant__expr.xhtml#a59cfd98dfc03fbc5540092aa196d7187">constant_expr&lt;T&gt;::saturate_cast</a>(val);</div><div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;        }</div><div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a>(<span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(val), x.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a89deb954a617641af987e59a483ca5e9">precision</a>(), <span class="keyword">true</span>);</div><div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;    }</div><div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00644"></a><span class="lineno"><a class="line" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#ad1429c74912e4335cd55e6f860acf3b6">  644</a></span>&#160;    <span class="keyword">static</span> <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#ad1429c74912e4335cd55e6f860acf3b6">shift_right</a>(<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> x, <span class="keywordtype">size_t</span> shift)</div><div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;    {</div><div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a>(x.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a3fe723fdc332e453550710b2925002a0">raw</a>() &gt;&gt; shift, x.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a89deb954a617641af987e59a483ca5e9">precision</a>(), <span class="keyword">true</span>);</div><div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;    }</div><div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00655"></a><span class="lineno"><a class="line" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a3c04cac868606ed11c00761f0d5b3d2c">  655</a></span>&#160;    <span class="keyword">static</span> <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a3c04cac868606ed11c00761f0d5b3d2c">abs</a>(<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> x)</div><div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;    {</div><div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;        <span class="keyword">using</span> promoted_T = <span class="keyword">typename</span> <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits_1_1promote.xhtml">traits::promote&lt;T&gt;::type</a>;</div><div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;        T val            = (x.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a3fe723fdc332e453550710b2925002a0">raw</a>() &lt; 0) ? <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1constant__expr.xhtml">constant_expr&lt;T&gt;::saturate_cast</a>(-static_cast&lt;promoted_T&gt;(x.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a3fe723fdc332e453550710b2925002a0">raw</a>())) : x.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a3fe723fdc332e453550710b2925002a0">raw</a>();</div><div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a>(val, x.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a89deb954a617641af987e59a483ca5e9">precision</a>(), <span class="keyword">true</span>);</div><div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;    }</div><div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00668"></a><span class="lineno"><a class="line" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a33520868a877b6b9a1beccdc1aaa4ec6">  668</a></span>&#160;    <span class="keyword">static</span> <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a33520868a877b6b9a1beccdc1aaa4ec6">log</a>(<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> x)</div><div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;    {</div><div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;        uint8_t p         = x.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a89deb954a617641af987e59a483ca5e9">precision</a>();</div><div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;        <span class="keyword">auto</span>    const_one = <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a>(<span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(1), p);</div><div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;</div><div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;        <span class="comment">// Logarithm of 1 is zero and logarithm of negative values is not defined in R, so return 0.</span></div><div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;        <span class="comment">// Also, log(x) == -log(1/x) for 0 &lt; x &lt; 1.</span></div><div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;        <span class="keywordflow">if</span>(isequal(x, const_one) || islessequal(x, <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a>(static_cast&lt;T&gt;(0), p)))</div><div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;        {</div><div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a>(<span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(0), p, <span class="keyword">true</span>);</div><div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;        }</div><div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span>(isless(x, const_one))</div><div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;        {</div><div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a8d71db736fe80cae37a9c94c57b34ed6">mul</a>(<a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a8c8ce35c61b4f71cccec28d18161eaa1">log</a>(<a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a9d53af9692ab2f7ae6fc0017faeb46f0">div</a>(const_one, x)), <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a>(-1, p));</div><div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;        }</div><div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;</div><div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;        <span class="comment">// Remove even powers of 2</span></div><div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;        T shift_val = 31 - __builtin_clz(x.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a3fe723fdc332e453550710b2925002a0">raw</a>() &gt;&gt; p);</div><div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;        x           = shift_right(x, shift_val);</div><div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;        x           = <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a42e82c32ccdbc5bc2899bc5cd3b04e27">sub</a>(x, const_one);</div><div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;</div><div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;        <span class="comment">// Constants</span></div><div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;        <span class="keyword">auto</span> ln2 = <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a>(0.6931471, p);</div><div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;        <span class="keyword">auto</span> <a class="code" href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa7fc56270e7a70fa81a5935b72eacbe29">A</a>   = <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a>(1.4384189, p);</div><div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;        <span class="keyword">auto</span> <a class="code" href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa9d5ed678fe57bcca610140957afab571">B</a>   = <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a>(-0.67719, p);</div><div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;        <span class="keyword">auto</span> C   = <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a>(0.3218538, p);</div><div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;        <span class="keyword">auto</span> D   = <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a>(-0.0832229, p);</div><div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;</div><div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;        <span class="comment">// Polynomial expansion</span></div><div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;        <span class="keyword">auto</span> <a class="code" href="reduction__operation_8cl.xhtml#ab0df00f5333da51860deb93deb44a782">sum</a> = <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a9d91c0affa9bc1921abc949791c514c0">add</a>(<a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a8d71db736fe80cae37a9c94c57b34ed6">mul</a>(x, D), C);</div><div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;        sum      = <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a9d91c0affa9bc1921abc949791c514c0">add</a>(<a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a8d71db736fe80cae37a9c94c57b34ed6">mul</a>(x, sum), B);</div><div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;        sum      = <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a9d91c0affa9bc1921abc949791c514c0">add</a>(<a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a8d71db736fe80cae37a9c94c57b34ed6">mul</a>(x, sum), A);</div><div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;        sum      = <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a8d71db736fe80cae37a9c94c57b34ed6">mul</a>(x, sum);</div><div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;</div><div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a8d71db736fe80cae37a9c94c57b34ed6">mul</a>(<a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a9d91c0affa9bc1921abc949791c514c0">add</a>(sum, <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a>(static_cast&lt;T&gt;(shift_val), p)), ln2);</div><div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;    }</div><div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00715"></a><span class="lineno"><a class="line" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#ac66bdd16622d4498cc0299db1efcef54">  715</a></span>&#160;    <span class="keyword">static</span> <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#ac66bdd16622d4498cc0299db1efcef54">exp</a>(<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> x)</div><div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;    {</div><div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;        uint8_t p = x.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a89deb954a617641af987e59a483ca5e9">precision</a>();</div><div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;        <span class="comment">// Constants</span></div><div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;        <span class="keyword">auto</span> const_one = <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a>(1, p);</div><div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;        <span class="keyword">auto</span> ln2       = <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a>(0.6931471, p);</div><div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;        <span class="keyword">auto</span> inv_ln2   = <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a>(1.442695, p);</div><div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;        <span class="keyword">auto</span> <a class="code" href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa7fc56270e7a70fa81a5935b72eacbe29">A</a>         = <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a>(0.9978546, p);</div><div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;        <span class="keyword">auto</span> <a class="code" href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa9d5ed678fe57bcca610140957afab571">B</a>         = <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a>(0.4994721, p);</div><div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;        <span class="keyword">auto</span> C         = <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a>(0.1763723, p);</div><div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;        <span class="keyword">auto</span> D         = <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a>(0.0435108, p);</div><div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;</div><div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;        T scaled_int_part = <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1constant__expr.xhtml#a918ab57096fdfe5e2cbf70de5145b9fa">detail::constant_expr&lt;T&gt;::to_int</a>(<a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a8d71db736fe80cae37a9c94c57b34ed6">mul</a>(x, inv_ln2).raw(), p);</div><div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;</div><div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;        <span class="comment">// Polynomial expansion</span></div><div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;        <span class="keyword">auto</span> frac_part = <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a42e82c32ccdbc5bc2899bc5cd3b04e27">sub</a>(x, <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a8d71db736fe80cae37a9c94c57b34ed6">mul</a>(ln2, <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a>(scaled_int_part, p)));</div><div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;        <span class="keyword">auto</span> taylor    = <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a9d91c0affa9bc1921abc949791c514c0">add</a>(<a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a8d71db736fe80cae37a9c94c57b34ed6">mul</a>(frac_part, D), C);</div><div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;        taylor         = <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a9d91c0affa9bc1921abc949791c514c0">add</a>(<a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a8d71db736fe80cae37a9c94c57b34ed6">mul</a>(frac_part, taylor), B);</div><div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;        taylor         = <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a9d91c0affa9bc1921abc949791c514c0">add</a>(<a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a8d71db736fe80cae37a9c94c57b34ed6">mul</a>(frac_part, taylor), A);</div><div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;        taylor         = <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a8d71db736fe80cae37a9c94c57b34ed6">mul</a>(frac_part, taylor);</div><div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;        taylor         = <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a9d91c0affa9bc1921abc949791c514c0">add</a>(taylor, const_one);</div><div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;</div><div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;        <span class="comment">// Saturate value</span></div><div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;        <span class="keywordflow">if</span>(static_cast&lt;T&gt;(<a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aa43c67a536c661ec28398d06bc8ba5af">clz</a>(taylor.raw())) &lt;= scaled_int_part)</div><div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;        {</div><div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a>(<a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#ad91bb73431b4de1f4946ed949d444849">std::numeric_limits&lt;T&gt;::max</a>(), p, <span class="keyword">true</span>);</div><div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;        }</div><div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;</div><div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;        <span class="keywordflow">return</span> (scaled_int_part &lt; 0) ? shift_right(taylor, -scaled_int_part) : shift_left(taylor, scaled_int_part);</div><div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;    }</div><div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00752"></a><span class="lineno"><a class="line" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a6a7c1ca385d21fe457259a8fd9debfbf">  752</a></span>&#160;    <span class="keyword">static</span> <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a6a7c1ca385d21fe457259a8fd9debfbf">inv_sqrt</a>(<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> x)</div><div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;    {</div><div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;        <span class="keyword">const</span> uint8_t p     = x.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a89deb954a617641af987e59a483ca5e9">precision</a>();</div><div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;        int8_t        shift = std::numeric_limits&lt;T&gt;::digits - (p + <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aa43c67a536c661ec28398d06bc8ba5af">detail::clz</a>(x.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a3fe723fdc332e453550710b2925002a0">raw</a>()));</div><div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;</div><div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;        shift += std::numeric_limits&lt;T&gt;::is_signed ? 1 : 0;</div><div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;</div><div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;        <span class="comment">// Use volatile to restrict compiler optimizations on shift as compiler reports maybe-uninitialized error on Android</span></div><div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;        <span class="keyword">volatile</span> int8_t *shift_ptr = &amp;shift;</div><div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;</div><div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;        <span class="keyword">auto</span>           const_three = <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a>(3, p);</div><div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;        <span class="keyword">auto</span>           <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aac40b7097f2bda9274ae07fa33d15a79">a</a>           = (*shift_ptr &lt; 0) ? shift_left(x, -(shift)) : shift_right(x, shift);</div><div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;        <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> x2          = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aac40b7097f2bda9274ae07fa33d15a79">a</a>;</div><div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;</div><div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;        <span class="comment">// We need three iterations to find the result for QS8 and five for QS16</span></div><div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;        constexpr <span class="keywordtype">int</span> num_iterations = <a class="code" href="hwc_8hpp.xhtml#a0f61d63b009d0880a89c843bd50d8d76">std::is_same&lt;T, int8_t&gt;::value</a> ? 3 : 5;</div><div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;        <span class="keywordflow">for</span>(<span class="keywordtype">int</span> i = 0; i &lt; num_iterations; ++i)</div><div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;        {</div><div class="line"><a name="l00770"></a><span class="lineno">  770</span>&#160;            <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> three_minus_dx = <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a42e82c32ccdbc5bc2899bc5cd3b04e27">sub</a>(const_three, <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a8d71db736fe80cae37a9c94c57b34ed6">mul</a>(a, <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a8d71db736fe80cae37a9c94c57b34ed6">mul</a>(x2, x2)));</div><div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;            x2                            = shift_right(<a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a8d71db736fe80cae37a9c94c57b34ed6">mul</a>(x2, three_minus_dx), 1);</div><div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;        }</div><div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;</div><div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;        <span class="keywordflow">return</span> (shift &lt; 0) ? shift_left(x2, (-shift) &gt;&gt; 1) : shift_right(x2, shift &gt;&gt; 1);</div><div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;    }</div><div class="line"><a name="l00782"></a><span class="lineno">  782</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00783"></a><span class="lineno"><a class="line" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a3260014222a62b212c096956c0605fd5">  783</a></span>&#160;    <span class="keyword">static</span> <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a3260014222a62b212c096956c0605fd5">tanh</a>(<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> x)</div><div class="line"><a name="l00784"></a><span class="lineno">  784</span>&#160;    {</div><div class="line"><a name="l00785"></a><span class="lineno">  785</span>&#160;        uint8_t p = x.<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a89deb954a617641af987e59a483ca5e9">precision</a>();</div><div class="line"><a name="l00786"></a><span class="lineno">  786</span>&#160;        <span class="comment">// Constants</span></div><div class="line"><a name="l00787"></a><span class="lineno">  787</span>&#160;        <span class="keyword">auto</span> const_one = <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a>(1, p);</div><div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;        <span class="keyword">auto</span> const_two = <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a>(2, p);</div><div class="line"><a name="l00789"></a><span class="lineno">  789</span>&#160;</div><div class="line"><a name="l00790"></a><span class="lineno">  790</span>&#160;        <span class="keyword">auto</span> exp2x = <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aa4e01e9be9adcc40a69a4da48fa83a43">exp</a>(const_two * x);</div><div class="line"><a name="l00791"></a><span class="lineno">  791</span>&#160;        <span class="keyword">auto</span> num   = exp2x - const_one;</div><div class="line"><a name="l00792"></a><span class="lineno">  792</span>&#160;        <span class="keyword">auto</span> den   = exp2x + const_one;</div><div class="line"><a name="l00793"></a><span class="lineno">  793</span>&#160;        <span class="keyword">auto</span> <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a6854479935f66029852441b051e1a3e0">tanh</a>  = num / den;</div><div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160;</div><div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a6854479935f66029852441b051e1a3e0">tanh</a>;</div><div class="line"><a name="l00796"></a><span class="lineno">  796</span>&#160;    }</div><div class="line"><a name="l00806"></a><span class="lineno">  806</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00807"></a><span class="lineno"><a class="line" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a74f7a6f0b0c31beaf3a0bc13e991b1c3">  807</a></span>&#160;    <span class="keyword">static</span> <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a74f7a6f0b0c31beaf3a0bc13e991b1c3">pow</a>(<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> x, <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aac40b7097f2bda9274ae07fa33d15a79">a</a>)</div><div class="line"><a name="l00808"></a><span class="lineno">  808</span>&#160;    {</div><div class="line"><a name="l00809"></a><span class="lineno">  809</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aa4e01e9be9adcc40a69a4da48fa83a43">exp</a>(<a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a8c8ce35c61b4f71cccec28d18161eaa1">log</a>(x) * a);</div><div class="line"><a name="l00810"></a><span class="lineno">  810</span>&#160;    }</div><div class="line"><a name="l00811"></a><span class="lineno">  811</span>&#160;};</div><div class="line"><a name="l00812"></a><span class="lineno">  812</span>&#160;</div><div class="line"><a name="l00813"></a><span class="lineno">  813</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00814"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aff130425a85235bea11508b51ddb16de">  814</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aff130425a85235bea11508b51ddb16de">operator==</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> &amp;lhs, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> &amp;rhs)</div><div class="line"><a name="l00815"></a><span class="lineno">  815</span>&#160;{</div><div class="line"><a name="l00816"></a><span class="lineno">  816</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a304fe6cc15deaffb14929e42a4ff1c1b">functions::isequal</a>(lhs, rhs);</div><div class="line"><a name="l00817"></a><span class="lineno">  817</span>&#160;}</div><div class="line"><a name="l00818"></a><span class="lineno">  818</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00819"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a3d0ef475c458544f4ac7b56060f62f6e">  819</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a3d0ef475c458544f4ac7b56060f62f6e">operator!=</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> &amp;lhs, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> &amp;rhs)</div><div class="line"><a name="l00820"></a><span class="lineno">  820</span>&#160;{</div><div class="line"><a name="l00821"></a><span class="lineno">  821</span>&#160;    <span class="keywordflow">return</span> !<a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aff130425a85235bea11508b51ddb16de">operator==</a>(lhs, rhs);</div><div class="line"><a name="l00822"></a><span class="lineno">  822</span>&#160;}</div><div class="line"><a name="l00823"></a><span class="lineno">  823</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00824"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#ae9376d2e967c5c8067c6c72e7590ff01">  824</a></span>&#160;<span class="keywordtype">bool</span> operator&lt;(const fixed_point&lt;T&gt; &amp;lhs, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> &amp;rhs)</div><div class="line"><a name="l00825"></a><span class="lineno">  825</span>&#160;{</div><div class="line"><a name="l00826"></a><span class="lineno">  826</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#ac4dcad0e940cf826063ba1f6ea659c07">functions::isless</a>(lhs, rhs);</div><div class="line"><a name="l00827"></a><span class="lineno">  827</span>&#160;}</div><div class="line"><a name="l00828"></a><span class="lineno">  828</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00829"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aa4abd4e21ed690ccf2ba19cfe2ceefd2">  829</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aa4abd4e21ed690ccf2ba19cfe2ceefd2">operator&gt;</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> &amp;lhs, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> &amp;rhs)</div><div class="line"><a name="l00830"></a><span class="lineno">  830</span>&#160;{</div><div class="line"><a name="l00831"></a><span class="lineno">  831</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#ae9376d2e967c5c8067c6c72e7590ff01">operator&lt;</a>(rhs, lhs);</div><div class="line"><a name="l00832"></a><span class="lineno">  832</span>&#160;}</div><div class="line"><a name="l00833"></a><span class="lineno">  833</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00834"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aa8531b7f30573f513bbc997210559ab4">  834</a></span>&#160;<span class="keywordtype">bool</span> operator&lt;=(const fixed_point&lt;T&gt; &amp;lhs, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> &amp;rhs)</div><div class="line"><a name="l00835"></a><span class="lineno">  835</span>&#160;{</div><div class="line"><a name="l00836"></a><span class="lineno">  836</span>&#160;    <span class="keywordflow">return</span> !<a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aa4abd4e21ed690ccf2ba19cfe2ceefd2">operator&gt;</a>(lhs, rhs);</div><div class="line"><a name="l00837"></a><span class="lineno">  837</span>&#160;}</div><div class="line"><a name="l00838"></a><span class="lineno">  838</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00839"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a6d4fc292ad316f39f20eb42393bad855">  839</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a6d4fc292ad316f39f20eb42393bad855">operator&gt;=</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> &amp;lhs, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> &amp;rhs)</div><div class="line"><a name="l00840"></a><span class="lineno">  840</span>&#160;{</div><div class="line"><a name="l00841"></a><span class="lineno">  841</span>&#160;    <span class="keywordflow">return</span> !<a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#ae9376d2e967c5c8067c6c72e7590ff01">operator&lt;</a>(lhs, rhs);</div><div class="line"><a name="l00842"></a><span class="lineno">  842</span>&#160;}</div><div class="line"><a name="l00843"></a><span class="lineno">  843</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00844"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#ad702cf90d6fc9245b3d921dc09ccb76f">  844</a></span>&#160;<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#ad702cf90d6fc9245b3d921dc09ccb76f">operator+</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> &amp;lhs, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> &amp;rhs)</div><div class="line"><a name="l00845"></a><span class="lineno">  845</span>&#160;{</div><div class="line"><a name="l00846"></a><span class="lineno">  846</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a40956c61706d70b8978c2b87ac455d2a">functions::add</a>(lhs, rhs);</div><div class="line"><a name="l00847"></a><span class="lineno">  847</span>&#160;}</div><div class="line"><a name="l00848"></a><span class="lineno">  848</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00849"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a8cce3682a30b4a89af6ebf94e655f954">  849</a></span>&#160;<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a8cce3682a30b4a89af6ebf94e655f954">operator-</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> &amp;lhs, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> &amp;rhs)</div><div class="line"><a name="l00850"></a><span class="lineno">  850</span>&#160;{</div><div class="line"><a name="l00851"></a><span class="lineno">  851</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a287e18f5dec27ac32bfd30039a57dddf">functions::sub</a>(lhs, rhs);</div><div class="line"><a name="l00852"></a><span class="lineno">  852</span>&#160;}</div><div class="line"><a name="l00853"></a><span class="lineno">  853</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00854"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a8143daf512f44a9403c8cd604df1b8f1">  854</a></span>&#160;<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a8cce3682a30b4a89af6ebf94e655f954">operator-</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> &amp;rhs)</div><div class="line"><a name="l00855"></a><span class="lineno">  855</span>&#160;{</div><div class="line"><a name="l00856"></a><span class="lineno">  856</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#aa78731a2479da19c6604b3baa3ffe33d">functions::negate</a>(rhs);</div><div class="line"><a name="l00857"></a><span class="lineno">  857</span>&#160;}</div><div class="line"><a name="l00858"></a><span class="lineno">  858</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00859"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#acdde00e55846c9f6704f87b9d2112cce">  859</a></span>&#160;<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#acdde00e55846c9f6704f87b9d2112cce">operator*</a>(<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> x, <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> y)</div><div class="line"><a name="l00860"></a><span class="lineno">  860</span>&#160;{</div><div class="line"><a name="l00861"></a><span class="lineno">  861</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#ad02ce21c48a8f9e419a2ec5f762f3221">functions::mul</a>(x, y);</div><div class="line"><a name="l00862"></a><span class="lineno">  862</span>&#160;}</div><div class="line"><a name="l00863"></a><span class="lineno">  863</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00864"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a5f37e666dcd38888952f32592e93c2cb">  864</a></span>&#160;<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a5f37e666dcd38888952f32592e93c2cb">operator/</a>(<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> x, <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> y)</div><div class="line"><a name="l00865"></a><span class="lineno">  865</span>&#160;{</div><div class="line"><a name="l00866"></a><span class="lineno">  866</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a72d043524e13bf27c605c2dee2e20a2a">functions::div</a>(x, y);</div><div class="line"><a name="l00867"></a><span class="lineno">  867</span>&#160;}</div><div class="line"><a name="l00868"></a><span class="lineno">  868</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00869"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a26723c21135a6a96f98a9dc41143044d">  869</a></span>&#160;<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a26723c21135a6a96f98a9dc41143044d">operator&gt;&gt;</a>(<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> x, <span class="keywordtype">size_t</span> shift)</div><div class="line"><a name="l00870"></a><span class="lineno">  870</span>&#160;{</div><div class="line"><a name="l00871"></a><span class="lineno">  871</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#ad1429c74912e4335cd55e6f860acf3b6">functions::shift_right</a>(x, shift);</div><div class="line"><a name="l00872"></a><span class="lineno">  872</span>&#160;}</div><div class="line"><a name="l00873"></a><span class="lineno">  873</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00874"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a9f5efc525bf714ab8538dc97fea1d1e4">  874</a></span>&#160;<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> operator&lt;&lt;(fixed_point&lt;T&gt; x, <span class="keywordtype">size_t</span> shift)</div><div class="line"><a name="l00875"></a><span class="lineno">  875</span>&#160;{</div><div class="line"><a name="l00876"></a><span class="lineno">  876</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a0e0473f8d30d0a8067f9903430ddcd85">functions::shift_left</a>(x, shift);</div><div class="line"><a name="l00877"></a><span class="lineno">  877</span>&#160;}</div><div class="line"><a name="l00878"></a><span class="lineno">  878</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> U, <span class="keyword">typename</span> traits&gt;</div><div class="line"><a name="l00879"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a2716b652645cadf2a460c1259ccf7235">  879</a></span>&#160;std::basic_ostream&lt;T, traits&gt; &amp;operator&lt;&lt;(std::basic_ostream&lt;T, traits&gt; &amp;s, <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;U&gt;</a> x)</div><div class="line"><a name="l00880"></a><span class="lineno">  880</span>&#160;{</div><div class="line"><a name="l00881"></a><span class="lineno">  881</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a69b97b34f32a6fc05665fc8605806326">functions::write</a>(s, x);</div><div class="line"><a name="l00882"></a><span class="lineno">  882</span>&#160;}</div><div class="line"><a name="l00883"></a><span class="lineno">  883</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00884"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aabcf39e3917f842dbc5fbb0d802f24d5">  884</a></span>&#160;<span class="keyword">inline</span> <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aabcf39e3917f842dbc5fbb0d802f24d5">min</a>(<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> x, <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> y)</div><div class="line"><a name="l00885"></a><span class="lineno">  885</span>&#160;{</div><div class="line"><a name="l00886"></a><span class="lineno">  886</span>&#160;    <span class="keywordflow">return</span> x &gt; y ? y : x;</div><div class="line"><a name="l00887"></a><span class="lineno">  887</span>&#160;}</div><div class="line"><a name="l00888"></a><span class="lineno">  888</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00889"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#ad91bb73431b4de1f4946ed949d444849">  889</a></span>&#160;<span class="keyword">inline</span> <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#ad91bb73431b4de1f4946ed949d444849">max</a>(<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> x, <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> y)</div><div class="line"><a name="l00890"></a><span class="lineno">  890</span>&#160;{</div><div class="line"><a name="l00891"></a><span class="lineno">  891</span>&#160;    <span class="keywordflow">return</span> x &gt; y ? x : y;</div><div class="line"><a name="l00892"></a><span class="lineno">  892</span>&#160;}</div><div class="line"><a name="l00893"></a><span class="lineno">  893</span>&#160;<span class="keyword">template</span> &lt;OverflowPolicy OP = OverflowPolicy::SATURATE, <span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00894"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a9d91c0affa9bc1921abc949791c514c0">  894</a></span>&#160;<span class="keyword">inline</span> <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a9d91c0affa9bc1921abc949791c514c0">add</a>(<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> x, <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> y)</div><div class="line"><a name="l00895"></a><span class="lineno">  895</span>&#160;{</div><div class="line"><a name="l00896"></a><span class="lineno">  896</span>&#160;    <span class="keywordflow">return</span> functions::add&lt;OP&gt;(x, y);</div><div class="line"><a name="l00897"></a><span class="lineno">  897</span>&#160;}</div><div class="line"><a name="l00898"></a><span class="lineno">  898</span>&#160;<span class="keyword">template</span> &lt;OverflowPolicy OP = OverflowPolicy::SATURATE, <span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00899"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a42e82c32ccdbc5bc2899bc5cd3b04e27">  899</a></span>&#160;<span class="keyword">inline</span> <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a42e82c32ccdbc5bc2899bc5cd3b04e27">sub</a>(<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> x, <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> y)</div><div class="line"><a name="l00900"></a><span class="lineno">  900</span>&#160;{</div><div class="line"><a name="l00901"></a><span class="lineno">  901</span>&#160;    <span class="keywordflow">return</span> functions::sub&lt;OP&gt;(x, y);</div><div class="line"><a name="l00902"></a><span class="lineno">  902</span>&#160;}</div><div class="line"><a name="l00903"></a><span class="lineno">  903</span>&#160;<span class="keyword">template</span> &lt;OverflowPolicy OP = OverflowPolicy::SATURATE, <span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00904"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a8d71db736fe80cae37a9c94c57b34ed6">  904</a></span>&#160;<span class="keyword">inline</span> <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a8d71db736fe80cae37a9c94c57b34ed6">mul</a>(<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> x, <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> y)</div><div class="line"><a name="l00905"></a><span class="lineno">  905</span>&#160;{</div><div class="line"><a name="l00906"></a><span class="lineno">  906</span>&#160;    <span class="keywordflow">return</span> functions::mul&lt;OP&gt;(x, y);</div><div class="line"><a name="l00907"></a><span class="lineno">  907</span>&#160;}</div><div class="line"><a name="l00908"></a><span class="lineno">  908</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00909"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a9d53af9692ab2f7ae6fc0017faeb46f0">  909</a></span>&#160;<span class="keyword">inline</span> <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a9d53af9692ab2f7ae6fc0017faeb46f0">div</a>(<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> x, <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> y)</div><div class="line"><a name="l00910"></a><span class="lineno">  910</span>&#160;{</div><div class="line"><a name="l00911"></a><span class="lineno">  911</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a72d043524e13bf27c605c2dee2e20a2a">functions::div</a>(x, y);</div><div class="line"><a name="l00912"></a><span class="lineno">  912</span>&#160;}</div><div class="line"><a name="l00913"></a><span class="lineno">  913</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00914"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#ae115fc750a92fb6a5e094998b56fcc56">  914</a></span>&#160;<span class="keyword">inline</span> <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#ae115fc750a92fb6a5e094998b56fcc56">abs</a>(<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> x)</div><div class="line"><a name="l00915"></a><span class="lineno">  915</span>&#160;{</div><div class="line"><a name="l00916"></a><span class="lineno">  916</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a3c04cac868606ed11c00761f0d5b3d2c">functions::abs</a>(x);</div><div class="line"><a name="l00917"></a><span class="lineno">  917</span>&#160;}</div><div class="line"><a name="l00918"></a><span class="lineno">  918</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00919"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#affa3387066925d0ef7ded4f816f9cccb">  919</a></span>&#160;<span class="keyword">inline</span> <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#affa3387066925d0ef7ded4f816f9cccb">clamp</a>(<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> x, T <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aabcf39e3917f842dbc5fbb0d802f24d5">min</a>, T <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#ad91bb73431b4de1f4946ed949d444849">max</a>)</div><div class="line"><a name="l00920"></a><span class="lineno">  920</span>&#160;{</div><div class="line"><a name="l00921"></a><span class="lineno">  921</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a2d681ad37360fc4497f147af98951ba0">functions::clamp</a>(x, min, max);</div><div class="line"><a name="l00922"></a><span class="lineno">  922</span>&#160;}</div><div class="line"><a name="l00923"></a><span class="lineno">  923</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00924"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aa4e01e9be9adcc40a69a4da48fa83a43">  924</a></span>&#160;<span class="keyword">inline</span> <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aa4e01e9be9adcc40a69a4da48fa83a43">exp</a>(<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> x)</div><div class="line"><a name="l00925"></a><span class="lineno">  925</span>&#160;{</div><div class="line"><a name="l00926"></a><span class="lineno">  926</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#ac66bdd16622d4498cc0299db1efcef54">functions::exp</a>(x);</div><div class="line"><a name="l00927"></a><span class="lineno">  927</span>&#160;}</div><div class="line"><a name="l00928"></a><span class="lineno">  928</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00929"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a8c8ce35c61b4f71cccec28d18161eaa1">  929</a></span>&#160;<span class="keyword">inline</span> <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a8c8ce35c61b4f71cccec28d18161eaa1">log</a>(<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> x)</div><div class="line"><a name="l00930"></a><span class="lineno">  930</span>&#160;{</div><div class="line"><a name="l00931"></a><span class="lineno">  931</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a33520868a877b6b9a1beccdc1aaa4ec6">functions::log</a>(x);</div><div class="line"><a name="l00932"></a><span class="lineno">  932</span>&#160;}</div><div class="line"><a name="l00933"></a><span class="lineno">  933</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00934"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a2b7623d9dd3fde1d0a3bbe034967cff5">  934</a></span>&#160;<span class="keyword">inline</span> <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a2b7623d9dd3fde1d0a3bbe034967cff5">inv_sqrt</a>(<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> x)</div><div class="line"><a name="l00935"></a><span class="lineno">  935</span>&#160;{</div><div class="line"><a name="l00936"></a><span class="lineno">  936</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a6a7c1ca385d21fe457259a8fd9debfbf">functions::inv_sqrt</a>(x);</div><div class="line"><a name="l00937"></a><span class="lineno">  937</span>&#160;}</div><div class="line"><a name="l00938"></a><span class="lineno">  938</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00939"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a6854479935f66029852441b051e1a3e0">  939</a></span>&#160;<span class="keyword">inline</span> <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a6854479935f66029852441b051e1a3e0">tanh</a>(<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> x)</div><div class="line"><a name="l00940"></a><span class="lineno">  940</span>&#160;{</div><div class="line"><a name="l00941"></a><span class="lineno">  941</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a3260014222a62b212c096956c0605fd5">functions::tanh</a>(x);</div><div class="line"><a name="l00942"></a><span class="lineno">  942</span>&#160;}</div><div class="line"><a name="l00943"></a><span class="lineno">  943</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00944"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#af782da2c5016738c96c16fee5e17670f">  944</a></span>&#160;<span class="keyword">inline</span> <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#af782da2c5016738c96c16fee5e17670f">pow</a>(<a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> x, <a class="code" href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">fixed_point&lt;T&gt;</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aac40b7097f2bda9274ae07fa33d15a79">a</a>)</div><div class="line"><a name="l00945"></a><span class="lineno">  945</span>&#160;{</div><div class="line"><a name="l00946"></a><span class="lineno">  946</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a74f7a6f0b0c31beaf3a0bc13e991b1c3">functions::pow</a>(x, a);</div><div class="line"><a name="l00947"></a><span class="lineno">  947</span>&#160;}</div><div class="line"><a name="l00948"></a><span class="lineno">  948</span>&#160;} <span class="comment">// namespace detail</span></div><div class="line"><a name="l00949"></a><span class="lineno">  949</span>&#160;</div><div class="line"><a name="l00950"></a><span class="lineno">  950</span>&#160;<span class="comment">// Expose operators</span></div><div class="line"><a name="l00951"></a><span class="lineno">  951</span>&#160;<span class="keyword">using</span> detail::operator==;</div><div class="line"><a name="l00952"></a><span class="lineno">  952</span>&#160;<span class="keyword">using</span> detail::operator!=;</div><div class="line"><a name="l00953"></a><span class="lineno">  953</span>&#160;<span class="keyword">using</span> detail::operator&lt;;</div><div class="line"><a name="l00954"></a><span class="lineno">  954</span>&#160;<span class="keyword">using</span> detail::operator&gt;;</div><div class="line"><a name="l00955"></a><span class="lineno">  955</span>&#160;<span class="keyword">using</span> detail::operator&lt;=;</div><div class="line"><a name="l00956"></a><span class="lineno">  956</span>&#160;<span class="keyword">using</span> detail::operator&gt;=;</div><div class="line"><a name="l00957"></a><span class="lineno">  957</span>&#160;<span class="keyword">using</span> detail::operator+;</div><div class="line"><a name="l00958"></a><span class="lineno">  958</span>&#160;<span class="keyword">using</span> detail::operator-;</div><div class="line"><a name="l00959"></a><span class="lineno">  959</span>&#160;<span class="keyword">using</span> detail::operator*;</div><div class="line"><a name="l00960"></a><span class="lineno">  960</span>&#160;<span class="keyword">using</span> detail::operator/;</div><div class="line"><a name="l00961"></a><span class="lineno">  961</span>&#160;<span class="keyword">using</span> detail::operator&gt;&gt;;</div><div class="line"><a name="l00962"></a><span class="lineno">  962</span>&#160;<span class="keyword">using</span> detail::operator&lt;&lt;;</div><div class="line"><a name="l00963"></a><span class="lineno">  963</span>&#160;</div><div class="line"><a name="l00964"></a><span class="lineno">  964</span>&#160;<span class="comment">// Expose additional functions</span></div><div class="line"><a name="l00965"></a><span class="lineno">  965</span>&#160;<span class="keyword">using</span> <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aabcf39e3917f842dbc5fbb0d802f24d5">detail::min</a>;</div><div class="line"><a name="l00966"></a><span class="lineno">  966</span>&#160;<span class="keyword">using</span> <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#ad91bb73431b4de1f4946ed949d444849">detail::max</a>;</div><div class="line"><a name="l00967"></a><span class="lineno">  967</span>&#160;<span class="keyword">using</span> <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a9d91c0affa9bc1921abc949791c514c0">detail::add</a>;</div><div class="line"><a name="l00968"></a><span class="lineno">  968</span>&#160;<span class="keyword">using</span> <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a42e82c32ccdbc5bc2899bc5cd3b04e27">detail::sub</a>;</div><div class="line"><a name="l00969"></a><span class="lineno">  969</span>&#160;<span class="keyword">using</span> <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a8d71db736fe80cae37a9c94c57b34ed6">detail::mul</a>;</div><div class="line"><a name="l00970"></a><span class="lineno">  970</span>&#160;<span class="keyword">using</span> <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a9d53af9692ab2f7ae6fc0017faeb46f0">detail::div</a>;</div><div class="line"><a name="l00971"></a><span class="lineno">  971</span>&#160;<span class="keyword">using</span> <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#ae115fc750a92fb6a5e094998b56fcc56">detail::abs</a>;</div><div class="line"><a name="l00972"></a><span class="lineno">  972</span>&#160;<span class="keyword">using</span> <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#affa3387066925d0ef7ded4f816f9cccb">detail::clamp</a>;</div><div class="line"><a name="l00973"></a><span class="lineno">  973</span>&#160;<span class="keyword">using</span> <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aa4e01e9be9adcc40a69a4da48fa83a43">detail::exp</a>;</div><div class="line"><a name="l00974"></a><span class="lineno">  974</span>&#160;<span class="keyword">using</span> <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a8c8ce35c61b4f71cccec28d18161eaa1">detail::log</a>;</div><div class="line"><a name="l00975"></a><span class="lineno">  975</span>&#160;<span class="keyword">using</span> <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a2b7623d9dd3fde1d0a3bbe034967cff5">detail::inv_sqrt</a>;</div><div class="line"><a name="l00976"></a><span class="lineno">  976</span>&#160;<span class="keyword">using</span> <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a6854479935f66029852441b051e1a3e0">detail::tanh</a>;</div><div class="line"><a name="l00977"></a><span class="lineno">  977</span>&#160;<span class="keyword">using</span> <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#af782da2c5016738c96c16fee5e17670f">detail::pow</a>;</div><div class="line"><a name="l00978"></a><span class="lineno">  978</span>&#160;} <span class="comment">// namespace fixed_point_arithmetic</span></div><div class="line"><a name="l00979"></a><span class="lineno">  979</span>&#160;} <span class="comment">// namespace test</span></div><div class="line"><a name="l00980"></a><span class="lineno">  980</span>&#160;} <span class="comment">// namespace arm_compute</span></div><div class="line"><a name="l00981"></a><span class="lineno">  981</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/*__ARM_COMPUTE_TEST_VALIDATION_FIXEDPOINT_H__ */</span><span class="preprocessor"></span></div><div class="ttc" id="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_xhtml_a8d71db736fe80cae37a9c94c57b34ed6"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a8d71db736fe80cae37a9c94c57b34ed6">arm_compute::test::fixed_point_arithmetic::detail::mul</a></div><div class="ttdeci">fixed_point&lt; T &gt; mul(fixed_point&lt; T &gt; x, fixed_point&lt; T &gt; y)</div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00904">FixedPoint.h:904</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a1ce9b523fd4f3b5bbcadcd796183455aa7fc56270e7a70fa81a5935b72eacbe29"><div class="ttname"><a href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa7fc56270e7a70fa81a5935b72eacbe29">arm_compute::Channel::A</a></div><div class="ttdoc">Alpha channel. </div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_xhtml_aabcf39e3917f842dbc5fbb0d802f24d5"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aabcf39e3917f842dbc5fbb0d802f24d5">arm_compute::test::fixed_point_arithmetic::detail::min</a></div><div class="ttdeci">fixed_point&lt; T &gt; min(fixed_point&lt; T &gt; x, fixed_point&lt; T &gt; y)</div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00884">FixedPoint.h:884</a></div></div>
<div class="ttc" id="_toolchain_support_8h_xhtml"><div class="ttname"><a href="_toolchain_support_8h.xhtml">ToolchainSupport.h</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_xhtml_add6426cbf2e057a195846d4ba09a50be"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic.xhtml#add6426cbf2e057a195846d4ba09a50be">arm_compute::test::fixed_point_arithmetic::RoundingPolicy</a></div><div class="ttdeci">RoundingPolicy</div><div class="ttdoc">Strongly typed enum class representing the rounding policy. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00079">FixedPoint.h:79</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1constant__expr_xhtml_a996cf0a2779076326d094ef9d75ddd1f"><div class="ttname"><a href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1constant__expr.xhtml#a996cf0a2779076326d094ef9d75ddd1f">arm_compute::test::fixed_point_arithmetic::detail::constant_expr::clamp</a></div><div class="ttdeci">static constexpr T clamp(T val, T min, T max)</div><div class="ttdoc">Clamp value between two ranges. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00349">FixedPoint.h:349</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_xhtml_affa3387066925d0ef7ded4f816f9cccb"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#affa3387066925d0ef7ded4f816f9cccb">arm_compute::test::fixed_point_arithmetic::detail::clamp</a></div><div class="ttdeci">fixed_point&lt; T &gt; clamp(fixed_point&lt; T &gt; x, T min, T max)</div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00919">FixedPoint.h:919</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_xhtml_a26723c21135a6a96f98a9dc41143044d"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a26723c21135a6a96f98a9dc41143044d">arm_compute::test::fixed_point_arithmetic::detail::operator&gt;&gt;</a></div><div class="ttdeci">fixed_point&lt; T &gt; operator&gt;&gt;(fixed_point&lt; T &gt; x, size_t shift)</div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00869">FixedPoint.h:869</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1constant__expr_xhtml_a995c73a5ff995cc1b4c0c730892c792a"><div class="ttname"><a href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1constant__expr.xhtml#a995c73a5ff995cc1b4c0c730892c792a">arm_compute::test::fixed_point_arithmetic::detail::constant_expr::to_float</a></div><div class="ttdeci">static constexpr float to_float(T val, uint8_t p)</div><div class="ttdoc">Convert a fixed point value to float given its precision. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00315">FixedPoint.h:315</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_aac40b7097f2bda9274ae07fa33d15a79"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#aac40b7097f2bda9274ae07fa33d15a79">arm_compute::test::validation::a</a></div><div class="ttdeci">Tensor a</div><div class="ttdef"><b>Definition:</b> <a href="validation_2_n_e_o_n_2_g_e_m_m_8cpp_source.xhtml#l00115">GEMM.cpp:115</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions_xhtml_abd7f7757b9edb7cdd017d439bc5ba8b0"><div class="ttname"><a href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#abd7f7757b9edb7cdd017d439bc5ba8b0">arm_compute::test::fixed_point_arithmetic::detail::functions::isgreater</a></div><div class="ttdeci">static bool isgreater(fixed_point&lt; T &gt; x, fixed_point&lt; T &gt; y)</div><div class="ttdoc">Checks if one fixed point is greater than the other. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00425">FixedPoint.h:425</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1constant__expr_xhtml_a918ab57096fdfe5e2cbf70de5145b9fa"><div class="ttname"><a href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1constant__expr.xhtml#a918ab57096fdfe5e2cbf70de5145b9fa">arm_compute::test::fixed_point_arithmetic::detail::constant_expr::to_int</a></div><div class="ttdeci">static constexpr T to_int(T val, uint8_t p)</div><div class="ttdoc">Convert a fixed point value to integer given its precision. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00326">FixedPoint.h:326</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions_xhtml_a9efa14731a55e3d96adb961214e91734"><div class="ttname"><a href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a9efa14731a55e3d96adb961214e91734">arm_compute::test::fixed_point_arithmetic::detail::functions::signbit</a></div><div class="ttdeci">static bool signbit(fixed_point&lt; T &gt; x)</div><div class="ttdoc">Signbit of a fixed point number. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00386">FixedPoint.h:386</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a1ce9b523fd4f3b5bbcadcd796183455aa9d5ed678fe57bcca610140957afab571"><div class="ttname"><a href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa9d5ed678fe57bcca610140957afab571">arm_compute::Channel::B</a></div><div class="ttdoc">Blue channel. </div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_xhtml_aa4e01e9be9adcc40a69a4da48fa83a43"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aa4e01e9be9adcc40a69a4da48fa83a43">arm_compute::test::fixed_point_arithmetic::detail::exp</a></div><div class="ttdeci">fixed_point&lt; T &gt; exp(fixed_point&lt; T &gt; x)</div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00924">FixedPoint.h:924</a></div></div>
<div class="ttc" id="reduction__operation_8cl_xhtml_ab0df00f5333da51860deb93deb44a782"><div class="ttname"><a href="reduction__operation_8cl.xhtml#ab0df00f5333da51860deb93deb44a782">sum</a></div><div class="ttdeci">DATA_TYPE sum(__global const DATA_TYPE *input)</div><div class="ttdoc">Calculate sum of a vector. </div><div class="ttdef"><b>Definition:</b> <a href="reduction__operation_8cl_source.xhtml#l00052">reduction_operation.cl:52</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions_xhtml_a40956c61706d70b8978c2b87ac455d2a"><div class="ttname"><a href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a40956c61706d70b8978c2b87ac455d2a">arm_compute::test::fixed_point_arithmetic::detail::functions::add</a></div><div class="ttdeci">static fixed_point&lt; T &gt; add(fixed_point&lt; T &gt; x, fixed_point&lt; T &gt; y)</div><div class="ttdoc">Perform addition among two fixed point numbers. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00527">FixedPoint.h:527</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits_xhtml_ac20ca549fa27b2eed44367745055a233"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits.xhtml#ac20ca549fa27b2eed44367745055a233">arm_compute::test::fixed_point_arithmetic::traits::promote_t</a></div><div class="ttdeci">typename promote&lt; T &gt;::type promote_t</div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00067">FixedPoint.h:67</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits_1_1promote_3_01int8__t_01_4_xhtml_a8812bf779dca54354aa6ad00cef14a73"><div class="ttname"><a href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits_1_1promote_3_01int8__t_01_4.xhtml#a8812bf779dca54354aa6ad00cef14a73">arm_compute::test::fixed_point_arithmetic::traits::promote&lt; int8_t &gt;::type</a></div><div class="ttdeci">int16_t type</div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00059">FixedPoint.h:59</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions_xhtml_a304fe6cc15deaffb14929e42a4ff1c1b"><div class="ttname"><a href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a304fe6cc15deaffb14929e42a4ff1c1b">arm_compute::test::fixed_point_arithmetic::detail::functions::isequal</a></div><div class="ttdeci">static bool isequal(fixed_point&lt; T &gt; x, fixed_point&lt; T &gt; y)</div><div class="ttdoc">Checks if two fixed point numbers are equal. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00398">FixedPoint.h:398</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_xhtml_a5f37e666dcd38888952f32592e93c2cb"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a5f37e666dcd38888952f32592e93c2cb">arm_compute::test::fixed_point_arithmetic::detail::operator/</a></div><div class="ttdeci">fixed_point&lt; T &gt; operator/(fixed_point&lt; T &gt; x, fixed_point&lt; T &gt; y)</div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00864">FixedPoint.h:864</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits_1_1promote_3_01uint32__t_01_4_xhtml_a9659bbcc7fc016eda242219021c7980b"><div class="ttname"><a href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits_1_1promote_3_01uint32__t_01_4.xhtml#a9659bbcc7fc016eda242219021c7980b">arm_compute::test::fixed_point_arithmetic::traits::promote&lt; uint32_t &gt;::type</a></div><div class="ttdeci">uint64_t type</div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00062">FixedPoint.h:62</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits_1_1promote_xhtml"><div class="ttname"><a href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits_1_1promote.xhtml">arm_compute::test::fixed_point_arithmetic::traits::promote</a></div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00057">FixedPoint.h:57</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_xhtml_aff130425a85235bea11508b51ddb16de"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aff130425a85235bea11508b51ddb16de">arm_compute::test::fixed_point_arithmetic::detail::operator==</a></div><div class="ttdeci">bool operator==(const fixed_point&lt; T &gt; &amp;lhs, const fixed_point&lt; T &gt; &amp;rhs)</div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00814">FixedPoint.h:814</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions_xhtml_a49abe87ad33d2900c2255e4b79322207"><div class="ttname"><a href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a49abe87ad33d2900c2255e4b79322207">arm_compute::test::fixed_point_arithmetic::detail::functions::isgreaterequal</a></div><div class="ttdeci">static bool isgreaterequal(fixed_point&lt; T &gt; x, fixed_point&lt; T &gt; y)</div><div class="ttdoc">Checks if one fixed point is greater or equal than the other. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00440">FixedPoint.h:440</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_xhtml_a6d4fc292ad316f39f20eb42393bad855"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a6d4fc292ad316f39f20eb42393bad855">arm_compute::test::fixed_point_arithmetic::detail::operator&gt;=</a></div><div class="ttdeci">bool operator&gt;=(const fixed_point&lt; T &gt; &amp;lhs, const fixed_point&lt; T &gt; &amp;rhs)</div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00839">FixedPoint.h:839</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_xhtml_a0ada8f647402027261407be09bdf25ffa4729d95f983955f0d93a30179deb2b86"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic.xhtml#a0ada8f647402027261407be09bdf25ffa4729d95f983955f0d93a30179deb2b86">arm_compute::test::fixed_point_arithmetic::OverflowPolicy::SATURATE</a></div><div class="ttdoc">Saturate policy. </div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions_xhtml_a69b97b34f32a6fc05665fc8605806326"><div class="ttname"><a href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a69b97b34f32a6fc05665fc8605806326">arm_compute::test::fixed_point_arithmetic::detail::functions::write</a></div><div class="ttdeci">static std::basic_ostream&lt; T, traits &gt; &amp; write(std::basic_ostream&lt; T, traits &gt; &amp;s, fixed_point&lt; U &gt; &amp;x)</div><div class="ttdoc">Output stream operator. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00375">FixedPoint.h:375</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions_xhtml_a74f7a6f0b0c31beaf3a0bc13e991b1c3"><div class="ttname"><a href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a74f7a6f0b0c31beaf3a0bc13e991b1c3">arm_compute::test::fixed_point_arithmetic::detail::functions::pow</a></div><div class="ttdeci">static fixed_point&lt; T &gt; pow(fixed_point&lt; T &gt; x, fixed_point&lt; T &gt; a)</div><div class="ttdoc">Calculate the a-th power of a fixed point number. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00807">FixedPoint.h:807</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point_xhtml_a2449f6f85fd30e253be0a03fa9c5baa4"><div class="ttname"><a href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a2449f6f85fd30e253be0a03fa9c5baa4">arm_compute::test::fixed_point_arithmetic::fixed_point::fixed_point</a></div><div class="ttdeci">fixed_point(U val, uint8_t p, bool is_raw=false)</div><div class="ttdoc">Constructor (from integer) </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00125">FixedPoint.h:125</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">This file contains all available output stages for GEMMLowp on OpenCL. </div><div class="ttdef"><b>Definition:</b> <a href="01__library_8dox_source.xhtml#l00001">01_library.dox:1</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits_1_1promote_3_01uint64__t_01_4_xhtml_a9659bbcc7fc016eda242219021c7980b"><div class="ttname"><a href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits_1_1promote_3_01uint64__t_01_4.xhtml#a9659bbcc7fc016eda242219021c7980b">arm_compute::test::fixed_point_arithmetic::traits::promote&lt; uint64_t &gt;::type</a></div><div class="ttdeci">uint64_t type</div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00064">FixedPoint.h:64</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions_xhtml_a0e0473f8d30d0a8067f9903430ddcd85"><div class="ttname"><a href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a0e0473f8d30d0a8067f9903430ddcd85">arm_compute::test::fixed_point_arithmetic::detail::functions::shift_left</a></div><div class="ttdeci">static fixed_point&lt; T &gt; shift_left(fixed_point&lt; T &gt; x, size_t shift)</div><div class="ttdoc">Shift left. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00626">FixedPoint.h:626</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_xhtml_a8c8ce35c61b4f71cccec28d18161eaa1"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a8c8ce35c61b4f71cccec28d18161eaa1">arm_compute::test::fixed_point_arithmetic::detail::log</a></div><div class="ttdeci">fixed_point&lt; T &gt; log(fixed_point&lt; T &gt; x)</div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00929">FixedPoint.h:929</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point_xhtml_a4c96f1365088f36447883d79469dc52b"><div class="ttname"><a href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a4c96f1365088f36447883d79469dc52b">arm_compute::test::fixed_point_arithmetic::fixed_point::fixed_point</a></div><div class="ttdeci">fixed_point(std::string str, uint8_t p)</div><div class="ttdoc">Constructor (from float string) </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00148">FixedPoint.h:148</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_xhtml_a9d91c0affa9bc1921abc949791c514c0"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a9d91c0affa9bc1921abc949791c514c0">arm_compute::test::fixed_point_arithmetic::detail::add</a></div><div class="ttdeci">fixed_point&lt; T &gt; add(fixed_point&lt; T &gt; x, fixed_point&lt; T &gt; y)</div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00894">FixedPoint.h:894</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1constant__expr_xhtml_a9c4b593f19fb9053fd52697eaa30c5d7"><div class="ttname"><a href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1constant__expr.xhtml#a9c4b593f19fb9053fd52697eaa30c5d7">arm_compute::test::fixed_point_arithmetic::detail::constant_expr::fixed_one</a></div><div class="ttdeci">static constexpr T fixed_one(uint8_t p)</div><div class="ttdoc">Calculate representation of 1 in fixed point given a fixed point precision. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00293">FixedPoint.h:293</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1constant__expr_xhtml_a59cfd98dfc03fbc5540092aa196d7187"><div class="ttname"><a href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1constant__expr.xhtml#a59cfd98dfc03fbc5540092aa196d7187">arm_compute::test::fixed_point_arithmetic::detail::constant_expr::saturate_cast</a></div><div class="ttdeci">static constexpr T saturate_cast(U val)</div><div class="ttdoc">Saturate given number. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00360">FixedPoint.h:360</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions_xhtml_a3260014222a62b212c096956c0605fd5"><div class="ttname"><a href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a3260014222a62b212c096956c0605fd5">arm_compute::test::fixed_point_arithmetic::detail::functions::tanh</a></div><div class="ttdeci">static fixed_point&lt; T &gt; tanh(fixed_point&lt; T &gt; x)</div><div class="ttdoc">Calculate the hyperbolic tangent of a fixed point number. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00783">FixedPoint.h:783</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions_xhtml_a287e18f5dec27ac32bfd30039a57dddf"><div class="ttname"><a href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a287e18f5dec27ac32bfd30039a57dddf">arm_compute::test::fixed_point_arithmetic::detail::functions::sub</a></div><div class="ttdeci">static fixed_point&lt; T &gt; sub(fixed_point&lt; T &gt; x, fixed_point&lt; T &gt; y)</div><div class="ttdoc">Perform subtraction among two fixed point numbers. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00552">FixedPoint.h:552</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions_xhtml_a72d043524e13bf27c605c2dee2e20a2a"><div class="ttname"><a href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a72d043524e13bf27c605c2dee2e20a2a">arm_compute::test::fixed_point_arithmetic::detail::functions::div</a></div><div class="ttdeci">static fixed_point&lt; T &gt; div(fixed_point&lt; T &gt; x, fixed_point&lt; T &gt; y)</div><div class="ttdoc">Perform division among two fixed point numbers. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00598">FixedPoint.h:598</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1constant__expr_xhtml"><div class="ttname"><a href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1constant__expr.xhtml">arm_compute::test::fixed_point_arithmetic::detail::constant_expr</a></div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00048">FixedPoint.h:48</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions_xhtml_ad1429c74912e4335cd55e6f860acf3b6"><div class="ttname"><a href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#ad1429c74912e4335cd55e6f860acf3b6">arm_compute::test::fixed_point_arithmetic::detail::functions::shift_right</a></div><div class="ttdeci">static fixed_point&lt; T &gt; shift_right(fixed_point&lt; T &gt; x, size_t shift)</div><div class="ttdoc">Shift right. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00644">FixedPoint.h:644</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point_xhtml_af180cc5812cd005d63a4ec8eea34ae2e"><div class="ttname"><a href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#af180cc5812cd005d63a4ec8eea34ae2e">arm_compute::test::fixed_point_arithmetic::fixed_point::operator-=</a></div><div class="ttdeci">fixed_point&lt; T &gt; &amp; operator-=(const fixed_point&lt; U &gt; &amp;rhs)</div><div class="ttdoc">Arithmetic -= assignment operator. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00214">FixedPoint.h:214</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions_xhtml"><div class="ttname"><a href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml">arm_compute::test::fixed_point_arithmetic::detail::functions</a></div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00365">FixedPoint.h:365</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions_xhtml_ad02ce21c48a8f9e419a2ec5f762f3221"><div class="ttname"><a href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#ad02ce21c48a8f9e419a2ec5f762f3221">arm_compute::test::fixed_point_arithmetic::detail::functions::mul</a></div><div class="ttdeci">static fixed_point&lt; T &gt; mul(fixed_point&lt; T &gt; x, fixed_point&lt; T &gt; y)</div><div class="ttdoc">Perform multiplication among two fixed point numbers. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00577">FixedPoint.h:577</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point_xhtml_ad9fb776e0556cf222c31feb9f372ea32"><div class="ttname"><a href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#ad9fb776e0556cf222c31feb9f372ea32">arm_compute::test::fixed_point_arithmetic::fixed_point::fixed_point</a></div><div class="ttdeci">fixed_point(fixed_point&lt; U &gt; val, uint8_t p)</div><div class="ttdoc">Constructor (from different fixed point type) </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00099">FixedPoint.h:99</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a1ce9b523fd4f3b5bbcadcd796183455aa4c614360da93c0a041b22e537de151eb"><div class="ttname"><a href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa4c614360da93c0a041b22e537de151eb">arm_compute::Channel::U</a></div><div class="ttdoc">Cb/U channel. </div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions_xhtml_aa78731a2479da19c6604b3baa3ffe33d"><div class="ttname"><a href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#aa78731a2479da19c6604b3baa3ffe33d">arm_compute::test::fixed_point_arithmetic::detail::functions::negate</a></div><div class="ttdeci">static fixed_point&lt; T &gt; negate(fixed_point&lt; T &gt; x)</div><div class="ttdoc">Negate number. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00509">FixedPoint.h:509</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point_xhtml"><div class="ttname"><a href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml">arm_compute::test::fixed_point_arithmetic::fixed_point</a></div><div class="ttdoc">Arbitrary fixed-point arithmetic class. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00087">FixedPoint.h:87</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_xhtml_a42e82c32ccdbc5bc2899bc5cd3b04e27"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a42e82c32ccdbc5bc2899bc5cd3b04e27">arm_compute::test::fixed_point_arithmetic::detail::sub</a></div><div class="ttdeci">fixed_point&lt; T &gt; sub(fixed_point&lt; T &gt; x, fixed_point&lt; T &gt; y)</div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00899">FixedPoint.h:899</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_xhtml_ae9376d2e967c5c8067c6c72e7590ff01"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#ae9376d2e967c5c8067c6c72e7590ff01">arm_compute::test::fixed_point_arithmetic::detail::operator&lt;</a></div><div class="ttdeci">bool operator&lt;(const fixed_point&lt; T &gt; &amp;lhs, const fixed_point&lt; T &gt; &amp;rhs)</div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00824">FixedPoint.h:824</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions_xhtml_a3c04cac868606ed11c00761f0d5b3d2c"><div class="ttname"><a href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a3c04cac868606ed11c00761f0d5b3d2c">arm_compute::test::fixed_point_arithmetic::detail::functions::abs</a></div><div class="ttdeci">static fixed_point&lt; T &gt; abs(fixed_point&lt; T &gt; x)</div><div class="ttdoc">Calculate absolute value. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00655">FixedPoint.h:655</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point_xhtml_a89deb954a617641af987e59a483ca5e9"><div class="ttname"><a href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a89deb954a617641af987e59a483ca5e9">arm_compute::test::fixed_point_arithmetic::fixed_point::precision</a></div><div class="ttdeci">uint8_t precision() const </div><div class="ttdoc">Precision accessor. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00233">FixedPoint.h:233</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point_xhtml_a3fe723fdc332e453550710b2925002a0"><div class="ttname"><a href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a3fe723fdc332e453550710b2925002a0">arm_compute::test::fixed_point_arithmetic::fixed_point::raw</a></div><div class="ttdeci">T raw() const </div><div class="ttdoc">Raw value accessor. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00225">FixedPoint.h:225</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1constant__expr_xhtml_a125e978e1d6df0f6d9f738b0c580f980"><div class="ttname"><a href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1constant__expr.xhtml#a125e978e1d6df0f6d9f738b0c580f980">arm_compute::test::fixed_point_arithmetic::detail::constant_expr::fixed_step</a></div><div class="ttdeci">static constexpr float fixed_step(uint8_t p)</div><div class="ttdoc">Calculate fixed point precision step given a fixed point precision. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00303">FixedPoint.h:303</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions_xhtml_a2d681ad37360fc4497f147af98951ba0"><div class="ttname"><a href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a2d681ad37360fc4497f147af98951ba0">arm_compute::test::fixed_point_arithmetic::detail::functions::clamp</a></div><div class="ttdeci">static fixed_point&lt; T &gt; clamp(fixed_point&lt; T &gt; x, T min, T max)</div><div class="ttdoc">Clamp fixed point to specific range. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00498">FixedPoint.h:498</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits_1_1promote_3_01uint16__t_01_4_xhtml_a43022da9f622deba3284b748a6885e23"><div class="ttname"><a href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits_1_1promote_3_01uint16__t_01_4.xhtml#a43022da9f622deba3284b748a6885e23">arm_compute::test::fixed_point_arithmetic::traits::promote&lt; uint16_t &gt;::type</a></div><div class="ttdeci">uint32_t type</div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00060">FixedPoint.h:60</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_xhtml_a2b7623d9dd3fde1d0a3bbe034967cff5"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a2b7623d9dd3fde1d0a3bbe034967cff5">arm_compute::test::fixed_point_arithmetic::detail::inv_sqrt</a></div><div class="ttdeci">fixed_point&lt; T &gt; inv_sqrt(fixed_point&lt; T &gt; x)</div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00934">FixedPoint.h:934</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions_xhtml_a6a7c1ca385d21fe457259a8fd9debfbf"><div class="ttname"><a href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a6a7c1ca385d21fe457259a8fd9debfbf">arm_compute::test::fixed_point_arithmetic::detail::functions::inv_sqrt</a></div><div class="ttdeci">static fixed_point&lt; T &gt; inv_sqrt(fixed_point&lt; T &gt; x)</div><div class="ttdoc">Calculate the inverse square root of a fixed point number. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00752">FixedPoint.h:752</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions_xhtml_ac4dcad0e940cf826063ba1f6ea659c07"><div class="ttname"><a href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#ac4dcad0e940cf826063ba1f6ea659c07">arm_compute::test::fixed_point_arithmetic::detail::functions::isless</a></div><div class="ttdeci">static bool isless(fixed_point&lt; T &gt; x, fixed_point&lt; T &gt; y)</div><div class="ttdoc">Checks if one fixed point is less than the other. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00455">FixedPoint.h:455</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions_xhtml_ac66bdd16622d4498cc0299db1efcef54"><div class="ttname"><a href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#ac66bdd16622d4498cc0299db1efcef54">arm_compute::test::fixed_point_arithmetic::detail::functions::exp</a></div><div class="ttdeci">static fixed_point&lt; T &gt; exp(fixed_point&lt; T &gt; x)</div><div class="ttdoc">Calculate the exponential of a fixed point number. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00715">FixedPoint.h:715</a></div></div>
<div class="ttc" id="hwc_8hpp_xhtml_a0f61d63b009d0880a89c843bd50d8d76"><div class="ttname"><a href="hwc_8hpp.xhtml#a0f61d63b009d0880a89c843bd50d8d76">value</a></div><div class="ttdeci">void * value</div><div class="ttdef"><b>Definition:</b> <a href="hwc_8hpp_source.xhtml#l00269">hwc.hpp:269</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point_xhtml_a5047b169040344c060aa685e9f63627c"><div class="ttname"><a href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a5047b169040344c060aa685e9f63627c">arm_compute::test::fixed_point_arithmetic::fixed_point::fixed_point</a></div><div class="ttdeci">fixed_point(float val, uint8_t p)</div><div class="ttdoc">Constructor (from float) </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00138">FixedPoint.h:138</a></div></div>
<div class="ttc" id="tests_2_utils_8h_xhtml"><div class="ttname"><a href="tests_2_utils_8h.xhtml">Utils.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point_xhtml_a2654e1d67fbb9afb7fb00ee7ec521c11"><div class="ttname"><a href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a2654e1d67fbb9afb7fb00ee7ec521c11">arm_compute::test::fixed_point_arithmetic::fixed_point::operator+=</a></div><div class="ttdeci">fixed_point&lt; T &gt; &amp; operator+=(const fixed_point&lt; U &gt; &amp;rhs)</div><div class="ttdoc">Arithmetic += assignment operator. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00201">FixedPoint.h:201</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions_xhtml_a814cf7d89e7dad18b0625b4c914dc628"><div class="ttname"><a href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a814cf7d89e7dad18b0625b4c914dc628">arm_compute::test::fixed_point_arithmetic::detail::functions::islessgreater</a></div><div class="ttdeci">static bool islessgreater(fixed_point&lt; T &gt; x, fixed_point&lt; T &gt; y)</div><div class="ttdoc">Checks if one fixed point is less or greater than the other. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00485">FixedPoint.h:485</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point_xhtml_a80db15090eed5a0bb5e7977eabeae132"><div class="ttname"><a href="classarm__compute_1_1test_1_1fixed__point__arithmetic_1_1fixed__point.xhtml#a80db15090eed5a0bb5e7977eabeae132">arm_compute::test::fixed_point_arithmetic::fixed_point::rescale</a></div><div class="ttdeci">void rescale(uint8_t p)</div><div class="ttdoc">Rescale a fixed point to a new precision. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00241">FixedPoint.h:241</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits_1_1promote_3_01uint8__t_01_4_xhtml_a3085ed9ad7c9b1c88dcec24108730e54"><div class="ttname"><a href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits_1_1promote_3_01uint8__t_01_4.xhtml#a3085ed9ad7c9b1c88dcec24108730e54">arm_compute::test::fixed_point_arithmetic::traits::promote&lt; uint8_t &gt;::type</a></div><div class="ttdeci">uint16_t type</div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00058">FixedPoint.h:58</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_add6426cbf2e057a195846d4ba09a50bea02ff1fff1812f84c89547fcd6c176150"><div class="ttname"><a href="namespacearm__compute.xhtml#add6426cbf2e057a195846d4ba09a50bea02ff1fff1812f84c89547fcd6c176150">arm_compute::RoundingPolicy::TO_NEAREST_EVEN</a></div><div class="ttdoc">Rounds to nearest value; half rounds to nearest even. </div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_xhtml_a3d0ef475c458544f4ac7b56060f62f6e"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a3d0ef475c458544f4ac7b56060f62f6e">arm_compute::test::fixed_point_arithmetic::detail::operator!=</a></div><div class="ttdeci">bool operator!=(const fixed_point&lt; T &gt; &amp;lhs, const fixed_point&lt; T &gt; &amp;rhs)</div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00819">FixedPoint.h:819</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_xhtml_ad702cf90d6fc9245b3d921dc09ccb76f"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#ad702cf90d6fc9245b3d921dc09ccb76f">arm_compute::test::fixed_point_arithmetic::detail::operator+</a></div><div class="ttdeci">fixed_point&lt; T &gt; operator+(const fixed_point&lt; T &gt; &amp;lhs, const fixed_point&lt; T &gt; &amp;rhs)</div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00844">FixedPoint.h:844</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions_xhtml_a47e151d622ee6e71a0e731585b4fa7d8"><div class="ttname"><a href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a47e151d622ee6e71a0e731585b4fa7d8">arm_compute::test::fixed_point_arithmetic::detail::functions::islessequal</a></div><div class="ttdeci">static bool islessequal(fixed_point&lt; T &gt; x, fixed_point&lt; T &gt; y)</div><div class="ttdoc">Checks if one fixed point is less or equal than the other. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00470">FixedPoint.h:470</a></div></div>
<div class="ttc" id="namespacecaffe__data__extractor_xhtml_a4b99ff73a8a869319570237b5c57ab03"><div class="ttname"><a href="namespacecaffe__data__extractor.xhtml#a4b99ff73a8a869319570237b5c57ab03">caffe_data_extractor.str</a></div><div class="ttdeci">str</div><div class="ttdef"><b>Definition:</b> <a href="caffe__data__extractor_8py_source.xhtml#l00019">caffe_data_extractor.py:19</a></div></div>
<div class="ttc" id="namespacecaffe__data__extractor_xhtml_a7aead736a07eaf25623ad7bfa1f0ee2d"><div class="ttname"><a href="namespacecaffe__data__extractor.xhtml#a7aead736a07eaf25623ad7bfa1f0ee2d">caffe_data_extractor.type</a></div><div class="ttdeci">type</div><div class="ttdef"><b>Definition:</b> <a href="caffe__data__extractor_8py_source.xhtml#l00019">caffe_data_extractor.py:19</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a82b8ac759c804bc1fb4e2d21e178fb6fae1c8555fcf0ea2bb648a6fd527d658c0"><div class="ttname"><a href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fae1c8555fcf0ea2bb648a6fd527d658c0">arm_compute::ConvertPolicy::WRAP</a></div><div class="ttdoc">Wrap around. </div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_xhtml_acdde00e55846c9f6704f87b9d2112cce"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#acdde00e55846c9f6704f87b9d2112cce">arm_compute::test::fixed_point_arithmetic::detail::operator*</a></div><div class="ttdeci">fixed_point&lt; T &gt; operator*(fixed_point&lt; T &gt; x, fixed_point&lt; T &gt; y)</div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00859">FixedPoint.h:859</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_xhtml_a4965b2f6821e0cf0afee738158bd8377"><div class="ttname"><a href="namespacearm__compute_1_1test.xhtml#a4965b2f6821e0cf0afee738158bd8377">arm_compute::test::saturate_cast</a></div><div class="ttdeci">T saturate_cast(T val)</div><div class="ttdoc">Saturate a value of type T against the numeric limits of type U. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2_utils_8h_source.xhtml#l00344">Utils.h:344</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions_xhtml_a866dbf3e096ad4a487820a8945be3dfe"><div class="ttname"><a href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a866dbf3e096ad4a487820a8945be3dfe">arm_compute::test::fixed_point_arithmetic::detail::functions::isnotequal</a></div><div class="ttdeci">static bool isnotequal(fixed_point&lt; T &gt; x, fixed_point&lt; T &gt; y)</div><div class="ttdoc">Checks if two fixed point number are not equal. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00413">FixedPoint.h:413</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_xhtml_a0ada8f647402027261407be09bdf25ff"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic.xhtml#a0ada8f647402027261407be09bdf25ff">arm_compute::test::fixed_point_arithmetic::OverflowPolicy</a></div><div class="ttdeci">OverflowPolicy</div><div class="ttdoc">Strongly typed enum class representing the overflow policy. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00073">FixedPoint.h:73</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_xhtml_a9d53af9692ab2f7ae6fc0017faeb46f0"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a9d53af9692ab2f7ae6fc0017faeb46f0">arm_compute::test::fixed_point_arithmetic::detail::div</a></div><div class="ttdeci">fixed_point&lt; T &gt; div(fixed_point&lt; T &gt; x, fixed_point&lt; T &gt; y)</div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00909">FixedPoint.h:909</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_xhtml_af782da2c5016738c96c16fee5e17670f"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#af782da2c5016738c96c16fee5e17670f">arm_compute::test::fixed_point_arithmetic::detail::pow</a></div><div class="ttdeci">fixed_point&lt; T &gt; pow(fixed_point&lt; T &gt; x, fixed_point&lt; T &gt; a)</div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00944">FixedPoint.h:944</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_xhtml_aa43c67a536c661ec28398d06bc8ba5af"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aa43c67a536c661ec28398d06bc8ba5af">arm_compute::test::fixed_point_arithmetic::detail::clz</a></div><div class="ttdeci">constexpr int clz(T value)</div><div class="ttdoc">Count the number of leading zero bits in the given value. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00276">FixedPoint.h:276</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits_1_1promote_3_01int32__t_01_4_xhtml_a70ca3d636283d6713220cd8af5fc07b3"><div class="ttname"><a href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits_1_1promote_3_01int32__t_01_4.xhtml#a70ca3d636283d6713220cd8af5fc07b3">arm_compute::test::fixed_point_arithmetic::traits::promote&lt; int32_t &gt;::type</a></div><div class="ttdeci">int64_t type</div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00063">FixedPoint.h:63</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_xhtml_ad91bb73431b4de1f4946ed949d444849"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#ad91bb73431b4de1f4946ed949d444849">arm_compute::test::fixed_point_arithmetic::detail::max</a></div><div class="ttdeci">fixed_point&lt; T &gt; max(fixed_point&lt; T &gt; x, fixed_point&lt; T &gt; y)</div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00889">FixedPoint.h:889</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions_xhtml_a33520868a877b6b9a1beccdc1aaa4ec6"><div class="ttname"><a href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a33520868a877b6b9a1beccdc1aaa4ec6">arm_compute::test::fixed_point_arithmetic::detail::functions::log</a></div><div class="ttdeci">static fixed_point&lt; T &gt; log(fixed_point&lt; T &gt; x)</div><div class="ttdoc">Calculate the logarithm of a fixed point number. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00668">FixedPoint.h:668</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_xhtml_a6854479935f66029852441b051e1a3e0"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a6854479935f66029852441b051e1a3e0">arm_compute::test::fixed_point_arithmetic::detail::tanh</a></div><div class="ttdeci">fixed_point&lt; T &gt; tanh(fixed_point&lt; T &gt; x)</div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00939">FixedPoint.h:939</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_xhtml_ae115fc750a92fb6a5e094998b56fcc56"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#ae115fc750a92fb6a5e094998b56fcc56">arm_compute::test::fixed_point_arithmetic::detail::abs</a></div><div class="ttdeci">fixed_point&lt; T &gt; abs(fixed_point&lt; T &gt; x)</div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00914">FixedPoint.h:914</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_xhtml_aa4abd4e21ed690ccf2ba19cfe2ceefd2"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aa4abd4e21ed690ccf2ba19cfe2ceefd2">arm_compute::test::fixed_point_arithmetic::detail::operator&gt;</a></div><div class="ttdeci">bool operator&gt;(const fixed_point&lt; T &gt; &amp;lhs, const fixed_point&lt; T &gt; &amp;rhs)</div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00829">FixedPoint.h:829</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_xhtml_a8cce3682a30b4a89af6ebf94e655f954"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a8cce3682a30b4a89af6ebf94e655f954">arm_compute::test::fixed_point_arithmetic::detail::operator-</a></div><div class="ttdeci">fixed_point&lt; T &gt; operator-(const fixed_point&lt; T &gt; &amp;lhs, const fixed_point&lt; T &gt; &amp;rhs)</div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00849">FixedPoint.h:849</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86"><div class="ttname"><a href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">arm_compute::ConvertPolicy::SATURATE</a></div><div class="ttdoc">Saturate. </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_add6426cbf2e057a195846d4ba09a50bea5631ad8e27788edfca7e13535d862c06"><div class="ttname"><a href="namespacearm__compute.xhtml#add6426cbf2e057a195846d4ba09a50bea5631ad8e27788edfca7e13535d862c06">arm_compute::RoundingPolicy::TO_ZERO</a></div><div class="ttdoc">Truncates the least significand values that are lost in operations. </div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1constant__expr_xhtml_a682a2eb8869b48647719e194cbbcb4e1"><div class="ttname"><a href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1constant__expr.xhtml#a682a2eb8869b48647719e194cbbcb4e1">arm_compute::test::fixed_point_arithmetic::detail::constant_expr::to_fixed</a></div><div class="ttdeci">static constexpr T to_fixed(float val, uint8_t p)</div><div class="ttdoc">Convert a single precision floating point value to a fixed point representation given its precision...</div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00337">FixedPoint.h:337</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits_1_1promote_3_01int16__t_01_4_xhtml_a4f14ffc6d6f6ca92afb1baf996fc9305"><div class="ttname"><a href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits_1_1promote_3_01int16__t_01_4.xhtml#a4f14ffc6d6f6ca92afb1baf996fc9305">arm_compute::test::fixed_point_arithmetic::traits::promote&lt; int16_t &gt;::type</a></div><div class="ttdeci">int32_t type</div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00061">FixedPoint.h:61</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits_1_1promote_3_01int64__t_01_4_xhtml_a70ca3d636283d6713220cd8af5fc07b3"><div class="ttname"><a href="structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1traits_1_1promote_3_01int64__t_01_4.xhtml#a70ca3d636283d6713220cd8af5fc07b3">arm_compute::test::fixed_point_arithmetic::traits::promote&lt; int64_t &gt;::type</a></div><div class="ttdeci">int64_t type</div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00065">FixedPoint.h:65</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1support_1_1cpp11_xhtml_aa4152693b62db2a43edcc0039de95e38"><div class="ttname"><a href="namespacearm__compute_1_1support_1_1cpp11.xhtml#aa4152693b62db2a43edcc0039de95e38">arm_compute::support::cpp11::stof</a></div><div class="ttdeci">int stof(Ts &amp;&amp;...args)</div><div class="ttdoc">Convert string values to float. </div><div class="ttdef"><b>Definition:</b> <a href="_toolchain_support_8h_source.xhtml#l00232">ToolchainSupport.h:232</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_59425e443f801f1f2fd8bbe4959a3ccf.xhtml">tests</a></li><li class="navelem"><a class="el" href="dir_e7c7b16542faa38cb4655ff1750d3604.xhtml">validation</a></li><li class="navelem"><a class="el" href="tests_2validation_2_fixed_point_8h.xhtml">FixedPoint.h</a></li>
    <li class="footer">Generated on Thu Dec 14 2017 23:48:30 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
  </ul>
</div>
</body>
</html>
